

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Aug 26 21:15:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F1827 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011B                     	;# 
   141  011D                     	;# 
   142  011E                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0191                     	;# 
   146  0191                     	;# 
   147  0192                     	;# 
   148  0193                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0194                     	;# 
   152  0195                     	;# 
   153  0196                     	;# 
   154  0199                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019E                     	;# 
   164  019F                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  0219                     	;# 
   183  021A                     	;# 
   184  021B                     	;# 
   185  021C                     	;# 
   186  021D                     	;# 
   187  021E                     	;# 
   188  021F                     	;# 
   189  0291                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0294                     	;# 
   194  0295                     	;# 
   195  0295                     	;# 
   196  0296                     	;# 
   197  0298                     	;# 
   198  0298                     	;# 
   199  0299                     	;# 
   200  029A                     	;# 
   201  029B                     	;# 
   202  029C                     	;# 
   203  029C                     	;# 
   204  029D                     	;# 
   205  029E                     	;# 
   206  029E                     	;# 
   207  0311                     	;# 
   208  0311                     	;# 
   209  0312                     	;# 
   210  0313                     	;# 
   211  0318                     	;# 
   212  0318                     	;# 
   213  0319                     	;# 
   214  031A                     	;# 
   215  0394                     	;# 
   216  0395                     	;# 
   217  0396                     	;# 
   218  039A                     	;# 
   219  039C                     	;# 
   220  039D                     	;# 
   221  039E                     	;# 
   222  039F                     	;# 
   223  0415                     	;# 
   224  0416                     	;# 
   225  0417                     	;# 
   226  041C                     	;# 
   227  041D                     	;# 
   228  041E                     	;# 
   229  0FE4                     	;# 
   230  0FE5                     	;# 
   231  0FE6                     	;# 
   232  0FE7                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEF                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  0111                     	;# 
   289  0112                     	;# 
   290  0113                     	;# 
   291  0114                     	;# 
   292  0115                     	;# 
   293  0116                     	;# 
   294  0117                     	;# 
   295  0118                     	;# 
   296  0119                     	;# 
   297  011A                     	;# 
   298  011B                     	;# 
   299  011D                     	;# 
   300  011E                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0191                     	;# 
   304  0191                     	;# 
   305  0192                     	;# 
   306  0193                     	;# 
   307  0193                     	;# 
   308  0193                     	;# 
   309  0194                     	;# 
   310  0195                     	;# 
   311  0196                     	;# 
   312  0199                     	;# 
   313  019A                     	;# 
   314  019B                     	;# 
   315  019B                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019C                     	;# 
   319  019C                     	;# 
   320  019D                     	;# 
   321  019E                     	;# 
   322  019F                     	;# 
   323  020C                     	;# 
   324  020D                     	;# 
   325  0211                     	;# 
   326  0211                     	;# 
   327  0212                     	;# 
   328  0212                     	;# 
   329  0213                     	;# 
   330  0213                     	;# 
   331  0214                     	;# 
   332  0214                     	;# 
   333  0215                     	;# 
   334  0215                     	;# 
   335  0215                     	;# 
   336  0216                     	;# 
   337  0216                     	;# 
   338  0217                     	;# 
   339  0217                     	;# 
   340  0219                     	;# 
   341  021A                     	;# 
   342  021B                     	;# 
   343  021C                     	;# 
   344  021D                     	;# 
   345  021E                     	;# 
   346  021F                     	;# 
   347  0291                     	;# 
   348  0291                     	;# 
   349  0292                     	;# 
   350  0293                     	;# 
   351  0294                     	;# 
   352  0295                     	;# 
   353  0295                     	;# 
   354  0296                     	;# 
   355  0298                     	;# 
   356  0298                     	;# 
   357  0299                     	;# 
   358  029A                     	;# 
   359  029B                     	;# 
   360  029C                     	;# 
   361  029C                     	;# 
   362  029D                     	;# 
   363  029E                     	;# 
   364  029E                     	;# 
   365  0311                     	;# 
   366  0311                     	;# 
   367  0312                     	;# 
   368  0313                     	;# 
   369  0318                     	;# 
   370  0318                     	;# 
   371  0319                     	;# 
   372  031A                     	;# 
   373  0394                     	;# 
   374  0395                     	;# 
   375  0396                     	;# 
   376  039A                     	;# 
   377  039C                     	;# 
   378  039D                     	;# 
   379  039E                     	;# 
   380  039F                     	;# 
   381  0415                     	;# 
   382  0416                     	;# 
   383  0417                     	;# 
   384  041C                     	;# 
   385  041D                     	;# 
   386  041E                     	;# 
   387  0FE4                     	;# 
   388  0FE5                     	;# 
   389  0FE6                     	;# 
   390  0FE7                     	;# 
   391  0FE8                     	;# 
   392  0FE9                     	;# 
   393  0FEA                     	;# 
   394  0FEB                     	;# 
   395  0FED                     	;# 
   396  0FEE                     	;# 
   397  0FEF                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0014                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  0111                     	;# 
   447  0112                     	;# 
   448  0113                     	;# 
   449  0114                     	;# 
   450  0115                     	;# 
   451  0116                     	;# 
   452  0117                     	;# 
   453  0118                     	;# 
   454  0119                     	;# 
   455  011A                     	;# 
   456  011B                     	;# 
   457  011D                     	;# 
   458  011E                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461  0191                     	;# 
   462  0191                     	;# 
   463  0192                     	;# 
   464  0193                     	;# 
   465  0193                     	;# 
   466  0193                     	;# 
   467  0194                     	;# 
   468  0195                     	;# 
   469  0196                     	;# 
   470  0199                     	;# 
   471  019A                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019B                     	;# 
   476  019C                     	;# 
   477  019C                     	;# 
   478  019D                     	;# 
   479  019E                     	;# 
   480  019F                     	;# 
   481  020C                     	;# 
   482  020D                     	;# 
   483  0211                     	;# 
   484  0211                     	;# 
   485  0212                     	;# 
   486  0212                     	;# 
   487  0213                     	;# 
   488  0213                     	;# 
   489  0214                     	;# 
   490  0214                     	;# 
   491  0215                     	;# 
   492  0215                     	;# 
   493  0215                     	;# 
   494  0216                     	;# 
   495  0216                     	;# 
   496  0217                     	;# 
   497  0217                     	;# 
   498  0219                     	;# 
   499  021A                     	;# 
   500  021B                     	;# 
   501  021C                     	;# 
   502  021D                     	;# 
   503  021E                     	;# 
   504  021F                     	;# 
   505  0291                     	;# 
   506  0291                     	;# 
   507  0292                     	;# 
   508  0293                     	;# 
   509  0294                     	;# 
   510  0295                     	;# 
   511  0295                     	;# 
   512  0296                     	;# 
   513  0298                     	;# 
   514  0298                     	;# 
   515  0299                     	;# 
   516  029A                     	;# 
   517  029B                     	;# 
   518  029C                     	;# 
   519  029C                     	;# 
   520  029D                     	;# 
   521  029E                     	;# 
   522  029E                     	;# 
   523  0311                     	;# 
   524  0311                     	;# 
   525  0312                     	;# 
   526  0313                     	;# 
   527  0318                     	;# 
   528  0318                     	;# 
   529  0319                     	;# 
   530  031A                     	;# 
   531  0394                     	;# 
   532  0395                     	;# 
   533  0396                     	;# 
   534  039A                     	;# 
   535  039C                     	;# 
   536  039D                     	;# 
   537  039E                     	;# 
   538  039F                     	;# 
   539  0415                     	;# 
   540  0416                     	;# 
   541  0417                     	;# 
   542  041C                     	;# 
   543  041D                     	;# 
   544  041E                     	;# 
   545  0FE4                     	;# 
   546  0FE5                     	;# 
   547  0FE6                     	;# 
   548  0FE7                     	;# 
   549  0FE8                     	;# 
   550  0FE9                     	;# 
   551  0FEA                     	;# 
   552  0FEB                     	;# 
   553  0FED                     	;# 
   554  0FEE                     	;# 
   555  0FEF                     	;# 
   556  0000                     	;# 
   557  0001                     	;# 
   558  0002                     	;# 
   559  0003                     	;# 
   560  0004                     	;# 
   561  0005                     	;# 
   562  0006                     	;# 
   563  0007                     	;# 
   564  0008                     	;# 
   565  0009                     	;# 
   566  000A                     	;# 
   567  000B                     	;# 
   568  000C                     	;# 
   569  000D                     	;# 
   570  0011                     	;# 
   571  0012                     	;# 
   572  0013                     	;# 
   573  0014                     	;# 
   574  0015                     	;# 
   575  0016                     	;# 
   576  0016                     	;# 
   577  0017                     	;# 
   578  0018                     	;# 
   579  0019                     	;# 
   580  001A                     	;# 
   581  001B                     	;# 
   582  001C                     	;# 
   583  001E                     	;# 
   584  001F                     	;# 
   585  008C                     	;# 
   586  008D                     	;# 
   587  0091                     	;# 
   588  0092                     	;# 
   589  0093                     	;# 
   590  0094                     	;# 
   591  0095                     	;# 
   592  0096                     	;# 
   593  0097                     	;# 
   594  0098                     	;# 
   595  0099                     	;# 
   596  009A                     	;# 
   597  009B                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  010C                     	;# 
   603  010D                     	;# 
   604  0111                     	;# 
   605  0112                     	;# 
   606  0113                     	;# 
   607  0114                     	;# 
   608  0115                     	;# 
   609  0116                     	;# 
   610  0117                     	;# 
   611  0118                     	;# 
   612  0119                     	;# 
   613  011A                     	;# 
   614  011B                     	;# 
   615  011D                     	;# 
   616  011E                     	;# 
   617  018C                     	;# 
   618  018D                     	;# 
   619  0191                     	;# 
   620  0191                     	;# 
   621  0192                     	;# 
   622  0193                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0194                     	;# 
   626  0195                     	;# 
   627  0196                     	;# 
   628  0199                     	;# 
   629  019A                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019C                     	;# 
   635  019C                     	;# 
   636  019D                     	;# 
   637  019E                     	;# 
   638  019F                     	;# 
   639  020C                     	;# 
   640  020D                     	;# 
   641  0211                     	;# 
   642  0211                     	;# 
   643  0212                     	;# 
   644  0212                     	;# 
   645  0213                     	;# 
   646  0213                     	;# 
   647  0214                     	;# 
   648  0214                     	;# 
   649  0215                     	;# 
   650  0215                     	;# 
   651  0215                     	;# 
   652  0216                     	;# 
   653  0216                     	;# 
   654  0217                     	;# 
   655  0217                     	;# 
   656  0219                     	;# 
   657  021A                     	;# 
   658  021B                     	;# 
   659  021C                     	;# 
   660  021D                     	;# 
   661  021E                     	;# 
   662  021F                     	;# 
   663  0291                     	;# 
   664  0291                     	;# 
   665  0292                     	;# 
   666  0293                     	;# 
   667  0294                     	;# 
   668  0295                     	;# 
   669  0295                     	;# 
   670  0296                     	;# 
   671  0298                     	;# 
   672  0298                     	;# 
   673  0299                     	;# 
   674  029A                     	;# 
   675  029B                     	;# 
   676  029C                     	;# 
   677  029C                     	;# 
   678  029D                     	;# 
   679  029E                     	;# 
   680  029E                     	;# 
   681  0311                     	;# 
   682  0311                     	;# 
   683  0312                     	;# 
   684  0313                     	;# 
   685  0318                     	;# 
   686  0318                     	;# 
   687  0319                     	;# 
   688  031A                     	;# 
   689  0394                     	;# 
   690  0395                     	;# 
   691  0396                     	;# 
   692  039A                     	;# 
   693  039C                     	;# 
   694  039D                     	;# 
   695  039E                     	;# 
   696  039F                     	;# 
   697  0415                     	;# 
   698  0416                     	;# 
   699  0417                     	;# 
   700  041C                     	;# 
   701  041D                     	;# 
   702  041E                     	;# 
   703  0FE4                     	;# 
   704  0FE5                     	;# 
   705  0FE6                     	;# 
   706  0FE7                     	;# 
   707  0FE8                     	;# 
   708  0FE9                     	;# 
   709  0FEA                     	;# 
   710  0FEB                     	;# 
   711  0FED                     	;# 
   712  0FEE                     	;# 
   713  0FEF                     	;# 
   714  0000                     	;# 
   715  0001                     	;# 
   716  0002                     	;# 
   717  0003                     	;# 
   718  0004                     	;# 
   719  0005                     	;# 
   720  0006                     	;# 
   721  0007                     	;# 
   722  0008                     	;# 
   723  0009                     	;# 
   724  000A                     	;# 
   725  000B                     	;# 
   726  000C                     	;# 
   727  000D                     	;# 
   728  0011                     	;# 
   729  0012                     	;# 
   730  0013                     	;# 
   731  0014                     	;# 
   732  0015                     	;# 
   733  0016                     	;# 
   734  0016                     	;# 
   735  0017                     	;# 
   736  0018                     	;# 
   737  0019                     	;# 
   738  001A                     	;# 
   739  001B                     	;# 
   740  001C                     	;# 
   741  001E                     	;# 
   742  001F                     	;# 
   743  008C                     	;# 
   744  008D                     	;# 
   745  0091                     	;# 
   746  0092                     	;# 
   747  0093                     	;# 
   748  0094                     	;# 
   749  0095                     	;# 
   750  0096                     	;# 
   751  0097                     	;# 
   752  0098                     	;# 
   753  0099                     	;# 
   754  009A                     	;# 
   755  009B                     	;# 
   756  009B                     	;# 
   757  009C                     	;# 
   758  009D                     	;# 
   759  009E                     	;# 
   760  010C                     	;# 
   761  010D                     	;# 
   762  0111                     	;# 
   763  0112                     	;# 
   764  0113                     	;# 
   765  0114                     	;# 
   766  0115                     	;# 
   767  0116                     	;# 
   768  0117                     	;# 
   769  0118                     	;# 
   770  0119                     	;# 
   771  011A                     	;# 
   772  011B                     	;# 
   773  011D                     	;# 
   774  011E                     	;# 
   775  018C                     	;# 
   776  018D                     	;# 
   777  0191                     	;# 
   778  0191                     	;# 
   779  0192                     	;# 
   780  0193                     	;# 
   781  0193                     	;# 
   782  0193                     	;# 
   783  0194                     	;# 
   784  0195                     	;# 
   785  0196                     	;# 
   786  0199                     	;# 
   787  019A                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019C                     	;# 
   793  019C                     	;# 
   794  019D                     	;# 
   795  019E                     	;# 
   796  019F                     	;# 
   797  020C                     	;# 
   798  020D                     	;# 
   799  0211                     	;# 
   800  0211                     	;# 
   801  0212                     	;# 
   802  0212                     	;# 
   803  0213                     	;# 
   804  0213                     	;# 
   805  0214                     	;# 
   806  0214                     	;# 
   807  0215                     	;# 
   808  0215                     	;# 
   809  0215                     	;# 
   810  0216                     	;# 
   811  0216                     	;# 
   812  0217                     	;# 
   813  0217                     	;# 
   814  0219                     	;# 
   815  021A                     	;# 
   816  021B                     	;# 
   817  021C                     	;# 
   818  021D                     	;# 
   819  021E                     	;# 
   820  021F                     	;# 
   821  0291                     	;# 
   822  0291                     	;# 
   823  0292                     	;# 
   824  0293                     	;# 
   825  0294                     	;# 
   826  0295                     	;# 
   827  0295                     	;# 
   828  0296                     	;# 
   829  0298                     	;# 
   830  0298                     	;# 
   831  0299                     	;# 
   832  029A                     	;# 
   833  029B                     	;# 
   834  029C                     	;# 
   835  029C                     	;# 
   836  029D                     	;# 
   837  029E                     	;# 
   838  029E                     	;# 
   839  0311                     	;# 
   840  0311                     	;# 
   841  0312                     	;# 
   842  0313                     	;# 
   843  0318                     	;# 
   844  0318                     	;# 
   845  0319                     	;# 
   846  031A                     	;# 
   847  0394                     	;# 
   848  0395                     	;# 
   849  0396                     	;# 
   850  039A                     	;# 
   851  039C                     	;# 
   852  039D                     	;# 
   853  039E                     	;# 
   854  039F                     	;# 
   855  0415                     	;# 
   856  0416                     	;# 
   857  0417                     	;# 
   858  041C                     	;# 
   859  041D                     	;# 
   860  041E                     	;# 
   861  0FE4                     	;# 
   862  0FE5                     	;# 
   863  0FE6                     	;# 
   864  0FE7                     	;# 
   865  0FE8                     	;# 
   866  0FE9                     	;# 
   867  0FEA                     	;# 
   868  0FEB                     	;# 
   869  0FED                     	;# 
   870  0FEE                     	;# 
   871  0FEF                     	;# 
   872  0000                     	;# 
   873  0001                     	;# 
   874  0002                     	;# 
   875  0003                     	;# 
   876  0004                     	;# 
   877  0005                     	;# 
   878  0006                     	;# 
   879  0007                     	;# 
   880  0008                     	;# 
   881  0009                     	;# 
   882  000A                     	;# 
   883  000B                     	;# 
   884  000C                     	;# 
   885  000D                     	;# 
   886  0011                     	;# 
   887  0012                     	;# 
   888  0013                     	;# 
   889  0014                     	;# 
   890  0015                     	;# 
   891  0016                     	;# 
   892  0016                     	;# 
   893  0017                     	;# 
   894  0018                     	;# 
   895  0019                     	;# 
   896  001A                     	;# 
   897  001B                     	;# 
   898  001C                     	;# 
   899  001E                     	;# 
   900  001F                     	;# 
   901  008C                     	;# 
   902  008D                     	;# 
   903  0091                     	;# 
   904  0092                     	;# 
   905  0093                     	;# 
   906  0094                     	;# 
   907  0095                     	;# 
   908  0096                     	;# 
   909  0097                     	;# 
   910  0098                     	;# 
   911  0099                     	;# 
   912  009A                     	;# 
   913  009B                     	;# 
   914  009B                     	;# 
   915  009C                     	;# 
   916  009D                     	;# 
   917  009E                     	;# 
   918  010C                     	;# 
   919  010D                     	;# 
   920  0111                     	;# 
   921  0112                     	;# 
   922  0113                     	;# 
   923  0114                     	;# 
   924  0115                     	;# 
   925  0116                     	;# 
   926  0117                     	;# 
   927  0118                     	;# 
   928  0119                     	;# 
   929  011A                     	;# 
   930  011B                     	;# 
   931  011D                     	;# 
   932  011E                     	;# 
   933  018C                     	;# 
   934  018D                     	;# 
   935  0191                     	;# 
   936  0191                     	;# 
   937  0192                     	;# 
   938  0193                     	;# 
   939  0193                     	;# 
   940  0193                     	;# 
   941  0194                     	;# 
   942  0195                     	;# 
   943  0196                     	;# 
   944  0199                     	;# 
   945  019A                     	;# 
   946  019B                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019B                     	;# 
   950  019C                     	;# 
   951  019C                     	;# 
   952  019D                     	;# 
   953  019E                     	;# 
   954  019F                     	;# 
   955  020C                     	;# 
   956  020D                     	;# 
   957  0211                     	;# 
   958  0211                     	;# 
   959  0212                     	;# 
   960  0212                     	;# 
   961  0213                     	;# 
   962  0213                     	;# 
   963  0214                     	;# 
   964  0214                     	;# 
   965  0215                     	;# 
   966  0215                     	;# 
   967  0215                     	;# 
   968  0216                     	;# 
   969  0216                     	;# 
   970  0217                     	;# 
   971  0217                     	;# 
   972  0219                     	;# 
   973  021A                     	;# 
   974  021B                     	;# 
   975  021C                     	;# 
   976  021D                     	;# 
   977  021E                     	;# 
   978  021F                     	;# 
   979  0291                     	;# 
   980  0291                     	;# 
   981  0292                     	;# 
   982  0293                     	;# 
   983  0294                     	;# 
   984  0295                     	;# 
   985  0295                     	;# 
   986  0296                     	;# 
   987  0298                     	;# 
   988  0298                     	;# 
   989  0299                     	;# 
   990  029A                     	;# 
   991  029B                     	;# 
   992  029C                     	;# 
   993  029C                     	;# 
   994  029D                     	;# 
   995  029E                     	;# 
   996  029E                     	;# 
   997  0311                     	;# 
   998  0311                     	;# 
   999  0312                     	;# 
  1000  0313                     	;# 
  1001  0318                     	;# 
  1002  0318                     	;# 
  1003  0319                     	;# 
  1004  031A                     	;# 
  1005  0394                     	;# 
  1006  0395                     	;# 
  1007  0396                     	;# 
  1008  039A                     	;# 
  1009  039C                     	;# 
  1010  039D                     	;# 
  1011  039E                     	;# 
  1012  039F                     	;# 
  1013  0415                     	;# 
  1014  0416                     	;# 
  1015  0417                     	;# 
  1016  041C                     	;# 
  1017  041D                     	;# 
  1018  041E                     	;# 
  1019  0FE4                     	;# 
  1020  0FE5                     	;# 
  1021  0FE6                     	;# 
  1022  0FE7                     	;# 
  1023  0FE8                     	;# 
  1024  0FE9                     	;# 
  1025  0FEA                     	;# 
  1026  0FEB                     	;# 
  1027  0FED                     	;# 
  1028  0FEE                     	;# 
  1029  0FEF                     	;# 
  1030  0000                     	;# 
  1031  0001                     	;# 
  1032  0002                     	;# 
  1033  0003                     	;# 
  1034  0004                     	;# 
  1035  0005                     	;# 
  1036  0006                     	;# 
  1037  0007                     	;# 
  1038  0008                     	;# 
  1039  0009                     	;# 
  1040  000A                     	;# 
  1041  000B                     	;# 
  1042  000C                     	;# 
  1043  000D                     	;# 
  1044  0011                     	;# 
  1045  0012                     	;# 
  1046  0013                     	;# 
  1047  0014                     	;# 
  1048  0015                     	;# 
  1049  0016                     	;# 
  1050  0016                     	;# 
  1051  0017                     	;# 
  1052  0018                     	;# 
  1053  0019                     	;# 
  1054  001A                     	;# 
  1055  001B                     	;# 
  1056  001C                     	;# 
  1057  001E                     	;# 
  1058  001F                     	;# 
  1059  008C                     	;# 
  1060  008D                     	;# 
  1061  0091                     	;# 
  1062  0092                     	;# 
  1063  0093                     	;# 
  1064  0094                     	;# 
  1065  0095                     	;# 
  1066  0096                     	;# 
  1067  0097                     	;# 
  1068  0098                     	;# 
  1069  0099                     	;# 
  1070  009A                     	;# 
  1071  009B                     	;# 
  1072  009B                     	;# 
  1073  009C                     	;# 
  1074  009D                     	;# 
  1075  009E                     	;# 
  1076  010C                     	;# 
  1077  010D                     	;# 
  1078  0111                     	;# 
  1079  0112                     	;# 
  1080  0113                     	;# 
  1081  0114                     	;# 
  1082  0115                     	;# 
  1083  0116                     	;# 
  1084  0117                     	;# 
  1085  0118                     	;# 
  1086  0119                     	;# 
  1087  011A                     	;# 
  1088  011B                     	;# 
  1089  011D                     	;# 
  1090  011E                     	;# 
  1091  018C                     	;# 
  1092  018D                     	;# 
  1093  0191                     	;# 
  1094  0191                     	;# 
  1095  0192                     	;# 
  1096  0193                     	;# 
  1097  0193                     	;# 
  1098  0193                     	;# 
  1099  0194                     	;# 
  1100  0195                     	;# 
  1101  0196                     	;# 
  1102  0199                     	;# 
  1103  019A                     	;# 
  1104  019B                     	;# 
  1105  019B                     	;# 
  1106  019B                     	;# 
  1107  019B                     	;# 
  1108  019C                     	;# 
  1109  019C                     	;# 
  1110  019D                     	;# 
  1111  019E                     	;# 
  1112  019F                     	;# 
  1113  020C                     	;# 
  1114  020D                     	;# 
  1115  0211                     	;# 
  1116  0211                     	;# 
  1117  0212                     	;# 
  1118  0212                     	;# 
  1119  0213                     	;# 
  1120  0213                     	;# 
  1121  0214                     	;# 
  1122  0214                     	;# 
  1123  0215                     	;# 
  1124  0215                     	;# 
  1125  0215                     	;# 
  1126  0216                     	;# 
  1127  0216                     	;# 
  1128  0217                     	;# 
  1129  0217                     	;# 
  1130  0219                     	;# 
  1131  021A                     	;# 
  1132  021B                     	;# 
  1133  021C                     	;# 
  1134  021D                     	;# 
  1135  021E                     	;# 
  1136  021F                     	;# 
  1137  0291                     	;# 
  1138  0291                     	;# 
  1139  0292                     	;# 
  1140  0293                     	;# 
  1141  0294                     	;# 
  1142  0295                     	;# 
  1143  0295                     	;# 
  1144  0296                     	;# 
  1145  0298                     	;# 
  1146  0298                     	;# 
  1147  0299                     	;# 
  1148  029A                     	;# 
  1149  029B                     	;# 
  1150  029C                     	;# 
  1151  029C                     	;# 
  1152  029D                     	;# 
  1153  029E                     	;# 
  1154  029E                     	;# 
  1155  0311                     	;# 
  1156  0311                     	;# 
  1157  0312                     	;# 
  1158  0313                     	;# 
  1159  0318                     	;# 
  1160  0318                     	;# 
  1161  0319                     	;# 
  1162  031A                     	;# 
  1163  0394                     	;# 
  1164  0395                     	;# 
  1165  0396                     	;# 
  1166  039A                     	;# 
  1167  039C                     	;# 
  1168  039D                     	;# 
  1169  039E                     	;# 
  1170  039F                     	;# 
  1171  0415                     	;# 
  1172  0416                     	;# 
  1173  0417                     	;# 
  1174  041C                     	;# 
  1175  041D                     	;# 
  1176  041E                     	;# 
  1177  0FE4                     	;# 
  1178  0FE5                     	;# 
  1179  0FE6                     	;# 
  1180  0FE7                     	;# 
  1181  0FE8                     	;# 
  1182  0FE9                     	;# 
  1183  0FEA                     	;# 
  1184  0FEB                     	;# 
  1185  0FED                     	;# 
  1186  0FEE                     	;# 
  1187  0FEF                     	;# 
  1188  0000                     	;# 
  1189  0001                     	;# 
  1190  0002                     	;# 
  1191  0003                     	;# 
  1192  0004                     	;# 
  1193  0005                     	;# 
  1194  0006                     	;# 
  1195  0007                     	;# 
  1196  0008                     	;# 
  1197  0009                     	;# 
  1198  000A                     	;# 
  1199  000B                     	;# 
  1200  000C                     	;# 
  1201  000D                     	;# 
  1202  0011                     	;# 
  1203  0012                     	;# 
  1204  0013                     	;# 
  1205  0014                     	;# 
  1206  0015                     	;# 
  1207  0016                     	;# 
  1208  0016                     	;# 
  1209  0017                     	;# 
  1210  0018                     	;# 
  1211  0019                     	;# 
  1212  001A                     	;# 
  1213  001B                     	;# 
  1214  001C                     	;# 
  1215  001E                     	;# 
  1216  001F                     	;# 
  1217  008C                     	;# 
  1218  008D                     	;# 
  1219  0091                     	;# 
  1220  0092                     	;# 
  1221  0093                     	;# 
  1222  0094                     	;# 
  1223  0095                     	;# 
  1224  0096                     	;# 
  1225  0097                     	;# 
  1226  0098                     	;# 
  1227  0099                     	;# 
  1228  009A                     	;# 
  1229  009B                     	;# 
  1230  009B                     	;# 
  1231  009C                     	;# 
  1232  009D                     	;# 
  1233  009E                     	;# 
  1234  010C                     	;# 
  1235  010D                     	;# 
  1236  0111                     	;# 
  1237  0112                     	;# 
  1238  0113                     	;# 
  1239  0114                     	;# 
  1240  0115                     	;# 
  1241  0116                     	;# 
  1242  0117                     	;# 
  1243  0118                     	;# 
  1244  0119                     	;# 
  1245  011A                     	;# 
  1246  011B                     	;# 
  1247  011D                     	;# 
  1248  011E                     	;# 
  1249  018C                     	;# 
  1250  018D                     	;# 
  1251  0191                     	;# 
  1252  0191                     	;# 
  1253  0192                     	;# 
  1254  0193                     	;# 
  1255  0193                     	;# 
  1256  0193                     	;# 
  1257  0194                     	;# 
  1258  0195                     	;# 
  1259  0196                     	;# 
  1260  0199                     	;# 
  1261  019A                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019C                     	;# 
  1267  019C                     	;# 
  1268  019D                     	;# 
  1269  019E                     	;# 
  1270  019F                     	;# 
  1271  020C                     	;# 
  1272  020D                     	;# 
  1273  0211                     	;# 
  1274  0211                     	;# 
  1275  0212                     	;# 
  1276  0212                     	;# 
  1277  0213                     	;# 
  1278  0213                     	;# 
  1279  0214                     	;# 
  1280  0214                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0216                     	;# 
  1285  0216                     	;# 
  1286  0217                     	;# 
  1287  0217                     	;# 
  1288  0219                     	;# 
  1289  021A                     	;# 
  1290  021B                     	;# 
  1291  021C                     	;# 
  1292  021D                     	;# 
  1293  021E                     	;# 
  1294  021F                     	;# 
  1295  0291                     	;# 
  1296  0291                     	;# 
  1297  0292                     	;# 
  1298  0293                     	;# 
  1299  0294                     	;# 
  1300  0295                     	;# 
  1301  0295                     	;# 
  1302  0296                     	;# 
  1303  0298                     	;# 
  1304  0298                     	;# 
  1305  0299                     	;# 
  1306  029A                     	;# 
  1307  029B                     	;# 
  1308  029C                     	;# 
  1309  029C                     	;# 
  1310  029D                     	;# 
  1311  029E                     	;# 
  1312  029E                     	;# 
  1313  0311                     	;# 
  1314  0311                     	;# 
  1315  0312                     	;# 
  1316  0313                     	;# 
  1317  0318                     	;# 
  1318  0318                     	;# 
  1319  0319                     	;# 
  1320  031A                     	;# 
  1321  0394                     	;# 
  1322  0395                     	;# 
  1323  0396                     	;# 
  1324  039A                     	;# 
  1325  039C                     	;# 
  1326  039D                     	;# 
  1327  039E                     	;# 
  1328  039F                     	;# 
  1329  0415                     	;# 
  1330  0416                     	;# 
  1331  0417                     	;# 
  1332  041C                     	;# 
  1333  041D                     	;# 
  1334  041E                     	;# 
  1335  0FE4                     	;# 
  1336  0FE5                     	;# 
  1337  0FE6                     	;# 
  1338  0FE7                     	;# 
  1339  0FE8                     	;# 
  1340  0FE9                     	;# 
  1341  0FEA                     	;# 
  1342  0FEB                     	;# 
  1343  0FED                     	;# 
  1344  0FEE                     	;# 
  1345  0FEF                     	;# 
  1346                           
  1347 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1348  0000                     
  1349 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1350  0000                     
  1351 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1352  0011                     _PIR1bits	set	17
  1353  0013                     _PIR3bits	set	19
  1354  0097                     _WDTCON	set	151
  1355  0098                     _OSCTUNE	set	152
  1356  0099                     _OSCCON	set	153
  1357  009D                     _ADCON0bits	set	157
  1358  009D                     _ADCON0	set	157
  1359  009C                     _ADRESH	set	156
  1360  009B                     _ADRESL	set	155
  1361  009E                     _ADCON1	set	158
  1362  0095                     _OPTION_REGbits	set	149
  1363  008D                     _TRISB	set	141
  1364  008C                     _TRISA	set	140
  1365  04D6                     _PLLR	set	1238
  1366  010C                     _LATAbits	set	268
  1367  010D                     _LATBbits	set	269
  1368  0116                     _BORCON	set	278
  1369  011E                     _APFCON1	set	286
  1370  011D                     _APFCON0	set	285
  1371  010D                     _LATB	set	269
  1372  010C                     _LATA	set	268
  1373  019A                     _TXREG	set	410
  1374  0199                     _RCREG	set	409
  1375  019D                     _RCSTAbits	set	413
  1376  019E                     _TXSTAbits	set	414
  1377  019C                     _SPBRGH	set	412
  1378  019B                     _SPBRGL	set	411
  1379  019E                     _TXSTA	set	414
  1380  019D                     _RCSTA	set	413
  1381  019F                     _BAUDCON	set	415
  1382  018C                     _ANSELA	set	396
  1383  018D                     _ANSELB	set	397
  1384  020C                     _WPUA	set	524
  1385  020D                     _WPUB	set	525
  1386  041E                     _T6CONbits	set	1054
  1387  041E                     _T6CON	set	1054
  1388  041C                     _TMR6	set	1052
  1389  041D                     _PR6	set	1053
  1390                           
  1391                           	psect	cinit
  1392  07F0                     start_initialization:	
  1393                           ; #config settings
  1394                           
  1395  07F0                     __initialization:
  1396                           
  1397                           ; Clear objects allocated to BANK0
  1398  07F0  0020               	movlb	0	; select bank0
  1399  07F1  01EB               	clrf	__pbssBANK0& (0+127)
  1400  07F2  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  1401  07F3  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  1402  07F4  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  1403                           
  1404                           ; Clear objects allocated to BANK1
  1405  07F5  30A0               	movlw	low __pbssBANK1
  1406  07F6  0084               	movwf	4
  1407  07F7  3000               	movlw	high __pbssBANK1
  1408  07F8  0085               	movwf	5
  1409  07F9  3016               	movlw	22
  1410  07FA  318E  26DD  3187   	fcall	clear_ram0
  1411  07FD                     end_of_initialization:	
  1412                           ;End of C runtime variable initialization code
  1413                           
  1414  07FD                     __end_of__initialization:
  1415  07FD  0020               	movlb	0
  1416  07FE  3183  2BA5         	ljmp	_main	;jump to C main() function
  1417                           
  1418                           	psect	bssBANK0
  1419  006B                     __pbssBANK0:
  1420  006B                     _valor_ADC:
  1421  006B                     	ds	2
  1422  006D                     _AN1_Channel:
  1423  006D                     	ds	1
  1424  006E                     _eusartRxLastError:
  1425  006E                     	ds	1
  1426                           
  1427                           	psect	bssBANK1
  1428  00A0                     __pbssBANK1:
  1429  00A0                     _Pack:
  1430  00A0                     	ds	12
  1431  00AC                     _volt_ADC:
  1432  00AC                     	ds	2
  1433  00AE                     _ADC_InterruptHandler:
  1434  00AE                     	ds	2
  1435  00B0                     _EUSART_ErrorHandler:
  1436  00B0                     	ds	2
  1437  00B2                     _EUSART_OverrunErrorHandler:
  1438  00B2                     	ds	2
  1439  00B4                     _EUSART_FramingErrorHandler:
  1440  00B4                     	ds	2
  1441                           
  1442                           	psect	clrtext
  1443  0EDD                     clear_ram0:	
  1444                           ;	Called with FSR0 containing the base address, and
  1445                           ;	WREG with the size to clear
  1446                           
  1447  0EDD  0064               	clrwdt	;clear the watchdog before getting into this loop
  1448  0EDE                     clrloop0:
  1449  0EDE  0180               	clrf	0	;clear RAM location pointed to by FSR
  1450  0EDF  3101               	addfsr 0,1
  1451  0EE0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1452  0EE1  2EDE               	goto	clrloop0	;have we reached the end yet?
  1453  0EE2  3400               	retlw	0	;all done for this memory range, return
  1454                           
  1455                           	psect	cstackCOMMON
  1456  0070                     __pcstackCOMMON:
  1457  0070                     ?_EUSART_SetFramingErrorHandler:
  1458  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1459                           ; 1 bytes @ 0x0
  1460                           
  1461  0070                     ?_EUSART_SetErrorHandler:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464  0070                     ?_OSCILLATOR_Initialize:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467  0070                     ??_OSCILLATOR_Initialize:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470  0070                     ?_WDT_Initialize:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0070                     ??_WDT_Initialize:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0070                     ?_Tm_Inicie_periodico:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     ?_Ds_Iniciar_displays:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ?_Tm_Procese_tiempo:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ??_Tm_Procese_tiempo:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ?_Ds_Procese_displays:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ?_Tm_Hubo_periodico:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ??_Tm_Hubo_periodico:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ?_Tm_Baje_periodico:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ??_Tm_Baje_periodico:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ?_TMR6_Initialize:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ??_TMR6_Initialize:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_TMR6_StartTimer:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ??_TMR6_StartTimer:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_TMR6_HasOverflowOccured:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ??_TMR6_HasOverflowOccured:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_PIN_MANAGER_Initialize:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ??_PIN_MANAGER_Initialize:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_EUSART_Initialize:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_EUSART_is_tx_ready:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ??_EUSART_is_tx_ready:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_EUSART_Write:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ??_EUSART_Write:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_ADC_Initialize:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ??_ADC_Initialize:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_ADC_SelectChannel:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ??_ADC_SelectChannel:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_ADC_StartConversion:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ??_ADC_StartConversion:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_ADC_IsConversionDone:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ??_ADC_IsConversionDone:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_SYSTEM_Initialize:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_main:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_Ds_Encienda_Disp:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ??_Ds_Encienda_Disp:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_Ds_BCD:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ??_Ds_BCD:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ?__Umul8_16:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ?_ADC_GetConversionResult:	
  1588                           ; 2 bytes @ 0x0
  1589                           
  1590  0070                     ?___awdiv:	
  1591                           ; 2 bytes @ 0x0
  1592                           
  1593  0070                     ?___awmod:	
  1594                           ; 2 bytes @ 0x0
  1595                           
  1596  0070                     ?___xxtofl:	
  1597                           ; 2 bytes @ 0x0
  1598                           
  1599  0070                     TMR6_HasOverflowOccured@status:	
  1600                           ; 4 bytes @ 0x0
  1601                           
  1602  0070                     _EUSART_is_tx_ready$291:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     EUSART_Write@txData:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0070                     Ds_Iniciar_displays@d1:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0070                     Tm_Hubo_periodico@ctp:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0070                     __Umul8_16@multiplicand:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1621                           ; 2 bytes @ 0x0
  1622                           
  1623  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1624                           ; 2 bytes @ 0x0
  1625                           
  1626  0070                     Tm_Inicie_periodico@periodo:	
  1627                           ; 2 bytes @ 0x0
  1628                           
  1629  0070                     ___awdiv@divisor:	
  1630                           ; 2 bytes @ 0x0
  1631                           
  1632  0070                     ___awmod@divisor:	
  1633                           ; 2 bytes @ 0x0
  1634                           
  1635  0070                     ___xxtofl@val:	
  1636                           ; 2 bytes @ 0x0
  1637                           
  1638                           
  1639                           ; 4 bytes @ 0x0
  1640  0070                     	ds	1
  1641  0071                     ADC_SelectChannel@channel:
  1642  0071                     Ds_Iniciar_displays@d2:	
  1643                           ; 1 bytes @ 0x1
  1644                           
  1645  0071                     Tm_Baje_periodico@ctp:	
  1646                           ; 1 bytes @ 0x1
  1647                           
  1648                           
  1649                           ; 1 bytes @ 0x1
  1650  0071                     	ds	1
  1651  0072                     ??_EUSART_SetFramingErrorHandler:
  1652  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1653                           ; 1 bytes @ 0x2
  1654                           
  1655  0072                     ??_EUSART_SetErrorHandler:	
  1656                           ; 1 bytes @ 0x2
  1657                           
  1658  0072                     ??_Tm_Inicie_periodico:	
  1659                           ; 1 bytes @ 0x2
  1660                           
  1661  0072                     ??__Umul8_16:	
  1662                           ; 1 bytes @ 0x2
  1663                           
  1664  0072                     ??_EUSART_Initialize:	
  1665                           ; 1 bytes @ 0x2
  1666                           
  1667  0072                     ??_ADC_GetConversionResult:	
  1668                           ; 1 bytes @ 0x2
  1669                           
  1670  0072                     ??_SYSTEM_Initialize:	
  1671                           ; 1 bytes @ 0x2
  1672                           
  1673  0072                     Ds_Iniciar_displays@d3:	
  1674                           ; 1 bytes @ 0x2
  1675                           
  1676  0072                     Ds_Encienda_Disp@dispNum:	
  1677                           ; 1 bytes @ 0x2
  1678                           
  1679  0072                     Ds_BCD@segmento:	
  1680                           ; 1 bytes @ 0x2
  1681                           
  1682  0072                     ___awdiv@dividend:	
  1683                           ; 1 bytes @ 0x2
  1684                           
  1685  0072                     ___awmod@dividend:	
  1686                           ; 2 bytes @ 0x2
  1687                           
  1688                           
  1689                           ; 2 bytes @ 0x2
  1690  0072                     	ds	1
  1691  0073                     ??_Ds_Procese_displays:
  1692  0073                     Ds_Iniciar_displays@tE:	
  1693                           ; 1 bytes @ 0x3
  1694                           
  1695  0073                     Tm_Inicie_periodico@ctp:	
  1696                           ; 1 bytes @ 0x3
  1697                           
  1698                           
  1699                           ; 1 bytes @ 0x3
  1700  0073                     	ds	1
  1701  0074                     ??___awdiv:
  1702  0074                     ??___awmod:	
  1703                           ; 1 bytes @ 0x4
  1704                           
  1705  0074                     ??___xxtofl:	
  1706                           ; 1 bytes @ 0x4
  1707                           
  1708  0074                     Ds_Iniciar_displays@tA:	
  1709                           ; 1 bytes @ 0x4
  1710                           
  1711  0074                     Tm_Procese_tiempo@ctp:	
  1712                           ; 1 bytes @ 0x4
  1713                           
  1714  0074                     __Umul8_16@product:	
  1715                           ; 1 bytes @ 0x4
  1716                           
  1717                           
  1718                           ; 2 bytes @ 0x4
  1719  0074                     	ds	1
  1720  0075                     ??_Ds_Iniciar_displays:
  1721  0075                     Ds_Procese_displays@dsp:	
  1722                           ; 1 bytes @ 0x5
  1723                           
  1724  0075                     ___awdiv@counter:	
  1725                           ; 1 bytes @ 0x5
  1726                           
  1727  0075                     ___awmod@counter:	
  1728                           ; 1 bytes @ 0x5
  1729                           
  1730                           
  1731                           ; 1 bytes @ 0x5
  1732  0075                     	ds	1
  1733  0076                     Ds_Iniciar_displays@dsp:
  1734  0076                     ___awdiv@sign:	
  1735                           ; 1 bytes @ 0x6
  1736                           
  1737  0076                     ___awmod@sign:	
  1738                           ; 1 bytes @ 0x6
  1739                           
  1740  0076                     __Umul8_16@word_mpld:	
  1741                           ; 1 bytes @ 0x6
  1742                           
  1743                           
  1744                           ; 2 bytes @ 0x6
  1745  0076                     	ds	1
  1746  0077                     ___awdiv@quotient:
  1747                           
  1748                           ; 2 bytes @ 0x7
  1749  0077                     	ds	1
  1750  0078                     __Umul8_16@multiplier:
  1751  0078                     ___xxtofl@sign:	
  1752                           ; 1 bytes @ 0x8
  1753                           
  1754                           
  1755                           ; 1 bytes @ 0x8
  1756  0078                     	ds	1
  1757  0079                     ?_Ds_Convertir_en_uni:
  1758  0079                     ___xxtofl@exp:	
  1759                           ; 1 bytes @ 0x9
  1760                           
  1761  0079                     Ds_Convertir_en_uni@voltaje:	
  1762                           ; 1 bytes @ 0x9
  1763                           
  1764                           
  1765                           ; 2 bytes @ 0x9
  1766  0079                     	ds	1
  1767  007A                     ___xxtofl@arg:
  1768                           
  1769                           ; 4 bytes @ 0xA
  1770  007A                     	ds	1
  1771  007B                     ??_Ds_Convertir_en_uni:
  1772                           
  1773                           ; 1 bytes @ 0xB
  1774  007B                     	ds	1
  1775  007C                     Ds_Convertir_en_uni@dsp:
  1776                           
  1777                           ; 1 bytes @ 0xC
  1778  007C                     	ds	2
  1779  007E                     ??_Ds_Conversor_ADC:
  1780                           
  1781                           	psect	cstackBANK0
  1782  0020                     __pcstackBANK0:	
  1783                           ; 1 bytes @ 0xE
  1784                           
  1785  0020                     ?___flmul:
  1786  0020                     ___flmul@b:	
  1787                           ; 4 bytes @ 0x0
  1788                           
  1789                           
  1790                           ; 4 bytes @ 0x0
  1791  0020                     	ds	4
  1792  0024                     ___flmul@a:
  1793                           
  1794                           ; 4 bytes @ 0x4
  1795  0024                     	ds	4
  1796  0028                     ??___flmul:
  1797                           
  1798                           ; 1 bytes @ 0x8
  1799  0028                     	ds	5
  1800  002D                     ___flmul@sign:
  1801                           
  1802                           ; 1 bytes @ 0xD
  1803  002D                     	ds	1
  1804  002E                     ___flmul@grs:
  1805                           
  1806                           ; 4 bytes @ 0xE
  1807  002E                     	ds	4
  1808  0032                     ___flmul@aexp:
  1809                           
  1810                           ; 1 bytes @ 0x12
  1811  0032                     	ds	1
  1812  0033                     ___flmul@bexp:
  1813                           
  1814                           ; 1 bytes @ 0x13
  1815  0033                     	ds	1
  1816  0034                     ___flmul@prod:
  1817                           
  1818                           ; 4 bytes @ 0x14
  1819  0034                     	ds	4
  1820  0038                     ___flmul@temp:
  1821                           
  1822                           ; 2 bytes @ 0x18
  1823  0038                     	ds	2
  1824  003A                     ?___fltol:
  1825  003A                     ___fltol@f1:	
  1826                           ; 4 bytes @ 0x1A
  1827                           
  1828                           
  1829                           ; 4 bytes @ 0x1A
  1830  003A                     	ds	4
  1831  003E                     ??___fltol:
  1832                           
  1833                           ; 1 bytes @ 0x1E
  1834  003E                     	ds	5
  1835  0043                     ___fltol@sign1:
  1836                           
  1837                           ; 1 bytes @ 0x23
  1838  0043                     	ds	1
  1839  0044                     ___fltol@exp1:
  1840                           
  1841                           ; 1 bytes @ 0x24
  1842  0044                     	ds	1
  1843  0045                     ?_Ds_Conversor_ADC:
  1844  0045                     Ds_Conversor_ADC@adcOUT:	
  1845                           ; 2 bytes @ 0x25
  1846                           
  1847                           
  1848                           ; 2 bytes @ 0x25
  1849  0045                     	ds	2
  1850  0047                     Ds_Conversor_ADC@pendiente:
  1851                           
  1852                           ; 4 bytes @ 0x27
  1853  0047                     	ds	4
  1854  004B                     Ds_Conversor_ADC@voltios:
  1855                           
  1856                           ; 2 bytes @ 0x2B
  1857  004B                     	ds	2
  1858  004D                     ??_main:
  1859                           
  1860                           ; 1 bytes @ 0x2D
  1861  004D                     	ds	4
  1862  0051                     main@timer_1000ms:
  1863                           
  1864                           ; 9 bytes @ 0x31
  1865  0051                     	ds	9
  1866  005A                     main@timer_1ms:
  1867                           
  1868                           ; 9 bytes @ 0x3A
  1869  005A                     	ds	9
  1870  0063                     main@seven_seg:
  1871                           
  1872                           ; 8 bytes @ 0x43
  1873  0063                     	ds	8
  1874                           
  1875                           	psect	maintext
  1876  03A5                     __pmaintext:	
  1877 ;;
  1878 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1879 ;;
  1880 ;; *************** function _main *****************
  1881 ;; Defined at:
  1882 ;;		line 36 in file "main.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  timer_1ms       9   58[BANK0 ] struct Tm_Periodico
  1887 ;;  timer_1000ms    9   49[BANK0 ] struct Tm_Periodico
  1888 ;;  seven_seg       8   67[BANK0 ] struct Ds_Display
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : B1F/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1898 ;;      Params:         0       0       0       0       0       0
  1899 ;;      Locals:         0      26       0       0       0       0
  1900 ;;      Temps:          0       4       0       0       0       0
  1901 ;;      Totals:         0      30       0       0       0       0
  1902 ;;Total ram usage:       30 bytes
  1903 ;; Hardware stack levels required when called: 3
  1904 ;; This function calls:
  1905 ;;		_ADC_GetConversionResult
  1906 ;;		_ADC_Initialize
  1907 ;;		_ADC_IsConversionDone
  1908 ;;		_ADC_SelectChannel
  1909 ;;		_ADC_StartConversion
  1910 ;;		_Ds_Conversor_ADC
  1911 ;;		_Ds_Convertir_en_uni
  1912 ;;		_Ds_Iniciar_displays
  1913 ;;		_Ds_Procese_displays
  1914 ;;		_EUSART_Write
  1915 ;;		_EUSART_is_tx_ready
  1916 ;;		_SYSTEM_Initialize
  1917 ;;		_TMR6_HasOverflowOccured
  1918 ;;		_TMR6_StartTimer
  1919 ;;		_Tm_Baje_periodico
  1920 ;;		_Tm_Hubo_periodico
  1921 ;;		_Tm_Inicie_periodico
  1922 ;;		_Tm_Procese_tiempo
  1923 ;; This function is called by:
  1924 ;;		Startup code after reset
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _main
  1930  03A5                     _main:
  1931  03A5                     l2432:	
  1932                           ;incstack = 0
  1933                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1934                           
  1935                           
  1936                           ;main.c: 38:  SYSTEM_Initialize();
  1937  03A5  318F  2746  3183   	fcall	_SYSTEM_Initialize
  1938  03A8                     l2434:
  1939                           
  1940                           ;main.c: 39:  Ds_Display seven_seg;;main.c: 40:  Tm_Periodico timer_1ms;;main.c: 41:    
      +                           Tm_Periodico timer_1000ms;;main.c: 42:  Tm_Inicie_periodico (&timer_1ms, 1000);
  1941  03A8  30E8               	movlw	232
  1942  03A9  00F0               	movwf	Tm_Inicie_periodico@periodo
  1943  03AA  3003               	movlw	3
  1944  03AB  00F1               	movwf	Tm_Inicie_periodico@periodo+1
  1945  03AC  305A               	movlw	(low (main@timer_1ms| 0))& (0+255)
  1946  03AD  318F  276F  3183   	fcall	_Tm_Inicie_periodico
  1947  03B0                     l2436:
  1948                           
  1949                           ;main.c: 43:  ADC_SelectChannel (AN1_Channel);
  1950  03B0  3000               	movlw	0
  1951  03B1  318F  271D  3183   	fcall	_ADC_SelectChannel
  1952                           
  1953                           ;main.c: 45:  Tm_Inicie_periodico (&timer_1000ms, 1000);
  1954  03B4  30E8               	movlw	232
  1955  03B5  00F0               	movwf	Tm_Inicie_periodico@periodo
  1956  03B6  3003               	movlw	3
  1957  03B7  00F1               	movwf	Tm_Inicie_periodico@periodo+1
  1958  03B8  3051               	movlw	(low (main@timer_1000ms| 0))& (0+255)
  1959  03B9  318F  276F  3183   	fcall	_Tm_Inicie_periodico
  1960  03BC                     l2438:
  1961                           
  1962                           ;main.c: 46:  ADC_Initialize();
  1963  03BC  318E  26E3  3183   	fcall	_ADC_Initialize
  1964  03BF                     l2440:
  1965                           
  1966                           ;main.c: 47:  Ds_Iniciar_displays (&seven_seg, 4, 5, 6, 4, 1);
  1967  03BF  3004               	movlw	4
  1968  03C0  0020               	movlb	0	; select bank0
  1969  03C1  00CD               	movwf	??_main
  1970  03C2  084D               	movf	??_main,w
  1971  03C3  00F0               	movwf	Ds_Iniciar_displays@d1
  1972  03C4  3005               	movlw	5
  1973  03C5  00CE               	movwf	??_main+1
  1974  03C6  084E               	movf	??_main+1,w
  1975  03C7  00F1               	movwf	Ds_Iniciar_displays@d2
  1976  03C8  3006               	movlw	6
  1977  03C9  00CF               	movwf	??_main+2
  1978  03CA  084F               	movf	??_main+2,w
  1979  03CB  00F2               	movwf	Ds_Iniciar_displays@d3
  1980  03CC  3004               	movlw	4
  1981  03CD  00D0               	movwf	??_main+3
  1982  03CE  0850               	movf	??_main+3,w
  1983  03CF  00F3               	movwf	Ds_Iniciar_displays@tE
  1984  03D0  01F4               	clrf	Ds_Iniciar_displays@tA
  1985  03D1  0AF4               	incf	Ds_Iniciar_displays@tA,f
  1986  03D2  3063               	movlw	(low (main@seven_seg| 0))& (0+255)
  1987  03D3  3180  200B  3183   	fcall	_Ds_Iniciar_displays
  1988  03D6                     l2442:
  1989                           
  1990                           ;main.c: 48:     TMR6_StartTimer();
  1991  03D6  318E  26C2  3183   	fcall	_TMR6_StartTimer
  1992  03D9                     l2444:
  1993                           
  1994                           ;main.c: 54:   if(TMR6_HasOverflowOccured()){
  1995  03D9  318F  272A  3183   	fcall	_TMR6_HasOverflowOccured
  1996  03DC  3A00               	xorlw	0
  1997  03DD  1903               	skipnz
  1998  03DE  2BE0               	goto	u1821
  1999  03DF  2BE1               	goto	u1820
  2000  03E0                     u1821:
  2001  03E0  2BE9               	goto	l2448
  2002  03E1                     u1820:
  2003  03E1                     l2446:
  2004                           
  2005                           ;main.c: 55:    Tm_Procese_tiempo(&timer_1ms);
  2006  03E1  305A               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2007  03E2  3181  2193  3183   	fcall	_Tm_Procese_tiempo
  2008                           
  2009                           ;main.c: 56:             Ds_Procese_displays(&seven_seg);
  2010  03E5  3063               	movlw	(low (main@seven_seg| 0))& (0+255)
  2011  03E6  3184  246F  3183   	fcall	_Ds_Procese_displays
  2012  03E9                     l2448:
  2013                           
  2014                           ;main.c: 59:     if(Tm_Hubo_periodico(&timer_1ms)){
  2015  03E9  305A               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2016  03EA  318E  26EB  3183   	fcall	_Tm_Hubo_periodico
  2017  03ED  3A00               	xorlw	0
  2018  03EE  1903               	skipnz
  2019  03EF  2BF1               	goto	u1831
  2020  03F0  2BF2               	goto	u1830
  2021  03F1                     u1831:
  2022  03F1  2C45               	goto	l2470
  2023  03F2                     u1830:
  2024  03F2                     l2450:
  2025                           
  2026                           ;main.c: 60:   Tm_Baje_periodico(&timer_1ms);
  2027  03F2  305A               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2028  03F3  318F  2707  3183   	fcall	_Tm_Baje_periodico
  2029  03F6                     l2452:
  2030                           
  2031                           ;main.c: 61:         ADC_StartConversion();
  2032  03F6  318E  26BC  3183   	fcall	_ADC_StartConversion
  2033  03F9                     l2454:
  2034                           
  2035                           ;main.c: 63:         if(EUSART_is_tx_ready()){
  2036  03F9  318F  2737  3183   	fcall	_EUSART_is_tx_ready
  2037  03FC  3A00               	xorlw	0
  2038  03FD  1903               	skipnz
  2039  03FE  2C00               	goto	u1841
  2040  03FF  2C01               	goto	u1840
  2041  0400                     u1841:
  2042  0400  2C45               	goto	l2470
  2043  0401                     u1840:
  2044  0401                     l2456:
  2045                           
  2046                           ;main.c: 64:             Pack[0]=(seven_seg.D3 + '0');
  2047  0401  0020               	movlb	0	; select bank0
  2048  0402  0866               	movf	main@seven_seg+3,w
  2049  0403  3E30               	addlw	48
  2050  0404  0021               	movlb	1	; select bank1
  2051  0405  00A0               	movwf	_Pack^(0+128)
  2052  0406  3000               	movlw	0
  2053  0407  1803               	skipnc
  2054  0408  3001               	movlw	1
  2055  0409  00A1               	movwf	(_Pack^(0+128)+1)
  2056                           
  2057                           ;main.c: 65:             Pack[1]=(',');
  2058  040A  302C               	movlw	44
  2059  040B  00A2               	movwf	(_Pack^(0+128)+2)
  2060  040C  3000               	movlw	0
  2061  040D  00A3               	movwf	(_Pack^(0+128)+3)
  2062                           
  2063                           ;main.c: 66:             Pack[2]=(seven_seg.D2 + '0');
  2064  040E  0020               	movlb	0	; select bank0
  2065  040F  0865               	movf	main@seven_seg+2,w
  2066  0410  3E30               	addlw	48
  2067  0411  0021               	movlb	1	; select bank1
  2068  0412  00A4               	movwf	(_Pack^(0+128)+4)
  2069  0413  3000               	movlw	0
  2070  0414  1803               	skipnc
  2071  0415  3001               	movlw	1
  2072  0416  00A5               	movwf	(_Pack^(0+128)+5)
  2073                           
  2074                           ;main.c: 67:             Pack[3]=(seven_seg.D1 + '0');
  2075  0417  0020               	movlb	0	; select bank0
  2076  0418  0864               	movf	main@seven_seg+1,w
  2077  0419  3E30               	addlw	48
  2078  041A  0021               	movlb	1	; select bank1
  2079  041B  00A6               	movwf	(_Pack^(0+128)+6)
  2080  041C  3000               	movlw	0
  2081  041D  1803               	skipnc
  2082  041E  3001               	movlw	1
  2083  041F  00A7               	movwf	(_Pack^(0+128)+7)
  2084                           
  2085                           ;main.c: 68:             Pack[5]=0x0D;
  2086  0420  300D               	movlw	13
  2087  0421  00AA               	movwf	(_Pack^(0+128)+10)
  2088  0422  3000               	movlw	0
  2089  0423  00AB               	movwf	(_Pack^(0+128)+11)
  2090                           
  2091                           ;main.c: 69:             Pack[4]= '\n';
  2092  0424  300A               	movlw	10
  2093  0425  00A8               	movwf	(_Pack^(0+128)+8)
  2094  0426  3000               	movlw	0
  2095  0427  00A9               	movwf	(_Pack^(0+128)+9)
  2096  0428                     l2458:
  2097                           
  2098                           ;main.c: 70:             EUSART_Write(Pack[0]);
  2099  0428  0820               	movf	_Pack^(0+128),w
  2100  0429  318E  26F3  3183   	fcall	_EUSART_Write
  2101  042C                     l2460:
  2102                           
  2103                           ;main.c: 71:             EUSART_Write(Pack[1]);
  2104  042C  0021               	movlb	1	; select bank1
  2105  042D  0822               	movf	(_Pack^(0+128)+2),w
  2106  042E  318E  26F3  3183   	fcall	_EUSART_Write
  2107  0431                     l2462:
  2108                           
  2109                           ;main.c: 72:             EUSART_Write(Pack[2]);
  2110  0431  0021               	movlb	1	; select bank1
  2111  0432  0824               	movf	(_Pack^(0+128)+4),w
  2112  0433  318E  26F3  3183   	fcall	_EUSART_Write
  2113  0436                     l2464:
  2114                           
  2115                           ;main.c: 73:             EUSART_Write(Pack[3]);
  2116  0436  0021               	movlb	1	; select bank1
  2117  0437  0826               	movf	(_Pack^(0+128)+6),w
  2118  0438  318E  26F3  3183   	fcall	_EUSART_Write
  2119  043B                     l2466:
  2120                           
  2121                           ;main.c: 74:             EUSART_Write(Pack[4]);
  2122  043B  0021               	movlb	1	; select bank1
  2123  043C  0828               	movf	(_Pack^(0+128)+8),w
  2124  043D  318E  26F3  3183   	fcall	_EUSART_Write
  2125  0440                     l2468:
  2126                           
  2127                           ;main.c: 75:             EUSART_Write(Pack[5]);
  2128  0440  0021               	movlb	1	; select bank1
  2129  0441  082A               	movf	(_Pack^(0+128)+10),w
  2130  0442  318E  26F3  3183   	fcall	_EUSART_Write
  2131  0445                     l2470:
  2132                           
  2133                           ;main.c: 79:  if(ADC_IsConversionDone()){
  2134  0445  3180  2004  3183   	fcall	_ADC_IsConversionDone
  2135  0448  3A00               	xorlw	0
  2136  0449  1903               	skipnz
  2137  044A  2C4C               	goto	u1851
  2138  044B  2C4D               	goto	u1850
  2139  044C                     u1851:
  2140  044C  2BD9               	goto	l2444
  2141  044D                     u1850:
  2142  044D                     l2472:
  2143                           
  2144                           ;main.c: 80:         valor_ADC = ADC_GetConversionResult();
  2145  044D  318E  26C5  3183   	fcall	_ADC_GetConversionResult
  2146  0450  0871               	movf	?_ADC_GetConversionResult+1,w
  2147  0451  0020               	movlb	0	; select bank0
  2148  0452  00EC               	movwf	_valor_ADC+1
  2149  0453  0870               	movf	?_ADC_GetConversionResult,w
  2150  0454  00EB               	movwf	_valor_ADC
  2151  0455                     l2474:
  2152                           
  2153                           ;main.c: 81:         volt_ADC = Ds_Conversor_ADC(valor_ADC);
  2154  0455  086C               	movf	_valor_ADC+1,w
  2155  0456  00C6               	movwf	Ds_Conversor_ADC@adcOUT+1
  2156  0457  086B               	movf	_valor_ADC,w
  2157  0458  00C5               	movwf	Ds_Conversor_ADC@adcOUT
  2158  0459  3180  2049  3183   	fcall	_Ds_Conversor_ADC
  2159  045C  0020               	movlb	0	; select bank0
  2160  045D  0846               	movf	?_Ds_Conversor_ADC+1,w
  2161  045E  0021               	movlb	1	; select bank1
  2162  045F  00AD               	movwf	(_volt_ADC+1)^(0+128)
  2163  0460  0020               	movlb	0	; select bank0
  2164  0461  0845               	movf	?_Ds_Conversor_ADC,w
  2165  0462  0021               	movlb	1	; select bank1
  2166  0463  00AC               	movwf	_volt_ADC^(0+128)
  2167  0464                     l2476:
  2168                           
  2169                           ;main.c: 82:         Ds_Convertir_en_uni(&seven_seg, volt_ADC);
  2170  0464  082D               	movf	(_volt_ADC+1)^(0+128),w
  2171  0465  00FA               	movwf	Ds_Convertir_en_uni@voltaje+1
  2172  0466  082C               	movf	_volt_ADC^(0+128),w
  2173  0467  00F9               	movwf	Ds_Convertir_en_uni@voltaje
  2174  0468  3063               	movlw	(low (main@seven_seg| 0))& (0+255)
  2175  0469  3180  20DC  3183   	fcall	_Ds_Convertir_en_uni
  2176  046C  2BD9               	goto	l2444
  2177  046D  3180  2802         	ljmp	start
  2178  046F                     __end_of_main:
  2179                           
  2180                           	psect	text1
  2181  0193                     __ptext1:	
  2182 ;; *************** function _Tm_Procese_tiempo *****************
  2183 ;; Defined at:
  2184 ;;		line 17 in file "nuestrostimers.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2187 ;;		 -> main@timer_1ms(9), 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  ctp             1    4[COMMON] PTR struct Tm_Periodico
  2190 ;;		 -> main@timer_1ms(9), 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2200 ;;      Params:         0       0       0       0       0       0
  2201 ;;      Locals:         1       0       0       0       0       0
  2202 ;;      Temps:          4       0       0       0       0       0
  2203 ;;      Totals:         5       0       0       0       0       0
  2204 ;;Total ram usage:        5 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_main
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _Tm_Procese_tiempo
  2215  0193                     _Tm_Procese_tiempo:
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _Tm_Procese_tiempo: [wreg-fsr1h+status,2+status,0]
  2219                           ;Tm_Procese_tiempo@ctp stored from wreg
  2220  0193  00F4               	movwf	Tm_Procese_tiempo@ctp
  2221  0194                     l2320:
  2222                           
  2223                           ;nuestrostimers.c: 17: void Tm_Procese_tiempo (Tm_Periodico *ctp);nuestrostimers.c: 18: 
      +                          {;nuestrostimers.c: 21:  if (ctp->banderas & 0x01U)
  2224  0194  0874               	movf	Tm_Procese_tiempo@ctp,w
  2225  0195  3E08               	addlw	8
  2226  0196  0086               	movwf	6
  2227  0197  0187               	clrf	7
  2228  0198  1C01               	btfss	1,0
  2229  0199  299B               	goto	u1711
  2230  019A  299C               	goto	u1710
  2231  019B                     u1711:
  2232  019B  29BE               	goto	l2330
  2233  019C                     u1710:
  2234  019C                     l2322:
  2235                           
  2236                           ;nuestrostimers.c: 22:  {;nuestrostimers.c: 23:   --(ctp->contador);
  2237  019C  0874               	movf	Tm_Procese_tiempo@ctp,w
  2238  019D  0086               	movwf	6
  2239  019E  0187               	clrf	7
  2240  019F  3001               	movlw	1
  2241  01A0  0281               	subwf	1,f
  2242  01A1  3141               	addfsr 1,1
  2243  01A2  3000               	movlw	0
  2244  01A3  3B81               	subwfb	1,f
  2245  01A4  317F               	addfsr 1,-1
  2246  01A5                     l2324:
  2247                           
  2248                           ;nuestrostimers.c: 24:   if ( !(ctp->contador) )
  2249  01A5  0874               	movf	Tm_Procese_tiempo@ctp,w
  2250  01A6  0086               	movwf	6
  2251  01A7  0187               	clrf	7
  2252  01A8  0016               	moviw fsr1++
  2253  01A9  0401               	iorwf	1,w
  2254  01AA  1D03               	btfss	3,2
  2255  01AB  29AD               	goto	u1721
  2256  01AC  29AE               	goto	u1720
  2257  01AD                     u1721:
  2258  01AD  29BE               	goto	l2330
  2259  01AE                     u1720:
  2260  01AE                     l2326:
  2261                           
  2262                           ;nuestrostimers.c: 25:   {;nuestrostimers.c: 26:    ctp->banderas |= 0x02U;
  2263  01AE  0874               	movf	Tm_Procese_tiempo@ctp,w
  2264  01AF  3E08               	addlw	8
  2265  01B0  0086               	movwf	6
  2266  01B1  0187               	clrf	7
  2267  01B2  1481               	bsf	1,1
  2268  01B3                     l2328:
  2269                           
  2270                           ;nuestrostimers.c: 27:    ctp->contador = ctp-> periodo;
  2271  01B3  0874               	movf	Tm_Procese_tiempo@ctp,w
  2272  01B4  3E02               	addlw	2
  2273  01B5  0086               	movwf	6
  2274  01B6  0187               	clrf	7
  2275  01B7  0874               	movf	Tm_Procese_tiempo@ctp,w
  2276  01B8  0084               	movwf	4
  2277  01B9  0185               	clrf	5
  2278  01BA  3F40               	moviw [0]fsr1
  2279  01BB  3F80               	movwi [0]fsr0
  2280  01BC  3F41               	moviw [1]fsr1
  2281  01BD  3F81               	movwi [1]fsr0
  2282  01BE                     l2330:
  2283                           
  2284                           ;nuestrostimers.c: 30:  if ((ctp->timeout))
  2285  01BE  0874               	movf	Tm_Procese_tiempo@ctp,w
  2286  01BF  3E04               	addlw	4
  2287  01C0  0086               	movwf	6
  2288  01C1  0187               	clrf	7
  2289  01C2  3F40               	moviw [0]fsr1
  2290  01C3  00F0               	movwf	??_Tm_Procese_tiempo
  2291  01C4  3F41               	moviw [1]fsr1
  2292  01C5  00F1               	movwf	??_Tm_Procese_tiempo+1
  2293  01C6  3F42               	moviw [2]fsr1
  2294  01C7  00F2               	movwf	??_Tm_Procese_tiempo+2
  2295  01C8  3F43               	moviw [3]fsr1
  2296  01C9  00F3               	movwf	??_Tm_Procese_tiempo+3
  2297  01CA  0873               	movf	??_Tm_Procese_tiempo+3,w
  2298  01CB  0472               	iorwf	??_Tm_Procese_tiempo+2,w
  2299  01CC  0471               	iorwf	??_Tm_Procese_tiempo+1,w
  2300  01CD  0470               	iorwf	??_Tm_Procese_tiempo,w
  2301  01CE  1903               	skipnz
  2302  01CF  29D1               	goto	u1731
  2303  01D0  29D2               	goto	u1730
  2304  01D1                     u1731:
  2305  01D1  29F2               	goto	l522
  2306  01D2                     u1730:
  2307  01D2                     l2332:
  2308                           
  2309                           ;nuestrostimers.c: 31:   ctp->timeout=ctp->timeout-1;
  2310  01D2  30FF               	movlw	255
  2311  01D3  00F0               	movwf	??_Tm_Procese_tiempo
  2312  01D4  30FF               	movlw	255
  2313  01D5  00F1               	movwf	??_Tm_Procese_tiempo+1
  2314  01D6  30FF               	movlw	255
  2315  01D7  00F2               	movwf	??_Tm_Procese_tiempo+2
  2316  01D8  30FF               	movlw	255
  2317  01D9  00F3               	movwf	??_Tm_Procese_tiempo+3
  2318  01DA  0874               	movf	Tm_Procese_tiempo@ctp,w
  2319  01DB  3E04               	addlw	4
  2320  01DC  0086               	movwf	6
  2321  01DD  0187               	clrf	7
  2322  01DE  3F40               	moviw [0]fsr1
  2323  01DF  07F0               	addwf	??_Tm_Procese_tiempo,f
  2324  01E0  3F41               	moviw [1]fsr1
  2325  01E1  3DF1               	addwfc	??_Tm_Procese_tiempo+1,f
  2326  01E2  3F42               	moviw [2]fsr1
  2327  01E3  3DF2               	addwfc	??_Tm_Procese_tiempo+2,f
  2328  01E4  3F43               	moviw [3]fsr1
  2329  01E5  3DF3               	addwfc	??_Tm_Procese_tiempo+3,f
  2330  01E6  0874               	movf	Tm_Procese_tiempo@ctp,w
  2331  01E7  3E04               	addlw	4
  2332  01E8  0086               	movwf	6
  2333  01E9  0187               	clrf	7
  2334  01EA  0870               	movf	??_Tm_Procese_tiempo,w
  2335  01EB  3FC0               	movwi [0]fsr1
  2336  01EC  0871               	movf	??_Tm_Procese_tiempo+1,w
  2337  01ED  3FC1               	movwi [1]fsr1
  2338  01EE  0872               	movf	??_Tm_Procese_tiempo+2,w
  2339  01EF  3FC2               	movwi [2]fsr1
  2340  01F0  0873               	movf	??_Tm_Procese_tiempo+3,w
  2341  01F1  3FC3               	movwi [3]fsr1
  2342  01F2                     l522:
  2343  01F2  0008               	return
  2344  01F3                     __end_of_Tm_Procese_tiempo:
  2345                           
  2346                           	psect	text2
  2347  0F6F                     __ptext2:	
  2348 ;; *************** function _Tm_Inicie_periodico *****************
  2349 ;; Defined at:
  2350 ;;		line 11 in file "nuestrostimers.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2353 ;;		 -> main@timer_1000ms(9), main@timer_1ms(9), 
  2354 ;;  periodo         2    0[COMMON] unsigned int 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  ctp             1    3[COMMON] PTR struct Tm_Periodico
  2357 ;;		 -> main@timer_1000ms(9), main@timer_1ms(9), 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2367 ;;      Params:         2       0       0       0       0       0
  2368 ;;      Locals:         1       0       0       0       0       0
  2369 ;;      Temps:          1       0       0       0       0       0
  2370 ;;      Totals:         4       0       0       0       0       0
  2371 ;;Total ram usage:        4 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           
  2381                           ;psect for function _Tm_Inicie_periodico
  2382  0F6F                     _Tm_Inicie_periodico:
  2383                           
  2384                           ;incstack = 0
  2385                           ; Regs used in _Tm_Inicie_periodico: [wreg+fsr1l+fsr1h+status,2+status,0]
  2386                           ;Tm_Inicie_periodico@ctp stored from wreg
  2387  0F6F  00F3               	movwf	Tm_Inicie_periodico@ctp
  2388  0F70                     l2304:
  2389                           
  2390                           ;nuestrostimers.c: 11: void Tm_Inicie_periodico (Tm_Periodico *ctp,unsigned int periodo)
      +                          ;nuestrostimers.c: 12: {;nuestrostimers.c: 13:  ctp->banderas |= 0x01U;
  2391  0F70  0873               	movf	Tm_Inicie_periodico@ctp,w
  2392  0F71  3E08               	addlw	8
  2393  0F72  0086               	movwf	6
  2394  0F73  0187               	clrf	7
  2395  0F74  1401               	bsf	1,0
  2396                           
  2397                           ;nuestrostimers.c: 14:  ctp->banderas &= ~0x02U;
  2398  0F75  30FD               	movlw	253
  2399  0F76  00F2               	movwf	??_Tm_Inicie_periodico
  2400  0F77  0873               	movf	Tm_Inicie_periodico@ctp,w
  2401  0F78  3E08               	addlw	8
  2402  0F79  0086               	movwf	6
  2403  0F7A  0187               	clrf	7
  2404  0F7B  0872               	movf	??_Tm_Inicie_periodico,w
  2405  0F7C  0581               	andwf	1,f
  2406                           
  2407                           ;nuestrostimers.c: 15:  ctp->contador = ctp->periodo = periodo;
  2408  0F7D  0873               	movf	Tm_Inicie_periodico@ctp,w
  2409  0F7E  3E02               	addlw	2
  2410  0F7F  0086               	movwf	6
  2411  0F80  0187               	clrf	7
  2412  0F81  0870               	movf	Tm_Inicie_periodico@periodo,w
  2413  0F82  3FC0               	movwi [0]fsr1
  2414  0F83  0871               	movf	Tm_Inicie_periodico@periodo+1,w
  2415  0F84  3FC1               	movwi [1]fsr1
  2416  0F85  0873               	movf	Tm_Inicie_periodico@ctp,w
  2417  0F86  0086               	movwf	6
  2418  0F87  0187               	clrf	7
  2419  0F88  0870               	movf	Tm_Inicie_periodico@periodo,w
  2420  0F89  3FC0               	movwi [0]fsr1
  2421  0F8A  0871               	movf	Tm_Inicie_periodico@periodo+1,w
  2422  0F8B  3FC1               	movwi [1]fsr1
  2423  0F8C                     l516:
  2424  0F8C  0008               	return
  2425  0F8D                     __end_of_Tm_Inicie_periodico:
  2426                           
  2427                           	psect	text3
  2428  0EEB                     __ptext3:	
  2429 ;; *************** function _Tm_Hubo_periodico *****************
  2430 ;; Defined at:
  2431 ;;		line 36 in file "nuestrostimers.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2434 ;;		 -> main@timer_1ms(9), 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  ctp             1    0[COMMON] PTR struct Tm_Periodico
  2437 ;;		 -> main@timer_1ms(9), 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      unsigned char 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2447 ;;      Params:         0       0       0       0       0       0
  2448 ;;      Locals:         1       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0
  2450 ;;      Totals:         1       0       0       0       0       0
  2451 ;;Total ram usage:        1 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_main
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           
  2461                           ;psect for function _Tm_Hubo_periodico
  2462  0EEB                     _Tm_Hubo_periodico:
  2463                           
  2464                           ;incstack = 0
  2465                           ; Regs used in _Tm_Hubo_periodico: [wreg+fsr1l+fsr1h+status,2+status,0]
  2466                           ;Tm_Hubo_periodico@ctp stored from wreg
  2467  0EEB  00F0               	movwf	Tm_Hubo_periodico@ctp
  2468  0EEC                     l2398:
  2469                           
  2470                           ;nuestrostimers.c: 36: char Tm_Hubo_periodico (Tm_Periodico *ctp);nuestrostimers.c: 37: 
      +                          {;nuestrostimers.c: 38:  return (ctp->banderas & 0x02U);
  2471  0EEC  0870               	movf	Tm_Hubo_periodico@ctp,w
  2472  0EED  3E08               	addlw	8
  2473  0EEE  0086               	movwf	6
  2474  0EEF  0187               	clrf	7
  2475  0EF0  0801               	movf	1,w
  2476  0EF1  3902               	andlw	2
  2477  0EF2                     l525:
  2478  0EF2  0008               	return
  2479  0EF3                     __end_of_Tm_Hubo_periodico:
  2480                           
  2481                           	psect	text4
  2482  0F07                     __ptext4:	
  2483 ;; *************** function _Tm_Baje_periodico *****************
  2484 ;; Defined at:
  2485 ;;		line 43 in file "nuestrostimers.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2488 ;;		 -> main@timer_1ms(9), 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  ctp             1    1[COMMON] PTR struct Tm_Periodico
  2491 ;;		 -> main@timer_1ms(9), 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2501 ;;      Params:         0       0       0       0       0       0
  2502 ;;      Locals:         1       0       0       0       0       0
  2503 ;;      Temps:          1       0       0       0       0       0
  2504 ;;      Totals:         2       0       0       0       0       0
  2505 ;;Total ram usage:        2 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; This function calls:
  2508 ;;		Nothing
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           
  2515                           ;psect for function _Tm_Baje_periodico
  2516  0F07                     _Tm_Baje_periodico:
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _Tm_Baje_periodico: [wreg+fsr1l+fsr1h+status,2+status,0]
  2520                           ;Tm_Baje_periodico@ctp stored from wreg
  2521  0F07  00F1               	movwf	Tm_Baje_periodico@ctp
  2522  0F08                     l2402:
  2523                           
  2524                           ;nuestrostimers.c: 43: void Tm_Baje_periodico (Tm_Periodico *ctp);nuestrostimers.c: 44: 
      +                          {;nuestrostimers.c: 45:  ctp->banderas &= ~0x02U;
  2525  0F08  30FD               	movlw	253
  2526  0F09  00F0               	movwf	??_Tm_Baje_periodico
  2527  0F0A  0871               	movf	Tm_Baje_periodico@ctp,w
  2528  0F0B  3E08               	addlw	8
  2529  0F0C  0086               	movwf	6
  2530  0F0D  0187               	clrf	7
  2531  0F0E  0870               	movf	??_Tm_Baje_periodico,w
  2532  0F0F  0581               	andwf	1,f
  2533  0F10                     l528:
  2534  0F10  0008               	return
  2535  0F11                     __end_of_Tm_Baje_periodico:
  2536                           
  2537                           	psect	text5
  2538  0EC2                     __ptext5:	
  2539 ;; *************** function _TMR6_StartTimer *****************
  2540 ;; Defined at:
  2541 ;;		line 79 in file "mcc_generated_files/tmr6.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		None
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2555 ;;      Params:         0       0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0
  2558 ;;      Totals:         0       0       0       0       0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function _TMR6_StartTimer
  2570  0EC2                     _TMR6_StartTimer:
  2571  0EC2                     l2252:	
  2572                           ;incstack = 0
  2573                           ; Regs used in _TMR6_StartTimer: []
  2574                           
  2575                           
  2576                           ;mcc_generated_files/tmr6.c: 82:     T6CONbits.TMR6ON = 1;
  2577  0EC2  0028               	movlb	8	; select bank8
  2578  0EC3  151E               	bsf	30,2	;volatile
  2579  0EC4                     l16:
  2580  0EC4  0008               	return
  2581  0EC5                     __end_of_TMR6_StartTimer:
  2582                           
  2583                           	psect	text6
  2584  0F2A                     __ptext6:	
  2585 ;; *************** function _TMR6_HasOverflowOccured *****************
  2586 ;; Defined at:
  2587 ;;		line 111 in file "mcc_generated_files/tmr6.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  status          1    0[COMMON] _Bool 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      _Bool 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2601 ;;      Params:         0       0       0       0       0       0
  2602 ;;      Locals:         1       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0
  2604 ;;      Totals:         1       0       0       0       0       0
  2605 ;;Total ram usage:        1 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function _TMR6_HasOverflowOccured
  2616  0F2A                     _TMR6_HasOverflowOccured:
  2617  0F2A                     l2254:	
  2618                           ;incstack = 0
  2619                           ; Regs used in _TMR6_HasOverflowOccured: [wreg+status,2+status,0]
  2620                           
  2621                           
  2622                           ;mcc_generated_files/tmr6.c: 114:     _Bool status = PIR3bits.TMR6IF;
  2623  0F2A  3000               	movlw	0
  2624  0F2B  0020               	movlb	0	; select bank0
  2625  0F2C  1993               	btfsc	19,3	;volatile
  2626  0F2D  3001               	movlw	1
  2627  0F2E  00F0               	movwf	TMR6_HasOverflowOccured@status
  2628  0F2F                     l2256:
  2629                           
  2630                           ;mcc_generated_files/tmr6.c: 115:     if(status)
  2631  0F2F  0870               	movf	TMR6_HasOverflowOccured@status,w
  2632  0F30  1903               	btfsc	3,2
  2633  0F31  2F33               	goto	u1671
  2634  0F32  2F34               	goto	u1670
  2635  0F33                     u1671:
  2636  0F33  2F35               	goto	l2260
  2637  0F34                     u1670:
  2638  0F34                     l2258:
  2639                           
  2640                           ;mcc_generated_files/tmr6.c: 116:     {;mcc_generated_files/tmr6.c: 118:         PIR3bit
      +                          s.TMR6IF = 0;
  2641  0F34  1193               	bcf	19,3	;volatile
  2642  0F35                     l2260:
  2643                           
  2644                           ;mcc_generated_files/tmr6.c: 120:     return status;
  2645  0F35  0870               	movf	TMR6_HasOverflowOccured@status,w
  2646  0F36                     l32:
  2647  0F36  0008               	return
  2648  0F37                     __end_of_TMR6_HasOverflowOccured:
  2649                           
  2650                           	psect	text7
  2651  0F46                     __ptext7:	
  2652 ;; *************** function _SYSTEM_Initialize *****************
  2653 ;; Defined at:
  2654 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, pclath, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2668 ;;      Params:         0       0       0       0       0       0
  2669 ;;      Locals:         0       0       0       0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0
  2671 ;;      Totals:         0       0       0       0       0       0
  2672 ;;Total ram usage:        0 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 2
  2675 ;; This function calls:
  2676 ;;		_ADC_Initialize
  2677 ;;		_EUSART_Initialize
  2678 ;;		_OSCILLATOR_Initialize
  2679 ;;		_PIN_MANAGER_Initialize
  2680 ;;		_TMR6_Initialize
  2681 ;;		_WDT_Initialize
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           
  2688                           ;psect for function _SYSTEM_Initialize
  2689  0F46                     _SYSTEM_Initialize:
  2690  0F46                     l2294:	
  2691                           ;incstack = 0
  2692                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2693                           
  2694                           
  2695                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2696  0F46  318F  2759  318F   	fcall	_PIN_MANAGER_Initialize
  2697                           
  2698                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2699  0F49  318F  2711  318F   	fcall	_OSCILLATOR_Initialize
  2700  0F4C                     l2296:
  2701                           
  2702                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2703  0F4C  318E  26BF  318F   	fcall	_WDT_Initialize
  2704  0F4F                     l2298:
  2705                           
  2706                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
  2707  0F4F  318E  26FD  318F   	fcall	_TMR6_Initialize
  2708  0F52                     l2300:
  2709                           
  2710                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2711  0F52  318E  26E3  318F   	fcall	_ADC_Initialize
  2712  0F55                     l2302:
  2713                           
  2714                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2715  0F55  318F  27B0  318F   	fcall	_EUSART_Initialize
  2716  0F58                     l211:
  2717  0F58  0008               	return
  2718  0F59                     __end_of_SYSTEM_Initialize:
  2719                           
  2720                           	psect	text8
  2721  0EBF                     __ptext8:	
  2722 ;; *************** function _WDT_Initialize *****************
  2723 ;; Defined at:
  2724 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		status,2
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2738 ;;      Params:         0       0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_SYSTEM_Initialize
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _WDT_Initialize
  2753  0EBF                     _WDT_Initialize:
  2754  0EBF                     l1928:	
  2755                           ;incstack = 0
  2756                           ; Regs used in _WDT_Initialize: [status,2]
  2757                           
  2758                           
  2759                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x00;
  2760  0EBF  0021               	movlb	1	; select bank1
  2761  0EC0  0197               	clrf	23	;volatile
  2762  0EC1                     l220:
  2763  0EC1  0008               	return
  2764  0EC2                     __end_of_WDT_Initialize:
  2765                           
  2766                           	psect	text9
  2767  0EFD                     __ptext9:	
  2768 ;; *************** function _TMR6_Initialize *****************
  2769 ;; Defined at:
  2770 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2784 ;;      Params:         0       0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_SYSTEM_Initialize
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           
  2798                           ;psect for function _TMR6_Initialize
  2799  0EFD                     _TMR6_Initialize:
  2800  0EFD                     l1886:	
  2801                           ;incstack = 0
  2802                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  2803                           
  2804                           
  2805                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0xF9;
  2806  0EFD  30F9               	movlw	249
  2807  0EFE  0028               	movlb	8	; select bank8
  2808  0EFF  009D               	movwf	29	;volatile
  2809  0F00                     l1888:
  2810                           
  2811                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
  2812  0F00  019C               	clrf	28	;volatile
  2813  0F01                     l1890:
  2814                           
  2815                           ;mcc_generated_files/tmr6.c: 73:     PIR3bits.TMR6IF = 0;
  2816  0F01  0020               	movlb	0	; select bank0
  2817  0F02  1193               	bcf	19,3	;volatile
  2818  0F03                     l1892:
  2819                           
  2820                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x3D;
  2821  0F03  303D               	movlw	61
  2822  0F04  0028               	movlb	8	; select bank8
  2823  0F05  009E               	movwf	30	;volatile
  2824  0F06                     l13:
  2825  0F06  0008               	return
  2826  0F07                     __end_of_TMR6_Initialize:
  2827                           
  2828                           	psect	text10
  2829  0F59                     __ptext10:	
  2830 ;; *************** function _PIN_MANAGER_Initialize *****************
  2831 ;; Defined at:
  2832 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2846 ;;      Params:         0       0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_SYSTEM_Initialize
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function _PIN_MANAGER_Initialize
  2861  0F59                     _PIN_MANAGER_Initialize:
  2862  0F59                     l1894:	
  2863                           ;incstack = 0
  2864                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2865                           
  2866                           
  2867                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2868  0F59  0022               	movlb	2	; select bank2
  2869  0F5A  018C               	clrf	12	;volatile
  2870                           
  2871                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2872  0F5B  018D               	clrf	13	;volatile
  2873  0F5C                     l1896:
  2874                           
  2875                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x20;
  2876  0F5C  3020               	movlw	32
  2877  0F5D  0021               	movlb	1	; select bank1
  2878  0F5E  008C               	movwf	12	;volatile
  2879  0F5F                     l1898:
  2880                           
  2881                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xE6;
  2882  0F5F  30E6               	movlw	230
  2883  0F60  008D               	movwf	13	;volatile
  2884  0F61                     l1900:
  2885                           
  2886                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0x38;
  2887  0F61  3038               	movlw	56
  2888  0F62  0023               	movlb	3	; select bank3
  2889  0F63  008D               	movwf	13	;volatile
  2890  0F64                     l1902:
  2891                           
  2892                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2893  0F64  301F               	movlw	31
  2894  0F65  008C               	movwf	12	;volatile
  2895                           
  2896                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2897  0F66  0024               	movlb	4	; select bank4
  2898  0F67  018D               	clrf	13	;volatile
  2899                           
  2900                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2901  0F68  018C               	clrf	12	;volatile
  2902  0F69                     l1904:
  2903                           
  2904                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2905  0F69  0021               	movlb	1	; select bank1
  2906  0F6A  1795               	bsf	21,7	;volatile
  2907                           
  2908                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2909  0F6B  0022               	movlb	2	; select bank2
  2910  0F6C  019D               	clrf	29	;volatile
  2911                           
  2912                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2913  0F6D  019E               	clrf	30	;volatile
  2914  0F6E                     l57:
  2915  0F6E  0008               	return
  2916  0F6F                     __end_of_PIN_MANAGER_Initialize:
  2917                           
  2918                           	psect	text11
  2919  0F11                     __ptext11:	
  2920 ;; *************** function _OSCILLATOR_Initialize *****************
  2921 ;; Defined at:
  2922 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2936 ;;      Params:         0       0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_SYSTEM_Initialize
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _OSCILLATOR_Initialize
  2951  0F11                     _OSCILLATOR_Initialize:
  2952  0F11                     l1922:	
  2953                           ;incstack = 0
  2954                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2955                           
  2956                           
  2957                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2958  0F11  3070               	movlw	112
  2959  0F12  0021               	movlb	1	; select bank1
  2960  0F13  0099               	movwf	25	;volatile
  2961  0F14                     l1924:
  2962                           
  2963                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2964  0F14  0198               	clrf	24	;volatile
  2965  0F15                     l1926:
  2966                           
  2967                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2968  0F15  0022               	movlb	2	; select bank2
  2969  0F16  0196               	clrf	22	;volatile
  2970  0F17                     l214:	
  2971                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  2972                           
  2973                           
  2974                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  2975  0F17  0021               	movlb	1	; select bank1
  2976  0F18  1F1A               	btfss	26,6	;volatile
  2977  0F19  2F1B               	goto	u971
  2978  0F1A  2F1C               	goto	u970
  2979  0F1B                     u971:
  2980  0F1B  2F17               	goto	l214
  2981  0F1C                     u970:
  2982  0F1C                     l217:
  2983  0F1C  0008               	return
  2984  0F1D                     __end_of_OSCILLATOR_Initialize:
  2985                           
  2986                           	psect	text12
  2987  0FB0                     __ptext12:	
  2988 ;; *************** function _EUSART_Initialize *****************
  2989 ;; Defined at:
  2990 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3004 ;;      Params:         0       0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0
  3007 ;;      Totals:         0       0       0       0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 1
  3011 ;; This function calls:
  3012 ;;		_EUSART_SetErrorHandler
  3013 ;;		_EUSART_SetFramingErrorHandler
  3014 ;;		_EUSART_SetOverrunErrorHandler
  3015 ;; This function is called by:
  3016 ;;		_SYSTEM_Initialize
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           
  3021                           ;psect for function _EUSART_Initialize
  3022  0FB0                     _EUSART_Initialize:
  3023  0FB0                     l1906:	
  3024                           ;incstack = 0
  3025                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3026                           
  3027                           
  3028                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  3029  0FB0  3008               	movlw	8
  3030  0FB1  0023               	movlb	3	; select bank3
  3031  0FB2  009F               	movwf	31	;volatile
  3032                           
  3033                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  3034  0FB3  3090               	movlw	144
  3035  0FB4  009D               	movwf	29	;volatile
  3036                           
  3037                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  3038  0FB5  3024               	movlw	36
  3039  0FB6  009E               	movwf	30	;volatile
  3040                           
  3041                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x40;
  3042  0FB7  3040               	movlw	64
  3043  0FB8  009B               	movwf	27	;volatile
  3044                           
  3045                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x03;
  3046  0FB9  3003               	movlw	3
  3047  0FBA  009C               	movwf	28	;volatile
  3048  0FBB                     l1908:
  3049                           
  3050                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3051  0FBB  3000               	movlw	0
  3052  0FBC  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3053  0FBD  3000               	movlw	0
  3054  0FBE  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3055  0FBF  318E  26D1  318F   	fcall	_EUSART_SetFramingErrorHandler
  3056  0FC2                     l1910:
  3057                           
  3058                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3059  0FC2  3000               	movlw	0
  3060  0FC3  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3061  0FC4  3000               	movlw	0
  3062  0FC5  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3063  0FC6  318E  26D7  318F   	fcall	_EUSART_SetOverrunErrorHandler
  3064  0FC9                     l1912:
  3065                           
  3066                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3067  0FC9  3000               	movlw	0
  3068  0FCA  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  3069  0FCB  3000               	movlw	0
  3070  0FCC  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3071  0FCD  318E  26CB  318F   	fcall	_EUSART_SetErrorHandler
  3072  0FD0                     l1914:
  3073                           
  3074                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  3075  0FD0  0020               	movlb	0	; select bank0
  3076  0FD1  01EE               	clrf	_eusartRxLastError	;volatile
  3077  0FD2                     l103:
  3078  0FD2  0008               	return
  3079  0FD3                     __end_of_EUSART_Initialize:
  3080                           
  3081                           	psect	text13
  3082  0ED7                     __ptext13:	
  3083 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3084 ;; Defined at:
  3085 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3088 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3100 ;;      Params:         2       0       0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0
  3103 ;;      Totals:         2       0       0       0       0       0
  3104 ;;Total ram usage:        2 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_EUSART_Initialize
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           
  3114                           ;psect for function _EUSART_SetOverrunErrorHandler
  3115  0ED7                     _EUSART_SetOverrunErrorHandler:
  3116  0ED7                     l1868:	
  3117                           ;incstack = 0
  3118                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3119                           
  3120                           
  3121                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  3122  0ED7  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3123  0ED8  0021               	movlb	1	; select bank1
  3124  0ED9  00B3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  3125  0EDA  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3126  0EDB  00B2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  3127  0EDC                     l145:
  3128  0EDC  0008               	return
  3129  0EDD                     __end_of_EUSART_SetOverrunErrorHandler:
  3130                           
  3131                           	psect	text14
  3132  0ED1                     __ptext14:	
  3133 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3134 ;; Defined at:
  3135 ;;		line 157 in file "mcc_generated_files/eusart.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3138 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3150 ;;      Params:         2       0       0       0       0       0
  3151 ;;      Locals:         0       0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0
  3153 ;;      Totals:         2       0       0       0       0       0
  3154 ;;Total ram usage:        2 bytes
  3155 ;; Hardware stack levels used: 1
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_EUSART_Initialize
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function _EUSART_SetFramingErrorHandler
  3165  0ED1                     _EUSART_SetFramingErrorHandler:
  3166  0ED1                     l1866:	
  3167                           ;incstack = 0
  3168                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3169                           
  3170                           
  3171                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  3172  0ED1  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3173  0ED2  0021               	movlb	1	; select bank1
  3174  0ED3  00B5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  3175  0ED4  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3176  0ED5  00B4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  3177  0ED6                     l142:
  3178  0ED6  0008               	return
  3179  0ED7                     __end_of_EUSART_SetFramingErrorHandler:
  3180                           
  3181                           	psect	text15
  3182  0ECB                     __ptext15:	
  3183 ;; *************** function _EUSART_SetErrorHandler *****************
  3184 ;; Defined at:
  3185 ;;		line 165 in file "mcc_generated_files/eusart.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3188 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3200 ;;      Params:         2       0       0       0       0       0
  3201 ;;      Locals:         0       0       0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0       0
  3203 ;;      Totals:         2       0       0       0       0       0
  3204 ;;Total ram usage:        2 bytes
  3205 ;; Hardware stack levels used: 1
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_EUSART_Initialize
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _EUSART_SetErrorHandler
  3215  0ECB                     _EUSART_SetErrorHandler:
  3216  0ECB                     l1870:	
  3217                           ;incstack = 0
  3218                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3219                           
  3220                           
  3221                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  3222  0ECB  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3223  0ECC  0021               	movlb	1	; select bank1
  3224  0ECD  00B1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  3225  0ECE  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3226  0ECF  00B0               	movwf	_EUSART_ErrorHandler^(0+128)
  3227  0ED0                     l148:
  3228  0ED0  0008               	return
  3229  0ED1                     __end_of_EUSART_SetErrorHandler:
  3230                           
  3231                           	psect	text16
  3232  0EE3                     __ptext16:	
  3233 ;; *************** function _ADC_Initialize *****************
  3234 ;; Defined at:
  3235 ;;		line 67 in file "mcc_generated_files/adc.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3249 ;;      Params:         0       0       0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0
  3252 ;;      Totals:         0       0       0       0       0       0
  3253 ;;Total ram usage:        0 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_SYSTEM_Initialize
  3259 ;;		_main
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           
  3264                           ;psect for function _ADC_Initialize
  3265  0EE3                     _ADC_Initialize:
  3266  0EE3                     l1916:	
  3267                           ;incstack = 0
  3268                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3269                           
  3270                           
  3271                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x60;
  3272  0EE3  3060               	movlw	96
  3273  0EE4  0021               	movlb	1	; select bank1
  3274  0EE5  009E               	movwf	30	;volatile
  3275  0EE6                     l1918:
  3276                           
  3277                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3278  0EE6  019B               	clrf	27	;volatile
  3279  0EE7                     l1920:
  3280                           
  3281                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3282  0EE7  019C               	clrf	28	;volatile
  3283                           
  3284                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  3285  0EE8  3001               	movlw	1
  3286  0EE9  009D               	movwf	29	;volatile
  3287  0EEA                     l165:
  3288  0EEA  0008               	return
  3289  0EEB                     __end_of_ADC_Initialize:
  3290                           
  3291                           	psect	text17
  3292  0F37                     __ptext17:	
  3293 ;; *************** function _EUSART_is_tx_ready *****************
  3294 ;; Defined at:
  3295 ;;		line 94 in file "mcc_generated_files/eusart.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      _Bool 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3309 ;;      Params:         0       0       0       0       0       0
  3310 ;;      Locals:         1       0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0
  3312 ;;      Totals:         1       0       0       0       0       0
  3313 ;;Total ram usage:        1 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_main
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function _EUSART_is_tx_ready
  3324  0F37                     _EUSART_is_tx_ready:
  3325  0F37                     l2264:	
  3326                           ;incstack = 0
  3327                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  3328                           
  3329                           
  3330                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  3331  0F37  01F0               	clrf	_EUSART_is_tx_ready$291
  3332  0F38                     l2266:
  3333  0F38  0020               	movlb	0	; select bank0
  3334  0F39  1E11               	btfss	17,4	;volatile
  3335  0F3A  2F3C               	goto	u1681
  3336  0F3B  2F3D               	goto	u1680
  3337  0F3C                     u1681:
  3338  0F3C  2F44               	goto	l2272
  3339  0F3D                     u1680:
  3340  0F3D                     l2268:
  3341  0F3D  0023               	movlb	3	; select bank3
  3342  0F3E  1E9E               	btfss	30,5	;volatile
  3343  0F3F  2F41               	goto	u1691
  3344  0F40  2F42               	goto	u1690
  3345  0F41                     u1691:
  3346  0F41  2F44               	goto	l2272
  3347  0F42                     u1690:
  3348  0F42                     l2270:
  3349  0F42  01F0               	clrf	_EUSART_is_tx_ready$291
  3350  0F43  0AF0               	incf	_EUSART_is_tx_ready$291,f
  3351  0F44                     l2272:
  3352  0F44  0870               	movf	_EUSART_is_tx_ready$291,w
  3353  0F45                     l108:
  3354  0F45  0008               	return
  3355  0F46                     __end_of_EUSART_is_tx_ready:
  3356                           
  3357                           	psect	text18
  3358  0EF3                     __ptext18:	
  3359 ;; *************** function _EUSART_Write *****************
  3360 ;; Defined at:
  3361 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  txData          1    wreg     unsigned char 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  txData          1    0[COMMON] unsigned char 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3375 ;;      Params:         0       0       0       0       0       0
  3376 ;;      Locals:         1       0       0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0
  3378 ;;      Totals:         1       0       0       0       0       0
  3379 ;;Total ram usage:        1 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           
  3389                           ;psect for function _EUSART_Write
  3390  0EF3                     _EUSART_Write:
  3391                           
  3392                           ;incstack = 0
  3393                           ; Regs used in _EUSART_Write: [wreg]
  3394                           ;EUSART_Write@txData stored from wreg
  3395  0EF3  00F0               	movwf	EUSART_Write@txData
  3396  0EF4                     l2276:
  3397  0EF4                     l127:	
  3398                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3399                           
  3400                           
  3401                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3402  0EF4  0020               	movlb	0	; select bank0
  3403  0EF5  1E11               	btfss	17,4	;volatile
  3404  0EF6  2EF8               	goto	u1701
  3405  0EF7  2EF9               	goto	u1700
  3406  0EF8                     u1701:
  3407  0EF8  2EF4               	goto	l127
  3408  0EF9                     u1700:
  3409  0EF9                     l2278:
  3410                           
  3411                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3412  0EF9  0870               	movf	EUSART_Write@txData,w
  3413  0EFA  0023               	movlb	3	; select bank3
  3414  0EFB  009A               	movwf	26	;volatile
  3415  0EFC                     l130:
  3416  0EFC  0008               	return
  3417  0EFD                     __end_of_EUSART_Write:
  3418                           
  3419                           	psect	text19
  3420  046F                     __ptext19:	
  3421 ;; *************** function _Ds_Procese_displays *****************
  3422 ;; Defined at:
  3423 ;;		line 230 in file "displays.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  dsp             1    wreg     PTR struct Ds_Display
  3426 ;;		 -> main@seven_seg(8), 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  dsp             1    5[COMMON] PTR struct Ds_Display
  3429 ;;		 -> main@seven_seg(8), 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3439 ;;      Params:         0       0       0       0       0       0
  3440 ;;      Locals:         1       0       0       0       0       0
  3441 ;;      Temps:          2       0       0       0       0       0
  3442 ;;      Totals:         3       0       0       0       0       0
  3443 ;;Total ram usage:        3 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; Hardware stack levels required when called: 1
  3446 ;; This function calls:
  3447 ;;		_Ds_BCD
  3448 ;;		_Ds_Encienda_Disp
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _Ds_Procese_displays
  3456  046F                     _Ds_Procese_displays:
  3457                           
  3458                           ;incstack = 0
  3459                           ; Regs used in _Ds_Procese_displays: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3460                           ;Ds_Procese_displays@dsp stored from wreg
  3461  046F  00F5               	movwf	Ds_Procese_displays@dsp
  3462  0470                     l2334:
  3463                           
  3464                           ;displays.c: 232:     switch ( dsp->estados ){
  3465  0470  2D79               	goto	l2392
  3466  0471                     l2336:
  3467                           
  3468                           ;displays.c: 235:             --(dsp->tempE);
  3469  0471  0875               	movf	Ds_Procese_displays@dsp,w
  3470  0472  3E06               	addlw	6
  3471  0473  0086               	movwf	6
  3472  0474  0187               	clrf	7
  3473  0475  3001               	movlw	1
  3474  0476  0281               	subwf	1,f
  3475                           
  3476                           ;displays.c: 236:             if(!(dsp->tempE)){
  3477  0477  0875               	movf	Ds_Procese_displays@dsp,w
  3478  0478  3E06               	addlw	6
  3479  0479  0086               	movwf	6
  3480  047A  0187               	clrf	7
  3481  047B  0801               	movf	1,w
  3482  047C  1D03               	btfss	3,2
  3483  047D  2C7F               	goto	u1741
  3484  047E  2C80               	goto	u1740
  3485  047F                     u1741:
  3486  047F  2C93               	goto	l2342
  3487  0480                     u1740:
  3488  0480                     l2338:
  3489                           
  3490                           ;displays.c: 237:                 dsp->estados =2;
  3491  0480  3002               	movlw	2
  3492  0481  00F3               	movwf	??_Ds_Procese_displays
  3493  0482  0875               	movf	Ds_Procese_displays@dsp,w
  3494  0483  0086               	movwf	6
  3495  0484  0187               	clrf	7
  3496  0485  0873               	movf	??_Ds_Procese_displays,w
  3497  0486  0081               	movwf	1
  3498  0487                     l2340:
  3499                           
  3500                           ;displays.c: 238:                 dsp->tempA=dsp->tiempoApagado;
  3501  0487  0875               	movf	Ds_Procese_displays@dsp,w
  3502  0488  3E05               	addlw	5
  3503  0489  0086               	movwf	6
  3504  048A  0187               	clrf	7
  3505  048B  0801               	movf	1,w
  3506  048C  00F3               	movwf	??_Ds_Procese_displays
  3507  048D  0875               	movf	Ds_Procese_displays@dsp,w
  3508  048E  3E07               	addlw	7
  3509  048F  0086               	movwf	6
  3510  0490  0187               	clrf	7
  3511  0491  0873               	movf	??_Ds_Procese_displays,w
  3512  0492  0081               	movwf	1
  3513  0493                     l2342:
  3514                           
  3515                           ;displays.c: 242:             Ds_Encienda_Disp(1);
  3516  0493  3001               	movlw	1
  3517  0494  318F  27D3  3184   	fcall	_Ds_Encienda_Disp
  3518  0497                     l2344:
  3519                           
  3520                           ;displays.c: 243:             Ds_BCD(dsp->D1);
  3521  0497  0A75               	incf	Ds_Procese_displays@dsp,w
  3522  0498  0086               	movwf	6
  3523  0499  0187               	clrf	7
  3524  049A  0801               	movf	1,w
  3525  049B  3182  2268  3184   	fcall	_Ds_BCD
  3526                           
  3527                           ;displays.c: 245:         break;
  3528  049E  2D98               	goto	l513
  3529  049F                     l2346:
  3530                           
  3531                           ;displays.c: 248:             --(dsp->tempA);
  3532  049F  0875               	movf	Ds_Procese_displays@dsp,w
  3533  04A0  3E07               	addlw	7
  3534  04A1  0086               	movwf	6
  3535  04A2  0187               	clrf	7
  3536  04A3  3001               	movlw	1
  3537  04A4  0281               	subwf	1,f
  3538                           
  3539                           ;displays.c: 249:             if(!(dsp->tempA)){
  3540  04A5  0875               	movf	Ds_Procese_displays@dsp,w
  3541  04A6  3E07               	addlw	7
  3542  04A7  0086               	movwf	6
  3543  04A8  0187               	clrf	7
  3544  04A9  0801               	movf	1,w
  3545  04AA  1D03               	btfss	3,2
  3546  04AB  2CAD               	goto	u1751
  3547  04AC  2CAE               	goto	u1750
  3548  04AD                     u1751:
  3549  04AD  2CC1               	goto	l2352
  3550  04AE                     u1750:
  3551  04AE                     l2348:
  3552                           
  3553                           ;displays.c: 250:                 dsp->estados =3;
  3554  04AE  3003               	movlw	3
  3555  04AF  00F3               	movwf	??_Ds_Procese_displays
  3556  04B0  0875               	movf	Ds_Procese_displays@dsp,w
  3557  04B1  0086               	movwf	6
  3558  04B2  0187               	clrf	7
  3559  04B3  0873               	movf	??_Ds_Procese_displays,w
  3560  04B4  0081               	movwf	1
  3561  04B5                     l2350:
  3562                           
  3563                           ;displays.c: 251:                 dsp->tempE=dsp->tiempoEncendido;
  3564  04B5  0875               	movf	Ds_Procese_displays@dsp,w
  3565  04B6  3E04               	addlw	4
  3566  04B7  0086               	movwf	6
  3567  04B8  0187               	clrf	7
  3568  04B9  0801               	movf	1,w
  3569  04BA  00F3               	movwf	??_Ds_Procese_displays
  3570  04BB  0875               	movf	Ds_Procese_displays@dsp,w
  3571  04BC  3E06               	addlw	6
  3572  04BD  0086               	movwf	6
  3573  04BE  0187               	clrf	7
  3574  04BF  0873               	movf	??_Ds_Procese_displays,w
  3575  04C0  0081               	movwf	1
  3576  04C1                     l2352:
  3577                           
  3578                           ;displays.c: 254:             Ds_Encienda_Disp(0);
  3579  04C1  3000               	movlw	0
  3580  04C2  318F  27D3  3184   	fcall	_Ds_Encienda_Disp
  3581                           
  3582                           ;displays.c: 255:         break;
  3583  04C5  2D98               	goto	l513
  3584  04C6                     l2354:
  3585                           
  3586                           ;displays.c: 258:             --(dsp->tempE);
  3587  04C6  0875               	movf	Ds_Procese_displays@dsp,w
  3588  04C7  3E06               	addlw	6
  3589  04C8  0086               	movwf	6
  3590  04C9  0187               	clrf	7
  3591  04CA  3001               	movlw	1
  3592  04CB  0281               	subwf	1,f
  3593                           
  3594                           ;displays.c: 259:             if(!(dsp->tempE)){
  3595  04CC  0875               	movf	Ds_Procese_displays@dsp,w
  3596  04CD  3E06               	addlw	6
  3597  04CE  0086               	movwf	6
  3598  04CF  0187               	clrf	7
  3599  04D0  0801               	movf	1,w
  3600  04D1  1D03               	btfss	3,2
  3601  04D2  2CD4               	goto	u1761
  3602  04D3  2CD5               	goto	u1760
  3603  04D4                     u1761:
  3604  04D4  2CE8               	goto	l2360
  3605  04D5                     u1760:
  3606  04D5                     l2356:
  3607                           
  3608                           ;displays.c: 260:                 dsp->estados =4;
  3609  04D5  3004               	movlw	4
  3610  04D6  00F3               	movwf	??_Ds_Procese_displays
  3611  04D7  0875               	movf	Ds_Procese_displays@dsp,w
  3612  04D8  0086               	movwf	6
  3613  04D9  0187               	clrf	7
  3614  04DA  0873               	movf	??_Ds_Procese_displays,w
  3615  04DB  0081               	movwf	1
  3616  04DC                     l2358:
  3617                           
  3618                           ;displays.c: 261:                 dsp->tempA=dsp->tiempoApagado;
  3619  04DC  0875               	movf	Ds_Procese_displays@dsp,w
  3620  04DD  3E05               	addlw	5
  3621  04DE  0086               	movwf	6
  3622  04DF  0187               	clrf	7
  3623  04E0  0801               	movf	1,w
  3624  04E1  00F3               	movwf	??_Ds_Procese_displays
  3625  04E2  0875               	movf	Ds_Procese_displays@dsp,w
  3626  04E3  3E07               	addlw	7
  3627  04E4  0086               	movwf	6
  3628  04E5  0187               	clrf	7
  3629  04E6  0873               	movf	??_Ds_Procese_displays,w
  3630  04E7  0081               	movwf	1
  3631  04E8                     l2360:
  3632                           
  3633                           ;displays.c: 264:             Ds_Encienda_Disp(2);
  3634  04E8  3002               	movlw	2
  3635  04E9  318F  27D3  3184   	fcall	_Ds_Encienda_Disp
  3636  04EC                     l2362:
  3637                           
  3638                           ;displays.c: 265:             Ds_BCD(dsp->D2);
  3639  04EC  0875               	movf	Ds_Procese_displays@dsp,w
  3640  04ED  3E02               	addlw	2
  3641  04EE  0086               	movwf	6
  3642  04EF  0187               	clrf	7
  3643  04F0  0801               	movf	1,w
  3644  04F1  3182  2268  3184   	fcall	_Ds_BCD
  3645                           
  3646                           ;displays.c: 266:         break;
  3647  04F4  2D98               	goto	l513
  3648  04F5                     l2364:
  3649                           
  3650                           ;displays.c: 269:             --(dsp->tempA);
  3651  04F5  0875               	movf	Ds_Procese_displays@dsp,w
  3652  04F6  3E07               	addlw	7
  3653  04F7  0086               	movwf	6
  3654  04F8  0187               	clrf	7
  3655  04F9  3001               	movlw	1
  3656  04FA  0281               	subwf	1,f
  3657                           
  3658                           ;displays.c: 270:             if(!(dsp->tempA)){
  3659  04FB  0875               	movf	Ds_Procese_displays@dsp,w
  3660  04FC  3E07               	addlw	7
  3661  04FD  0086               	movwf	6
  3662  04FE  0187               	clrf	7
  3663  04FF  0801               	movf	1,w
  3664  0500  1D03               	btfss	3,2
  3665  0501  2D03               	goto	u1771
  3666  0502  2D04               	goto	u1770
  3667  0503                     u1771:
  3668  0503  2D17               	goto	l2370
  3669  0504                     u1770:
  3670  0504                     l2366:
  3671                           
  3672                           ;displays.c: 271:                 dsp->estados =5;
  3673  0504  3005               	movlw	5
  3674  0505  00F3               	movwf	??_Ds_Procese_displays
  3675  0506  0875               	movf	Ds_Procese_displays@dsp,w
  3676  0507  0086               	movwf	6
  3677  0508  0187               	clrf	7
  3678  0509  0873               	movf	??_Ds_Procese_displays,w
  3679  050A  0081               	movwf	1
  3680  050B                     l2368:
  3681                           
  3682                           ;displays.c: 272:                 dsp->tempE=dsp->tiempoEncendido;
  3683  050B  0875               	movf	Ds_Procese_displays@dsp,w
  3684  050C  3E04               	addlw	4
  3685  050D  0086               	movwf	6
  3686  050E  0187               	clrf	7
  3687  050F  0801               	movf	1,w
  3688  0510  00F3               	movwf	??_Ds_Procese_displays
  3689  0511  0875               	movf	Ds_Procese_displays@dsp,w
  3690  0512  3E06               	addlw	6
  3691  0513  0086               	movwf	6
  3692  0514  0187               	clrf	7
  3693  0515  0873               	movf	??_Ds_Procese_displays,w
  3694  0516  0081               	movwf	1
  3695  0517                     l2370:
  3696                           
  3697                           ;displays.c: 275:             Ds_Encienda_Disp(0);
  3698  0517  3000               	movlw	0
  3699  0518  318F  27D3  3184   	fcall	_Ds_Encienda_Disp
  3700                           
  3701                           ;displays.c: 276:         break;
  3702  051B  2D98               	goto	l513
  3703  051C                     l2372:
  3704                           
  3705                           ;displays.c: 279:             --(dsp->tempE);
  3706  051C  0875               	movf	Ds_Procese_displays@dsp,w
  3707  051D  3E06               	addlw	6
  3708  051E  0086               	movwf	6
  3709  051F  0187               	clrf	7
  3710  0520  3001               	movlw	1
  3711  0521  0281               	subwf	1,f
  3712                           
  3713                           ;displays.c: 280:             if(!(dsp->tempE)){
  3714  0522  0875               	movf	Ds_Procese_displays@dsp,w
  3715  0523  3E06               	addlw	6
  3716  0524  0086               	movwf	6
  3717  0525  0187               	clrf	7
  3718  0526  0801               	movf	1,w
  3719  0527  1D03               	btfss	3,2
  3720  0528  2D2A               	goto	u1781
  3721  0529  2D2B               	goto	u1780
  3722  052A                     u1781:
  3723  052A  2D3E               	goto	l2378
  3724  052B                     u1780:
  3725  052B                     l2374:
  3726                           
  3727                           ;displays.c: 281:                 dsp->estados =6;
  3728  052B  3006               	movlw	6
  3729  052C  00F3               	movwf	??_Ds_Procese_displays
  3730  052D  0875               	movf	Ds_Procese_displays@dsp,w
  3731  052E  0086               	movwf	6
  3732  052F  0187               	clrf	7
  3733  0530  0873               	movf	??_Ds_Procese_displays,w
  3734  0531  0081               	movwf	1
  3735  0532                     l2376:
  3736                           
  3737                           ;displays.c: 282:                 dsp->tempA=dsp->tiempoApagado;
  3738  0532  0875               	movf	Ds_Procese_displays@dsp,w
  3739  0533  3E05               	addlw	5
  3740  0534  0086               	movwf	6
  3741  0535  0187               	clrf	7
  3742  0536  0801               	movf	1,w
  3743  0537  00F3               	movwf	??_Ds_Procese_displays
  3744  0538  0875               	movf	Ds_Procese_displays@dsp,w
  3745  0539  3E07               	addlw	7
  3746  053A  0086               	movwf	6
  3747  053B  0187               	clrf	7
  3748  053C  0873               	movf	??_Ds_Procese_displays,w
  3749  053D  0081               	movwf	1
  3750  053E                     l2378:
  3751                           
  3752                           ;displays.c: 285:             Ds_Encienda_Disp(3);
  3753  053E  3003               	movlw	3
  3754  053F  318F  27D3  3184   	fcall	_Ds_Encienda_Disp
  3755  0542                     l2380:
  3756                           
  3757                           ;displays.c: 286:             Ds_BCD(dsp->D3);
  3758  0542  0875               	movf	Ds_Procese_displays@dsp,w
  3759  0543  3E03               	addlw	3
  3760  0544  0086               	movwf	6
  3761  0545  0187               	clrf	7
  3762  0546  0801               	movf	1,w
  3763  0547  3182  2268  3184   	fcall	_Ds_BCD
  3764                           
  3765                           ;displays.c: 287:         break;
  3766  054A  2D98               	goto	l513
  3767  054B                     l2382:
  3768                           
  3769                           ;displays.c: 290:             --(dsp->tempA);
  3770  054B  0875               	movf	Ds_Procese_displays@dsp,w
  3771  054C  3E07               	addlw	7
  3772  054D  0086               	movwf	6
  3773  054E  0187               	clrf	7
  3774  054F  3001               	movlw	1
  3775  0550  0281               	subwf	1,f
  3776                           
  3777                           ;displays.c: 291:             if(!(dsp->tempA)){
  3778  0551  0875               	movf	Ds_Procese_displays@dsp,w
  3779  0552  3E07               	addlw	7
  3780  0553  0086               	movwf	6
  3781  0554  0187               	clrf	7
  3782  0555  0801               	movf	1,w
  3783  0556  1D03               	btfss	3,2
  3784  0557  2D59               	goto	u1791
  3785  0558  2D5A               	goto	u1790
  3786  0559                     u1791:
  3787  0559  2D6B               	goto	l2388
  3788  055A                     u1790:
  3789  055A                     l2384:
  3790                           
  3791                           ;displays.c: 292:                 dsp->estados = 1;
  3792  055A  0875               	movf	Ds_Procese_displays@dsp,w
  3793  055B  0086               	movwf	6
  3794  055C  0187               	clrf	7
  3795  055D  0181               	clrf	1
  3796  055E  0A81               	incf	1,f
  3797  055F                     l2386:
  3798                           
  3799                           ;displays.c: 293:                 dsp->tempE=dsp->tiempoEncendido;
  3800  055F  0875               	movf	Ds_Procese_displays@dsp,w
  3801  0560  3E04               	addlw	4
  3802  0561  0086               	movwf	6
  3803  0562  0187               	clrf	7
  3804  0563  0801               	movf	1,w
  3805  0564  00F3               	movwf	??_Ds_Procese_displays
  3806  0565  0875               	movf	Ds_Procese_displays@dsp,w
  3807  0566  3E06               	addlw	6
  3808  0567  0086               	movwf	6
  3809  0568  0187               	clrf	7
  3810  0569  0873               	movf	??_Ds_Procese_displays,w
  3811  056A  0081               	movwf	1
  3812  056B                     l2388:
  3813                           
  3814                           ;displays.c: 296:             Ds_Encienda_Disp(0);
  3815  056B  3000               	movlw	0
  3816  056C  318F  27D3  3184   	fcall	_Ds_Encienda_Disp
  3817                           
  3818                           ;displays.c: 297:         break;
  3819  056F  2D98               	goto	l513
  3820  0570                     l2390:
  3821                           
  3822                           ;displays.c: 302:             Ds_BCD(10);
  3823  0570  300A               	movlw	10
  3824  0571  3182  2268  3184   	fcall	_Ds_BCD
  3825                           
  3826                           ;displays.c: 303:    Ds_Encienda_Disp(2);
  3827  0574  3002               	movlw	2
  3828  0575  318F  27D3  3184   	fcall	_Ds_Encienda_Disp
  3829  0578  2D70               	goto	l2390
  3830  0579                     l2392:
  3831  0579  0875               	movf	Ds_Procese_displays@dsp,w
  3832  057A  0086               	movwf	6
  3833  057B  0187               	clrf	7
  3834  057C  0801               	movf	1,w
  3835  057D  00F3               	movwf	??_Ds_Procese_displays
  3836  057E  01F4               	clrf	??_Ds_Procese_displays+1
  3837                           
  3838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3839                           ; Switch size 1, requested type "simple"
  3840                           ; Number of cases is 1, Range of values is 0 to 0
  3841                           ; switch strategies available:
  3842                           ; Name         Instructions Cycles
  3843                           ; simple_byte            4     3 (average)
  3844                           ; direct_byte            8     6 (fixed)
  3845                           ; jumptable            260     6 (fixed)
  3846                           ;	Chosen strategy is simple_byte
  3847  057F  0874               	movf	??_Ds_Procese_displays+1,w
  3848  0580  3A00               	xorlw	0	; case 0
  3849  0581  1903               	skipnz
  3850  0582  2D84               	goto	l2538
  3851  0583  2D70               	goto	l2390
  3852  0584                     l2538:
  3853                           
  3854                           ; Switch size 1, requested type "simple"
  3855                           ; Number of cases is 6, Range of values is 1 to 6
  3856                           ; switch strategies available:
  3857                           ; Name         Instructions Cycles
  3858                           ; simple_byte           19    10 (average)
  3859                           ; direct_byte           21     9 (fixed)
  3860                           ; jumptable            263     9 (fixed)
  3861                           ;	Chosen strategy is simple_byte
  3862  0584  0873               	movf	??_Ds_Procese_displays,w
  3863  0585  3A01               	xorlw	1	; case 1
  3864  0586  1903               	skipnz
  3865  0587  2C71               	goto	l2336
  3866  0588  3A03               	xorlw	3	; case 2
  3867  0589  1903               	skipnz
  3868  058A  2C9F               	goto	l2346
  3869  058B  3A01               	xorlw	1	; case 3
  3870  058C  1903               	skipnz
  3871  058D  2CC6               	goto	l2354
  3872  058E  3A07               	xorlw	7	; case 4
  3873  058F  1903               	skipnz
  3874  0590  2CF5               	goto	l2364
  3875  0591  3A01               	xorlw	1	; case 5
  3876  0592  1903               	skipnz
  3877  0593  2D1C               	goto	l2372
  3878  0594  3A03               	xorlw	3	; case 6
  3879  0595  1903               	skipnz
  3880  0596  2D4B               	goto	l2382
  3881  0597  2D70               	goto	l2390
  3882  0598                     l513:
  3883  0598  0008               	return
  3884  0599                     __end_of_Ds_Procese_displays:
  3885                           
  3886                           	psect	text20
  3887  0FD3                     __ptext20:	
  3888 ;; *************** function _Ds_Encienda_Disp *****************
  3889 ;; Defined at:
  3890 ;;		line 19 in file "displays.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  dispNum         1    wreg     unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  dispNum         1    2[COMMON] unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3904 ;;      Params:         0       0       0       0       0       0
  3905 ;;      Locals:         1       0       0       0       0       0
  3906 ;;      Temps:          2       0       0       0       0       0
  3907 ;;      Totals:         3       0       0       0       0       0
  3908 ;;Total ram usage:        3 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_Ds_Procese_displays
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _Ds_Encienda_Disp
  3919  0FD3                     _Ds_Encienda_Disp:
  3920                           
  3921                           ;incstack = 0
  3922                           ; Regs used in _Ds_Encienda_Disp: [wreg-fsr0h+status,2+status,0]
  3923                           ;Ds_Encienda_Disp@dispNum stored from wreg
  3924  0FD3  00F2               	movwf	Ds_Encienda_Disp@dispNum
  3925  0FD4                     l1930:
  3926                           
  3927                           ;displays.c: 21:     switch (dispNum){
  3928  0FD4  2FE9               	goto	l1934
  3929  0FD5                     l288:	
  3930                           ;displays.c: 25:             do { LATBbits.LATB0 = 0; } while(0);
  3931                           
  3932  0FD5  0022               	movlb	2	; select bank2
  3933  0FD6  100D               	bcf	13,0	;volatile
  3934  0FD7                     l290:	
  3935                           ;displays.c: 26:             do { LATBbits.LATB3 = 0; } while(0);
  3936                           
  3937  0FD7  118D               	bcf	13,3	;volatile
  3938  0FD8                     l292:	
  3939                           ;displays.c: 27:             do { LATBbits.LATB4 = 0; } while(0);
  3940                           
  3941  0FD8  120D               	bcf	13,4	;volatile
  3942  0FD9  2FFF               	goto	l316
  3943  0FDA                     l296:	
  3944                           ;displays.c: 34:             do { LATBbits.LATB0 = 1; } while(0);
  3945                           
  3946  0FDA  0022               	movlb	2	; select bank2
  3947  0FDB  140D               	bsf	13,0	;volatile
  3948  0FDC                     l298:	
  3949                           ;displays.c: 35:             do { LATBbits.LATB3 = 0; } while(0);
  3950                           
  3951  0FDC  118D               	bcf	13,3	;volatile
  3952  0FDD                     l300:	
  3953                           ;displays.c: 36:             do { LATBbits.LATB4 = 0; } while(0);
  3954                           
  3955  0FDD  120D               	bcf	13,4	;volatile
  3956  0FDE  2FFF               	goto	l316
  3957  0FDF                     l303:	
  3958                           ;displays.c: 41:             do { LATBbits.LATB3 = 1; } while(0);
  3959                           
  3960  0FDF  0022               	movlb	2	; select bank2
  3961  0FE0  158D               	bsf	13,3	;volatile
  3962  0FE1                     l305:	
  3963                           ;displays.c: 42:             do { LATBbits.LATB0 = 0; } while(0);
  3964                           
  3965  0FE1  100D               	bcf	13,0	;volatile
  3966  0FE2                     l307:	
  3967                           ;displays.c: 43:             do { LATBbits.LATB4 = 0; } while(0);
  3968                           
  3969  0FE2  120D               	bcf	13,4	;volatile
  3970  0FE3  2FFF               	goto	l316
  3971  0FE4                     l310:	
  3972                           ;displays.c: 50:             do { LATBbits.LATB4 = 1; } while(0);
  3973                           
  3974  0FE4  0022               	movlb	2	; select bank2
  3975  0FE5  160D               	bsf	13,4	;volatile
  3976  0FE6                     l312:	
  3977                           ;displays.c: 51:             do { LATBbits.LATB0 = 0; } while(0);
  3978                           
  3979  0FE6  100D               	bcf	13,0	;volatile
  3980  0FE7                     l314:	
  3981                           ;displays.c: 52:             do { LATBbits.LATB3 = 0; } while(0);
  3982                           
  3983  0FE7  118D               	bcf	13,3	;volatile
  3984  0FE8  2FFF               	goto	l316
  3985  0FE9                     l1934:
  3986  0FE9  0872               	movf	Ds_Encienda_Disp@dispNum,w
  3987  0FEA  00F0               	movwf	??_Ds_Encienda_Disp
  3988  0FEB  01F1               	clrf	??_Ds_Encienda_Disp+1
  3989                           
  3990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3991                           ; Switch size 1, requested type "simple"
  3992                           ; Number of cases is 1, Range of values is 0 to 0
  3993                           ; switch strategies available:
  3994                           ; Name         Instructions Cycles
  3995                           ; simple_byte            4     3 (average)
  3996                           ; direct_byte            8     6 (fixed)
  3997                           ; jumptable            260     6 (fixed)
  3998                           ;	Chosen strategy is simple_byte
  3999  0FEC  0871               	movf	??_Ds_Encienda_Disp+1,w
  4000  0FED  3A00               	xorlw	0	; case 0
  4001  0FEE  1903               	skipnz
  4002  0FEF  2FF1               	goto	l2540
  4003  0FF0  2FFF               	goto	l316
  4004  0FF1                     l2540:
  4005                           
  4006                           ; Switch size 1, requested type "simple"
  4007                           ; Number of cases is 4, Range of values is 0 to 3
  4008                           ; switch strategies available:
  4009                           ; Name         Instructions Cycles
  4010                           ; simple_byte           13     7 (average)
  4011                           ; direct_byte           14     6 (fixed)
  4012                           ; jumptable            260     6 (fixed)
  4013                           ;	Chosen strategy is simple_byte
  4014  0FF1  0870               	movf	??_Ds_Encienda_Disp,w
  4015  0FF2  3A00               	xorlw	0	; case 0
  4016  0FF3  1903               	skipnz
  4017  0FF4  2FD5               	goto	l288
  4018  0FF5  3A01               	xorlw	1	; case 1
  4019  0FF6  1903               	skipnz
  4020  0FF7  2FDA               	goto	l296
  4021  0FF8  3A03               	xorlw	3	; case 2
  4022  0FF9  1903               	skipnz
  4023  0FFA  2FDF               	goto	l303
  4024  0FFB  3A01               	xorlw	1	; case 3
  4025  0FFC  1903               	skipnz
  4026  0FFD  2FE4               	goto	l310
  4027  0FFE  2FFF               	goto	l316
  4028  0FFF                     l316:
  4029  0FFF  0008               	return
  4030  1000                     __end_of_Ds_Encienda_Disp:
  4031                           
  4032                           	psect	text21
  4033  0268                     __ptext21:	
  4034 ;; *************** function _Ds_BCD *****************
  4035 ;; Defined at:
  4036 ;;		line 59 in file "displays.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  segmento        1    wreg     unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  segmento        1    2[COMMON] unsigned char 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  1    wreg      void 
  4043 ;; Registers used:
  4044 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4050 ;;      Params:         0       0       0       0       0       0
  4051 ;;      Locals:         1       0       0       0       0       0
  4052 ;;      Temps:          2       0       0       0       0       0
  4053 ;;      Totals:         3       0       0       0       0       0
  4054 ;;Total ram usage:        3 bytes
  4055 ;; Hardware stack levels used: 1
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_Ds_Procese_displays
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function _Ds_BCD
  4065  0268                     _Ds_BCD:
  4066                           
  4067                           ;incstack = 0
  4068                           ; Regs used in _Ds_BCD: [wreg-fsr0h+status,2+status,0]
  4069                           ;Ds_BCD@segmento stored from wreg
  4070  0268  00F2               	movwf	Ds_BCD@segmento
  4071  0269                     l1940:
  4072                           
  4073                           ;displays.c: 61:     switch (segmento){
  4074  0269  2ACD               	goto	l1944
  4075  026A                     l321:	
  4076                           ;displays.c: 65:             do { LATAbits.LATA0 = 1; } while(0);
  4077                           
  4078  026A  0022               	movlb	2	; select bank2
  4079  026B  140C               	bsf	12,0	;volatile
  4080  026C                     l323:	
  4081                           ;displays.c: 66:             do { LATAbits.LATA1 = 1; } while(0);
  4082                           
  4083  026C  148C               	bsf	12,1	;volatile
  4084  026D                     l325:	
  4085                           ;displays.c: 67:             do { LATAbits.LATA2 = 1; } while(0);
  4086                           
  4087  026D  150C               	bsf	12,2	;volatile
  4088  026E                     l327:	
  4089                           ;displays.c: 68:             do { LATAbits.LATA3 = 1; } while(0);
  4090                           
  4091  026E  158C               	bsf	12,3	;volatile
  4092  026F                     l329:	
  4093                           ;displays.c: 69:             do { LATAbits.LATA4 = 1; } while(0);
  4094                           
  4095  026F  160C               	bsf	12,4	;volatile
  4096  0270                     l331:	
  4097                           ;displays.c: 70:             do { LATAbits.LATA7 = 1; } while(0);
  4098                           
  4099  0270  178C               	bsf	12,7	;volatile
  4100  0271                     l333:	
  4101                           ;displays.c: 71:             do { LATAbits.LATA6 = 0; } while(0);
  4102                           
  4103  0271  130C               	bcf	12,6	;volatile
  4104  0272  2AF8               	goto	l486
  4105  0273                     l337:	
  4106                           ;displays.c: 78:             do { LATAbits.LATA0 = 0; } while(0);
  4107                           
  4108  0273  0022               	movlb	2	; select bank2
  4109  0274  100C               	bcf	12,0	;volatile
  4110  0275                     l339:	
  4111                           ;displays.c: 79:             do { LATAbits.LATA1 = 1; } while(0);
  4112                           
  4113  0275  148C               	bsf	12,1	;volatile
  4114  0276                     l341:	
  4115                           ;displays.c: 80:             do { LATAbits.LATA2 = 1; } while(0);
  4116                           
  4117  0276  150C               	bsf	12,2	;volatile
  4118  0277                     l343:	
  4119                           ;displays.c: 81:             do { LATAbits.LATA3 = 0; } while(0);
  4120                           
  4121  0277  118C               	bcf	12,3	;volatile
  4122  0278                     l345:	
  4123                           ;displays.c: 82:             do { LATAbits.LATA4 = 0; } while(0);
  4124                           
  4125  0278  120C               	bcf	12,4	;volatile
  4126  0279                     l347:	
  4127                           ;displays.c: 83:             do { LATAbits.LATA7 = 0; } while(0);
  4128                           
  4129  0279  138C               	bcf	12,7	;volatile
  4130  027A                     l349:	
  4131                           ;displays.c: 84:             do { LATAbits.LATA6 = 0; } while(0);
  4132                           
  4133  027A  130C               	bcf	12,6	;volatile
  4134  027B  2AF8               	goto	l486
  4135  027C                     l352:	
  4136                           ;displays.c: 92:             do { LATAbits.LATA0 = 1; } while(0);
  4137                           
  4138  027C  0022               	movlb	2	; select bank2
  4139  027D  140C               	bsf	12,0	;volatile
  4140  027E                     l354:	
  4141                           ;displays.c: 93:             do { LATAbits.LATA1 = 1; } while(0);
  4142                           
  4143  027E  148C               	bsf	12,1	;volatile
  4144  027F                     l356:	
  4145                           ;displays.c: 94:             do { LATAbits.LATA2 = 0; } while(0);
  4146                           
  4147  027F  110C               	bcf	12,2	;volatile
  4148  0280                     l358:	
  4149                           ;displays.c: 95:             do { LATAbits.LATA3 = 1; } while(0);
  4150                           
  4151  0280  158C               	bsf	12,3	;volatile
  4152  0281                     l360:	
  4153                           ;displays.c: 96:             do { LATAbits.LATA4 = 1; } while(0);
  4154                           
  4155  0281  160C               	bsf	12,4	;volatile
  4156  0282                     l362:	
  4157                           ;displays.c: 97:             do { LATAbits.LATA7 = 0; } while(0);
  4158                           
  4159  0282  138C               	bcf	12,7	;volatile
  4160  0283                     l364:	
  4161                           ;displays.c: 98:             do { LATAbits.LATA6 = 1; } while(0);
  4162                           
  4163  0283  170C               	bsf	12,6	;volatile
  4164  0284  2AF8               	goto	l486
  4165  0285                     l367:	
  4166                           ;displays.c: 106:             do { LATAbits.LATA0 = 1; } while(0);
  4167                           
  4168  0285  0022               	movlb	2	; select bank2
  4169  0286  140C               	bsf	12,0	;volatile
  4170  0287                     l369:	
  4171                           ;displays.c: 107:             do { LATAbits.LATA1 = 1; } while(0);
  4172                           
  4173  0287  148C               	bsf	12,1	;volatile
  4174  0288                     l371:	
  4175                           ;displays.c: 108:             do { LATAbits.LATA2 = 1; } while(0);
  4176                           
  4177  0288  150C               	bsf	12,2	;volatile
  4178  0289                     l373:	
  4179                           ;displays.c: 109:             do { LATAbits.LATA3 = 1; } while(0);
  4180                           
  4181  0289  158C               	bsf	12,3	;volatile
  4182  028A                     l375:	
  4183                           ;displays.c: 110:             do { LATAbits.LATA4 = 0; } while(0);
  4184                           
  4185  028A  120C               	bcf	12,4	;volatile
  4186  028B                     l377:	
  4187                           ;displays.c: 111:             do { LATAbits.LATA7 = 0; } while(0);
  4188                           
  4189  028B  138C               	bcf	12,7	;volatile
  4190  028C                     l379:	
  4191                           ;displays.c: 112:             do { LATAbits.LATA6 = 1; } while(0);
  4192                           
  4193  028C  170C               	bsf	12,6	;volatile
  4194  028D  2AF8               	goto	l486
  4195  028E                     l382:	
  4196                           ;displays.c: 121:             do { LATAbits.LATA0 = 0; } while(0);
  4197                           
  4198  028E  0022               	movlb	2	; select bank2
  4199  028F  100C               	bcf	12,0	;volatile
  4200  0290                     l384:	
  4201                           ;displays.c: 122:             do { LATAbits.LATA1 = 1; } while(0);
  4202                           
  4203  0290  148C               	bsf	12,1	;volatile
  4204  0291                     l386:	
  4205                           ;displays.c: 123:             do { LATAbits.LATA2 = 1; } while(0);
  4206                           
  4207  0291  150C               	bsf	12,2	;volatile
  4208  0292                     l388:	
  4209                           ;displays.c: 124:             do { LATAbits.LATA3 = 0; } while(0);
  4210                           
  4211  0292  118C               	bcf	12,3	;volatile
  4212  0293                     l390:	
  4213                           ;displays.c: 125:             do { LATAbits.LATA4 = 0; } while(0);
  4214                           
  4215  0293  120C               	bcf	12,4	;volatile
  4216  0294                     l392:	
  4217                           ;displays.c: 126:             do { LATAbits.LATA7 = 1; } while(0);
  4218                           
  4219  0294  178C               	bsf	12,7	;volatile
  4220  0295                     l394:	
  4221                           ;displays.c: 127:             do { LATAbits.LATA6 = 1; } while(0);
  4222                           
  4223  0295  170C               	bsf	12,6	;volatile
  4224  0296  2AF8               	goto	l486
  4225  0297                     l397:	
  4226                           ;displays.c: 134:             do { LATAbits.LATA0 = 1; } while(0);
  4227                           
  4228  0297  0022               	movlb	2	; select bank2
  4229  0298  140C               	bsf	12,0	;volatile
  4230  0299                     l399:	
  4231                           ;displays.c: 135:             do { LATAbits.LATA1 = 0; } while(0);
  4232                           
  4233  0299  108C               	bcf	12,1	;volatile
  4234  029A                     l401:	
  4235                           ;displays.c: 136:             do { LATAbits.LATA2 = 1; } while(0);
  4236                           
  4237  029A  150C               	bsf	12,2	;volatile
  4238  029B                     l403:	
  4239                           ;displays.c: 137:             do { LATAbits.LATA3 = 1; } while(0);
  4240                           
  4241  029B  158C               	bsf	12,3	;volatile
  4242  029C                     l405:	
  4243                           ;displays.c: 138:             do { LATAbits.LATA4 = 0; } while(0);
  4244                           
  4245  029C  120C               	bcf	12,4	;volatile
  4246  029D                     l407:	
  4247                           ;displays.c: 139:             do { LATAbits.LATA7 = 1; } while(0);
  4248                           
  4249  029D  178C               	bsf	12,7	;volatile
  4250  029E                     l409:	
  4251                           ;displays.c: 140:             do { LATAbits.LATA6 = 1; } while(0);
  4252                           
  4253  029E  170C               	bsf	12,6	;volatile
  4254  029F  2AF8               	goto	l486
  4255  02A0                     l412:	
  4256                           ;displays.c: 148:             do { LATAbits.LATA0 = 1; } while(0);
  4257                           
  4258  02A0  0022               	movlb	2	; select bank2
  4259  02A1  140C               	bsf	12,0	;volatile
  4260  02A2                     l414:	
  4261                           ;displays.c: 149:             do { LATAbits.LATA1 = 0; } while(0);
  4262                           
  4263  02A2  108C               	bcf	12,1	;volatile
  4264  02A3                     l416:	
  4265                           ;displays.c: 150:             do { LATAbits.LATA2 = 1; } while(0);
  4266                           
  4267  02A3  150C               	bsf	12,2	;volatile
  4268  02A4                     l418:	
  4269                           ;displays.c: 151:             do { LATAbits.LATA3 = 1; } while(0);
  4270                           
  4271  02A4  158C               	bsf	12,3	;volatile
  4272  02A5                     l420:	
  4273                           ;displays.c: 152:             do { LATAbits.LATA4 = 1; } while(0);
  4274                           
  4275  02A5  160C               	bsf	12,4	;volatile
  4276  02A6                     l422:	
  4277                           ;displays.c: 153:             do { LATAbits.LATA7 = 1; } while(0);
  4278                           
  4279  02A6  178C               	bsf	12,7	;volatile
  4280  02A7                     l424:	
  4281                           ;displays.c: 154:             do { LATAbits.LATA6 = 1; } while(0);
  4282                           
  4283  02A7  170C               	bsf	12,6	;volatile
  4284  02A8  2AF8               	goto	l486
  4285  02A9                     l427:	
  4286                           ;displays.c: 162:             do { LATAbits.LATA0 = 1; } while(0);
  4287                           
  4288  02A9  0022               	movlb	2	; select bank2
  4289  02AA  140C               	bsf	12,0	;volatile
  4290  02AB                     l429:	
  4291                           ;displays.c: 163:             do { LATAbits.LATA1 = 1; } while(0);
  4292                           
  4293  02AB  148C               	bsf	12,1	;volatile
  4294  02AC                     l431:	
  4295                           ;displays.c: 164:             do { LATAbits.LATA2 = 1; } while(0);
  4296                           
  4297  02AC  150C               	bsf	12,2	;volatile
  4298  02AD                     l433:	
  4299                           ;displays.c: 165:             do { LATAbits.LATA3 = 0; } while(0);
  4300                           
  4301  02AD  118C               	bcf	12,3	;volatile
  4302  02AE                     l435:	
  4303                           ;displays.c: 166:             do { LATAbits.LATA4 = 0; } while(0);
  4304                           
  4305  02AE  120C               	bcf	12,4	;volatile
  4306  02AF                     l437:	
  4307                           ;displays.c: 167:             do { LATAbits.LATA7 = 0; } while(0);
  4308                           
  4309  02AF  138C               	bcf	12,7	;volatile
  4310  02B0                     l439:	
  4311                           ;displays.c: 168:             do { LATAbits.LATA6 = 0; } while(0);
  4312                           
  4313  02B0  130C               	bcf	12,6	;volatile
  4314  02B1  2AF8               	goto	l486
  4315  02B2                     l442:	
  4316                           ;displays.c: 176:             do { LATAbits.LATA0 = 1; } while(0);
  4317                           
  4318  02B2  0022               	movlb	2	; select bank2
  4319  02B3  140C               	bsf	12,0	;volatile
  4320  02B4                     l444:	
  4321                           ;displays.c: 177:             do { LATAbits.LATA1 = 1; } while(0);
  4322                           
  4323  02B4  148C               	bsf	12,1	;volatile
  4324  02B5                     l446:	
  4325                           ;displays.c: 178:             do { LATAbits.LATA2 = 1; } while(0);
  4326                           
  4327  02B5  150C               	bsf	12,2	;volatile
  4328  02B6                     l448:	
  4329                           ;displays.c: 179:             do { LATAbits.LATA3 = 1; } while(0);
  4330                           
  4331  02B6  158C               	bsf	12,3	;volatile
  4332  02B7                     l450:	
  4333                           ;displays.c: 180:             do { LATAbits.LATA4 = 1; } while(0);
  4334                           
  4335  02B7  160C               	bsf	12,4	;volatile
  4336  02B8                     l452:	
  4337                           ;displays.c: 181:             do { LATAbits.LATA7 = 1; } while(0);
  4338                           
  4339  02B8  178C               	bsf	12,7	;volatile
  4340  02B9                     l454:	
  4341                           ;displays.c: 182:             do { LATAbits.LATA6 = 1; } while(0);
  4342                           
  4343  02B9  170C               	bsf	12,6	;volatile
  4344  02BA  2AF8               	goto	l486
  4345  02BB                     l457:	
  4346                           ;displays.c: 190:             do { LATAbits.LATA0 = 1; } while(0);
  4347                           
  4348  02BB  0022               	movlb	2	; select bank2
  4349  02BC  140C               	bsf	12,0	;volatile
  4350  02BD                     l459:	
  4351                           ;displays.c: 191:             do { LATAbits.LATA1 = 1; } while(0);
  4352                           
  4353  02BD  148C               	bsf	12,1	;volatile
  4354  02BE                     l461:	
  4355                           ;displays.c: 192:             do { LATAbits.LATA2 = 1; } while(0);
  4356                           
  4357  02BE  150C               	bsf	12,2	;volatile
  4358  02BF                     l463:	
  4359                           ;displays.c: 193:             do { LATAbits.LATA3 = 1; } while(0);
  4360                           
  4361  02BF  158C               	bsf	12,3	;volatile
  4362  02C0                     l465:	
  4363                           ;displays.c: 194:             do { LATAbits.LATA4 = 0; } while(0);
  4364                           
  4365  02C0  120C               	bcf	12,4	;volatile
  4366  02C1                     l467:	
  4367                           ;displays.c: 195:             do { LATAbits.LATA7 = 1; } while(0);
  4368                           
  4369  02C1  178C               	bsf	12,7	;volatile
  4370  02C2                     l469:	
  4371                           ;displays.c: 196:             do { LATAbits.LATA6 = 1; } while(0);
  4372                           
  4373  02C2  170C               	bsf	12,6	;volatile
  4374  02C3  2AF8               	goto	l486
  4375  02C4                     l472:	
  4376                           ;displays.c: 202:       do { LATAbits.LATA0 = 1; } while(0);
  4377                           
  4378  02C4  0022               	movlb	2	; select bank2
  4379  02C5  140C               	bsf	12,0	;volatile
  4380  02C6                     l474:	
  4381                           ;displays.c: 203:       do { LATAbits.LATA1 = 1; } while(0);
  4382                           
  4383  02C6  148C               	bsf	12,1	;volatile
  4384  02C7                     l476:	
  4385                           ;displays.c: 204:       do { LATAbits.LATA2 = 1; } while(0);
  4386                           
  4387  02C7  150C               	bsf	12,2	;volatile
  4388  02C8                     l478:	
  4389                           ;displays.c: 205:       do { LATAbits.LATA3 = 0; } while(0);
  4390                           
  4391  02C8  118C               	bcf	12,3	;volatile
  4392  02C9                     l480:	
  4393                           ;displays.c: 206:             do { LATAbits.LATA4 = 0; } while(0);
  4394                           
  4395  02C9  120C               	bcf	12,4	;volatile
  4396  02CA                     l482:	
  4397                           ;displays.c: 207:             do { LATAbits.LATA7 = 1; } while(0);
  4398                           
  4399  02CA  178C               	bsf	12,7	;volatile
  4400  02CB                     l484:	
  4401                           ;displays.c: 208:       do { LATAbits.LATA7 = 1; } while(0);
  4402                           
  4403  02CB  178C               	bsf	12,7	;volatile
  4404  02CC  2AF8               	goto	l486
  4405  02CD                     l1944:
  4406  02CD  0872               	movf	Ds_BCD@segmento,w
  4407  02CE  00F0               	movwf	??_Ds_BCD
  4408  02CF  01F1               	clrf	??_Ds_BCD+1
  4409                           
  4410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4411                           ; Switch size 1, requested type "simple"
  4412                           ; Number of cases is 1, Range of values is 0 to 0
  4413                           ; switch strategies available:
  4414                           ; Name         Instructions Cycles
  4415                           ; simple_byte            4     3 (average)
  4416                           ; direct_byte            8     6 (fixed)
  4417                           ; jumptable            260     6 (fixed)
  4418                           ;	Chosen strategy is simple_byte
  4419  02D0  0871               	movf	??_Ds_BCD+1,w
  4420  02D1  3A00               	xorlw	0	; case 0
  4421  02D2  1903               	skipnz
  4422  02D3  2AD5               	goto	l2542
  4423  02D4  2AF8               	goto	l486
  4424  02D5                     l2542:
  4425                           
  4426                           ; Switch size 1, requested type "simple"
  4427                           ; Number of cases is 11, Range of values is 0 to 10
  4428                           ; switch strategies available:
  4429                           ; Name         Instructions Cycles
  4430                           ; direct_byte           28     6 (fixed)
  4431                           ; simple_byte           34    18 (average)
  4432                           ; jumptable            260     6 (fixed)
  4433                           ;	Chosen strategy is simple_byte
  4434  02D5  0870               	movf	??_Ds_BCD,w
  4435  02D6  3A00               	xorlw	0	; case 0
  4436  02D7  1903               	skipnz
  4437  02D8  2A6A               	goto	l321
  4438  02D9  3A01               	xorlw	1	; case 1
  4439  02DA  1903               	skipnz
  4440  02DB  2A73               	goto	l337
  4441  02DC  3A03               	xorlw	3	; case 2
  4442  02DD  1903               	skipnz
  4443  02DE  2A7C               	goto	l352
  4444  02DF  3A01               	xorlw	1	; case 3
  4445  02E0  1903               	skipnz
  4446  02E1  2A85               	goto	l367
  4447  02E2  3A07               	xorlw	7	; case 4
  4448  02E3  1903               	skipnz
  4449  02E4  2A8E               	goto	l382
  4450  02E5  3A01               	xorlw	1	; case 5
  4451  02E6  1903               	skipnz
  4452  02E7  2A97               	goto	l397
  4453  02E8  3A03               	xorlw	3	; case 6
  4454  02E9  1903               	skipnz
  4455  02EA  2AA0               	goto	l412
  4456  02EB  3A01               	xorlw	1	; case 7
  4457  02EC  1903               	skipnz
  4458  02ED  2AA9               	goto	l427
  4459  02EE  3A0F               	xorlw	15	; case 8
  4460  02EF  1903               	skipnz
  4461  02F0  2AB2               	goto	l442
  4462  02F1  3A01               	xorlw	1	; case 9
  4463  02F2  1903               	skipnz
  4464  02F3  2ABB               	goto	l457
  4465  02F4  3A03               	xorlw	3	; case 10
  4466  02F5  1903               	skipnz
  4467  02F6  2AC4               	goto	l472
  4468  02F7  2AF8               	goto	l486
  4469  02F8                     l486:
  4470  02F8  0008               	return
  4471  02F9                     __end_of_Ds_BCD:
  4472                           
  4473                           	psect	text22
  4474  000B                     __ptext22:	
  4475 ;; *************** function _Ds_Iniciar_displays *****************
  4476 ;; Defined at:
  4477 ;;		line 8 in file "displays.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  dsp             1    wreg     PTR struct Ds_Display
  4480 ;;		 -> main@seven_seg(8), 
  4481 ;;  d1              1    0[COMMON] unsigned char 
  4482 ;;  d2              1    1[COMMON] unsigned char 
  4483 ;;  d3              1    2[COMMON] unsigned char 
  4484 ;;  tE              1    3[COMMON] unsigned char 
  4485 ;;  tA              1    4[COMMON] unsigned char 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  dsp             1    6[COMMON] PTR struct Ds_Display
  4488 ;;		 -> main@seven_seg(8), 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4498 ;;      Params:         5       0       0       0       0       0
  4499 ;;      Locals:         1       0       0       0       0       0
  4500 ;;      Temps:          1       0       0       0       0       0
  4501 ;;      Totals:         7       0       0       0       0       0
  4502 ;;Total ram usage:        7 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_main
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           
  4512                           ;psect for function _Ds_Iniciar_displays
  4513  000B                     _Ds_Iniciar_displays:
  4514                           
  4515                           ;incstack = 0
  4516                           ; Regs used in _Ds_Iniciar_displays: [wreg+fsr1l+fsr1h+status,2+status,0]
  4517                           ;Ds_Iniciar_displays@dsp stored from wreg
  4518  000B  00F6               	movwf	Ds_Iniciar_displays@dsp
  4519  000C                     l2306:
  4520                           
  4521                           ;displays.c: 9:     dsp->estados=1;
  4522  000C  0876               	movf	Ds_Iniciar_displays@dsp,w
  4523  000D  0086               	movwf	6
  4524  000E  0187               	clrf	7
  4525  000F  0181               	clrf	1
  4526  0010  0A81               	incf	1,f
  4527                           
  4528                           ;displays.c: 10:     dsp->D1=d1;
  4529  0011  0870               	movf	Ds_Iniciar_displays@d1,w
  4530  0012  00F5               	movwf	??_Ds_Iniciar_displays
  4531  0013  0A76               	incf	Ds_Iniciar_displays@dsp,w
  4532  0014  0086               	movwf	6
  4533  0015  0187               	clrf	7
  4534  0016  0875               	movf	??_Ds_Iniciar_displays,w
  4535  0017  0081               	movwf	1
  4536  0018                     l2308:
  4537                           
  4538                           ;displays.c: 11:     dsp->D2=d2;
  4539  0018  0871               	movf	Ds_Iniciar_displays@d2,w
  4540  0019  00F5               	movwf	??_Ds_Iniciar_displays
  4541  001A  0876               	movf	Ds_Iniciar_displays@dsp,w
  4542  001B  3E02               	addlw	2
  4543  001C  0086               	movwf	6
  4544  001D  0187               	clrf	7
  4545  001E  0875               	movf	??_Ds_Iniciar_displays,w
  4546  001F  0081               	movwf	1
  4547  0020                     l2310:
  4548                           
  4549                           ;displays.c: 12:     dsp->D3=d3;
  4550  0020  0872               	movf	Ds_Iniciar_displays@d3,w
  4551  0021  00F5               	movwf	??_Ds_Iniciar_displays
  4552  0022  0876               	movf	Ds_Iniciar_displays@dsp,w
  4553  0023  3E03               	addlw	3
  4554  0024  0086               	movwf	6
  4555  0025  0187               	clrf	7
  4556  0026  0875               	movf	??_Ds_Iniciar_displays,w
  4557  0027  0081               	movwf	1
  4558  0028                     l2312:
  4559                           
  4560                           ;displays.c: 13:     dsp->tiempoEncendido=tE;
  4561  0028  0873               	movf	Ds_Iniciar_displays@tE,w
  4562  0029  00F5               	movwf	??_Ds_Iniciar_displays
  4563  002A  0876               	movf	Ds_Iniciar_displays@dsp,w
  4564  002B  3E04               	addlw	4
  4565  002C  0086               	movwf	6
  4566  002D  0187               	clrf	7
  4567  002E  0875               	movf	??_Ds_Iniciar_displays,w
  4568  002F  0081               	movwf	1
  4569  0030                     l2314:
  4570                           
  4571                           ;displays.c: 14:     dsp->tiempoApagado=tA;
  4572  0030  0874               	movf	Ds_Iniciar_displays@tA,w
  4573  0031  00F5               	movwf	??_Ds_Iniciar_displays
  4574  0032  0876               	movf	Ds_Iniciar_displays@dsp,w
  4575  0033  3E05               	addlw	5
  4576  0034  0086               	movwf	6
  4577  0035  0187               	clrf	7
  4578  0036  0875               	movf	??_Ds_Iniciar_displays,w
  4579  0037  0081               	movwf	1
  4580  0038                     l2316:
  4581                           
  4582                           ;displays.c: 15:     dsp->tempE=tE;
  4583  0038  0873               	movf	Ds_Iniciar_displays@tE,w
  4584  0039  00F5               	movwf	??_Ds_Iniciar_displays
  4585  003A  0876               	movf	Ds_Iniciar_displays@dsp,w
  4586  003B  3E06               	addlw	6
  4587  003C  0086               	movwf	6
  4588  003D  0187               	clrf	7
  4589  003E  0875               	movf	??_Ds_Iniciar_displays,w
  4590  003F  0081               	movwf	1
  4591  0040                     l2318:
  4592                           
  4593                           ;displays.c: 16:     dsp->tempA=tA;
  4594  0040  0874               	movf	Ds_Iniciar_displays@tA,w
  4595  0041  00F5               	movwf	??_Ds_Iniciar_displays
  4596  0042  0876               	movf	Ds_Iniciar_displays@dsp,w
  4597  0043  3E07               	addlw	7
  4598  0044  0086               	movwf	6
  4599  0045  0187               	clrf	7
  4600  0046  0875               	movf	??_Ds_Iniciar_displays,w
  4601  0047  0081               	movwf	1
  4602  0048                     l283:
  4603  0048  0008               	return
  4604  0049                     __end_of_Ds_Iniciar_displays:
  4605                           
  4606                           	psect	text23
  4607  00DC                     __ptext23:	
  4608 ;; *************** function _Ds_Convertir_en_uni *****************
  4609 ;; Defined at:
  4610 ;;		line 215 in file "displays.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  dsp             1    wreg     PTR struct Ds_Display
  4613 ;;		 -> main@seven_seg(8), 
  4614 ;;  voltaje         2    9[COMMON] int 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  dsp             1   12[COMMON] PTR struct Ds_Display
  4617 ;;		 -> main@seven_seg(8), 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4627 ;;      Params:         2       0       0       0       0       0
  4628 ;;      Locals:         1       0       0       0       0       0
  4629 ;;      Temps:          1       0       0       0       0       0
  4630 ;;      Totals:         4       0       0       0       0       0
  4631 ;;Total ram usage:        4 bytes
  4632 ;; Hardware stack levels used: 1
  4633 ;; Hardware stack levels required when called: 1
  4634 ;; This function calls:
  4635 ;;		___awdiv
  4636 ;;		___awmod
  4637 ;; This function is called by:
  4638 ;;		_main
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           
  4643                           ;psect for function _Ds_Convertir_en_uni
  4644  00DC                     _Ds_Convertir_en_uni:
  4645                           
  4646                           ;incstack = 0
  4647                           ; Regs used in _Ds_Convertir_en_uni: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4648                           ;Ds_Convertir_en_uni@dsp stored from wreg
  4649  00DC  00FC               	movwf	Ds_Convertir_en_uni@dsp
  4650  00DD                     l2412:
  4651                           
  4652                           ;displays.c: 216:  dsp->D1 = voltaje % 10;
  4653  00DD  300A               	movlw	10
  4654  00DE  00F0               	movwf	___awmod@divisor
  4655  00DF  3000               	movlw	0
  4656  00E0  00F1               	movwf	___awmod@divisor+1
  4657  00E1  087A               	movf	Ds_Convertir_en_uni@voltaje+1,w
  4658  00E2  00F3               	movwf	___awmod@dividend+1
  4659  00E3  0879               	movf	Ds_Convertir_en_uni@voltaje,w
  4660  00E4  00F2               	movwf	___awmod@dividend
  4661  00E5  3180  2089  3180   	fcall	___awmod
  4662  00E8  0870               	movf	?___awmod,w
  4663  00E9  00FB               	movwf	??_Ds_Convertir_en_uni
  4664  00EA  0A7C               	incf	Ds_Convertir_en_uni@dsp,w
  4665  00EB  0086               	movwf	6
  4666  00EC  0187               	clrf	7
  4667  00ED  087B               	movf	??_Ds_Convertir_en_uni,w
  4668  00EE  0081               	movwf	1
  4669  00EF                     l2414:
  4670                           
  4671                           ;displays.c: 217:  voltaje = voltaje/10;
  4672  00EF  300A               	movlw	10
  4673  00F0  00F0               	movwf	___awdiv@divisor
  4674  00F1  3000               	movlw	0
  4675  00F2  00F1               	movwf	___awdiv@divisor+1
  4676  00F3  087A               	movf	Ds_Convertir_en_uni@voltaje+1,w
  4677  00F4  00F3               	movwf	___awdiv@dividend+1
  4678  00F5  0879               	movf	Ds_Convertir_en_uni@voltaje,w
  4679  00F6  00F2               	movwf	___awdiv@dividend
  4680  00F7  3181  2134  3180   	fcall	___awdiv
  4681  00FA  0871               	movf	?___awdiv+1,w
  4682  00FB  00FA               	movwf	Ds_Convertir_en_uni@voltaje+1
  4683  00FC  0870               	movf	?___awdiv,w
  4684  00FD  00F9               	movwf	Ds_Convertir_en_uni@voltaje
  4685  00FE                     l2416:
  4686                           
  4687                           ;displays.c: 218:  dsp->D2 = voltaje % 10;
  4688  00FE  300A               	movlw	10
  4689  00FF  00F0               	movwf	___awmod@divisor
  4690  0100  3000               	movlw	0
  4691  0101  00F1               	movwf	___awmod@divisor+1
  4692  0102  087A               	movf	Ds_Convertir_en_uni@voltaje+1,w
  4693  0103  00F3               	movwf	___awmod@dividend+1
  4694  0104  0879               	movf	Ds_Convertir_en_uni@voltaje,w
  4695  0105  00F2               	movwf	___awmod@dividend
  4696  0106  3180  2089  3180   	fcall	___awmod
  4697  0109  0870               	movf	?___awmod,w
  4698  010A  00FB               	movwf	??_Ds_Convertir_en_uni
  4699  010B  087C               	movf	Ds_Convertir_en_uni@dsp,w
  4700  010C  3E02               	addlw	2
  4701  010D  0086               	movwf	6
  4702  010E  0187               	clrf	7
  4703  010F  087B               	movf	??_Ds_Convertir_en_uni,w
  4704  0110  0081               	movwf	1
  4705                           
  4706                           ;displays.c: 219:  voltaje = voltaje/10;
  4707  0111  300A               	movlw	10
  4708  0112  00F0               	movwf	___awdiv@divisor
  4709  0113  3000               	movlw	0
  4710  0114  00F1               	movwf	___awdiv@divisor+1
  4711  0115  087A               	movf	Ds_Convertir_en_uni@voltaje+1,w
  4712  0116  00F3               	movwf	___awdiv@dividend+1
  4713  0117  0879               	movf	Ds_Convertir_en_uni@voltaje,w
  4714  0118  00F2               	movwf	___awdiv@dividend
  4715  0119  3181  2134  3180   	fcall	___awdiv
  4716  011C  0871               	movf	?___awdiv+1,w
  4717  011D  00FA               	movwf	Ds_Convertir_en_uni@voltaje+1
  4718  011E  0870               	movf	?___awdiv,w
  4719  011F  00F9               	movwf	Ds_Convertir_en_uni@voltaje
  4720  0120                     l2418:
  4721                           
  4722                           ;displays.c: 220:  dsp->D3 = voltaje % 10;
  4723  0120  300A               	movlw	10
  4724  0121  00F0               	movwf	___awmod@divisor
  4725  0122  3000               	movlw	0
  4726  0123  00F1               	movwf	___awmod@divisor+1
  4727  0124  087A               	movf	Ds_Convertir_en_uni@voltaje+1,w
  4728  0125  00F3               	movwf	___awmod@dividend+1
  4729  0126  0879               	movf	Ds_Convertir_en_uni@voltaje,w
  4730  0127  00F2               	movwf	___awmod@dividend
  4731  0128  3180  2089  3180   	fcall	___awmod
  4732  012B  0870               	movf	?___awmod,w
  4733  012C  00FB               	movwf	??_Ds_Convertir_en_uni
  4734  012D  087C               	movf	Ds_Convertir_en_uni@dsp,w
  4735  012E  3E03               	addlw	3
  4736  012F  0086               	movwf	6
  4737  0130  0187               	clrf	7
  4738  0131  087B               	movf	??_Ds_Convertir_en_uni,w
  4739  0132  0081               	movwf	1
  4740  0133                     l489:
  4741  0133  0008               	return
  4742  0134                     __end_of_Ds_Convertir_en_uni:
  4743                           
  4744                           	psect	text24
  4745  0089                     __ptext24:	
  4746 ;; *************** function ___awmod *****************
  4747 ;; Defined at:
  4748 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  divisor         2    0[COMMON] int 
  4751 ;;  dividend        2    2[COMMON] int 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  sign            1    6[COMMON] unsigned char 
  4754 ;;  counter         1    5[COMMON] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  2    0[COMMON] int 
  4757 ;; Registers used:
  4758 ;;		wreg, status,2, status,0
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4764 ;;      Params:         4       0       0       0       0       0
  4765 ;;      Locals:         2       0       0       0       0       0
  4766 ;;      Temps:          1       0       0       0       0       0
  4767 ;;      Totals:         7       0       0       0       0       0
  4768 ;;Total ram usage:        7 bytes
  4769 ;; Hardware stack levels used: 1
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_Ds_Convertir_en_uni
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           
  4778                           ;psect for function ___awmod
  4779  0089                     ___awmod:
  4780  0089                     l1994:	
  4781                           ;incstack = 0
  4782                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4783                           
  4784  0089  01F6               	clrf	___awmod@sign
  4785  008A                     l1996:
  4786  008A  1FF3               	btfss	___awmod@dividend+1,7
  4787  008B  288D               	goto	u1081
  4788  008C  288E               	goto	u1080
  4789  008D                     u1081:
  4790  008D  2895               	goto	l2002
  4791  008E                     u1080:
  4792  008E                     l1998:
  4793  008E  09F2               	comf	___awmod@dividend,f
  4794  008F  09F3               	comf	___awmod@dividend+1,f
  4795  0090  0AF2               	incf	___awmod@dividend,f
  4796  0091  1903               	skipnz
  4797  0092  0AF3               	incf	___awmod@dividend+1,f
  4798  0093                     l2000:
  4799  0093  01F6               	clrf	___awmod@sign
  4800  0094  0AF6               	incf	___awmod@sign,f
  4801  0095                     l2002:
  4802  0095  1FF1               	btfss	___awmod@divisor+1,7
  4803  0096  2898               	goto	u1091
  4804  0097  2899               	goto	u1090
  4805  0098                     u1091:
  4806  0098  289E               	goto	l2006
  4807  0099                     u1090:
  4808  0099                     l2004:
  4809  0099  09F0               	comf	___awmod@divisor,f
  4810  009A  09F1               	comf	___awmod@divisor+1,f
  4811  009B  0AF0               	incf	___awmod@divisor,f
  4812  009C  1903               	skipnz
  4813  009D  0AF1               	incf	___awmod@divisor+1,f
  4814  009E                     l2006:
  4815  009E  0870               	movf	___awmod@divisor,w
  4816  009F  0471               	iorwf	___awmod@divisor+1,w
  4817  00A0  1903               	btfsc	3,2
  4818  00A1  28A3               	goto	u1101
  4819  00A2  28A4               	goto	u1100
  4820  00A3                     u1101:
  4821  00A3  28CD               	goto	l2024
  4822  00A4                     u1100:
  4823  00A4                     l2008:
  4824  00A4  01F5               	clrf	___awmod@counter
  4825  00A5  0AF5               	incf	___awmod@counter,f
  4826  00A6  28B0               	goto	l2014
  4827  00A7                     l2010:
  4828  00A7  3001               	movlw	1
  4829  00A8                     u1115:
  4830  00A8  35F0               	lslf	___awmod@divisor,f
  4831  00A9  0DF1               	rlf	___awmod@divisor+1,f
  4832  00AA  0B89               	decfsz	9,f
  4833  00AB  28A8               	goto	u1115
  4834  00AC                     l2012:
  4835  00AC  3001               	movlw	1
  4836  00AD  00F4               	movwf	??___awmod
  4837  00AE  0874               	movf	??___awmod,w
  4838  00AF  07F5               	addwf	___awmod@counter,f
  4839  00B0                     l2014:
  4840  00B0  1FF1               	btfss	___awmod@divisor+1,7
  4841  00B1  28B3               	goto	u1121
  4842  00B2  28B4               	goto	u1120
  4843  00B3                     u1121:
  4844  00B3  28A7               	goto	l2010
  4845  00B4                     u1120:
  4846  00B4                     l2016:
  4847  00B4  0871               	movf	___awmod@divisor+1,w
  4848  00B5  0273               	subwf	___awmod@dividend+1,w
  4849  00B6  1D03               	skipz
  4850  00B7  28BA               	goto	u1135
  4851  00B8  0870               	movf	___awmod@divisor,w
  4852  00B9  0272               	subwf	___awmod@dividend,w
  4853  00BA                     u1135:
  4854  00BA  1C03               	skipc
  4855  00BB  28BD               	goto	u1131
  4856  00BC  28BE               	goto	u1130
  4857  00BD                     u1131:
  4858  00BD  28C2               	goto	l2020
  4859  00BE                     u1130:
  4860  00BE                     l2018:
  4861  00BE  0870               	movf	___awmod@divisor,w
  4862  00BF  02F2               	subwf	___awmod@dividend,f
  4863  00C0  0871               	movf	___awmod@divisor+1,w
  4864  00C1  3BF3               	subwfb	___awmod@dividend+1,f
  4865  00C2                     l2020:
  4866  00C2  3001               	movlw	1
  4867  00C3                     u1145:
  4868  00C3  36F1               	lsrf	___awmod@divisor+1,f
  4869  00C4  0CF0               	rrf	___awmod@divisor,f
  4870  00C5  0B89               	decfsz	9,f
  4871  00C6  28C3               	goto	u1145
  4872  00C7                     l2022:
  4873  00C7  3001               	movlw	1
  4874  00C8  02F5               	subwf	___awmod@counter,f
  4875  00C9  1D03               	btfss	3,2
  4876  00CA  28CC               	goto	u1151
  4877  00CB  28CD               	goto	u1150
  4878  00CC                     u1151:
  4879  00CC  28B4               	goto	l2016
  4880  00CD                     u1150:
  4881  00CD                     l2024:
  4882  00CD  0876               	movf	___awmod@sign,w
  4883  00CE  1903               	btfsc	3,2
  4884  00CF  28D1               	goto	u1161
  4885  00D0  28D2               	goto	u1160
  4886  00D1                     u1161:
  4887  00D1  28D7               	goto	l2028
  4888  00D2                     u1160:
  4889  00D2                     l2026:
  4890  00D2  09F2               	comf	___awmod@dividend,f
  4891  00D3  09F3               	comf	___awmod@dividend+1,f
  4892  00D4  0AF2               	incf	___awmod@dividend,f
  4893  00D5  1903               	skipnz
  4894  00D6  0AF3               	incf	___awmod@dividend+1,f
  4895  00D7                     l2028:
  4896  00D7  0873               	movf	___awmod@dividend+1,w
  4897  00D8  00F1               	movwf	?___awmod+1
  4898  00D9  0872               	movf	___awmod@dividend,w
  4899  00DA  00F0               	movwf	?___awmod
  4900  00DB                     l858:
  4901  00DB  0008               	return
  4902  00DC                     __end_of___awmod:
  4903                           
  4904                           	psect	text25
  4905  0134                     __ptext25:	
  4906 ;; *************** function ___awdiv *****************
  4907 ;; Defined at:
  4908 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;  divisor         2    0[COMMON] int 
  4911 ;;  dividend        2    2[COMMON] int 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  quotient        2    7[COMMON] int 
  4914 ;;  sign            1    6[COMMON] unsigned char 
  4915 ;;  counter         1    5[COMMON] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  2    0[COMMON] int 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4925 ;;      Params:         4       0       0       0       0       0
  4926 ;;      Locals:         4       0       0       0       0       0
  4927 ;;      Temps:          1       0       0       0       0       0
  4928 ;;      Totals:         9       0       0       0       0       0
  4929 ;;Total ram usage:        9 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_Ds_Convertir_en_uni
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           
  4939                           ;psect for function ___awdiv
  4940  0134                     ___awdiv:
  4941  0134                     l1950:	
  4942                           ;incstack = 0
  4943                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4944                           
  4945  0134  01F6               	clrf	___awdiv@sign
  4946  0135                     l1952:
  4947  0135  1FF1               	btfss	___awdiv@divisor+1,7
  4948  0136  2938               	goto	u981
  4949  0137  2939               	goto	u980
  4950  0138                     u981:
  4951  0138  2940               	goto	l1958
  4952  0139                     u980:
  4953  0139                     l1954:
  4954  0139  09F0               	comf	___awdiv@divisor,f
  4955  013A  09F1               	comf	___awdiv@divisor+1,f
  4956  013B  0AF0               	incf	___awdiv@divisor,f
  4957  013C  1903               	skipnz
  4958  013D  0AF1               	incf	___awdiv@divisor+1,f
  4959  013E                     l1956:
  4960  013E  01F6               	clrf	___awdiv@sign
  4961  013F  0AF6               	incf	___awdiv@sign,f
  4962  0140                     l1958:
  4963  0140  1FF3               	btfss	___awdiv@dividend+1,7
  4964  0141  2943               	goto	u991
  4965  0142  2944               	goto	u990
  4966  0143                     u991:
  4967  0143  294D               	goto	l1964
  4968  0144                     u990:
  4969  0144                     l1960:
  4970  0144  09F2               	comf	___awdiv@dividend,f
  4971  0145  09F3               	comf	___awdiv@dividend+1,f
  4972  0146  0AF2               	incf	___awdiv@dividend,f
  4973  0147  1903               	skipnz
  4974  0148  0AF3               	incf	___awdiv@dividend+1,f
  4975  0149                     l1962:
  4976  0149  3001               	movlw	1
  4977  014A  00F4               	movwf	??___awdiv
  4978  014B  0874               	movf	??___awdiv,w
  4979  014C  06F6               	xorwf	___awdiv@sign,f
  4980  014D                     l1964:
  4981  014D  01F7               	clrf	___awdiv@quotient
  4982  014E  01F8               	clrf	___awdiv@quotient+1
  4983  014F                     l1966:
  4984  014F  0870               	movf	___awdiv@divisor,w
  4985  0150  0471               	iorwf	___awdiv@divisor+1,w
  4986  0151  1903               	btfsc	3,2
  4987  0152  2954               	goto	u1001
  4988  0153  2955               	goto	u1000
  4989  0154                     u1001:
  4990  0154  2984               	goto	l1986
  4991  0155                     u1000:
  4992  0155                     l1968:
  4993  0155  01F5               	clrf	___awdiv@counter
  4994  0156  0AF5               	incf	___awdiv@counter,f
  4995  0157  2961               	goto	l1974
  4996  0158                     l1970:
  4997  0158  3001               	movlw	1
  4998  0159                     u1015:
  4999  0159  35F0               	lslf	___awdiv@divisor,f
  5000  015A  0DF1               	rlf	___awdiv@divisor+1,f
  5001  015B  0B89               	decfsz	9,f
  5002  015C  2959               	goto	u1015
  5003  015D                     l1972:
  5004  015D  3001               	movlw	1
  5005  015E  00F4               	movwf	??___awdiv
  5006  015F  0874               	movf	??___awdiv,w
  5007  0160  07F5               	addwf	___awdiv@counter,f
  5008  0161                     l1974:
  5009  0161  1FF1               	btfss	___awdiv@divisor+1,7
  5010  0162  2964               	goto	u1021
  5011  0163  2965               	goto	u1020
  5012  0164                     u1021:
  5013  0164  2958               	goto	l1970
  5014  0165                     u1020:
  5015  0165                     l1976:
  5016  0165  3001               	movlw	1
  5017  0166                     u1035:
  5018  0166  35F7               	lslf	___awdiv@quotient,f
  5019  0167  0DF8               	rlf	___awdiv@quotient+1,f
  5020  0168  0B89               	decfsz	9,f
  5021  0169  2966               	goto	u1035
  5022  016A  0871               	movf	___awdiv@divisor+1,w
  5023  016B  0273               	subwf	___awdiv@dividend+1,w
  5024  016C  1D03               	skipz
  5025  016D  2970               	goto	u1045
  5026  016E  0870               	movf	___awdiv@divisor,w
  5027  016F  0272               	subwf	___awdiv@dividend,w
  5028  0170                     u1045:
  5029  0170  1C03               	skipc
  5030  0171  2973               	goto	u1041
  5031  0172  2974               	goto	u1040
  5032  0173                     u1041:
  5033  0173  2979               	goto	l1982
  5034  0174                     u1040:
  5035  0174                     l1978:
  5036  0174  0870               	movf	___awdiv@divisor,w
  5037  0175  02F2               	subwf	___awdiv@dividend,f
  5038  0176  0871               	movf	___awdiv@divisor+1,w
  5039  0177  3BF3               	subwfb	___awdiv@dividend+1,f
  5040  0178                     l1980:
  5041  0178  1477               	bsf	___awdiv@quotient,0
  5042  0179                     l1982:
  5043  0179  3001               	movlw	1
  5044  017A                     u1055:
  5045  017A  36F1               	lsrf	___awdiv@divisor+1,f
  5046  017B  0CF0               	rrf	___awdiv@divisor,f
  5047  017C  0B89               	decfsz	9,f
  5048  017D  297A               	goto	u1055
  5049  017E                     l1984:
  5050  017E  3001               	movlw	1
  5051  017F  02F5               	subwf	___awdiv@counter,f
  5052  0180  1D03               	btfss	3,2
  5053  0181  2983               	goto	u1061
  5054  0182  2984               	goto	u1060
  5055  0183                     u1061:
  5056  0183  2965               	goto	l1976
  5057  0184                     u1060:
  5058  0184                     l1986:
  5059  0184  0876               	movf	___awdiv@sign,w
  5060  0185  1903               	btfsc	3,2
  5061  0186  2988               	goto	u1071
  5062  0187  2989               	goto	u1070
  5063  0188                     u1071:
  5064  0188  298E               	goto	l1990
  5065  0189                     u1070:
  5066  0189                     l1988:
  5067  0189  09F7               	comf	___awdiv@quotient,f
  5068  018A  09F8               	comf	___awdiv@quotient+1,f
  5069  018B  0AF7               	incf	___awdiv@quotient,f
  5070  018C  1903               	skipnz
  5071  018D  0AF8               	incf	___awdiv@quotient+1,f
  5072  018E                     l1990:
  5073  018E  0878               	movf	___awdiv@quotient+1,w
  5074  018F  00F1               	movwf	?___awdiv+1
  5075  0190  0877               	movf	___awdiv@quotient,w
  5076  0191  00F0               	movwf	?___awdiv
  5077  0192                     l845:
  5078  0192  0008               	return
  5079  0193                     __end_of___awdiv:
  5080                           
  5081                           	psect	text26
  5082  0049                     __ptext26:	
  5083 ;; *************** function _Ds_Conversor_ADC *****************
  5084 ;; Defined at:
  5085 ;;		line 223 in file "displays.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  adcOUT          2   37[BANK0 ] int 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  pendiente       4   39[BANK0 ] float 
  5090 ;;  voltios         2   43[BANK0 ] int 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  2   37[BANK0 ] int 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0, pclath, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5100 ;;      Params:         0       2       0       0       0       0
  5101 ;;      Locals:         0       6       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0
  5103 ;;      Totals:         0       8       0       0       0       0
  5104 ;;Total ram usage:        8 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; Hardware stack levels required when called: 2
  5107 ;; This function calls:
  5108 ;;		___flmul
  5109 ;;		___fltol
  5110 ;;		___xxtofl
  5111 ;; This function is called by:
  5112 ;;		_main
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           
  5117                           ;psect for function _Ds_Conversor_ADC
  5118  0049                     _Ds_Conversor_ADC:
  5119  0049                     l2404:	
  5120                           ;incstack = 0
  5121                           ; Regs used in _Ds_Conversor_ADC: [wreg+status,2+status,0+pclath+cstack]
  5122                           
  5123                           
  5124                           ;displays.c: 224:     float pendiente = 0.9766;
  5125  0049  303F               	movlw	63
  5126  004A  0020               	movlb	0	; select bank0
  5127  004B  00CA               	movwf	Ds_Conversor_ADC@pendiente+3
  5128  004C  307A               	movlw	122
  5129  004D  00C9               	movwf	Ds_Conversor_ADC@pendiente+2
  5130  004E  3002               	movlw	2
  5131  004F  00C8               	movwf	Ds_Conversor_ADC@pendiente+1
  5132  0050  3075               	movlw	117
  5133  0051  00C7               	movwf	Ds_Conversor_ADC@pendiente
  5134  0052                     l2406:
  5135                           
  5136                           ;displays.c: 225:     int voltios = (int) adcOUT*pendiente;
  5137  0052  0845               	movf	Ds_Conversor_ADC@adcOUT,w
  5138  0053  00F0               	movwf	___xxtofl@val
  5139  0054  0846               	movf	Ds_Conversor_ADC@adcOUT+1,w
  5140  0055  00F1               	movwf	___xxtofl@val+1
  5141  0056  0D89               	rlf	9,f
  5142  0057  3B89               	subwfb	9,f
  5143  0058  0989               	comf	9,f
  5144  0059  00F2               	movwf	___xxtofl@val+2
  5145  005A  00F3               	movwf	___xxtofl@val+3
  5146  005B  3001               	movlw	1
  5147  005C  3182  22F9  3180   	fcall	___xxtofl
  5148  005F  0873               	movf	?___xxtofl+3,w
  5149  0060  0020               	movlb	0	; select bank0
  5150  0061  00A7               	movwf	___flmul@a+3
  5151  0062  0872               	movf	?___xxtofl+2,w
  5152  0063  00A6               	movwf	___flmul@a+2
  5153  0064  0871               	movf	?___xxtofl+1,w
  5154  0065  00A5               	movwf	___flmul@a+1
  5155  0066  0870               	movf	?___xxtofl,w
  5156  0067  00A4               	movwf	___flmul@a
  5157  0068  084A               	movf	Ds_Conversor_ADC@pendiente+3,w
  5158  0069  00A3               	movwf	___flmul@b+3
  5159  006A  0849               	movf	Ds_Conversor_ADC@pendiente+2,w
  5160  006B  00A2               	movwf	___flmul@b+2
  5161  006C  0848               	movf	Ds_Conversor_ADC@pendiente+1,w
  5162  006D  00A1               	movwf	___flmul@b+1
  5163  006E  0847               	movf	Ds_Conversor_ADC@pendiente,w
  5164  006F  00A0               	movwf	___flmul@b
  5165  0070  3185  2599  3180   	fcall	___flmul
  5166  0073  0020               	movlb	0	; select bank0
  5167  0074  0823               	movf	?___flmul+3,w
  5168  0075  00BD               	movwf	___fltol@f1+3
  5169  0076  0822               	movf	?___flmul+2,w
  5170  0077  00BC               	movwf	___fltol@f1+2
  5171  0078  0821               	movf	?___flmul+1,w
  5172  0079  00BB               	movwf	___fltol@f1+1
  5173  007A  0820               	movf	?___flmul,w
  5174  007B  00BA               	movwf	___fltol@f1
  5175  007C  3181  21F3  3180   	fcall	___fltol
  5176  007F  0020               	movlb	0	; select bank0
  5177  0080  083B               	movf	?___fltol+1,w
  5178  0081  00CC               	movwf	Ds_Conversor_ADC@voltios+1
  5179  0082  083A               	movf	?___fltol,w
  5180  0083  00CB               	movwf	Ds_Conversor_ADC@voltios
  5181  0084                     l2408:
  5182                           
  5183                           ;displays.c: 226:  return(voltios);
  5184  0084  084C               	movf	Ds_Conversor_ADC@voltios+1,w
  5185  0085  00C6               	movwf	?_Ds_Conversor_ADC+1
  5186  0086  084B               	movf	Ds_Conversor_ADC@voltios,w
  5187  0087  00C5               	movwf	?_Ds_Conversor_ADC
  5188  0088                     l492:
  5189  0088  0008               	return
  5190  0089                     __end_of_Ds_Conversor_ADC:
  5191                           
  5192                           	psect	text27
  5193  02F9                     __ptext27:	
  5194 ;; *************** function ___xxtofl *****************
  5195 ;; Defined at:
  5196 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  sign            1    wreg     unsigned char 
  5199 ;;  val             4    0[COMMON] long 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  sign            1    8[COMMON] unsigned char 
  5202 ;;  arg             4   10[COMMON] unsigned long 
  5203 ;;  exp             1    9[COMMON] unsigned char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  4    0[COMMON] unsigned char 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5213 ;;      Params:         4       0       0       0       0       0
  5214 ;;      Locals:         6       0       0       0       0       0
  5215 ;;      Temps:          4       0       0       0       0       0
  5216 ;;      Totals:        14       0       0       0       0       0
  5217 ;;Total ram usage:       14 bytes
  5218 ;; Hardware stack levels used: 1
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_Ds_Conversor_ADC
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           
  5227                           ;psect for function ___xxtofl
  5228  02F9                     ___xxtofl:
  5229                           
  5230                           ;incstack = 0
  5231                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5232                           ;___xxtofl@sign stored from wreg
  5233  02F9  00F8               	movwf	___xxtofl@sign
  5234  02FA                     l2208:
  5235  02FA  0878               	movf	___xxtofl@sign,w
  5236  02FB  1903               	btfsc	3,2
  5237  02FC  2AFE               	goto	u1531
  5238  02FD  2AFF               	goto	u1530
  5239  02FE                     u1531:
  5240  02FE  2B13               	goto	l2214
  5241  02FF                     u1530:
  5242  02FF                     l2210:
  5243  02FF  1FF3               	btfss	___xxtofl@val+3,7
  5244  0300  2B02               	goto	u1541
  5245  0301  2B03               	goto	u1540
  5246  0302                     u1541:
  5247  0302  2B13               	goto	l2214
  5248  0303                     u1540:
  5249  0303                     l2212:
  5250  0303  0970               	comf	___xxtofl@val,w
  5251  0304  00FA               	movwf	___xxtofl@arg
  5252  0305  0971               	comf	___xxtofl@val+1,w
  5253  0306  00FB               	movwf	___xxtofl@arg+1
  5254  0307  0972               	comf	___xxtofl@val+2,w
  5255  0308  00FC               	movwf	___xxtofl@arg+2
  5256  0309  0973               	comf	___xxtofl@val+3,w
  5257  030A  00FD               	movwf	___xxtofl@arg+3
  5258  030B  0AFA               	incf	___xxtofl@arg,f
  5259  030C  1903               	skipnz
  5260  030D  0AFB               	incf	___xxtofl@arg+1,f
  5261  030E  1903               	skipnz
  5262  030F  0AFC               	incf	___xxtofl@arg+2,f
  5263  0310  1903               	skipnz
  5264  0311  0AFD               	incf	___xxtofl@arg+3,f
  5265  0312  2B1B               	goto	l1133
  5266  0313                     l2214:
  5267  0313  0873               	movf	___xxtofl@val+3,w
  5268  0314  00FD               	movwf	___xxtofl@arg+3
  5269  0315  0872               	movf	___xxtofl@val+2,w
  5270  0316  00FC               	movwf	___xxtofl@arg+2
  5271  0317  0871               	movf	___xxtofl@val+1,w
  5272  0318  00FB               	movwf	___xxtofl@arg+1
  5273  0319  0870               	movf	___xxtofl@val,w
  5274  031A  00FA               	movwf	___xxtofl@arg
  5275  031B                     l1133:
  5276  031B  0873               	movf	___xxtofl@val+3,w
  5277  031C  0472               	iorwf	___xxtofl@val+2,w
  5278  031D  0471               	iorwf	___xxtofl@val+1,w
  5279  031E  0470               	iorwf	___xxtofl@val,w
  5280  031F  1D03               	skipz
  5281  0320  2B22               	goto	u1551
  5282  0321  2B23               	goto	u1550
  5283  0322                     u1551:
  5284  0322  2B2C               	goto	l2220
  5285  0323                     u1550:
  5286  0323                     l2216:
  5287  0323  3000               	movlw	0
  5288  0324  00F3               	movwf	?___xxtofl+3
  5289  0325  3000               	movlw	0
  5290  0326  00F2               	movwf	?___xxtofl+2
  5291  0327  3000               	movlw	0
  5292  0328  00F1               	movwf	?___xxtofl+1
  5293  0329  3000               	movlw	0
  5294  032A  00F0               	movwf	?___xxtofl
  5295  032B  2BA4               	goto	l1135
  5296  032C                     l2220:
  5297  032C  3096               	movlw	150
  5298  032D  00F4               	movwf	??___xxtofl
  5299  032E  0874               	movf	??___xxtofl,w
  5300  032F  00F9               	movwf	___xxtofl@exp
  5301  0330  2B3C               	goto	l2224
  5302  0331                     l2222:
  5303  0331  3001               	movlw	1
  5304  0332  00F4               	movwf	??___xxtofl
  5305  0333  0874               	movf	??___xxtofl,w
  5306  0334  07F9               	addwf	___xxtofl@exp,f
  5307  0335  3001               	movlw	1
  5308  0336                     u1565:
  5309  0336  36FD               	lsrf	___xxtofl@arg+3,f
  5310  0337  0CFC               	rrf	___xxtofl@arg+2,f
  5311  0338  0CFB               	rrf	___xxtofl@arg+1,f
  5312  0339  0CFA               	rrf	___xxtofl@arg,f
  5313  033A  0B89               	decfsz	9,f
  5314  033B  2B36               	goto	u1565
  5315  033C                     l2224:
  5316  033C  30FE               	movlw	254
  5317  033D  057D               	andwf	___xxtofl@arg+3,w
  5318  033E  1D03               	btfss	3,2
  5319  033F  2B41               	goto	u1571
  5320  0340  2B42               	goto	u1570
  5321  0341                     u1571:
  5322  0341  2B31               	goto	l2222
  5323  0342                     u1570:
  5324  0342  2B56               	goto	l1139
  5325  0343                     l2226:
  5326  0343  3001               	movlw	1
  5327  0344  00F4               	movwf	??___xxtofl
  5328  0345  0874               	movf	??___xxtofl,w
  5329  0346  07F9               	addwf	___xxtofl@exp,f
  5330  0347                     l2228:
  5331  0347  3001               	movlw	1
  5332  0348  07FA               	addwf	___xxtofl@arg,f
  5333  0349  3000               	movlw	0
  5334  034A  3DFB               	addwfc	___xxtofl@arg+1,f
  5335  034B  3000               	movlw	0
  5336  034C  3DFC               	addwfc	___xxtofl@arg+2,f
  5337  034D  3000               	movlw	0
  5338  034E  3DFD               	addwfc	___xxtofl@arg+3,f
  5339  034F                     l2230:
  5340  034F  3001               	movlw	1
  5341  0350                     u1585:
  5342  0350  36FD               	lsrf	___xxtofl@arg+3,f
  5343  0351  0CFC               	rrf	___xxtofl@arg+2,f
  5344  0352  0CFB               	rrf	___xxtofl@arg+1,f
  5345  0353  0CFA               	rrf	___xxtofl@arg,f
  5346  0354  0B89               	decfsz	9,f
  5347  0355  2B50               	goto	u1585
  5348  0356                     l1139:
  5349  0356  30FF               	movlw	255
  5350  0357  057D               	andwf	___xxtofl@arg+3,w
  5351  0358  1D03               	btfss	3,2
  5352  0359  2B5B               	goto	u1591
  5353  035A  2B5C               	goto	u1590
  5354  035B                     u1591:
  5355  035B  2B43               	goto	l2226
  5356  035C                     u1590:
  5357  035C  2B66               	goto	l2234
  5358  035D                     l2232:
  5359  035D  3001               	movlw	1
  5360  035E  02F9               	subwf	___xxtofl@exp,f
  5361  035F  3001               	movlw	1
  5362  0360                     u1605:
  5363  0360  35FA               	lslf	___xxtofl@arg,f
  5364  0361  0DFB               	rlf	___xxtofl@arg+1,f
  5365  0362  0DFC               	rlf	___xxtofl@arg+2,f
  5366  0363  0DFD               	rlf	___xxtofl@arg+3,f
  5367  0364  0B89               	decfsz	9,f
  5368  0365  2B60               	goto	u1605
  5369  0366                     l2234:
  5370  0366  1BFC               	btfsc	___xxtofl@arg+2,7
  5371  0367  2B69               	goto	u1611
  5372  0368  2B6A               	goto	u1610
  5373  0369                     u1611:
  5374  0369  2B70               	goto	l1146
  5375  036A                     u1610:
  5376  036A                     l2236:
  5377  036A  3002               	movlw	2
  5378  036B  0279               	subwf	___xxtofl@exp,w
  5379  036C  1803               	skipnc
  5380  036D  2B6F               	goto	u1621
  5381  036E  2B70               	goto	u1620
  5382  036F                     u1621:
  5383  036F  2B5D               	goto	l2232
  5384  0370                     u1620:
  5385  0370                     l1146:
  5386  0370  1879               	btfsc	___xxtofl@exp,0
  5387  0371  2B73               	goto	u1631
  5388  0372  2B74               	goto	u1630
  5389  0373                     u1631:
  5390  0373  2B7C               	goto	l1147
  5391  0374                     u1630:
  5392  0374                     l2238:
  5393  0374  30FF               	movlw	255
  5394  0375  05FA               	andwf	___xxtofl@arg,f
  5395  0376  30FF               	movlw	255
  5396  0377  05FB               	andwf	___xxtofl@arg+1,f
  5397  0378  307F               	movlw	127
  5398  0379  05FC               	andwf	___xxtofl@arg+2,f
  5399  037A  30FF               	movlw	255
  5400  037B  05FD               	andwf	___xxtofl@arg+3,f
  5401  037C                     l1147:
  5402  037C  1003               	clrc
  5403  037D  0CF9               	rrf	___xxtofl@exp,f
  5404  037E                     l2240:
  5405  037E  0879               	movf	___xxtofl@exp,w
  5406  037F  00F4               	movwf	??___xxtofl
  5407  0380  01F5               	clrf	??___xxtofl+1
  5408  0381  01F6               	clrf	??___xxtofl+2
  5409  0382  01F7               	clrf	??___xxtofl+3
  5410  0383  3018               	movlw	24
  5411  0384                     u1645:
  5412  0384  35F4               	lslf	??___xxtofl,f
  5413  0385  0DF5               	rlf	??___xxtofl+1,f
  5414  0386  0DF6               	rlf	??___xxtofl+2,f
  5415  0387  0DF7               	rlf	??___xxtofl+3,f
  5416  0388                     u1640:
  5417  0388  0B89               	decfsz	9,f
  5418  0389  2B84               	goto	u1645
  5419  038A  0874               	movf	??___xxtofl,w
  5420  038B  04FA               	iorwf	___xxtofl@arg,f
  5421  038C  0875               	movf	??___xxtofl+1,w
  5422  038D  04FB               	iorwf	___xxtofl@arg+1,f
  5423  038E  0876               	movf	??___xxtofl+2,w
  5424  038F  04FC               	iorwf	___xxtofl@arg+2,f
  5425  0390  0877               	movf	??___xxtofl+3,w
  5426  0391  04FD               	iorwf	___xxtofl@arg+3,f
  5427  0392                     l2242:
  5428  0392  0878               	movf	___xxtofl@sign,w
  5429  0393  1903               	btfsc	3,2
  5430  0394  2B96               	goto	u1651
  5431  0395  2B97               	goto	u1650
  5432  0396                     u1651:
  5433  0396  2B9C               	goto	l2248
  5434  0397                     u1650:
  5435  0397                     l2244:
  5436  0397  1FF3               	btfss	___xxtofl@val+3,7
  5437  0398  2B9A               	goto	u1661
  5438  0399  2B9B               	goto	u1660
  5439  039A                     u1661:
  5440  039A  2B9C               	goto	l2248
  5441  039B                     u1660:
  5442  039B                     l2246:
  5443  039B  17FD               	bsf	___xxtofl@arg+3,7
  5444  039C                     l2248:
  5445  039C  087D               	movf	___xxtofl@arg+3,w
  5446  039D  00F3               	movwf	?___xxtofl+3
  5447  039E  087C               	movf	___xxtofl@arg+2,w
  5448  039F  00F2               	movwf	?___xxtofl+2
  5449  03A0  087B               	movf	___xxtofl@arg+1,w
  5450  03A1  00F1               	movwf	?___xxtofl+1
  5451  03A2  087A               	movf	___xxtofl@arg,w
  5452  03A3  00F0               	movwf	?___xxtofl
  5453  03A4                     l1135:
  5454  03A4  0008               	return
  5455  03A5                     __end_of___xxtofl:
  5456                           
  5457                           	psect	text28
  5458  01F3                     __ptext28:	
  5459 ;; *************** function ___fltol *****************
  5460 ;; Defined at:
  5461 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  f1              4   26[BANK0 ] unsigned char 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;  exp1            1   36[BANK0 ] unsigned char 
  5466 ;;  sign1           1   35[BANK0 ] unsigned char 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  4   26[BANK0 ] long 
  5469 ;; Registers used:
  5470 ;;		wreg, status,2, status,0
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5476 ;;      Params:         0       4       0       0       0       0
  5477 ;;      Locals:         0       2       0       0       0       0
  5478 ;;      Temps:          0       5       0       0       0       0
  5479 ;;      Totals:         0      11       0       0       0       0
  5480 ;;Total ram usage:       11 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		_Ds_Conversor_ADC
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           
  5490                           ;psect for function ___fltol
  5491  01F3                     ___fltol:
  5492  01F3                     l2032:	
  5493                           ;incstack = 0
  5494                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5495                           
  5496  01F3  1003               	clrc
  5497  01F4  0020               	movlb	0	; select bank0
  5498  01F5  0D3C               	rlf	___fltol@f1+2,w
  5499  01F6  0D3D               	rlf	___fltol@f1+3,w
  5500  01F7  00BE               	movwf	??___fltol
  5501  01F8  083E               	movf	??___fltol,w
  5502  01F9  00C4               	movwf	___fltol@exp1
  5503  01FA  0844               	movf	___fltol@exp1,w
  5504  01FB  1D03               	btfss	3,2
  5505  01FC  29FE               	goto	u1171
  5506  01FD  29FF               	goto	u1170
  5507  01FE                     u1171:
  5508  01FE  2A08               	goto	l2038
  5509  01FF                     u1170:
  5510  01FF                     l2034:
  5511  01FF  3000               	movlw	0
  5512  0200  00BD               	movwf	?___fltol+3
  5513  0201  3000               	movlw	0
  5514  0202  00BC               	movwf	?___fltol+2
  5515  0203  3000               	movlw	0
  5516  0204  00BB               	movwf	?___fltol+1
  5517  0205  3000               	movlw	0
  5518  0206  00BA               	movwf	?___fltol
  5519  0207  2A67               	goto	l886
  5520  0208                     l2038:
  5521  0208  083A               	movf	___fltol@f1,w
  5522  0209  00BE               	movwf	??___fltol
  5523  020A  083B               	movf	___fltol@f1+1,w
  5524  020B  00BF               	movwf	??___fltol+1
  5525  020C  083C               	movf	___fltol@f1+2,w
  5526  020D  00C0               	movwf	??___fltol+2
  5527  020E  083D               	movf	___fltol@f1+3,w
  5528  020F  00C1               	movwf	??___fltol+3
  5529  0210  301F               	movlw	31
  5530  0211                     u1185:
  5531  0211  36C1               	lsrf	??___fltol+3,f
  5532  0212  0CC0               	rrf	??___fltol+2,f
  5533  0213  0CBF               	rrf	??___fltol+1,f
  5534  0214  0CBE               	rrf	??___fltol,f
  5535  0215                     u1180:
  5536  0215  0B89               	decfsz	9,f
  5537  0216  2A11               	goto	u1185
  5538  0217  083E               	movf	??___fltol,w
  5539  0218  00C2               	movwf	??___fltol+4
  5540  0219  0842               	movf	??___fltol+4,w
  5541  021A  00C3               	movwf	___fltol@sign1
  5542  021B                     l2040:
  5543  021B  17BC               	bsf	___fltol@f1+2,7
  5544  021C                     l2042:
  5545  021C  30FF               	movlw	255
  5546  021D  05BA               	andwf	___fltol@f1,f
  5547  021E  30FF               	movlw	255
  5548  021F  05BB               	andwf	___fltol@f1+1,f
  5549  0220  30FF               	movlw	255
  5550  0221  05BC               	andwf	___fltol@f1+2,f
  5551  0222  3000               	movlw	0
  5552  0223  05BD               	andwf	___fltol@f1+3,f
  5553  0224                     l2044:
  5554  0224  3096               	movlw	150
  5555  0225  02C4               	subwf	___fltol@exp1,f
  5556  0226                     l2046:
  5557  0226  1FC4               	btfss	___fltol@exp1,7
  5558  0227  2A29               	goto	u1191
  5559  0228  2A2A               	goto	u1190
  5560  0229                     u1191:
  5561  0229  2A42               	goto	l2056
  5562  022A                     u1190:
  5563  022A                     l2048:
  5564  022A  0844               	movf	___fltol@exp1,w
  5565  022B  3A80               	xorlw	128
  5566  022C  3E97               	addlw	151
  5567  022D  1803               	skipnc
  5568  022E  2A30               	goto	u1201
  5569  022F  2A31               	goto	u1200
  5570  0230                     u1201:
  5571  0230  2A32               	goto	l2054
  5572  0231                     u1200:
  5573  0231  29FF               	goto	l2034
  5574  0232                     l2054:
  5575  0232  3001               	movlw	1
  5576  0233                     u1215:
  5577  0233  36BD               	lsrf	___fltol@f1+3,f
  5578  0234  0CBC               	rrf	___fltol@f1+2,f
  5579  0235  0CBB               	rrf	___fltol@f1+1,f
  5580  0236  0CBA               	rrf	___fltol@f1,f
  5581  0237  0B89               	decfsz	9,f
  5582  0238  2A33               	goto	u1215
  5583  0239  3001               	movlw	1
  5584  023A  00BE               	movwf	??___fltol
  5585  023B  083E               	movf	??___fltol,w
  5586  023C  07C4               	addwf	___fltol@exp1,f
  5587  023D  1D03               	btfss	3,2
  5588  023E  2A40               	goto	u1221
  5589  023F  2A41               	goto	u1220
  5590  0240                     u1221:
  5591  0240  2A32               	goto	l2054
  5592  0241                     u1220:
  5593  0241  2A57               	goto	l2064
  5594  0242                     l2056:
  5595  0242  3020               	movlw	32
  5596  0243  0244               	subwf	___fltol@exp1,w
  5597  0244  1C03               	skipc
  5598  0245  2A47               	goto	u1231
  5599  0246  2A48               	goto	u1230
  5600  0247                     u1231:
  5601  0247  2A52               	goto	l893
  5602  0248                     u1230:
  5603  0248  29FF               	goto	l2034
  5604  0249                     l2062:
  5605  0249  3001               	movlw	1
  5606  024A                     u1245:
  5607  024A  35BA               	lslf	___fltol@f1,f
  5608  024B  0DBB               	rlf	___fltol@f1+1,f
  5609  024C  0DBC               	rlf	___fltol@f1+2,f
  5610  024D  0DBD               	rlf	___fltol@f1+3,f
  5611  024E  0B89               	decfsz	9,f
  5612  024F  2A4A               	goto	u1245
  5613  0250  3001               	movlw	1
  5614  0251  02C4               	subwf	___fltol@exp1,f
  5615  0252                     l893:
  5616  0252  0844               	movf	___fltol@exp1,w
  5617  0253  1D03               	btfss	3,2
  5618  0254  2A56               	goto	u1251
  5619  0255  2A57               	goto	u1250
  5620  0256                     u1251:
  5621  0256  2A49               	goto	l2062
  5622  0257                     u1250:
  5623  0257                     l2064:
  5624  0257  0843               	movf	___fltol@sign1,w
  5625  0258  1903               	btfsc	3,2
  5626  0259  2A5B               	goto	u1261
  5627  025A  2A5C               	goto	u1260
  5628  025B                     u1261:
  5629  025B  2A67               	goto	l896
  5630  025C                     u1260:
  5631  025C                     l2066:
  5632  025C  09BA               	comf	___fltol@f1,f
  5633  025D  09BB               	comf	___fltol@f1+1,f
  5634  025E  09BC               	comf	___fltol@f1+2,f
  5635  025F  09BD               	comf	___fltol@f1+3,f
  5636  0260  0ABA               	incf	___fltol@f1,f
  5637  0261  1903               	skipnz
  5638  0262  0ABB               	incf	___fltol@f1+1,f
  5639  0263  1903               	skipnz
  5640  0264  0ABC               	incf	___fltol@f1+2,f
  5641  0265  1903               	skipnz
  5642  0266  0ABD               	incf	___fltol@f1+3,f
  5643  0267                     l896:
  5644  0267                     l886:
  5645  0267  0008               	return
  5646  0268                     __end_of___fltol:
  5647                           
  5648                           	psect	text29
  5649  0599                     __ptext29:	
  5650 ;; *************** function ___flmul *****************
  5651 ;; Defined at:
  5652 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  b               4    0[BANK0 ] long 
  5655 ;;  a               4    4[BANK0 ] long 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  prod            4   20[BANK0 ] struct .
  5658 ;;  grs             4   14[BANK0 ] unsigned long 
  5659 ;;  temp            2   24[BANK0 ] struct .
  5660 ;;  bexp            1   19[BANK0 ] unsigned char 
  5661 ;;  aexp            1   18[BANK0 ] unsigned char 
  5662 ;;  sign            1   13[BANK0 ] unsigned char 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  4    0[BANK0 ] unsigned char 
  5665 ;; Registers used:
  5666 ;;		wreg, status,2, status,0, pclath, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5672 ;;      Params:         0       8       0       0       0       0
  5673 ;;      Locals:         0      13       0       0       0       0
  5674 ;;      Temps:          0       5       0       0       0       0
  5675 ;;      Totals:         0      26       0       0       0       0
  5676 ;;Total ram usage:       26 bytes
  5677 ;; Hardware stack levels used: 1
  5678 ;; Hardware stack levels required when called: 1
  5679 ;; This function calls:
  5680 ;;		__Umul8_16
  5681 ;; This function is called by:
  5682 ;;		_Ds_Conversor_ADC
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           
  5687                           ;psect for function ___flmul
  5688  0599                     ___flmul:
  5689  0599                     l2068:	
  5690                           ;incstack = 0
  5691                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5692                           
  5693  0599  0020               	movlb	0	; select bank0
  5694  059A  0823               	movf	___flmul@b+3,w
  5695  059B  3980               	andlw	128
  5696  059C  00A8               	movwf	??___flmul
  5697  059D  0828               	movf	??___flmul,w
  5698  059E  00AD               	movwf	___flmul@sign
  5699  059F                     l2070:
  5700  059F  3523               	lslf	___flmul@b+3,w
  5701  05A0  00A8               	movwf	??___flmul
  5702  05A1  0828               	movf	??___flmul,w
  5703  05A2  00B3               	movwf	___flmul@bexp
  5704  05A3                     l2072:
  5705  05A3  1FA2               	btfss	___flmul@b+2,7
  5706  05A4  2DA6               	goto	u1271
  5707  05A5  2DA7               	goto	u1270
  5708  05A6                     u1271:
  5709  05A6  2DA8               	goto	l2076
  5710  05A7                     u1270:
  5711  05A7                     l2074:
  5712  05A7  1433               	bsf	___flmul@bexp,0
  5713  05A8                     l2076:
  5714  05A8  0833               	movf	___flmul@bexp,w
  5715  05A9  1903               	btfsc	3,2
  5716  05AA  2DAC               	goto	u1281
  5717  05AB  2DAD               	goto	u1280
  5718  05AC                     u1281:
  5719  05AC  2DBC               	goto	l2084
  5720  05AD                     u1280:
  5721  05AD                     l2078:
  5722  05AD  0A33               	incf	___flmul@bexp,w
  5723  05AE  1D03               	btfss	3,2
  5724  05AF  2DB1               	goto	u1291
  5725  05B0  2DB2               	goto	u1290
  5726  05B1                     u1291:
  5727  05B1  2DBA               	goto	l2082
  5728  05B2                     u1290:
  5729  05B2                     l2080:
  5730  05B2  3000               	movlw	0
  5731  05B3  00A3               	movwf	___flmul@b+3
  5732  05B4  3000               	movlw	0
  5733  05B5  00A2               	movwf	___flmul@b+2
  5734  05B6  3000               	movlw	0
  5735  05B7  00A1               	movwf	___flmul@b+1
  5736  05B8  3000               	movlw	0
  5737  05B9  00A0               	movwf	___flmul@b
  5738  05BA                     l2082:
  5739  05BA  17A2               	bsf	___flmul@b+2,7
  5740  05BB  2DC4               	goto	l2086
  5741  05BC                     l2084:
  5742  05BC  3000               	movlw	0
  5743  05BD  00A3               	movwf	___flmul@b+3
  5744  05BE  3000               	movlw	0
  5745  05BF  00A2               	movwf	___flmul@b+2
  5746  05C0  3000               	movlw	0
  5747  05C1  00A1               	movwf	___flmul@b+1
  5748  05C2  3000               	movlw	0
  5749  05C3  00A0               	movwf	___flmul@b
  5750  05C4                     l2086:
  5751  05C4  0827               	movf	___flmul@a+3,w
  5752  05C5  3980               	andlw	128
  5753  05C6  00A8               	movwf	??___flmul
  5754  05C7  0828               	movf	??___flmul,w
  5755  05C8  06AD               	xorwf	___flmul@sign,f
  5756  05C9                     l2088:
  5757  05C9  3527               	lslf	___flmul@a+3,w
  5758  05CA  00A8               	movwf	??___flmul
  5759  05CB  0828               	movf	??___flmul,w
  5760  05CC  00B2               	movwf	___flmul@aexp
  5761  05CD                     l2090:
  5762  05CD  1FA6               	btfss	___flmul@a+2,7
  5763  05CE  2DD0               	goto	u1301
  5764  05CF  2DD1               	goto	u1300
  5765  05D0                     u1301:
  5766  05D0  2DD2               	goto	l2094
  5767  05D1                     u1300:
  5768  05D1                     l2092:
  5769  05D1  1432               	bsf	___flmul@aexp,0
  5770  05D2                     l2094:
  5771  05D2  0832               	movf	___flmul@aexp,w
  5772  05D3  1903               	btfsc	3,2
  5773  05D4  2DD6               	goto	u1311
  5774  05D5  2DD7               	goto	u1310
  5775  05D6                     u1311:
  5776  05D6  2DE6               	goto	l2102
  5777  05D7                     u1310:
  5778  05D7                     l2096:
  5779  05D7  0A32               	incf	___flmul@aexp,w
  5780  05D8  1D03               	btfss	3,2
  5781  05D9  2DDB               	goto	u1321
  5782  05DA  2DDC               	goto	u1320
  5783  05DB                     u1321:
  5784  05DB  2DE4               	goto	l2100
  5785  05DC                     u1320:
  5786  05DC                     l2098:
  5787  05DC  3000               	movlw	0
  5788  05DD  00A7               	movwf	___flmul@a+3
  5789  05DE  3000               	movlw	0
  5790  05DF  00A6               	movwf	___flmul@a+2
  5791  05E0  3000               	movlw	0
  5792  05E1  00A5               	movwf	___flmul@a+1
  5793  05E2  3000               	movlw	0
  5794  05E3  00A4               	movwf	___flmul@a
  5795  05E4                     l2100:
  5796  05E4  17A6               	bsf	___flmul@a+2,7
  5797  05E5  2DEE               	goto	l2104
  5798  05E6                     l2102:
  5799  05E6  3000               	movlw	0
  5800  05E7  00A7               	movwf	___flmul@a+3
  5801  05E8  3000               	movlw	0
  5802  05E9  00A6               	movwf	___flmul@a+2
  5803  05EA  3000               	movlw	0
  5804  05EB  00A5               	movwf	___flmul@a+1
  5805  05EC  3000               	movlw	0
  5806  05ED  00A4               	movwf	___flmul@a
  5807  05EE                     l2104:
  5808  05EE  0832               	movf	___flmul@aexp,w
  5809  05EF  1903               	btfsc	3,2
  5810  05F0  2DF2               	goto	u1331
  5811  05F1  2DF3               	goto	u1330
  5812  05F2                     u1331:
  5813  05F2  2DF8               	goto	l2108
  5814  05F3                     u1330:
  5815  05F3                     l2106:
  5816  05F3  0833               	movf	___flmul@bexp,w
  5817  05F4  1D03               	btfss	3,2
  5818  05F5  2DF7               	goto	u1341
  5819  05F6  2DF8               	goto	u1340
  5820  05F7                     u1341:
  5821  05F7  2E01               	goto	l2112
  5822  05F8                     u1340:
  5823  05F8                     l2108:
  5824  05F8  3000               	movlw	0
  5825  05F9  00A3               	movwf	?___flmul+3
  5826  05FA  3000               	movlw	0
  5827  05FB  00A2               	movwf	?___flmul+2
  5828  05FC  3000               	movlw	0
  5829  05FD  00A1               	movwf	?___flmul+1
  5830  05FE  3000               	movlw	0
  5831  05FF  00A0               	movwf	?___flmul
  5832  0600  2FEF               	goto	l1089
  5833  0601                     l2112:
  5834  0601  0820               	movf	___flmul@b,w
  5835  0602  00A8               	movwf	??___flmul
  5836  0603  0828               	movf	??___flmul,w
  5837  0604  00F0               	movwf	__Umul8_16@multiplicand
  5838  0605  0826               	movf	___flmul@a+2,w
  5839  0606  318F  278D  3185   	fcall	__Umul8_16
  5840  0609  0871               	movf	?__Umul8_16+1,w
  5841  060A  0020               	movlb	0	; select bank0
  5842  060B  00B9               	movwf	___flmul@temp+1
  5843  060C  0870               	movf	?__Umul8_16,w
  5844  060D  00B8               	movwf	___flmul@temp
  5845  060E                     l2114:
  5846  060E  0838               	movf	___flmul@temp,w
  5847  060F  00A8               	movwf	??___flmul
  5848  0610  01A9               	clrf	??___flmul+1
  5849  0611  01AA               	clrf	??___flmul+2
  5850  0612  01AB               	clrf	??___flmul+3
  5851  0613  082B               	movf	??___flmul+3,w
  5852  0614  00B1               	movwf	___flmul@grs+3
  5853  0615  082A               	movf	??___flmul+2,w
  5854  0616  00B0               	movwf	___flmul@grs+2
  5855  0617  0829               	movf	??___flmul+1,w
  5856  0618  00AF               	movwf	___flmul@grs+1
  5857  0619  0828               	movf	??___flmul,w
  5858  061A  00AE               	movwf	___flmul@grs
  5859  061B                     l2116:
  5860  061B  0839               	movf	___flmul@temp+1,w
  5861  061C  00A8               	movwf	??___flmul
  5862  061D  01A9               	clrf	??___flmul+1
  5863  061E  01AA               	clrf	??___flmul+2
  5864  061F  01AB               	clrf	??___flmul+3
  5865  0620  082B               	movf	??___flmul+3,w
  5866  0621  00B7               	movwf	___flmul@prod+3
  5867  0622  082A               	movf	??___flmul+2,w
  5868  0623  00B6               	movwf	___flmul@prod+2
  5869  0624  0829               	movf	??___flmul+1,w
  5870  0625  00B5               	movwf	___flmul@prod+1
  5871  0626  0828               	movf	??___flmul,w
  5872  0627  00B4               	movwf	___flmul@prod
  5873  0628  0821               	movf	___flmul@b+1,w
  5874  0629  00A8               	movwf	??___flmul
  5875  062A  0828               	movf	??___flmul,w
  5876  062B  00F0               	movwf	__Umul8_16@multiplicand
  5877  062C  0825               	movf	___flmul@a+1,w
  5878  062D  318F  278D  3185   	fcall	__Umul8_16
  5879  0630  0871               	movf	?__Umul8_16+1,w
  5880  0631  0020               	movlb	0	; select bank0
  5881  0632  00B9               	movwf	___flmul@temp+1
  5882  0633  0870               	movf	?__Umul8_16,w
  5883  0634  00B8               	movwf	___flmul@temp
  5884  0635                     l2118:
  5885  0635  0838               	movf	___flmul@temp,w
  5886  0636  00A8               	movwf	??___flmul
  5887  0637  01A9               	clrf	??___flmul+1
  5888  0638  01AA               	clrf	??___flmul+2
  5889  0639  01AB               	clrf	??___flmul+3
  5890  063A  0828               	movf	??___flmul,w
  5891  063B  07AE               	addwf	___flmul@grs,f
  5892  063C  0829               	movf	??___flmul+1,w
  5893  063D  3DAF               	addwfc	___flmul@grs+1,f
  5894  063E  082A               	movf	??___flmul+2,w
  5895  063F  3DB0               	addwfc	___flmul@grs+2,f
  5896  0640  082B               	movf	??___flmul+3,w
  5897  0641  3DB1               	addwfc	___flmul@grs+3,f
  5898  0642                     l2120:
  5899  0642  0839               	movf	___flmul@temp+1,w
  5900  0643  00A8               	movwf	??___flmul
  5901  0644  01A9               	clrf	??___flmul+1
  5902  0645  01AA               	clrf	??___flmul+2
  5903  0646  01AB               	clrf	??___flmul+3
  5904  0647  0828               	movf	??___flmul,w
  5905  0648  07B4               	addwf	___flmul@prod,f
  5906  0649  0829               	movf	??___flmul+1,w
  5907  064A  3DB5               	addwfc	___flmul@prod+1,f
  5908  064B  082A               	movf	??___flmul+2,w
  5909  064C  3DB6               	addwfc	___flmul@prod+2,f
  5910  064D  082B               	movf	??___flmul+3,w
  5911  064E  3DB7               	addwfc	___flmul@prod+3,f
  5912  064F  0822               	movf	___flmul@b+2,w
  5913  0650  00A8               	movwf	??___flmul
  5914  0651  0828               	movf	??___flmul,w
  5915  0652  00F0               	movwf	__Umul8_16@multiplicand
  5916  0653  0824               	movf	___flmul@a,w
  5917  0654  318F  278D  3185   	fcall	__Umul8_16
  5918  0657  0871               	movf	?__Umul8_16+1,w
  5919  0658  0020               	movlb	0	; select bank0
  5920  0659  00B9               	movwf	___flmul@temp+1
  5921  065A  0870               	movf	?__Umul8_16,w
  5922  065B  00B8               	movwf	___flmul@temp
  5923  065C                     l2122:
  5924  065C  0838               	movf	___flmul@temp,w
  5925  065D  00A8               	movwf	??___flmul
  5926  065E  01A9               	clrf	??___flmul+1
  5927  065F  01AA               	clrf	??___flmul+2
  5928  0660  01AB               	clrf	??___flmul+3
  5929  0661  0828               	movf	??___flmul,w
  5930  0662  07AE               	addwf	___flmul@grs,f
  5931  0663  0829               	movf	??___flmul+1,w
  5932  0664  3DAF               	addwfc	___flmul@grs+1,f
  5933  0665  082A               	movf	??___flmul+2,w
  5934  0666  3DB0               	addwfc	___flmul@grs+2,f
  5935  0667  082B               	movf	??___flmul+3,w
  5936  0668  3DB1               	addwfc	___flmul@grs+3,f
  5937  0669                     l2124:
  5938  0669  0839               	movf	___flmul@temp+1,w
  5939  066A  00A8               	movwf	??___flmul
  5940  066B  01A9               	clrf	??___flmul+1
  5941  066C  01AA               	clrf	??___flmul+2
  5942  066D  01AB               	clrf	??___flmul+3
  5943  066E  0828               	movf	??___flmul,w
  5944  066F  07B4               	addwf	___flmul@prod,f
  5945  0670  0829               	movf	??___flmul+1,w
  5946  0671  3DB5               	addwfc	___flmul@prod+1,f
  5947  0672  082A               	movf	??___flmul+2,w
  5948  0673  3DB6               	addwfc	___flmul@prod+2,f
  5949  0674  082B               	movf	??___flmul+3,w
  5950  0675  3DB7               	addwfc	___flmul@prod+3,f
  5951  0676                     l2126:
  5952  0676  3008               	movlw	8
  5953  0677                     u1355:
  5954  0677  35AE               	lslf	___flmul@grs,f
  5955  0678  0DAF               	rlf	___flmul@grs+1,f
  5956  0679  0DB0               	rlf	___flmul@grs+2,f
  5957  067A  0DB1               	rlf	___flmul@grs+3,f
  5958  067B  0B89               	decfsz	9,f
  5959  067C  2E77               	goto	u1355
  5960  067D                     l2128:
  5961  067D  0821               	movf	___flmul@b+1,w
  5962  067E  00A8               	movwf	??___flmul
  5963  067F  0828               	movf	??___flmul,w
  5964  0680  00F0               	movwf	__Umul8_16@multiplicand
  5965  0681  0824               	movf	___flmul@a,w
  5966  0682  318F  278D  3185   	fcall	__Umul8_16
  5967  0685  0871               	movf	?__Umul8_16+1,w
  5968  0686  0020               	movlb	0	; select bank0
  5969  0687  00B9               	movwf	___flmul@temp+1
  5970  0688  0870               	movf	?__Umul8_16,w
  5971  0689  00B8               	movwf	___flmul@temp
  5972  068A                     l2130:
  5973  068A  0838               	movf	___flmul@temp,w
  5974  068B  07AE               	addwf	___flmul@grs,f
  5975  068C  0839               	movf	___flmul@temp+1,w
  5976  068D  3DAF               	addwfc	___flmul@grs+1,f
  5977  068E  3000               	movlw	0
  5978  068F  3DB0               	addwfc	___flmul@grs+2,f
  5979  0690  3DB1               	addwfc	___flmul@grs+3,f
  5980  0691                     l2132:
  5981  0691  0820               	movf	___flmul@b,w
  5982  0692  00A8               	movwf	??___flmul
  5983  0693  0828               	movf	??___flmul,w
  5984  0694  00F0               	movwf	__Umul8_16@multiplicand
  5985  0695  0825               	movf	___flmul@a+1,w
  5986  0696  318F  278D  3185   	fcall	__Umul8_16
  5987  0699  0871               	movf	?__Umul8_16+1,w
  5988  069A  0020               	movlb	0	; select bank0
  5989  069B  00B9               	movwf	___flmul@temp+1
  5990  069C  0870               	movf	?__Umul8_16,w
  5991  069D  00B8               	movwf	___flmul@temp
  5992  069E                     l2134:
  5993  069E  0838               	movf	___flmul@temp,w
  5994  069F  07AE               	addwf	___flmul@grs,f
  5995  06A0  0839               	movf	___flmul@temp+1,w
  5996  06A1  3DAF               	addwfc	___flmul@grs+1,f
  5997  06A2  3000               	movlw	0
  5998  06A3  3DB0               	addwfc	___flmul@grs+2,f
  5999  06A4  3DB1               	addwfc	___flmul@grs+3,f
  6000  06A5                     l2136:
  6001  06A5  3008               	movlw	8
  6002  06A6                     u1365:
  6003  06A6  35AE               	lslf	___flmul@grs,f
  6004  06A7  0DAF               	rlf	___flmul@grs+1,f
  6005  06A8  0DB0               	rlf	___flmul@grs+2,f
  6006  06A9  0DB1               	rlf	___flmul@grs+3,f
  6007  06AA  0B89               	decfsz	9,f
  6008  06AB  2EA6               	goto	u1365
  6009  06AC  0820               	movf	___flmul@b,w
  6010  06AD  00A8               	movwf	??___flmul
  6011  06AE  0828               	movf	??___flmul,w
  6012  06AF  00F0               	movwf	__Umul8_16@multiplicand
  6013  06B0  0824               	movf	___flmul@a,w
  6014  06B1  318F  278D  3185   	fcall	__Umul8_16
  6015  06B4  0871               	movf	?__Umul8_16+1,w
  6016  06B5  0020               	movlb	0	; select bank0
  6017  06B6  00B9               	movwf	___flmul@temp+1
  6018  06B7  0870               	movf	?__Umul8_16,w
  6019  06B8  00B8               	movwf	___flmul@temp
  6020  06B9                     l2138:
  6021  06B9  0838               	movf	___flmul@temp,w
  6022  06BA  07AE               	addwf	___flmul@grs,f
  6023  06BB  0839               	movf	___flmul@temp+1,w
  6024  06BC  3DAF               	addwfc	___flmul@grs+1,f
  6025  06BD  3000               	movlw	0
  6026  06BE  3DB0               	addwfc	___flmul@grs+2,f
  6027  06BF  3DB1               	addwfc	___flmul@grs+3,f
  6028  06C0                     l2140:
  6029  06C0  0821               	movf	___flmul@b+1,w
  6030  06C1  00A8               	movwf	??___flmul
  6031  06C2  0828               	movf	??___flmul,w
  6032  06C3  00F0               	movwf	__Umul8_16@multiplicand
  6033  06C4  0826               	movf	___flmul@a+2,w
  6034  06C5  318F  278D  3185   	fcall	__Umul8_16
  6035  06C8  0871               	movf	?__Umul8_16+1,w
  6036  06C9  0020               	movlb	0	; select bank0
  6037  06CA  00B9               	movwf	___flmul@temp+1
  6038  06CB  0870               	movf	?__Umul8_16,w
  6039  06CC  00B8               	movwf	___flmul@temp
  6040  06CD  0838               	movf	___flmul@temp,w
  6041  06CE  07B4               	addwf	___flmul@prod,f
  6042  06CF  0839               	movf	___flmul@temp+1,w
  6043  06D0  3DB5               	addwfc	___flmul@prod+1,f
  6044  06D1  3000               	movlw	0
  6045  06D2  3DB6               	addwfc	___flmul@prod+2,f
  6046  06D3  3DB7               	addwfc	___flmul@prod+3,f
  6047  06D4                     l2142:
  6048  06D4  0822               	movf	___flmul@b+2,w
  6049  06D5  00A8               	movwf	??___flmul
  6050  06D6  0828               	movf	??___flmul,w
  6051  06D7  00F0               	movwf	__Umul8_16@multiplicand
  6052  06D8  0825               	movf	___flmul@a+1,w
  6053  06D9  318F  278D  3185   	fcall	__Umul8_16
  6054  06DC  0871               	movf	?__Umul8_16+1,w
  6055  06DD  0020               	movlb	0	; select bank0
  6056  06DE  00B9               	movwf	___flmul@temp+1
  6057  06DF  0870               	movf	?__Umul8_16,w
  6058  06E0  00B8               	movwf	___flmul@temp
  6059  06E1                     l2144:
  6060  06E1  0838               	movf	___flmul@temp,w
  6061  06E2  07B4               	addwf	___flmul@prod,f
  6062  06E3  0839               	movf	___flmul@temp+1,w
  6063  06E4  3DB5               	addwfc	___flmul@prod+1,f
  6064  06E5  3000               	movlw	0
  6065  06E6  3DB6               	addwfc	___flmul@prod+2,f
  6066  06E7  3DB7               	addwfc	___flmul@prod+3,f
  6067  06E8  0822               	movf	___flmul@b+2,w
  6068  06E9  00A8               	movwf	??___flmul
  6069  06EA  0828               	movf	??___flmul,w
  6070  06EB  00F0               	movwf	__Umul8_16@multiplicand
  6071  06EC  0826               	movf	___flmul@a+2,w
  6072  06ED  318F  278D  3185   	fcall	__Umul8_16
  6073  06F0  0871               	movf	?__Umul8_16+1,w
  6074  06F1  0020               	movlb	0	; select bank0
  6075  06F2  00B9               	movwf	___flmul@temp+1
  6076  06F3  0870               	movf	?__Umul8_16,w
  6077  06F4  00B8               	movwf	___flmul@temp
  6078  06F5                     l2146:
  6079  06F5  0838               	movf	___flmul@temp,w
  6080  06F6  00A8               	movwf	??___flmul
  6081  06F7  0839               	movf	___flmul@temp+1,w
  6082  06F8  00A9               	movwf	??___flmul+1
  6083  06F9  01AA               	clrf	??___flmul+2
  6084  06FA  01AB               	clrf	??___flmul+3
  6085  06FB  3008               	movlw	8
  6086  06FC                     u1375:
  6087  06FC  35A8               	lslf	??___flmul,f
  6088  06FD  0DA9               	rlf	??___flmul+1,f
  6089  06FE  0DAA               	rlf	??___flmul+2,f
  6090  06FF  0DAB               	rlf	??___flmul+3,f
  6091  0700                     u1370:
  6092  0700  0B89               	decfsz	9,f
  6093  0701  2EFC               	goto	u1375
  6094  0702  0828               	movf	??___flmul,w
  6095  0703  07B4               	addwf	___flmul@prod,f
  6096  0704  0829               	movf	??___flmul+1,w
  6097  0705  3DB5               	addwfc	___flmul@prod+1,f
  6098  0706  082A               	movf	??___flmul+2,w
  6099  0707  3DB6               	addwfc	___flmul@prod+2,f
  6100  0708  082B               	movf	??___flmul+3,w
  6101  0709  3DB7               	addwfc	___flmul@prod+3,f
  6102  070A                     l2148:
  6103  070A  082E               	movf	___flmul@grs,w
  6104  070B  00A8               	movwf	??___flmul
  6105  070C  082F               	movf	___flmul@grs+1,w
  6106  070D  00A9               	movwf	??___flmul+1
  6107  070E  0830               	movf	___flmul@grs+2,w
  6108  070F  00AA               	movwf	??___flmul+2
  6109  0710  0831               	movf	___flmul@grs+3,w
  6110  0711  00AB               	movwf	??___flmul+3
  6111  0712  3018               	movlw	24
  6112  0713                     u1385:
  6113  0713  36AB               	lsrf	??___flmul+3,f
  6114  0714  0CAA               	rrf	??___flmul+2,f
  6115  0715  0CA9               	rrf	??___flmul+1,f
  6116  0716  0CA8               	rrf	??___flmul,f
  6117  0717                     u1380:
  6118  0717  0B89               	decfsz	9,f
  6119  0718  2F13               	goto	u1385
  6120  0719  0828               	movf	??___flmul,w
  6121  071A  07B4               	addwf	___flmul@prod,f
  6122  071B  0829               	movf	??___flmul+1,w
  6123  071C  3DB5               	addwfc	___flmul@prod+1,f
  6124  071D  082A               	movf	??___flmul+2,w
  6125  071E  3DB6               	addwfc	___flmul@prod+2,f
  6126  071F  082B               	movf	??___flmul+3,w
  6127  0720  3DB7               	addwfc	___flmul@prod+3,f
  6128  0721                     l2150:
  6129  0721  3008               	movlw	8
  6130  0722                     u1395:
  6131  0722  35AE               	lslf	___flmul@grs,f
  6132  0723  0DAF               	rlf	___flmul@grs+1,f
  6133  0724  0DB0               	rlf	___flmul@grs+2,f
  6134  0725  0DB1               	rlf	___flmul@grs+3,f
  6135  0726  0B89               	decfsz	9,f
  6136  0727  2F22               	goto	u1395
  6137  0728                     l2152:
  6138  0728  0833               	movf	___flmul@bexp,w
  6139  0729  0732               	addwf	___flmul@aexp,w
  6140  072A  00A8               	movwf	??___flmul
  6141  072B  01A9               	clrf	??___flmul+1
  6142  072C  0DA9               	rlf	??___flmul+1,f
  6143  072D  0828               	movf	??___flmul,w
  6144  072E  3E82               	addlw	130
  6145  072F  00B8               	movwf	___flmul@temp
  6146  0730  30FF               	movlw	255
  6147  0731  3D29               	addwfc	??___flmul+1,w
  6148  0732  00B9               	movwf	___flmul@temp+1
  6149  0733  2F4B               	goto	l2164
  6150  0734                     l2154:
  6151  0734  3001               	movlw	1
  6152  0735                     u1405:
  6153  0735  35B4               	lslf	___flmul@prod,f
  6154  0736  0DB5               	rlf	___flmul@prod+1,f
  6155  0737  0DB6               	rlf	___flmul@prod+2,f
  6156  0738  0DB7               	rlf	___flmul@prod+3,f
  6157  0739  0B89               	decfsz	9,f
  6158  073A  2F35               	goto	u1405
  6159  073B                     l2156:
  6160  073B  1FB1               	btfss	___flmul@grs+3,7
  6161  073C  2F3E               	goto	u1411
  6162  073D  2F3F               	goto	u1410
  6163  073E                     u1411:
  6164  073E  2F40               	goto	l2160
  6165  073F                     u1410:
  6166  073F                     l2158:
  6167  073F  1434               	bsf	___flmul@prod,0
  6168  0740                     l2160:
  6169  0740  3001               	movlw	1
  6170  0741                     u1425:
  6171  0741  35AE               	lslf	___flmul@grs,f
  6172  0742  0DAF               	rlf	___flmul@grs+1,f
  6173  0743  0DB0               	rlf	___flmul@grs+2,f
  6174  0744  0DB1               	rlf	___flmul@grs+3,f
  6175  0745  0B89               	decfsz	9,f
  6176  0746  2F41               	goto	u1425
  6177  0747                     l2162:
  6178  0747  30FF               	movlw	255
  6179  0748  07B8               	addwf	___flmul@temp,f
  6180  0749  30FF               	movlw	255
  6181  074A  3DB9               	addwfc	___flmul@temp+1,f
  6182  074B                     l2164:
  6183  074B  1FB6               	btfss	___flmul@prod+2,7
  6184  074C  2F4E               	goto	u1431
  6185  074D  2F4F               	goto	u1430
  6186  074E                     u1431:
  6187  074E  2F34               	goto	l2154
  6188  074F                     u1430:
  6189  074F                     l2166:
  6190  074F  01B2               	clrf	___flmul@aexp
  6191  0750                     l2168:
  6192  0750  1FB1               	btfss	___flmul@grs+3,7
  6193  0751  2F53               	goto	u1441
  6194  0752  2F54               	goto	u1440
  6195  0753                     u1441:
  6196  0753  2F70               	goto	l2176
  6197  0754                     u1440:
  6198  0754                     l2170:
  6199  0754  30FF               	movlw	255
  6200  0755  052E               	andwf	___flmul@grs,w
  6201  0756  00A8               	movwf	??___flmul
  6202  0757  30FF               	movlw	255
  6203  0758  052F               	andwf	___flmul@grs+1,w
  6204  0759  00A9               	movwf	??___flmul+1
  6205  075A  30FF               	movlw	255
  6206  075B  0530               	andwf	___flmul@grs+2,w
  6207  075C  00AA               	movwf	??___flmul+2
  6208  075D  307F               	movlw	127
  6209  075E  0531               	andwf	___flmul@grs+3,w
  6210  075F  00AB               	movwf	??___flmul+3
  6211  0760  082B               	movf	??___flmul+3,w
  6212  0761  042A               	iorwf	??___flmul+2,w
  6213  0762  0429               	iorwf	??___flmul+1,w
  6214  0763  0428               	iorwf	??___flmul,w
  6215  0764  1903               	skipnz
  6216  0765  2F67               	goto	u1451
  6217  0766  2F68               	goto	u1450
  6218  0767                     u1451:
  6219  0767  2F6B               	goto	l1095
  6220  0768                     u1450:
  6221  0768                     l2172:
  6222  0768  01B2               	clrf	___flmul@aexp
  6223  0769  0AB2               	incf	___flmul@aexp,f
  6224  076A  2F70               	goto	l2176
  6225  076B                     l1095:
  6226  076B  1C34               	btfss	___flmul@prod,0
  6227  076C  2F6E               	goto	u1461
  6228  076D  2F6F               	goto	u1460
  6229  076E                     u1461:
  6230  076E  2F70               	goto	l2176
  6231  076F                     u1460:
  6232  076F  2F68               	goto	l2172
  6233  0770                     l2176:
  6234  0770  0832               	movf	___flmul@aexp,w
  6235  0771  1903               	btfsc	3,2
  6236  0772  2F74               	goto	u1471
  6237  0773  2F75               	goto	u1470
  6238  0774                     u1471:
  6239  0774  2F9D               	goto	l2186
  6240  0775                     u1470:
  6241  0775                     l2178:
  6242  0775  3001               	movlw	1
  6243  0776  07B4               	addwf	___flmul@prod,f
  6244  0777  3000               	movlw	0
  6245  0778  3DB5               	addwfc	___flmul@prod+1,f
  6246  0779  3000               	movlw	0
  6247  077A  3DB6               	addwfc	___flmul@prod+2,f
  6248  077B  3000               	movlw	0
  6249  077C  3DB7               	addwfc	___flmul@prod+3,f
  6250  077D                     l2180:
  6251  077D  1C37               	btfss	___flmul@prod+3,0
  6252  077E  2F80               	goto	u1481
  6253  077F  2F81               	goto	u1480
  6254  0780                     u1481:
  6255  0780  2F9D               	goto	l2186
  6256  0781                     u1480:
  6257  0781                     l2182:
  6258  0781  0834               	movf	___flmul@prod,w
  6259  0782  00A8               	movwf	??___flmul
  6260  0783  0835               	movf	___flmul@prod+1,w
  6261  0784  00A9               	movwf	??___flmul+1
  6262  0785  0836               	movf	___flmul@prod+2,w
  6263  0786  00AA               	movwf	??___flmul+2
  6264  0787  0837               	movf	___flmul@prod+3,w
  6265  0788  00AB               	movwf	??___flmul+3
  6266  0789  3001               	movlw	1
  6267  078A  00AC               	movwf	??___flmul+4
  6268  078B                     u1495:
  6269  078B  37AB               	asrf	??___flmul+3,f
  6270  078C  0CAA               	rrf	??___flmul+2,f
  6271  078D  0CA9               	rrf	??___flmul+1,f
  6272  078E  0CA8               	rrf	??___flmul,f
  6273  078F                     u1490:
  6274  078F  0BAC               	decfsz	??___flmul+4,f
  6275  0790  2F8B               	goto	u1495
  6276  0791  082B               	movf	??___flmul+3,w
  6277  0792  00B7               	movwf	___flmul@prod+3
  6278  0793  082A               	movf	??___flmul+2,w
  6279  0794  00B6               	movwf	___flmul@prod+2
  6280  0795  0829               	movf	??___flmul+1,w
  6281  0796  00B5               	movwf	___flmul@prod+1
  6282  0797  0828               	movf	??___flmul,w
  6283  0798  00B4               	movwf	___flmul@prod
  6284  0799                     l2184:
  6285  0799  3001               	movlw	1
  6286  079A  07B8               	addwf	___flmul@temp,f
  6287  079B  3000               	movlw	0
  6288  079C  3DB9               	addwfc	___flmul@temp+1,f
  6289  079D                     l2186:
  6290  079D  0839               	movf	___flmul@temp+1,w
  6291  079E  3A80               	xorlw	128
  6292  079F  00A8               	movwf	??___flmul
  6293  07A0  3080               	movlw	128
  6294  07A1  0228               	subwf	??___flmul,w
  6295  07A2  1D03               	skipz
  6296  07A3  2FA6               	goto	u1505
  6297  07A4  30FF               	movlw	255
  6298  07A5  0238               	subwf	___flmul@temp,w
  6299  07A6                     u1505:
  6300  07A6  1C03               	skipc
  6301  07A7  2FA9               	goto	u1501
  6302  07A8  2FAA               	goto	u1500
  6303  07A9                     u1501:
  6304  07A9  2FB4               	goto	l2190
  6305  07AA                     u1500:
  6306  07AA                     l2188:
  6307  07AA  307F               	movlw	127
  6308  07AB  0020               	movlb	0	; select bank0
  6309  07AC  00B7               	movwf	___flmul@prod+3
  6310  07AD  3080               	movlw	128
  6311  07AE  00B6               	movwf	___flmul@prod+2
  6312  07AF  3000               	movlw	0
  6313  07B0  00B5               	movwf	___flmul@prod+1
  6314  07B1  3000               	movlw	0
  6315  07B2  00B4               	movwf	___flmul@prod
  6316  07B3  2FE3               	goto	l1101
  6317  07B4                     l2190:
  6318  07B4  0020               	movlb	0	; select bank0
  6319  07B5  0839               	movf	___flmul@temp+1,w
  6320  07B6  3A80               	xorlw	128
  6321  07B7  00A8               	movwf	??___flmul
  6322  07B8  3080               	movlw	128
  6323  07B9  0228               	subwf	??___flmul,w
  6324  07BA  1D03               	skipz
  6325  07BB  2FBE               	goto	u1515
  6326  07BC  3001               	movlw	1
  6327  07BD  0238               	subwf	___flmul@temp,w
  6328  07BE                     u1515:
  6329  07BE  1803               	skipnc
  6330  07BF  2FC1               	goto	u1511
  6331  07C0  2FC2               	goto	u1510
  6332  07C1                     u1511:
  6333  07C1  2FCD               	goto	l2196
  6334  07C2                     u1510:
  6335  07C2                     l2192:
  6336  07C2  3000               	movlw	0
  6337  07C3  0020               	movlb	0	; select bank0
  6338  07C4  00B7               	movwf	___flmul@prod+3
  6339  07C5  3000               	movlw	0
  6340  07C6  00B6               	movwf	___flmul@prod+2
  6341  07C7  3000               	movlw	0
  6342  07C8  00B5               	movwf	___flmul@prod+1
  6343  07C9  3000               	movlw	0
  6344  07CA  00B4               	movwf	___flmul@prod
  6345  07CB                     l2194:
  6346  07CB  01AD               	clrf	___flmul@sign
  6347  07CC  2FE3               	goto	l1101
  6348  07CD                     l2196:
  6349  07CD  0020               	movlb	0	; select bank0
  6350  07CE  0838               	movf	___flmul@temp,w
  6351  07CF  00A8               	movwf	??___flmul
  6352  07D0  0828               	movf	??___flmul,w
  6353  07D1  00B3               	movwf	___flmul@bexp
  6354  07D2  30FF               	movlw	255
  6355  07D3  05B4               	andwf	___flmul@prod,f
  6356  07D4  30FF               	movlw	255
  6357  07D5  05B5               	andwf	___flmul@prod+1,f
  6358  07D6  307F               	movlw	127
  6359  07D7  05B6               	andwf	___flmul@prod+2,f
  6360  07D8  3000               	movlw	0
  6361  07D9  05B7               	andwf	___flmul@prod+3,f
  6362  07DA                     l2198:
  6363  07DA  1C33               	btfss	___flmul@bexp,0
  6364  07DB  2FDD               	goto	u1521
  6365  07DC  2FDE               	goto	u1520
  6366  07DD                     u1521:
  6367  07DD  2FDF               	goto	l2202
  6368  07DE                     u1520:
  6369  07DE                     l2200:
  6370  07DE  17B6               	bsf	___flmul@prod+2,7
  6371  07DF                     l2202:
  6372  07DF  3633               	lsrf	___flmul@bexp,w
  6373  07E0  00A8               	movwf	??___flmul
  6374  07E1  0828               	movf	??___flmul,w
  6375  07E2  00B7               	movwf	___flmul@prod+3
  6376  07E3                     l1101:
  6377  07E3  082D               	movf	___flmul@sign,w
  6378  07E4  00A8               	movwf	??___flmul
  6379  07E5  0828               	movf	??___flmul,w
  6380  07E6  04B7               	iorwf	___flmul@prod+3,f
  6381  07E7                     l2204:
  6382  07E7  0837               	movf	___flmul@prod+3,w
  6383  07E8  00A3               	movwf	?___flmul+3
  6384  07E9  0836               	movf	___flmul@prod+2,w
  6385  07EA  00A2               	movwf	?___flmul+2
  6386  07EB  0835               	movf	___flmul@prod+1,w
  6387  07EC  00A1               	movwf	?___flmul+1
  6388  07ED  0834               	movf	___flmul@prod,w
  6389  07EE  00A0               	movwf	?___flmul
  6390  07EF                     l1089:
  6391  07EF  0008               	return
  6392  07F0                     __end_of___flmul:
  6393                           
  6394                           	psect	text30
  6395  0F8D                     __ptext30:	
  6396 ;; *************** function __Umul8_16 *****************
  6397 ;; Defined at:
  6398 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  multiplier      1    wreg     unsigned char 
  6401 ;;  multiplicand    1    0[COMMON] unsigned char 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  multiplier      1    8[COMMON] unsigned char 
  6404 ;;  word_mpld       2    6[COMMON] unsigned int 
  6405 ;;  product         2    4[COMMON] unsigned int 
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  2    0[COMMON] unsigned int 
  6408 ;; Registers used:
  6409 ;;		wreg, status,2, status,0
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6415 ;;      Params:         2       0       0       0       0       0
  6416 ;;      Locals:         5       0       0       0       0       0
  6417 ;;      Temps:          2       0       0       0       0       0
  6418 ;;      Totals:         9       0       0       0       0       0
  6419 ;;Total ram usage:        9 bytes
  6420 ;; Hardware stack levels used: 1
  6421 ;; This function calls:
  6422 ;;		Nothing
  6423 ;; This function is called by:
  6424 ;;		___flmul
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           
  6429                           ;psect for function __Umul8_16
  6430  0F8D                     __Umul8_16:
  6431                           
  6432                           ;incstack = 0
  6433                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6434                           ;__Umul8_16@multiplier stored from wreg
  6435  0F8D  00F8               	movwf	__Umul8_16@multiplier
  6436  0F8E                     l1872:
  6437  0F8E  01F4               	clrf	__Umul8_16@product
  6438  0F8F  01F5               	clrf	__Umul8_16@product+1
  6439  0F90                     l1874:
  6440  0F90  0870               	movf	__Umul8_16@multiplicand,w
  6441  0F91  00F2               	movwf	??__Umul8_16
  6442  0F92  01F3               	clrf	??__Umul8_16+1
  6443  0F93  0872               	movf	??__Umul8_16,w
  6444  0F94  00F6               	movwf	__Umul8_16@word_mpld
  6445  0F95  0873               	movf	??__Umul8_16+1,w
  6446  0F96  00F7               	movwf	__Umul8_16@word_mpld+1
  6447  0F97                     l1876:
  6448  0F97  1C78               	btfss	__Umul8_16@multiplier,0
  6449  0F98  2F9A               	goto	u941
  6450  0F99  2F9B               	goto	u940
  6451  0F9A                     u941:
  6452  0F9A  2F9F               	goto	l1108
  6453  0F9B                     u940:
  6454  0F9B                     l1878:
  6455  0F9B  0876               	movf	__Umul8_16@word_mpld,w
  6456  0F9C  07F4               	addwf	__Umul8_16@product,f
  6457  0F9D  0877               	movf	__Umul8_16@word_mpld+1,w
  6458  0F9E  3DF5               	addwfc	__Umul8_16@product+1,f
  6459  0F9F                     l1108:
  6460  0F9F  3001               	movlw	1
  6461  0FA0                     u955:
  6462  0FA0  35F6               	lslf	__Umul8_16@word_mpld,f
  6463  0FA1  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6464  0FA2  0B89               	decfsz	9,f
  6465  0FA3  2FA0               	goto	u955
  6466  0FA4  1003               	clrc
  6467  0FA5  0CF8               	rrf	__Umul8_16@multiplier,f
  6468  0FA6                     l1880:
  6469  0FA6  0878               	movf	__Umul8_16@multiplier,w
  6470  0FA7  1D03               	btfss	3,2
  6471  0FA8  2FAA               	goto	u961
  6472  0FA9  2FAB               	goto	u960
  6473  0FAA                     u961:
  6474  0FAA  2F97               	goto	l1876
  6475  0FAB                     u960:
  6476  0FAB                     l1882:
  6477  0FAB  0875               	movf	__Umul8_16@product+1,w
  6478  0FAC  00F1               	movwf	?__Umul8_16+1
  6479  0FAD  0874               	movf	__Umul8_16@product,w
  6480  0FAE  00F0               	movwf	?__Umul8_16
  6481  0FAF                     l1110:
  6482  0FAF  0008               	return
  6483  0FB0                     __end_of__Umul8_16:
  6484                           
  6485                           	psect	text31
  6486  0EBC                     __ptext31:	
  6487 ;; *************** function _ADC_StartConversion *****************
  6488 ;; Defined at:
  6489 ;;		line 93 in file "mcc_generated_files/adc.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;		None
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      void 
  6496 ;; Registers used:
  6497 ;;		None
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6503 ;;      Params:         0       0       0       0       0       0
  6504 ;;      Locals:         0       0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0
  6506 ;;      Totals:         0       0       0       0       0       0
  6507 ;;Total ram usage:        0 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_main
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           
  6517                           ;psect for function _ADC_StartConversion
  6518  0EBC                     _ADC_StartConversion:
  6519  0EBC                     l2284:	
  6520                           ;incstack = 0
  6521                           ; Regs used in _ADC_StartConversion: []
  6522                           
  6523                           
  6524                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
  6525  0EBC  0021               	movlb	1	; select bank1
  6526  0EBD  149D               	bsf	29,1	;volatile
  6527  0EBE                     l171:
  6528  0EBE  0008               	return
  6529  0EBF                     __end_of_ADC_StartConversion:
  6530                           
  6531                           	psect	text32
  6532  0F1D                     __ptext32:	
  6533 ;; *************** function _ADC_SelectChannel *****************
  6534 ;; Defined at:
  6535 ;;		line 85 in file "mcc_generated_files/adc.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;  channel         1    wreg     enum E2476
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;  channel         1    1[COMMON] enum E2476
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      void 
  6542 ;; Registers used:
  6543 ;;		wreg, status,2, status,0
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6549 ;;      Params:         0       0       0       0       0       0
  6550 ;;      Locals:         1       0       0       0       0       0
  6551 ;;      Temps:          1       0       0       0       0       0
  6552 ;;      Totals:         2       0       0       0       0       0
  6553 ;;Total ram usage:        2 bytes
  6554 ;; Hardware stack levels used: 1
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_main
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           
  6563                           ;psect for function _ADC_SelectChannel
  6564  0F1D                     _ADC_SelectChannel:
  6565                           
  6566                           ;incstack = 0
  6567                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  6568                           ;ADC_SelectChannel@channel stored from wreg
  6569  0F1D  00F1               	movwf	ADC_SelectChannel@channel
  6570  0F1E                     l2280:
  6571                           
  6572                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
  6573  0F1E  0871               	movf	ADC_SelectChannel@channel,w
  6574  0F1F  00F0               	movwf	??_ADC_SelectChannel
  6575  0F20  0DF0               	rlf	??_ADC_SelectChannel,f
  6576  0F21  0DF0               	rlf	??_ADC_SelectChannel,f
  6577  0F22  0021               	movlb	1	; select bank1
  6578  0F23  081D               	movf	29,w	;volatile
  6579  0F24  0670               	xorwf	??_ADC_SelectChannel,w
  6580  0F25  3983               	andlw	-125
  6581  0F26  0670               	xorwf	??_ADC_SelectChannel,w
  6582  0F27  009D               	movwf	29	;volatile
  6583  0F28                     l2282:
  6584                           
  6585                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
  6586  0F28  141D               	bsf	29,0	;volatile
  6587  0F29                     l168:
  6588  0F29  0008               	return
  6589  0F2A                     __end_of_ADC_SelectChannel:
  6590                           
  6591                           	psect	text33
  6592  0004                     __ptext33:	
  6593 ;; *************** function _ADC_IsConversionDone *****************
  6594 ;; Defined at:
  6595 ;;		line 100 in file "mcc_generated_files/adc.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;		None
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;		None
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  1    wreg      _Bool 
  6602 ;; Registers used:
  6603 ;;		wreg, status,0
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6609 ;;      Params:         0       0       0       0       0       0
  6610 ;;      Locals:         0       0       0       0       0       0
  6611 ;;      Temps:          0       0       0       0       0       0
  6612 ;;      Totals:         0       0       0       0       0       0
  6613 ;;Total ram usage:        0 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_main
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           
  6623                           ;psect for function _ADC_IsConversionDone
  6624  0004                     _ADC_IsConversionDone:
  6625  0004                     l2286:	
  6626                           ;incstack = 0
  6627                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  6628                           
  6629                           
  6630                           ;mcc_generated_files/adc.c: 103:    return ((_Bool)(!ADCON0bits.GO_nDONE));
  6631  0004  1003               	clrc
  6632  0005  0021               	movlb	1	; select bank1
  6633  0006  1C9D               	btfss	29,1	;volatile
  6634  0007  1403               	setc
  6635  0008  3000               	movlw	0
  6636  0009  3D09               	addwfc	9,w
  6637  000A                     l174:
  6638  000A  0008               	return
  6639  000B                     __end_of_ADC_IsConversionDone:
  6640                           
  6641                           	psect	text34
  6642  0EC5                     __ptext34:	
  6643 ;; *************** function _ADC_GetConversionResult *****************
  6644 ;; Defined at:
  6645 ;;		line 106 in file "mcc_generated_files/adc.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;		None
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  2    0[COMMON] unsigned short 
  6652 ;; Registers used:
  6653 ;;		wreg
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6659 ;;      Params:         2       0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0
  6662 ;;      Totals:         2       0       0       0       0       0
  6663 ;;Total ram usage:        2 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_main
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           
  6673                           ;psect for function _ADC_GetConversionResult
  6674  0EC5                     _ADC_GetConversionResult:
  6675  0EC5                     l2290:	
  6676                           ;incstack = 0
  6677                           ; Regs used in _ADC_GetConversionResult: [wreg]
  6678                           
  6679                           
  6680                           ;mcc_generated_files/adc.c: 109:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6681  0EC5  0021               	movlb	1	; select bank1
  6682  0EC6  081C               	movf	28,w	;volatile
  6683  0EC7  00F1               	movwf	?_ADC_GetConversionResult+1
  6684  0EC8  081B               	movf	27,w	;volatile
  6685  0EC9  00F0               	movwf	?_ADC_GetConversionResult
  6686  0ECA                     l177:
  6687  0ECA  0008               	return
  6688  0ECB                     __end_of_ADC_GetConversionResult:
  6689  007E                     btemp	set	126	;btemp
  6690  007E                     wtemp0	set	126
  6691                           
  6692                           	psect	config
  6693                           
  6694                           ;Config register CONFIG1 @ 0x8007
  6695                           ;	Oscillator Selection
  6696                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6697                           ;	Watchdog Timer Enable
  6698                           ;	WDTE = OFF, WDT disabled
  6699                           ;	Power-up Timer Enable
  6700                           ;	PWRTE = OFF, PWRT disabled
  6701                           ;	MCLR Pin Function Select
  6702                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6703                           ;	Flash Program Memory Code Protection
  6704                           ;	CP = OFF, Program memory code protection is disabled
  6705                           ;	Data Memory Code Protection
  6706                           ;	CPD = OFF, Data memory code protection is disabled
  6707                           ;	Brown-out Reset Enable
  6708                           ;	BOREN = ON, Brown-out Reset enabled
  6709                           ;	Clock Out Enable
  6710                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6711                           ;	Internal/External Switchover
  6712                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6713                           ;	Fail-Safe Clock Monitor Enable
  6714                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6715  8007                     	org	32775
  6716  8007  3FE4               	dw	16356
  6717                           
  6718                           ;Config register CONFIG2 @ 0x8008
  6719                           ;	Flash Memory Self-Write Protection
  6720                           ;	WRT = OFF, Write protection off
  6721                           ;	PLL Enable
  6722                           ;	PLLEN = ON, 4x PLL enabled
  6723                           ;	Stack Overflow/Underflow Reset Enable
  6724                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6725                           ;	Brown-out Reset Voltage Selection
  6726                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6727                           ;	Low-Voltage Programming Enable
  6728                           ;	LVP = ON, Low-voltage programming enabled
  6729  8008                     	org	32776
  6730  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      79
    BANK1            80      0      22
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tm_Baje_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK0[9]), 

    Tm_Hubo_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK0[9]), 

    Tm_Procese_tiempo@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK0[9]), 

    Tm_Inicie_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1000ms(BANK0[9]), main@timer_1ms(BANK0[9]), 

    Ds_Procese_displays@dsp	PTR struct Ds_Display size(1) Largest target is 8
		 -> main@seven_seg(BANK0[8]), 

    Ds_Convertir_en_uni@dsp	PTR struct Ds_Display size(1) Largest target is 8
		 -> main@seven_seg(BANK0[8]), 

    Ds_Iniciar_displays@dsp	PTR struct Ds_Display size(1) Largest target is 8
		 -> main@seven_seg(BANK0[8]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _Ds_Procese_displays->_Ds_BCD
    _Ds_Procese_displays->_Ds_Encienda_Disp
    _Ds_Convertir_en_uni->___awdiv
    _Ds_Conversor_ADC->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _main->_Ds_Conversor_ADC
    _Ds_Conversor_ADC->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    7902
                                             45 BANK0     30    30      0
            _ADC_GetConversionResult
                     _ADC_Initialize
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                   _Ds_Conversor_ADC
                _Ds_Convertir_en_uni
                _Ds_Iniciar_displays
                _Ds_Procese_displays
                       _EUSART_Write
                 _EUSART_is_tx_ready
                  _SYSTEM_Initialize
            _TMR6_HasOverflowOccured
                    _TMR6_StartTimer
                  _Tm_Baje_periodico
                  _Tm_Hubo_periodico
                _Tm_Inicie_periodico
                  _Tm_Procese_tiempo
 ---------------------------------------------------------------------------------
 (1) _Tm_Procese_tiempo                                    5     5      0     231
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Tm_Inicie_periodico                                  4     2      2     328
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Hubo_periodico                                    1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Tm_Baje_periodico                                    2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR6_HasOverflowOccured                              1     1      0      45
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Procese_displays                                  3     3      0     825
                                              3 COMMON     3     3      0
                             _Ds_BCD
                   _Ds_Encienda_Disp
 ---------------------------------------------------------------------------------
 (2) _Ds_Encienda_Disp                                     3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ds_BCD                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Iniciar_displays                                  7     2      5     743
                                              0 COMMON     7     2      5
 ---------------------------------------------------------------------------------
 (1) _Ds_Convertir_en_uni                                  4     2      2    1643
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Ds_Conversor_ADC                                     8     6      2    3264
                                             37 BANK0      8     6      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     305
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_Initialize
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _Ds_Conversor_ADC
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Ds_Convertir_en_uni
     ___awdiv
     ___awmod
   _Ds_Iniciar_displays
   _Ds_Procese_displays
     _Ds_BCD
     _Ds_Encienda_Disp
   _EUSART_Write
   _EUSART_is_tx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR6_HasOverflowOccured
   _TMR6_StartTimer
   _Tm_Baje_periodico
   _Tm_Hubo_periodico
   _Tm_Inicie_periodico
   _Tm_Procese_tiempo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      73       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4B      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      16       8       27.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      73      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Aug 26 21:15:23 2021

                  __end_of_Ds_Convertir_en_uni 0134                                             l13 0F06  
                                           l32 0F36                                             l16 0EC4  
                                           l57 0F6E                __end_of_TMR6_HasOverflowOccured 0F37  
                                 ___awdiv@sign 0076                              ??_TMR6_StartTimer 0070  
                          __Umul8_16@word_mpld 0076                                            l103 0FD2  
                                          l130 0EFC                                            l211 0F58  
                                          l300 0FDD                                            l108 0F45  
                                          l220 0EC1                                            l310 0FE4  
                                          l142 0ED6                                            l214 0F17  
                                          l303 0FDF                                            l127 0EF4  
                                          l312 0FE6                                            l401 029A  
                                          l321 026A                                            l305 0FE1  
                                          l145 0EDC                                            l217 0F1C  
                                          l314 0FE7                                            l171 0EBE  
                                          l403 029B                                            l331 0270  
                                          l323 026C                                            l307 0FE2  
                                          l420 02A5                                            l412 02A0  
                                          l316 0FFF                                            l148 0ED0  
                                          l405 029C                                            l341 0276  
                                          l333 0271                                            l325 026D  
                                          l165 0EEA                                            l174 000A  
                                          l422 02A6                                            l414 02A2  
                                          l431 02AC                                            l407 029D  
                                          l343 0277                                            l327 026E  
                                          l168 0F29                                            l424 02A7  
                                          l416 02A3                                            l360 0281  
                                          l352 027C                                            l177 0ECA  
                                          l433 02AD                                            l409 029E  
                                          l345 0278                                            l337 0273  
                                          l329 026F                                            l513 0598  
                                          l450 02B7                                            l442 02B2  
                                          l418 02A4                                            l362 0282  
                                          l354 027E                                            l290 0FD7  
                                          l522 01F2                                            l283 0048  
                                          l435 02AE                                            l427 02A9  
                                          l371 0288                                            l347 0279  
                                          l339 0275                                            l452 02B8  
                                          l444 02B4                                            l364 0283  
                                          l356 027F                                            l292 0FD8  
                                          l516 0F8C                                            l461 02BE  
                                          l437 02AF                                            l429 02AB  
                                          l373 0289                                            l349 027A  
                                          l525 0EF2                                            l454 02B9  
                                          l446 02B5                                            l390 0293  
                                          l382 028E                                            l358 0280  
                                          l463 02BF                                            l439 02B0  
                                          l375 028A                                            l367 0285  
                                          l480 02C9                                            l472 02C4  
                                          l448 02B6                                            l392 0294  
                                          l384 0290                                            l296 0FDA  
                                          l288 0FD5                                            l528 0F10  
                                          l465 02C0                                            l457 02BB  
                                          l377 028B                                            l369 0287  
                                          l482 02CA                                            l474 02C6  
                                          l394 0295                                            l386 0291  
                                          l298 0FDC                                            l467 02C1  
                                          l459 02BD                                            l379 028C  
                                          l492 0088                                            l484 02CB  
                                          l476 02C7                                            l388 0292  
                                          l469 02C2                                            l397 0297  
                                          l478 02C8                                            l486 02F8  
                                          l399 0299                                            l489 0133  
                                          l845 0192                                            l858 00DB  
                                          l893 0252                                            l886 0267  
                                          l896 0267                                            _PR6 041D  
                                          u940 0F9B                                            u941 0F9A  
                                          u960 0FAB                                            u961 0FAA  
                                          u970 0F1C                                            u955 0FA0  
                                          u971 0F1B                                            u980 0139  
                                          u981 0138                                            u990 0144  
                                          u991 0143                 ?_EUSART_SetFramingErrorHandler 0070  
                                 ___awmod@sign 0076                                            wreg 0009  
                                 ___flmul@aexp 0032                                   ___flmul@bexp 0033  
                                 ___flmul@sign 002D                                   ___flmul@temp 0038  
                                 ___flmul@prod 0034                                   ___fltol@exp1 0044  
                                         l1101 07E3                                           l1110 0FAF  
                                         l2000 0093                                           l2010 00A7  
                                         l2002 0095                                           l1108 0F9F  
                                         l2100 05E4                                           l2020 00C2  
                                         l2012 00AC                                           l2004 0099  
                                         l1133 031B                                           l2102 05E6  
                                         l2022 00C7                                           l2014 00B0  
                                         l2006 009E                                           l1135 03A4  
                                         l2200 07DE                                           l2120 0642  
                                         l2112 0601                                           l2104 05EE  
                                         l2040 021B                                           l2032 01F3  
                                         l2016 00B4                                           l2008 00A4  
                                         l2024 00CD                                           l2202 07DF  
                                         l2130 068A                                           l2122 065C  
                                         l2114 060E                                           l2106 05F3  
                                         l2042 021C                                           l2034 01FF  
                                         l1146 0370                                           l2210 02FF  
                                         l2026 00D2                                           l2018 00BE  
                                         l1147 037C                                           l1139 0356  
                                         l2204 07E7                                           l2140 06C0  
                                         l2132 0691                                           l2124 0669  
                                         l2116 061B                                           l2108 05F8  
                                         l2044 0224                                           l2220 032C  
                                         l2212 0303                                           l2028 00D7  
                                         l2300 0F52                                           l2150 0721  
                                         l2142 06D4                                           l2134 069E  
                                         l2126 0676                                           l2118 0635  
                                         l2070 059F                                           l2062 0249  
                                         l2054 0232                                           l2046 0226  
                                         l2038 0208                                           l2230 034F  
                                         l2222 0331                                           l2214 0313  
                                         l2310 0020                                           l2302 0F55  
                                         l1095 076B                                           l2160 0740  
                                         l2152 0728                                           l2144 06E1  
                                         l2136 06A5                                           l2128 067D  
                                         l2080 05B2                                           l2072 05A3  
                                         l2064 0257                                           l2048 022A  
                                         l2056 0242                                           l2240 037E  
                                         l2232 035D                                           l2224 033C  
                                         l2216 0323                                           l2208 02FA  
                                         l2312 0028                                           l2304 0F70  
                                         l2320 0194                                           l1089 07EF  
                                         l2170 0754                                           l2162 0747  
                                         l2154 0734                                           l2146 06F5  
                                         l2138 06B9                                           l2090 05CD  
                                         l2082 05BA                                           l2074 05A7  
                                         l2066 025C                                           l2242 0392  
                                         l2234 0366                                           l2226 0343  
                                         l2314 0030                                           l2306 000C  
                                         l2402 0F08                                           l2322 019C  
                                         l2330 01BE                                           l2180 077D  
                                         l2172 0768                                           l2156 073B  
                                         l2164 074B                                           l2148 070A  
                                         l2092 05D1                                           l2084 05BC  
                                         l2076 05A8                                           l2068 0599  
                                         l2244 0397                                           l2236 036A  
                                         l2228 0347                                           l2404 0049  
                                         l2412 00DD                                           l2316 0038  
                                         l2308 0018                                           l2340 0487  
                                         l2260 0F35                                           l2252 0EC2  
                                         l2332 01D2                                           l2324 01A5  
                                         l2190 07B4                                           l2182 0781  
                                         l2166 074F                                           l2158 073F  
                                         l2094 05D2                                           l2086 05C4  
                                         l2078 05AD                                           l2246 039B  
                                         l2238 0374                                           l2406 0052  
                                         l2414 00EF                                           l2318 0040  
                                         l2350 04B5                                           l2342 0493  
                                         l2334 0470                                           l2270 0F42  
                                         l2254 0F2A                                           l2326 01AE  
                                         l2280 0F1E                                           l2192 07C2  
                                         l2184 0799                                           l2176 0770  
                                         l2168 0750                                           l2096 05D7  
                                         l2088 05C9                                           l2248 039C  
                                         l2408 0084                                           l2416 00FE  
                                         l2360 04E8                                           l2352 04C1  
                                         l2344 0497                                           l2336 0471  
                                         l2272 0F44                                           l2264 0F37  
                                         l2256 0F2F                                           l2328 01B3  
                                         l2440 03BF                                           l2432 03A5  
                                         l2290 0EC5                                           l2282 0F28  
                                         l2194 07CB                                           l2178 0775  
                                         l2186 079D                                           l2098 05DC  
                                         l2418 0120                                           l2370 0517  
                                         l2362 04EC                                           l2354 04C6  
                                         l2346 049F                                           l2338 0480  
                                         l2266 0F38                                           l2258 0F34  
                                         l2450 03F2                                           l2442 03D6  
                                         l2434 03A8                                           l2284 0EBC  
                                         l2196 07CD                                           l2188 07AA  
                                         l2540 0FF1                                           l2380 0542  
                                         l2372 051C                                           l2364 04F5  
                                         l2356 04D5                                           l2348 04AE  
                                         l2276 0EF4                                           l2268 0F3D  
                                         l1900 0F61                                           l2460 042C  
                                         l2452 03F6                                           l2444 03D9  
                                         l2436 03B0                                           l2286 0004  
                                         l2198 07DA                                           l2542 02D5  
                                         l2390 0570                                           l2382 054B  
                                         l2374 052B                                           l2366 0504  
                                         l2358 04DC                                           l2278 0EF9  
                                         l1910 0FC2                                           l1902 0F64  
                                         l2294 0F46                                           l2462 0431  
                                         l2454 03F9                                           l2470 0445  
                                         l2446 03E1                                           l2438 03BC  
                                         l2384 055A                                           l2376 0532  
                                         l2368 050B                                           l2392 0579  
                                         l1920 0EE7                                           l1912 0FC9  
                                         l1904 0F69                                           l2296 0F4C  
                                         l2472 044D                                           l2464 0436  
                                         l2456 0401                                           l2448 03E9  
                                         l1930 0FD4                                           l2538 0584  
                                         l2386 055F                                           l2378 053E  
                                         l1914 0FD0                                           l1906 0FB0  
                                         l1922 0F11                                           l2298 0F4F  
                                         l2474 0455                                           l2466 043B  
                                         l2458 0428                                           l1940 0269  
                                         l2388 056B                                           l1916 0EE3  
                                         l1908 0FBB                                           l1924 0F14  
                                         l2476 0464                                           l2468 0440  
                                         l1950 0134                                           l1934 0FE9  
                                         l1918 0EE6                                           l1870 0ECB  
                                         l1926 0F15                                           l2398 0EEC  
                                         l1880 0FA6                                           l1872 0F8E  
                                         l1960 0144                                           l1952 0135  
                                         l1944 02CD                                           l1928 0EBF  
                                         l1882 0FAB                                           l1874 0F90  
                                         l1970 0158                                           l1962 0149  
                                         l1954 0139                                           l1866 0ED1  
                                         l1890 0F01                                           l1876 0F97  
                                         l1980 0178                                           l1972 015D  
                                         l1964 014D                                           l1956 013E  
                                         l1868 0ED7                                           l1892 0F03  
                                         l1878 0F9B                                           l1990 018E  
                                         l1982 0179                                           l1974 0161  
                                         l1966 014F                                           l1958 0140  
                                         l1894 0F59                                           l1886 0EFD  
                                         l1984 017E                                           l1976 0165  
                                         l1968 0155                                           l1896 0F5C  
                                         l1888 0F00                                           l1978 0174  
                                         l1986 0184                                           l1994 0089  
                                         l1898 0F5F                                           l1988 0189  
                                         l1996 008A                                           l1998 008E  
                                         u1000 0155                                           u1001 0154  
                                         u1020 0165                                           u1100 00A4  
                                         u1021 0164                                           u1101 00A3  
                                         u1015 0159                                           u1200 0231  
                                         u1040 0174                                           u1120 00B4  
                                         u1201 0230                                           u1041 0173  
                                         u1121 00B3                                           u1130 00BE  
                                         u1035 0166                                           u1131 00BD  
                                         u1115 00A8                                           u1300 05D1  
                                         u1220 0241                                           u1060 0184  
                                         u1301 05D0                                           u1221 0240  
                                         u1061 0183                                           u1045 0170  
                                         u1310 05D7                                           u1230 0248  
                                         u1070 0189                                           u1150 00CD  
                                         u1311 05D6                                           u1231 0247  
                                         u1215 0233                                           u1071 0188  
                                         u1055 017A                                           u1151 00CC  
                                         u1135 00BA                                           u1320 05DC  
                                         u1160 00D2                                           u1080 008E  
                                         u1321 05DB                                           u1161 00D1  
                                         u1145 00C3                                           u1081 008D  
                                         u1410 073F                                           u1330 05F3  
                                         u1250 0257                                           u1170 01FF  
                                         u1090 0099                                           u1411 073E  
                                         u1331 05F2                                           u1251 0256  
                                         u1171 01FE                                           u1091 0098  
                                         u1500 07AA                                           u1340 05F8  
                                         u1260 025C                                           u1180 0215  
                                         u1501 07A9                                           u1405 0735  
                                         u1341 05F7                                           u1261 025B  
                                         u1245 024A                                           _LATA 010C  
                                         u1510 07C2                                           u1430 074F  
                                         u1270 05A7                                           u1190 022A  
                                         _LATB 010D                                           u1511 07C1  
                                         u1431 074E                                           u1271 05A6  
                                         u1191 0229                                           u1520 07DE  
                                         u1440 0754                                           u1280 05AD  
                                         u1521 07DD                                           u1505 07A6  
                                         u1441 0753                                           u1425 0741  
                                         u1281 05AC                                           u1185 0211  
                                         u1450 0768                                           u1370 0700  
                                         u1290 05B2                                           u1610 036A  
                                         u1530 02FF                                           u1515 07BE  
                                         u1451 0767                                           u1355 0677  
                                         u1291 05B1                                           u1611 0369  
                                         u1531 02FE                                           u1460 076F  
                                         u1380 0717                                           u1620 0370  
                                         u1540 0303                                           u1700 0EF9  
                                         u1461 076E                                           u1365 06A6  
                                         u1621 036F                                           u1605 0360  
                                         u1541 0302                                           u1701 0EF8  
                                         u1470 0775                                           u1630 0374  
                                         u1550 0323                                           u1710 019C  
                                         u1471 0774                                           u1375 06FC  
                                         u1631 0373                                           u1551 0322  
                                         u1711 019B                                           u1480 0781  
                                         u1640 0388                                           u1720 01AE  
                                         u1481 0780                                           u1385 0713  
                                         u1721 01AD                                           u1490 078F  
                                         u1650 0397                                           u1570 0342  
                                         u1730 01D2                                           u1395 0722  
                                         u1651 0396                                           u1571 0341  
                                         u1731 01D1                                           u1660 039B  
                                         u1740 0480                                           u1820 03E1  
                                         u1661 039A                                           u1645 0384  
                                         u1565 0336                                           u1741 047F  
                                         u1821 03E0                                           u1590 035C  
                                         u1750 04AE                                           u1670 0F34  
                                         u1830 03F2                                           u1495 078B  
                                         u1591 035B                                           u1751 04AD  
                                         u1671 0F33                                           u1831 03F1  
                                         u1760 04D5                                           u1680 0F3D  
                                         u1840 0401                                           u1585 0350  
                                         u1761 04D4                                           u1681 0F3C  
                                         u1841 0400                                           u1770 0504  
                                         u1690 0F42                                           u1850 044D  
                                         u1771 0503                                           u1691 0F41  
                                         u1851 044C                                           u1780 052B  
                                         u1781 052A                                           u1790 055A  
                                         u1791 0559                                           _PLLR 04D6  
                                         _TMR6 041C                     Ds_Convertir_en_uni@voltaje 0079  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _Pack 00A0                                           _main 03A5  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                       __end_of_Ds_Conversor_ADC 0089  
                      Ds_Encienda_Disp@dispNum 0072                                           start 0002  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 000C  
                __end_of_OSCILLATOR_Initialize 0F1D                                  ___fltol@sign1 0043  
                                        ?_main 0070                                __end_of___awdiv 0193  
                              __end_of___awmod 00DC                                __end_of___flmul 07F0  
                              __end_of___fltol 0268                                ___awdiv@divisor 0070  
                                        _T6CON 041E                                ___awdiv@counter 0075  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
             __size_of_ADC_GetConversionResult 0006                              ?_Ds_Encienda_Disp 0070  
                               Ds_BCD@segmento 0072                             ??_Ds_Encienda_Disp 0070  
                               _WDT_Initialize 0EBF                                          status 0003  
                                        wtemp0 007E                    __end_of_Tm_Inicie_periodico 0F8D  
                              __initialization 07F0                            _Ds_Procese_displays 046F  
                                 __end_of_main 046F                              _Tm_Baje_periodico 0F07  
                               ??_EUSART_Write 0070                             ?_Tm_Baje_periodico 0070  
                                       ??_main 004D                   __size_of_Ds_Iniciar_displays 003E  
                       __end_of_WDT_Initialize 0EC2                                _TMR6_Initialize 0EFD  
                __size_of_ADC_IsConversionDone 0007                            ??_Tm_Baje_periodico 0070  
                         ?_Ds_Procese_displays 0070              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00B2                                         _ADRESH 009C  
                                       _ADRESL 009B                               ___awdiv@dividend 0072  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                     __end_of_EUSART_is_tx_ready 0F46  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
             __size_of_TMR6_HasOverflowOccured 000D                               __end_of___xxtofl 03A5  
                                       _Ds_BCD 0268                      __end_of_Tm_Baje_periodico 0F11  
                                    ??___awdiv 0074                                      ??___awmod 0074  
                                    ??___flmul 0028                                      ??___fltol 003E  
                            _Tm_Hubo_periodico 0EEB                               ___awdiv@quotient 0077  
                              ___awmod@divisor 0070                             ?_Tm_Hubo_periodico 0070  
                              ___awmod@counter 0075                                  main@seven_seg 0063  
                                main@timer_1ms 005A                             __size_of__Umul8_16 0023  
                              ?_WDT_Initialize 0070                          ??_Ds_Procese_displays 0073  
                          ??_Tm_Hubo_periodico 0070                                   ___xxtofl@arg 007A  
                                 ___xxtofl@exp 0079                              _SYSTEM_Initialize 0F46  
                                 ___xxtofl@val 0070                        __end_of__initialization 07FD  
                        Ds_Iniciar_displays@d1 0070                          Ds_Iniciar_displays@d2 0071  
                        Ds_Iniciar_displays@d3 0072                          Ds_Iniciar_displays@tA 0074  
                        Ds_Iniciar_displays@tE 0073                             ?_SYSTEM_Initialize 0070  
                              _TMR6_StartTimer 0EC2                                     ___fltol@f1 003A  
                    __end_of_Tm_Hubo_periodico 0EF3                   __size_of_ADC_StartConversion 0003  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0072  
                      __end_of_TMR6_Initialize 0F07                        _ADC_GetConversionResult 0EC5  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                    __end_of_SYSTEM_Initialize 0F59                                     __pbssBANK0 006B  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0EFD  
                                      ?_Ds_BCD 0070                              ?_Ds_Conversor_ADC 0045  
                            __end_of__Umul8_16 0FB0                                     __pmaintext 03A5  
                           ??_Ds_Conversor_ADC 007E                     __size_of_Tm_Baje_periodico 000A  
                                      _BAUDCON 019F                                        _APFCON0 011D  
                                      _APFCON1 011E                        __size_of_ADC_Initialize 0008  
                                    ?___xxtofl 0070                   __size_of_Ds_Convertir_en_uni 0058  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0072  
                      __end_of_TMR6_StartTimer 0EC5                              _Tm_Procese_tiempo 0193  
                      _TMR6_HasOverflowOccured 0F2A                             ?_Tm_Procese_tiempo 0070  
                          _Ds_Iniciar_displays 000B                                __size_of_Ds_BCD 0091  
                    __size_of_Ds_Encienda_Disp 002D                           _ADC_InterruptHandler 00AE  
                          ??_Tm_Procese_tiempo 0070                     __size_of_Tm_Hubo_periodico 0008  
                                      ___awdiv 0134                                        ___awmod 0089  
                                      ___flmul 0599                                        ___fltol 01F3  
                    ??_ADC_GetConversionResult 0072                               ?_TMR6_Initialize 0070  
                                      __ptext1 0193                                        __ptext2 0F6F  
                                      __ptext3 0EEB                                        __ptext4 0F07  
                                      __ptext5 0EC2                                        __ptext6 0F2A  
                                      __ptext7 0F46                                        __ptext8 0EBF  
                                      __ptext9 0EFD                           ?_Ds_Iniciar_displays 0070  
                        _OSCILLATOR_Initialize 0F11                                     ??___xxtofl 0074  
                             ___awmod@dividend 0072                       ??_PIN_MANAGER_Initialize 0070  
                    __end_of_Tm_Procese_tiempo 01F3                                      _T6CONbits 041E  
                   __size_of_SYSTEM_Initialize 0013                                        clrloop0 0EDE  
                         end_of_initialization 07FD                      Ds_Conversor_ADC@pendiente 0047  
        __end_of_EUSART_SetOverrunErrorHandler 0EDD         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0ED7                         Ds_Procese_displays@dsp 0075  
                            _EUSART_Initialize 0FB0                   __end_of_ADC_IsConversionDone 000B  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                       Ds_Conversor_ADC@adcOUT 0045                             _EUSART_is_tx_ready 0F37  
                 __size_of_Tm_Inicie_periodico 001E                            ??_EUSART_Initialize 0072  
                             ??_WDT_Initialize 0070                          ??_Ds_Iniciar_displays 0075  
                          ?_EUSART_is_tx_ready 0070                  TMR6_HasOverflowOccured@status 0070  
                                ___xxtofl@sign 0078                          __size_of_EUSART_Write 000A  
                          _ADC_StartConversion 0EBC                      ??_TMR6_HasOverflowOccured 0070  
                       Ds_Iniciar_displays@dsp 0076                __size_of_EUSART_SetErrorHandler 0006  
                             ?_TMR6_StartTimer 0070                                    ___flmul@grs 002E  
                    __end_of_EUSART_Initialize 0FD3                           ??_EUSART_is_tx_ready 0070  
                                    _TXSTAbits 019E                                 __end_of_Ds_BCD 02F9  
                         ?_ADC_StartConversion 0070                     _EUSART_DefaultErrorHandler 0000  
                                 _EUSART_Write 0EF3                    __end_of_Ds_Procese_displays 0599  
                               _ADC_Initialize 0EE3                         ?_OSCILLATOR_Initialize 0070  
                         Tm_Procese_tiempo@ctp 0074                            start_initialization 07F0  
                                  _AN1_Channel 006D                     __size_of_Tm_Procese_tiempo 0060  
              __size_of_PIN_MANAGER_Initialize 0016                         _EUSART_is_tx_ready$291 0070  
                                     ??_Ds_BCD 0070                               _Ds_Encienda_Disp 0FD3  
                          _Ds_Convertir_en_uni 00DC                 ?_EUSART_SetOverrunErrorHandler 0070  
                        ??_ADC_StartConversion 0070                         Tm_Inicie_periodico@ctp 0073  
                   _EUSART_FramingErrorHandler 00B4                         _EUSART_SetErrorHandler 0ECB  
                       __end_of_ADC_Initialize 0EEB                                      __Umul8_16 0F8D  
                    __size_of_Ds_Conversor_ADC 0040                           ?_Ds_Convertir_en_uni 0079  
                                    ___flmul@a 0024                                      ___flmul@b 0020  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                         _ADC_IsConversionDone 0004                              __size_of___xxtofl 00AC  
                   __size_of_EUSART_Initialize 0023                         _PIN_MANAGER_Initialize 0F59  
                            _ADC_SelectChannel 0F1D                                       ?___awdiv 0070  
                                     ?___awmod 0070                                       ?___flmul 0020  
                                     ?___fltol 003A                                     ?__Umul8_16 0070  
                              ?_ADC_Initialize 0070                             ?_ADC_SelectChannel 0070  
                        ??_Ds_Convertir_en_uni 007B                            ??_ADC_SelectChannel 0070  
                        ?_ADC_IsConversionDone 0070                            _Tm_Inicie_periodico 0F6F  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                      clear_ram0 0EDD  
                            _eusartRxLastError 006E                      __end_of_ADC_SelectChannel 0F2A  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
                                     _PIR3bits 0013                                      _valor_ADC 006B  
                         ?_Tm_Inicie_periodico 0070              _EUSART_DefaultOverrunErrorHandler 0000  
                             main@timer_1000ms 0051                                     _ADCON0bits 009D  
                     ADC_SelectChannel@channel 0071                       __size_of_TMR6_Initialize 000A  
                     ?_ADC_GetConversionResult 0070                         Ds_Convertir_en_uni@dsp 007C  
                        ??_Tm_Inicie_periodico 0072                    __end_of_Ds_Iniciar_displays 0049  
                      ??_OSCILLATOR_Initialize 0070                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 00B0                               __size_of___awdiv 005F  
                             __size_of___awmod 0053                               __size_of___flmul 0257  
                             __size_of___fltol 0075                               _Ds_Conversor_ADC 0049  
                       ??_ADC_IsConversionDone 0070                       __end_of_Ds_Encienda_Disp 1000  
                   Tm_Inicie_periodico@periodo 0070                                       ___xxtofl 02F9  
                                     __ptext10 0F59                                       __ptext11 0F11  
                                     __ptext20 0FD3                                       __ptext12 0FB0  
                                     __ptext21 0268                                       __ptext13 0ED7  
                                     __ptext30 0F8D                                       __ptext22 000B  
                                     __ptext14 0ED1                                       __ptext31 0EBC  
                                     __ptext23 00DC                                       __ptext15 0ECB  
                                     __ptext32 0F1D                                       __ptext24 0089  
                                     __ptext16 0EE3                                       __ptext33 0004  
                                     __ptext25 0134                                       __ptext17 0F37  
                                     __ptext34 0EC5                                       __ptext26 0049  
                                     __ptext18 0EF3                                       __ptext27 02F9  
                                     __ptext19 046F                                       __ptext28 01F3  
                                     __ptext29 0599                                  __size_of_main 00CA  
                  __size_of_EUSART_is_tx_ready 000F                        ?_EUSART_SetErrorHandler 0070  
                         Tm_Baje_periodico@ctp 0071                     __size_of_ADC_SelectChannel 000D  
                     __size_of_TMR6_StartTimer 0003  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                     _volt_ADC 00AC          __end_of_EUSART_SetFramingErrorHandler 0ED7  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0ED1  
                     ?_TMR6_HasOverflowOccured 0070                   __size_of_Ds_Procese_displays 012A  
                         Tm_Hubo_periodico@ctp 0070                        __size_of_WDT_Initialize 0003  
                  __end_of_ADC_StartConversion 0EBF                        ?_PIN_MANAGER_Initialize 0070  
                            ??_TMR6_Initialize 0070                __end_of_ADC_GetConversionResult 0ECB  
               __end_of_EUSART_SetErrorHandler 0ED1                               ??_ADC_Initialize 0070  
EUSART_SetFramingErrorHandler@interruptHandler 0070                         __Umul8_16@multiplicand 0070  
                      Ds_Conversor_ADC@voltios 004B                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 0F6F                           __Umul8_16@multiplier 0078  
                            __Umul8_16@product 0074  
