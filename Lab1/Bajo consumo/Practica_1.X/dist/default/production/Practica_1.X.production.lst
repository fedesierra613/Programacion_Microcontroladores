

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Sep 10 02:56:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F1827 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0118                     	;# 
   145  0119                     	;# 
   146  011A                     	;# 
   147  011B                     	;# 
   148  011D                     	;# 
   149  011E                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019D                     	;# 
   170  019E                     	;# 
   171  019F                     	;# 
   172  020C                     	;# 
   173  020D                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0213                     	;# 
   180  0214                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0216                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0217                     	;# 
   189  0219                     	;# 
   190  021A                     	;# 
   191  021B                     	;# 
   192  021C                     	;# 
   193  021D                     	;# 
   194  021E                     	;# 
   195  021F                     	;# 
   196  0291                     	;# 
   197  0291                     	;# 
   198  0292                     	;# 
   199  0293                     	;# 
   200  0294                     	;# 
   201  0295                     	;# 
   202  0295                     	;# 
   203  0296                     	;# 
   204  0298                     	;# 
   205  0298                     	;# 
   206  0299                     	;# 
   207  029A                     	;# 
   208  029B                     	;# 
   209  029C                     	;# 
   210  029C                     	;# 
   211  029D                     	;# 
   212  029E                     	;# 
   213  029E                     	;# 
   214  0311                     	;# 
   215  0311                     	;# 
   216  0312                     	;# 
   217  0313                     	;# 
   218  0318                     	;# 
   219  0318                     	;# 
   220  0319                     	;# 
   221  031A                     	;# 
   222  0394                     	;# 
   223  0395                     	;# 
   224  0396                     	;# 
   225  039A                     	;# 
   226  039C                     	;# 
   227  039D                     	;# 
   228  039E                     	;# 
   229  039F                     	;# 
   230  0415                     	;# 
   231  0416                     	;# 
   232  0417                     	;# 
   233  041C                     	;# 
   234  041D                     	;# 
   235  041E                     	;# 
   236  0FE4                     	;# 
   237  0FE5                     	;# 
   238  0FE6                     	;# 
   239  0FE7                     	;# 
   240  0FE8                     	;# 
   241  0FE9                     	;# 
   242  0FEA                     	;# 
   243  0FEB                     	;# 
   244  0FED                     	;# 
   245  0FEE                     	;# 
   246  0FEF                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  0111                     	;# 
   296  0112                     	;# 
   297  0113                     	;# 
   298  0114                     	;# 
   299  0115                     	;# 
   300  0116                     	;# 
   301  0117                     	;# 
   302  0118                     	;# 
   303  0119                     	;# 
   304  011A                     	;# 
   305  011B                     	;# 
   306  011D                     	;# 
   307  011E                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0191                     	;# 
   311  0191                     	;# 
   312  0192                     	;# 
   313  0193                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0194                     	;# 
   317  0195                     	;# 
   318  0196                     	;# 
   319  0199                     	;# 
   320  019A                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019C                     	;# 
   326  019C                     	;# 
   327  019D                     	;# 
   328  019E                     	;# 
   329  019F                     	;# 
   330  020C                     	;# 
   331  020D                     	;# 
   332  0211                     	;# 
   333  0211                     	;# 
   334  0212                     	;# 
   335  0212                     	;# 
   336  0213                     	;# 
   337  0213                     	;# 
   338  0214                     	;# 
   339  0214                     	;# 
   340  0215                     	;# 
   341  0215                     	;# 
   342  0215                     	;# 
   343  0216                     	;# 
   344  0216                     	;# 
   345  0217                     	;# 
   346  0217                     	;# 
   347  0219                     	;# 
   348  021A                     	;# 
   349  021B                     	;# 
   350  021C                     	;# 
   351  021D                     	;# 
   352  021E                     	;# 
   353  021F                     	;# 
   354  0291                     	;# 
   355  0291                     	;# 
   356  0292                     	;# 
   357  0293                     	;# 
   358  0294                     	;# 
   359  0295                     	;# 
   360  0295                     	;# 
   361  0296                     	;# 
   362  0298                     	;# 
   363  0298                     	;# 
   364  0299                     	;# 
   365  029A                     	;# 
   366  029B                     	;# 
   367  029C                     	;# 
   368  029C                     	;# 
   369  029D                     	;# 
   370  029E                     	;# 
   371  029E                     	;# 
   372  0311                     	;# 
   373  0311                     	;# 
   374  0312                     	;# 
   375  0313                     	;# 
   376  0318                     	;# 
   377  0318                     	;# 
   378  0319                     	;# 
   379  031A                     	;# 
   380  0394                     	;# 
   381  0395                     	;# 
   382  0396                     	;# 
   383  039A                     	;# 
   384  039C                     	;# 
   385  039D                     	;# 
   386  039E                     	;# 
   387  039F                     	;# 
   388  0415                     	;# 
   389  0416                     	;# 
   390  0417                     	;# 
   391  041C                     	;# 
   392  041D                     	;# 
   393  041E                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0016                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001C                     	;# 
   432  001E                     	;# 
   433  001F                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0094                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  0111                     	;# 
   454  0112                     	;# 
   455  0113                     	;# 
   456  0114                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011D                     	;# 
   465  011E                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  0191                     	;# 
   469  0191                     	;# 
   470  0192                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0199                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  020C                     	;# 
   489  020D                     	;# 
   490  0211                     	;# 
   491  0211                     	;# 
   492  0212                     	;# 
   493  0212                     	;# 
   494  0213                     	;# 
   495  0213                     	;# 
   496  0214                     	;# 
   497  0214                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0216                     	;# 
   502  0216                     	;# 
   503  0217                     	;# 
   504  0217                     	;# 
   505  0219                     	;# 
   506  021A                     	;# 
   507  021B                     	;# 
   508  021C                     	;# 
   509  021D                     	;# 
   510  021E                     	;# 
   511  021F                     	;# 
   512  0291                     	;# 
   513  0291                     	;# 
   514  0292                     	;# 
   515  0293                     	;# 
   516  0294                     	;# 
   517  0295                     	;# 
   518  0295                     	;# 
   519  0296                     	;# 
   520  0298                     	;# 
   521  0298                     	;# 
   522  0299                     	;# 
   523  029A                     	;# 
   524  029B                     	;# 
   525  029C                     	;# 
   526  029C                     	;# 
   527  029D                     	;# 
   528  029E                     	;# 
   529  029E                     	;# 
   530  0311                     	;# 
   531  0311                     	;# 
   532  0312                     	;# 
   533  0313                     	;# 
   534  0318                     	;# 
   535  0318                     	;# 
   536  0319                     	;# 
   537  031A                     	;# 
   538  0394                     	;# 
   539  0395                     	;# 
   540  0396                     	;# 
   541  039A                     	;# 
   542  039C                     	;# 
   543  039D                     	;# 
   544  039E                     	;# 
   545  039F                     	;# 
   546  0415                     	;# 
   547  0416                     	;# 
   548  0417                     	;# 
   549  041C                     	;# 
   550  041D                     	;# 
   551  041E                     	;# 
   552  0FE4                     	;# 
   553  0FE5                     	;# 
   554  0FE6                     	;# 
   555  0FE7                     	;# 
   556  0FE8                     	;# 
   557  0FE9                     	;# 
   558  0FEA                     	;# 
   559  0FEB                     	;# 
   560  0FED                     	;# 
   561  0FEE                     	;# 
   562  0FEF                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  0011                     	;# 
   578  0012                     	;# 
   579  0013                     	;# 
   580  0014                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0016                     	;# 
   584  0017                     	;# 
   585  0018                     	;# 
   586  0019                     	;# 
   587  001A                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001E                     	;# 
   591  001F                     	;# 
   592  008C                     	;# 
   593  008D                     	;# 
   594  0091                     	;# 
   595  0092                     	;# 
   596  0093                     	;# 
   597  0094                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0097                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009A                     	;# 
   604  009B                     	;# 
   605  009B                     	;# 
   606  009C                     	;# 
   607  009D                     	;# 
   608  009E                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  0111                     	;# 
   612  0112                     	;# 
   613  0113                     	;# 
   614  0114                     	;# 
   615  0115                     	;# 
   616  0116                     	;# 
   617  0117                     	;# 
   618  0118                     	;# 
   619  0119                     	;# 
   620  011A                     	;# 
   621  011B                     	;# 
   622  011D                     	;# 
   623  011E                     	;# 
   624  018C                     	;# 
   625  018D                     	;# 
   626  0191                     	;# 
   627  0191                     	;# 
   628  0192                     	;# 
   629  0193                     	;# 
   630  0193                     	;# 
   631  0193                     	;# 
   632  0194                     	;# 
   633  0195                     	;# 
   634  0196                     	;# 
   635  0199                     	;# 
   636  019A                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019C                     	;# 
   642  019C                     	;# 
   643  019D                     	;# 
   644  019E                     	;# 
   645  019F                     	;# 
   646  020C                     	;# 
   647  020D                     	;# 
   648  0211                     	;# 
   649  0211                     	;# 
   650  0212                     	;# 
   651  0212                     	;# 
   652  0213                     	;# 
   653  0213                     	;# 
   654  0214                     	;# 
   655  0214                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0216                     	;# 
   660  0216                     	;# 
   661  0217                     	;# 
   662  0217                     	;# 
   663  0219                     	;# 
   664  021A                     	;# 
   665  021B                     	;# 
   666  021C                     	;# 
   667  021D                     	;# 
   668  021E                     	;# 
   669  021F                     	;# 
   670  0291                     	;# 
   671  0291                     	;# 
   672  0292                     	;# 
   673  0293                     	;# 
   674  0294                     	;# 
   675  0295                     	;# 
   676  0295                     	;# 
   677  0296                     	;# 
   678  0298                     	;# 
   679  0298                     	;# 
   680  0299                     	;# 
   681  029A                     	;# 
   682  029B                     	;# 
   683  029C                     	;# 
   684  029C                     	;# 
   685  029D                     	;# 
   686  029E                     	;# 
   687  029E                     	;# 
   688  0311                     	;# 
   689  0311                     	;# 
   690  0312                     	;# 
   691  0313                     	;# 
   692  0318                     	;# 
   693  0318                     	;# 
   694  0319                     	;# 
   695  031A                     	;# 
   696  0394                     	;# 
   697  0395                     	;# 
   698  0396                     	;# 
   699  039A                     	;# 
   700  039C                     	;# 
   701  039D                     	;# 
   702  039E                     	;# 
   703  039F                     	;# 
   704  0415                     	;# 
   705  0416                     	;# 
   706  0417                     	;# 
   707  041C                     	;# 
   708  041D                     	;# 
   709  041E                     	;# 
   710  0FE4                     	;# 
   711  0FE5                     	;# 
   712  0FE6                     	;# 
   713  0FE7                     	;# 
   714  0FE8                     	;# 
   715  0FE9                     	;# 
   716  0FEA                     	;# 
   717  0FEB                     	;# 
   718  0FED                     	;# 
   719  0FEE                     	;# 
   720  0FEF                     	;# 
   721  0000                     	;# 
   722  0001                     	;# 
   723  0002                     	;# 
   724  0003                     	;# 
   725  0004                     	;# 
   726  0005                     	;# 
   727  0006                     	;# 
   728  0007                     	;# 
   729  0008                     	;# 
   730  0009                     	;# 
   731  000A                     	;# 
   732  000B                     	;# 
   733  000C                     	;# 
   734  000D                     	;# 
   735  0011                     	;# 
   736  0012                     	;# 
   737  0013                     	;# 
   738  0014                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  001E                     	;# 
   749  001F                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  0091                     	;# 
   753  0092                     	;# 
   754  0093                     	;# 
   755  0094                     	;# 
   756  0095                     	;# 
   757  0096                     	;# 
   758  0097                     	;# 
   759  0098                     	;# 
   760  0099                     	;# 
   761  009A                     	;# 
   762  009B                     	;# 
   763  009B                     	;# 
   764  009C                     	;# 
   765  009D                     	;# 
   766  009E                     	;# 
   767  010C                     	;# 
   768  010D                     	;# 
   769  0111                     	;# 
   770  0112                     	;# 
   771  0113                     	;# 
   772  0114                     	;# 
   773  0115                     	;# 
   774  0116                     	;# 
   775  0117                     	;# 
   776  0118                     	;# 
   777  0119                     	;# 
   778  011A                     	;# 
   779  011B                     	;# 
   780  011D                     	;# 
   781  011E                     	;# 
   782  018C                     	;# 
   783  018D                     	;# 
   784  0191                     	;# 
   785  0191                     	;# 
   786  0192                     	;# 
   787  0193                     	;# 
   788  0193                     	;# 
   789  0193                     	;# 
   790  0194                     	;# 
   791  0195                     	;# 
   792  0196                     	;# 
   793  0199                     	;# 
   794  019A                     	;# 
   795  019B                     	;# 
   796  019B                     	;# 
   797  019B                     	;# 
   798  019B                     	;# 
   799  019C                     	;# 
   800  019C                     	;# 
   801  019D                     	;# 
   802  019E                     	;# 
   803  019F                     	;# 
   804  020C                     	;# 
   805  020D                     	;# 
   806  0211                     	;# 
   807  0211                     	;# 
   808  0212                     	;# 
   809  0212                     	;# 
   810  0213                     	;# 
   811  0213                     	;# 
   812  0214                     	;# 
   813  0214                     	;# 
   814  0215                     	;# 
   815  0215                     	;# 
   816  0215                     	;# 
   817  0216                     	;# 
   818  0216                     	;# 
   819  0217                     	;# 
   820  0217                     	;# 
   821  0219                     	;# 
   822  021A                     	;# 
   823  021B                     	;# 
   824  021C                     	;# 
   825  021D                     	;# 
   826  021E                     	;# 
   827  021F                     	;# 
   828  0291                     	;# 
   829  0291                     	;# 
   830  0292                     	;# 
   831  0293                     	;# 
   832  0294                     	;# 
   833  0295                     	;# 
   834  0295                     	;# 
   835  0296                     	;# 
   836  0298                     	;# 
   837  0298                     	;# 
   838  0299                     	;# 
   839  029A                     	;# 
   840  029B                     	;# 
   841  029C                     	;# 
   842  029C                     	;# 
   843  029D                     	;# 
   844  029E                     	;# 
   845  029E                     	;# 
   846  0311                     	;# 
   847  0311                     	;# 
   848  0312                     	;# 
   849  0313                     	;# 
   850  0318                     	;# 
   851  0318                     	;# 
   852  0319                     	;# 
   853  031A                     	;# 
   854  0394                     	;# 
   855  0395                     	;# 
   856  0396                     	;# 
   857  039A                     	;# 
   858  039C                     	;# 
   859  039D                     	;# 
   860  039E                     	;# 
   861  039F                     	;# 
   862  0415                     	;# 
   863  0416                     	;# 
   864  0417                     	;# 
   865  041C                     	;# 
   866  041D                     	;# 
   867  041E                     	;# 
   868  0FE4                     	;# 
   869  0FE5                     	;# 
   870  0FE6                     	;# 
   871  0FE7                     	;# 
   872  0FE8                     	;# 
   873  0FE9                     	;# 
   874  0FEA                     	;# 
   875  0FEB                     	;# 
   876  0FED                     	;# 
   877  0FEE                     	;# 
   878  0FEF                     	;# 
   879  0000                     	;# 
   880  0001                     	;# 
   881  0002                     	;# 
   882  0003                     	;# 
   883  0004                     	;# 
   884  0005                     	;# 
   885  0006                     	;# 
   886  0007                     	;# 
   887  0008                     	;# 
   888  0009                     	;# 
   889  000A                     	;# 
   890  000B                     	;# 
   891  000C                     	;# 
   892  000D                     	;# 
   893  0011                     	;# 
   894  0012                     	;# 
   895  0013                     	;# 
   896  0014                     	;# 
   897  0015                     	;# 
   898  0016                     	;# 
   899  0016                     	;# 
   900  0017                     	;# 
   901  0018                     	;# 
   902  0019                     	;# 
   903  001A                     	;# 
   904  001B                     	;# 
   905  001C                     	;# 
   906  001E                     	;# 
   907  001F                     	;# 
   908  008C                     	;# 
   909  008D                     	;# 
   910  0091                     	;# 
   911  0092                     	;# 
   912  0093                     	;# 
   913  0094                     	;# 
   914  0095                     	;# 
   915  0096                     	;# 
   916  0097                     	;# 
   917  0098                     	;# 
   918  0099                     	;# 
   919  009A                     	;# 
   920  009B                     	;# 
   921  009B                     	;# 
   922  009C                     	;# 
   923  009D                     	;# 
   924  009E                     	;# 
   925  010C                     	;# 
   926  010D                     	;# 
   927  0111                     	;# 
   928  0112                     	;# 
   929  0113                     	;# 
   930  0114                     	;# 
   931  0115                     	;# 
   932  0116                     	;# 
   933  0117                     	;# 
   934  0118                     	;# 
   935  0119                     	;# 
   936  011A                     	;# 
   937  011B                     	;# 
   938  011D                     	;# 
   939  011E                     	;# 
   940  018C                     	;# 
   941  018D                     	;# 
   942  0191                     	;# 
   943  0191                     	;# 
   944  0192                     	;# 
   945  0193                     	;# 
   946  0193                     	;# 
   947  0193                     	;# 
   948  0194                     	;# 
   949  0195                     	;# 
   950  0196                     	;# 
   951  0199                     	;# 
   952  019A                     	;# 
   953  019B                     	;# 
   954  019B                     	;# 
   955  019B                     	;# 
   956  019B                     	;# 
   957  019C                     	;# 
   958  019C                     	;# 
   959  019D                     	;# 
   960  019E                     	;# 
   961  019F                     	;# 
   962  020C                     	;# 
   963  020D                     	;# 
   964  0211                     	;# 
   965  0211                     	;# 
   966  0212                     	;# 
   967  0212                     	;# 
   968  0213                     	;# 
   969  0213                     	;# 
   970  0214                     	;# 
   971  0214                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0216                     	;# 
   976  0216                     	;# 
   977  0217                     	;# 
   978  0217                     	;# 
   979  0219                     	;# 
   980  021A                     	;# 
   981  021B                     	;# 
   982  021C                     	;# 
   983  021D                     	;# 
   984  021E                     	;# 
   985  021F                     	;# 
   986  0291                     	;# 
   987  0291                     	;# 
   988  0292                     	;# 
   989  0293                     	;# 
   990  0294                     	;# 
   991  0295                     	;# 
   992  0295                     	;# 
   993  0296                     	;# 
   994  0298                     	;# 
   995  0298                     	;# 
   996  0299                     	;# 
   997  029A                     	;# 
   998  029B                     	;# 
   999  029C                     	;# 
  1000  029C                     	;# 
  1001  029D                     	;# 
  1002  029E                     	;# 
  1003  029E                     	;# 
  1004  0311                     	;# 
  1005  0311                     	;# 
  1006  0312                     	;# 
  1007  0313                     	;# 
  1008  0318                     	;# 
  1009  0318                     	;# 
  1010  0319                     	;# 
  1011  031A                     	;# 
  1012  0394                     	;# 
  1013  0395                     	;# 
  1014  0396                     	;# 
  1015  039A                     	;# 
  1016  039C                     	;# 
  1017  039D                     	;# 
  1018  039E                     	;# 
  1019  039F                     	;# 
  1020  0415                     	;# 
  1021  0416                     	;# 
  1022  0417                     	;# 
  1023  041C                     	;# 
  1024  041D                     	;# 
  1025  041E                     	;# 
  1026  0FE4                     	;# 
  1027  0FE5                     	;# 
  1028  0FE6                     	;# 
  1029  0FE7                     	;# 
  1030  0FE8                     	;# 
  1031  0FE9                     	;# 
  1032  0FEA                     	;# 
  1033  0FEB                     	;# 
  1034  0FED                     	;# 
  1035  0FEE                     	;# 
  1036  0FEF                     	;# 
  1037  0000                     	;# 
  1038  0001                     	;# 
  1039  0002                     	;# 
  1040  0003                     	;# 
  1041  0004                     	;# 
  1042  0005                     	;# 
  1043  0006                     	;# 
  1044  0007                     	;# 
  1045  0008                     	;# 
  1046  0009                     	;# 
  1047  000A                     	;# 
  1048  000B                     	;# 
  1049  000C                     	;# 
  1050  000D                     	;# 
  1051  0011                     	;# 
  1052  0012                     	;# 
  1053  0013                     	;# 
  1054  0014                     	;# 
  1055  0015                     	;# 
  1056  0016                     	;# 
  1057  0016                     	;# 
  1058  0017                     	;# 
  1059  0018                     	;# 
  1060  0019                     	;# 
  1061  001A                     	;# 
  1062  001B                     	;# 
  1063  001C                     	;# 
  1064  001E                     	;# 
  1065  001F                     	;# 
  1066  008C                     	;# 
  1067  008D                     	;# 
  1068  0091                     	;# 
  1069  0092                     	;# 
  1070  0093                     	;# 
  1071  0094                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0097                     	;# 
  1075  0098                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  010C                     	;# 
  1084  010D                     	;# 
  1085  0111                     	;# 
  1086  0112                     	;# 
  1087  0113                     	;# 
  1088  0114                     	;# 
  1089  0115                     	;# 
  1090  0116                     	;# 
  1091  0117                     	;# 
  1092  0118                     	;# 
  1093  0119                     	;# 
  1094  011A                     	;# 
  1095  011B                     	;# 
  1096  011D                     	;# 
  1097  011E                     	;# 
  1098  018C                     	;# 
  1099  018D                     	;# 
  1100  0191                     	;# 
  1101  0191                     	;# 
  1102  0192                     	;# 
  1103  0193                     	;# 
  1104  0193                     	;# 
  1105  0193                     	;# 
  1106  0194                     	;# 
  1107  0195                     	;# 
  1108  0196                     	;# 
  1109  0199                     	;# 
  1110  019A                     	;# 
  1111  019B                     	;# 
  1112  019B                     	;# 
  1113  019B                     	;# 
  1114  019B                     	;# 
  1115  019C                     	;# 
  1116  019C                     	;# 
  1117  019D                     	;# 
  1118  019E                     	;# 
  1119  019F                     	;# 
  1120  020C                     	;# 
  1121  020D                     	;# 
  1122  0211                     	;# 
  1123  0211                     	;# 
  1124  0212                     	;# 
  1125  0212                     	;# 
  1126  0213                     	;# 
  1127  0213                     	;# 
  1128  0214                     	;# 
  1129  0214                     	;# 
  1130  0215                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0216                     	;# 
  1134  0216                     	;# 
  1135  0217                     	;# 
  1136  0217                     	;# 
  1137  0219                     	;# 
  1138  021A                     	;# 
  1139  021B                     	;# 
  1140  021C                     	;# 
  1141  021D                     	;# 
  1142  021E                     	;# 
  1143  021F                     	;# 
  1144  0291                     	;# 
  1145  0291                     	;# 
  1146  0292                     	;# 
  1147  0293                     	;# 
  1148  0294                     	;# 
  1149  0295                     	;# 
  1150  0295                     	;# 
  1151  0296                     	;# 
  1152  0298                     	;# 
  1153  0298                     	;# 
  1154  0299                     	;# 
  1155  029A                     	;# 
  1156  029B                     	;# 
  1157  029C                     	;# 
  1158  029C                     	;# 
  1159  029D                     	;# 
  1160  029E                     	;# 
  1161  029E                     	;# 
  1162  0311                     	;# 
  1163  0311                     	;# 
  1164  0312                     	;# 
  1165  0313                     	;# 
  1166  0318                     	;# 
  1167  0318                     	;# 
  1168  0319                     	;# 
  1169  031A                     	;# 
  1170  0394                     	;# 
  1171  0395                     	;# 
  1172  0396                     	;# 
  1173  039A                     	;# 
  1174  039C                     	;# 
  1175  039D                     	;# 
  1176  039E                     	;# 
  1177  039F                     	;# 
  1178  0415                     	;# 
  1179  0416                     	;# 
  1180  0417                     	;# 
  1181  041C                     	;# 
  1182  041D                     	;# 
  1183  041E                     	;# 
  1184  0FE4                     	;# 
  1185  0FE5                     	;# 
  1186  0FE6                     	;# 
  1187  0FE7                     	;# 
  1188  0FE8                     	;# 
  1189  0FE9                     	;# 
  1190  0FEA                     	;# 
  1191  0FEB                     	;# 
  1192  0FED                     	;# 
  1193  0FEE                     	;# 
  1194  0FEF                     	;# 
  1195  0000                     	;# 
  1196  0001                     	;# 
  1197  0002                     	;# 
  1198  0003                     	;# 
  1199  0004                     	;# 
  1200  0005                     	;# 
  1201  0006                     	;# 
  1202  0007                     	;# 
  1203  0008                     	;# 
  1204  0009                     	;# 
  1205  000A                     	;# 
  1206  000B                     	;# 
  1207  000C                     	;# 
  1208  000D                     	;# 
  1209  0011                     	;# 
  1210  0012                     	;# 
  1211  0013                     	;# 
  1212  0014                     	;# 
  1213  0015                     	;# 
  1214  0016                     	;# 
  1215  0016                     	;# 
  1216  0017                     	;# 
  1217  0018                     	;# 
  1218  0019                     	;# 
  1219  001A                     	;# 
  1220  001B                     	;# 
  1221  001C                     	;# 
  1222  001E                     	;# 
  1223  001F                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  0091                     	;# 
  1227  0092                     	;# 
  1228  0093                     	;# 
  1229  0094                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0097                     	;# 
  1233  0098                     	;# 
  1234  0099                     	;# 
  1235  009A                     	;# 
  1236  009B                     	;# 
  1237  009B                     	;# 
  1238  009C                     	;# 
  1239  009D                     	;# 
  1240  009E                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  0111                     	;# 
  1244  0112                     	;# 
  1245  0113                     	;# 
  1246  0114                     	;# 
  1247  0115                     	;# 
  1248  0116                     	;# 
  1249  0117                     	;# 
  1250  0118                     	;# 
  1251  0119                     	;# 
  1252  011A                     	;# 
  1253  011B                     	;# 
  1254  011D                     	;# 
  1255  011E                     	;# 
  1256  018C                     	;# 
  1257  018D                     	;# 
  1258  0191                     	;# 
  1259  0191                     	;# 
  1260  0192                     	;# 
  1261  0193                     	;# 
  1262  0193                     	;# 
  1263  0193                     	;# 
  1264  0194                     	;# 
  1265  0195                     	;# 
  1266  0196                     	;# 
  1267  0199                     	;# 
  1268  019A                     	;# 
  1269  019B                     	;# 
  1270  019B                     	;# 
  1271  019B                     	;# 
  1272  019B                     	;# 
  1273  019C                     	;# 
  1274  019C                     	;# 
  1275  019D                     	;# 
  1276  019E                     	;# 
  1277  019F                     	;# 
  1278  020C                     	;# 
  1279  020D                     	;# 
  1280  0211                     	;# 
  1281  0211                     	;# 
  1282  0212                     	;# 
  1283  0212                     	;# 
  1284  0213                     	;# 
  1285  0213                     	;# 
  1286  0214                     	;# 
  1287  0214                     	;# 
  1288  0215                     	;# 
  1289  0215                     	;# 
  1290  0215                     	;# 
  1291  0216                     	;# 
  1292  0216                     	;# 
  1293  0217                     	;# 
  1294  0217                     	;# 
  1295  0219                     	;# 
  1296  021A                     	;# 
  1297  021B                     	;# 
  1298  021C                     	;# 
  1299  021D                     	;# 
  1300  021E                     	;# 
  1301  021F                     	;# 
  1302  0291                     	;# 
  1303  0291                     	;# 
  1304  0292                     	;# 
  1305  0293                     	;# 
  1306  0294                     	;# 
  1307  0295                     	;# 
  1308  0295                     	;# 
  1309  0296                     	;# 
  1310  0298                     	;# 
  1311  0298                     	;# 
  1312  0299                     	;# 
  1313  029A                     	;# 
  1314  029B                     	;# 
  1315  029C                     	;# 
  1316  029C                     	;# 
  1317  029D                     	;# 
  1318  029E                     	;# 
  1319  029E                     	;# 
  1320  0311                     	;# 
  1321  0311                     	;# 
  1322  0312                     	;# 
  1323  0313                     	;# 
  1324  0318                     	;# 
  1325  0318                     	;# 
  1326  0319                     	;# 
  1327  031A                     	;# 
  1328  0394                     	;# 
  1329  0395                     	;# 
  1330  0396                     	;# 
  1331  039A                     	;# 
  1332  039C                     	;# 
  1333  039D                     	;# 
  1334  039E                     	;# 
  1335  039F                     	;# 
  1336  0415                     	;# 
  1337  0416                     	;# 
  1338  0417                     	;# 
  1339  041C                     	;# 
  1340  041D                     	;# 
  1341  041E                     	;# 
  1342  0FE4                     	;# 
  1343  0FE5                     	;# 
  1344  0FE6                     	;# 
  1345  0FE7                     	;# 
  1346  0FE8                     	;# 
  1347  0FE9                     	;# 
  1348  0FEA                     	;# 
  1349  0FEB                     	;# 
  1350  0FED                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353  0000                     	;# 
  1354  0001                     	;# 
  1355  0002                     	;# 
  1356  0003                     	;# 
  1357  0004                     	;# 
  1358  0005                     	;# 
  1359  0006                     	;# 
  1360  0007                     	;# 
  1361  0008                     	;# 
  1362  0009                     	;# 
  1363  000A                     	;# 
  1364  000B                     	;# 
  1365  000C                     	;# 
  1366  000D                     	;# 
  1367  0011                     	;# 
  1368  0012                     	;# 
  1369  0013                     	;# 
  1370  0014                     	;# 
  1371  0015                     	;# 
  1372  0016                     	;# 
  1373  0016                     	;# 
  1374  0017                     	;# 
  1375  0018                     	;# 
  1376  0019                     	;# 
  1377  001A                     	;# 
  1378  001B                     	;# 
  1379  001C                     	;# 
  1380  001E                     	;# 
  1381  001F                     	;# 
  1382  008C                     	;# 
  1383  008D                     	;# 
  1384  0091                     	;# 
  1385  0092                     	;# 
  1386  0093                     	;# 
  1387  0094                     	;# 
  1388  0095                     	;# 
  1389  0096                     	;# 
  1390  0097                     	;# 
  1391  0098                     	;# 
  1392  0099                     	;# 
  1393  009A                     	;# 
  1394  009B                     	;# 
  1395  009B                     	;# 
  1396  009C                     	;# 
  1397  009D                     	;# 
  1398  009E                     	;# 
  1399  010C                     	;# 
  1400  010D                     	;# 
  1401  0111                     	;# 
  1402  0112                     	;# 
  1403  0113                     	;# 
  1404  0114                     	;# 
  1405  0115                     	;# 
  1406  0116                     	;# 
  1407  0117                     	;# 
  1408  0118                     	;# 
  1409  0119                     	;# 
  1410  011A                     	;# 
  1411  011B                     	;# 
  1412  011D                     	;# 
  1413  011E                     	;# 
  1414  018C                     	;# 
  1415  018D                     	;# 
  1416  0191                     	;# 
  1417  0191                     	;# 
  1418  0192                     	;# 
  1419  0193                     	;# 
  1420  0193                     	;# 
  1421  0193                     	;# 
  1422  0194                     	;# 
  1423  0195                     	;# 
  1424  0196                     	;# 
  1425  0199                     	;# 
  1426  019A                     	;# 
  1427  019B                     	;# 
  1428  019B                     	;# 
  1429  019B                     	;# 
  1430  019B                     	;# 
  1431  019C                     	;# 
  1432  019C                     	;# 
  1433  019D                     	;# 
  1434  019E                     	;# 
  1435  019F                     	;# 
  1436  020C                     	;# 
  1437  020D                     	;# 
  1438  0211                     	;# 
  1439  0211                     	;# 
  1440  0212                     	;# 
  1441  0212                     	;# 
  1442  0213                     	;# 
  1443  0213                     	;# 
  1444  0214                     	;# 
  1445  0214                     	;# 
  1446  0215                     	;# 
  1447  0215                     	;# 
  1448  0215                     	;# 
  1449  0216                     	;# 
  1450  0216                     	;# 
  1451  0217                     	;# 
  1452  0217                     	;# 
  1453  0219                     	;# 
  1454  021A                     	;# 
  1455  021B                     	;# 
  1456  021C                     	;# 
  1457  021D                     	;# 
  1458  021E                     	;# 
  1459  021F                     	;# 
  1460  0291                     	;# 
  1461  0291                     	;# 
  1462  0292                     	;# 
  1463  0293                     	;# 
  1464  0294                     	;# 
  1465  0295                     	;# 
  1466  0295                     	;# 
  1467  0296                     	;# 
  1468  0298                     	;# 
  1469  0298                     	;# 
  1470  0299                     	;# 
  1471  029A                     	;# 
  1472  029B                     	;# 
  1473  029C                     	;# 
  1474  029C                     	;# 
  1475  029D                     	;# 
  1476  029E                     	;# 
  1477  029E                     	;# 
  1478  0311                     	;# 
  1479  0311                     	;# 
  1480  0312                     	;# 
  1481  0313                     	;# 
  1482  0318                     	;# 
  1483  0318                     	;# 
  1484  0319                     	;# 
  1485  031A                     	;# 
  1486  0394                     	;# 
  1487  0395                     	;# 
  1488  0396                     	;# 
  1489  039A                     	;# 
  1490  039C                     	;# 
  1491  039D                     	;# 
  1492  039E                     	;# 
  1493  039F                     	;# 
  1494  0415                     	;# 
  1495  0416                     	;# 
  1496  0417                     	;# 
  1497  041C                     	;# 
  1498  041D                     	;# 
  1499  041E                     	;# 
  1500  0FE4                     	;# 
  1501  0FE5                     	;# 
  1502  0FE6                     	;# 
  1503  0FE7                     	;# 
  1504  0FE8                     	;# 
  1505  0FE9                     	;# 
  1506  0FEA                     	;# 
  1507  0FEB                     	;# 
  1508  0FED                     	;# 
  1509  0FEE                     	;# 
  1510  0FEF                     	;# 
  1511                           
  1512 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1513  0000                     
  1514 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1515  0000                     
  1516 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1517  000B                     _INTCONbits	set	11
  1518  0011                     _PIR1bits	set	17
  1519  0013                     _PIR3bits	set	19
  1520  0097                     _WDTCON	set	151
  1521  0098                     _OSCTUNE	set	152
  1522  0099                     _OSCCON	set	153
  1523  009D                     _ADCON0bits	set	157
  1524  0091                     _PIE1bits	set	145
  1525  009D                     _ADCON0	set	157
  1526  009C                     _ADRESH	set	156
  1527  009B                     _ADRESL	set	155
  1528  009E                     _ADCON1	set	158
  1529  0095                     _OPTION_REGbits	set	149
  1530  008D                     _TRISB	set	141
  1531  008C                     _TRISA	set	140
  1532  0093                     _PIE3bits	set	147
  1533  04D6                     _PLLR	set	1238
  1534  010D                     _LATBbits	set	269
  1535  010C                     _LATAbits	set	268
  1536  0116                     _BORCON	set	278
  1537  011E                     _APFCON1	set	286
  1538  011D                     _APFCON0	set	285
  1539  010D                     _LATB	set	269
  1540  010C                     _LATA	set	268
  1541  019A                     _TXREG	set	410
  1542  0199                     _RCREG	set	409
  1543  019D                     _RCSTAbits	set	413
  1544  019E                     _TXSTAbits	set	414
  1545  019C                     _SPBRGH	set	412
  1546  019B                     _SPBRGL	set	411
  1547  019E                     _TXSTA	set	414
  1548  019D                     _RCSTA	set	413
  1549  019F                     _BAUDCON	set	415
  1550  018C                     _ANSELA	set	396
  1551  018D                     _ANSELB	set	397
  1552  020C                     _WPUA	set	524
  1553  020D                     _WPUB	set	525
  1554  041E                     _T6CONbits	set	1054
  1555  041E                     _T6CON	set	1054
  1556  041C                     _TMR6	set	1052
  1557  041D                     _PR6	set	1053
  1558                           
  1559                           	psect	cinit
  1560  002A                     start_initialization:	
  1561                           ; #config settings
  1562                           
  1563  002A                     __initialization:
  1564                           
  1565                           ; Clear objects allocated to COMMON
  1566  002A  01F8               	clrf	__pbssCOMMON& (0+127)
  1567  002B  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1568  002C  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1569                           
  1570                           ; Clear objects allocated to BANK1
  1571  002D  30BC               	movlw	low __pbssBANK1
  1572  002E  0084               	movwf	4
  1573  002F  3000               	movlw	high __pbssBANK1
  1574  0030  0085               	movwf	5
  1575  0031  300D               	movlw	13
  1576  0032  3187  27FA  3180   	fcall	clear_ram0
  1577  0035                     end_of_initialization:	
  1578                           ;End of C runtime variable initialization code
  1579                           
  1580  0035                     __end_of__initialization:
  1581  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1582  0036  0020               	movlb	0
  1583  0037  3183  2BBE         	ljmp	_main	;jump to C main() function
  1584                           
  1585                           	psect	bssCOMMON
  1586  0078                     __pbssCOMMON:
  1587  0078                     _sleep_flag:
  1588  0078                     	ds	1
  1589  0079                     _timer_flag:
  1590  0079                     	ds	1
  1591  007A                     _ADC_flag:
  1592  007A                     	ds	1
  1593                           
  1594                           	psect	bssBANK1
  1595  00BC                     __pbssBANK1:
  1596  00BC                     _num_ADC:
  1597  00BC                     	ds	2
  1598  00BE                     _ADC_InterruptHandler:
  1599  00BE                     	ds	2
  1600  00C0                     _EUSART_ErrorHandler:
  1601  00C0                     	ds	2
  1602  00C2                     _EUSART_OverrunErrorHandler:
  1603  00C2                     	ds	2
  1604  00C4                     _EUSART_FramingErrorHandler:
  1605  00C4                     	ds	2
  1606  00C6                     _TMR6_InterruptHandler:
  1607  00C6                     	ds	2
  1608  00C8                     _eusartRxLastError:
  1609  00C8                     	ds	1
  1610                           
  1611                           	psect	clrtext
  1612  07FA                     clear_ram0:	
  1613                           ;	Called with FSR0 containing the base address, and
  1614                           ;	WREG with the size to clear
  1615                           
  1616  07FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1617  07FB                     clrloop0:
  1618  07FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1619  07FC  3101               	addfsr 0,1
  1620  07FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1621  07FE  2FFB               	goto	clrloop0	;have we reached the end yet?
  1622  07FF  3400               	retlw	0	;all done for this memory range, return
  1623                           
  1624                           	psect	cstackBANK1
  1625  00A0                     __pcstackBANK1:
  1626  00A0                     main@valor_ADC:
  1627                           
  1628                           ; 2 bytes @ 0x0
  1629  00A0                     	ds	2
  1630  00A2                     main@volt_ADC:
  1631                           
  1632                           ; 2 bytes @ 0x2
  1633  00A2                     	ds	2
  1634  00A4                     main@EnviarPorSerial:
  1635                           
  1636                           ; 1 bytes @ 0x4
  1637  00A4                     	ds	1
  1638  00A5                     main@Pack:
  1639                           
  1640                           ; 6 bytes @ 0x5
  1641  00A5                     	ds	6
  1642  00AB                     main@timer_1ms:
  1643                           
  1644                           ; 9 bytes @ 0xB
  1645  00AB                     	ds	9
  1646  00B4                     main@seven_seg:
  1647                           
  1648                           ; 8 bytes @ 0x14
  1649  00B4                     	ds	8
  1650                           
  1651                           	psect	cstackCOMMON
  1652  0070                     __pcstackCOMMON:
  1653  0070                     ?_TMR6_DefaultInterruptHandler:
  1654  0070                     ??_TMR6_DefaultInterruptHandler:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0070                     ?_ADC_DefaultInterruptHandler:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0070                     ??_ADC_DefaultInterruptHandler:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0070                     ?_OSCILLATOR_Initialize:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0070                     ?_WDT_Initialize:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0070                     ?_Tm_Procese_tiempo:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0070                     ?_Ds_Procese_displays:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0070                     ?_Tm_Hubo_periodico:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0070                     ?_Tm_Baje_periodico:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0070                     ?_Ds_BCD:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0070                     ?_Ds_Encienda_Disp:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0070                     ?_TMR6_Initialize:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0070                     ?_TMR6_StartTimer:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0070                     ?_TMR6_ISR:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0070                     ?_PIN_MANAGER_Initialize:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0070                     ?_EUSART_Initialize:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0070                     ?_EUSART_is_tx_ready:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0070                     ?_EUSART_Write:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0070                     ?_ADC_Initialize:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0070                     ?_ADC_StartConversion:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0070                     ?_ADC_ISR:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0070                     ?_SYSTEM_Initialize:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0070                     ?_INTERRUPT_InterruptManager:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0070                     ?_Interrupcion_ADC:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0070                     ?_Interrupcion_timer:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0070                     ??_Interrupcion_timer:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0070                     ?_main:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0070                     ?_ADC_GetConversionResult:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738                           
  1739                           ; 2 bytes @ 0x0
  1740  0070                     	ds	1
  1741  0071                     ??_TMR6_ISR:
  1742                           
  1743                           ; 1 bytes @ 0x1
  1744  0071                     	ds	1
  1745  0072                     ??_ADC_GetConversionResult:
  1746  0072                     ??_Interrupcion_ADC:	
  1747                           ; 1 bytes @ 0x2
  1748                           
  1749                           
  1750                           ; 1 bytes @ 0x2
  1751  0072                     	ds	1
  1752  0073                     ?_TMR6_SetInterruptHandler:
  1753  0073                     ?_EUSART_SetFramingErrorHandler:	
  1754                           ; 1 bytes @ 0x3
  1755                           
  1756  0073                     ?_EUSART_SetOverrunErrorHandler:	
  1757                           ; 1 bytes @ 0x3
  1758                           
  1759  0073                     ?_EUSART_SetErrorHandler:	
  1760                           ; 1 bytes @ 0x3
  1761                           
  1762  0073                     ?_ADC_SetInterruptHandler:	
  1763                           ; 1 bytes @ 0x3
  1764                           
  1765  0073                     ??_OSCILLATOR_Initialize:	
  1766                           ; 1 bytes @ 0x3
  1767                           
  1768  0073                     ??_WDT_Initialize:	
  1769                           ; 1 bytes @ 0x3
  1770                           
  1771  0073                     ?_Tm_Inicie_periodico:	
  1772                           ; 1 bytes @ 0x3
  1773                           
  1774  0073                     ?_Ds_Iniciar_displays:	
  1775                           ; 1 bytes @ 0x3
  1776                           
  1777  0073                     ??_Tm_Procese_tiempo:	
  1778                           ; 1 bytes @ 0x3
  1779                           
  1780  0073                     ??_Tm_Hubo_periodico:	
  1781                           ; 1 bytes @ 0x3
  1782                           
  1783  0073                     ??_Tm_Baje_periodico:	
  1784                           ; 1 bytes @ 0x3
  1785                           
  1786  0073                     ??_Ds_BCD:	
  1787                           ; 1 bytes @ 0x3
  1788                           
  1789  0073                     ??_Ds_Encienda_Disp:	
  1790                           ; 1 bytes @ 0x3
  1791                           
  1792  0073                     ??_TMR6_StartTimer:	
  1793                           ; 1 bytes @ 0x3
  1794                           
  1795  0073                     ??_PIN_MANAGER_Initialize:	
  1796                           ; 1 bytes @ 0x3
  1797                           
  1798  0073                     ??_EUSART_is_tx_ready:	
  1799                           ; 1 bytes @ 0x3
  1800                           
  1801  0073                     ??_EUSART_Write:	
  1802                           ; 1 bytes @ 0x3
  1803                           
  1804  0073                     ??_ADC_StartConversion:	
  1805                           ; 1 bytes @ 0x3
  1806                           
  1807  0073                     ??_ADC_ISR:	
  1808                           ; 1 bytes @ 0x3
  1809                           
  1810  0073                     ??_INTERRUPT_InterruptManager:	
  1811                           ; 1 bytes @ 0x3
  1812                           
  1813  0073                     ?__Umul8_16:	
  1814                           ; 1 bytes @ 0x3
  1815                           
  1816  0073                     ?___lwdiv:	
  1817                           ; 2 bytes @ 0x3
  1818                           
  1819  0073                     ?___lwmod:	
  1820                           ; 2 bytes @ 0x3
  1821                           
  1822  0073                     ?___xxtofl:	
  1823                           ; 2 bytes @ 0x3
  1824                           
  1825  0073                     _EUSART_is_tx_ready$336:	
  1826                           ; 4 bytes @ 0x3
  1827                           
  1828  0073                     EUSART_Write@txData:	
  1829                           ; 1 bytes @ 0x3
  1830                           
  1831  0073                     Ds_Iniciar_displays@d1:	
  1832                           ; 1 bytes @ 0x3
  1833                           
  1834  0073                     Ds_Encienda_Disp@dispNum:	
  1835                           ; 1 bytes @ 0x3
  1836                           
  1837  0073                     Tm_Hubo_periodico@ctp:	
  1838                           ; 1 bytes @ 0x3
  1839                           
  1840  0073                     __Umul8_16@multiplicand:	
  1841                           ; 1 bytes @ 0x3
  1842                           
  1843  0073                     TMR6_SetInterruptHandler@InterruptHandler:	
  1844                           ; 1 bytes @ 0x3
  1845                           
  1846  0073                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1847                           ; 2 bytes @ 0x3
  1848                           
  1849  0073                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1850                           ; 2 bytes @ 0x3
  1851                           
  1852  0073                     EUSART_SetErrorHandler@interruptHandler:	
  1853                           ; 2 bytes @ 0x3
  1854                           
  1855  0073                     ADC_SetInterruptHandler@InterruptHandler:	
  1856                           ; 2 bytes @ 0x3
  1857                           
  1858  0073                     Tm_Inicie_periodico@periodo:	
  1859                           ; 2 bytes @ 0x3
  1860                           
  1861  0073                     ___lwdiv@divisor:	
  1862                           ; 2 bytes @ 0x3
  1863                           
  1864  0073                     ___lwmod@divisor:	
  1865                           ; 2 bytes @ 0x3
  1866                           
  1867  0073                     ___xxtofl@val:	
  1868                           ; 2 bytes @ 0x3
  1869                           
  1870                           
  1871                           ; 4 bytes @ 0x3
  1872  0073                     	ds	1
  1873  0074                     Ds_Iniciar_displays@d2:
  1874  0074                     Tm_Baje_periodico@ctp:	
  1875                           ; 1 bytes @ 0x4
  1876                           
  1877                           
  1878                           ; 1 bytes @ 0x4
  1879  0074                     	ds	1
  1880  0075                     ??_TMR6_SetInterruptHandler:
  1881  0075                     ??_EUSART_SetFramingErrorHandler:	
  1882                           ; 1 bytes @ 0x5
  1883                           
  1884  0075                     ??_EUSART_SetOverrunErrorHandler:	
  1885                           ; 1 bytes @ 0x5
  1886                           
  1887  0075                     ??_EUSART_SetErrorHandler:	
  1888                           ; 1 bytes @ 0x5
  1889                           
  1890  0075                     ??_ADC_SetInterruptHandler:	
  1891                           ; 1 bytes @ 0x5
  1892                           
  1893  0075                     ??_Tm_Inicie_periodico:	
  1894                           ; 1 bytes @ 0x5
  1895                           
  1896  0075                     ??__Umul8_16:	
  1897                           ; 1 bytes @ 0x5
  1898                           
  1899  0075                     ??_TMR6_Initialize:	
  1900                           ; 1 bytes @ 0x5
  1901                           
  1902  0075                     ??_EUSART_Initialize:	
  1903                           ; 1 bytes @ 0x5
  1904                           
  1905  0075                     ??_ADC_Initialize:	
  1906                           ; 1 bytes @ 0x5
  1907                           
  1908  0075                     ??_SYSTEM_Initialize:	
  1909                           ; 1 bytes @ 0x5
  1910                           
  1911  0075                     Ds_Iniciar_displays@d3:	
  1912                           ; 1 bytes @ 0x5
  1913                           
  1914  0075                     Ds_BCD@segmento:	
  1915                           ; 1 bytes @ 0x5
  1916                           
  1917  0075                     ___lwdiv@dividend:	
  1918                           ; 1 bytes @ 0x5
  1919                           
  1920  0075                     ___lwmod@dividend:	
  1921                           ; 2 bytes @ 0x5
  1922                           
  1923                           
  1924                           ; 2 bytes @ 0x5
  1925  0075                     	ds	1
  1926  0076                     ??_Ds_Procese_displays:
  1927  0076                     Ds_Iniciar_displays@tE:	
  1928                           ; 1 bytes @ 0x6
  1929                           
  1930  0076                     Tm_Inicie_periodico@ctp:	
  1931                           ; 1 bytes @ 0x6
  1932                           
  1933                           
  1934                           ; 1 bytes @ 0x6
  1935  0076                     	ds	1
  1936  0077                     ??_Ds_Conversor_ADC:
  1937  0077                     ??___lwdiv:	
  1938                           ; 1 bytes @ 0x7
  1939                           
  1940  0077                     ??___lwmod:	
  1941                           ; 1 bytes @ 0x7
  1942                           
  1943  0077                     Ds_Iniciar_displays@tA:	
  1944                           ; 1 bytes @ 0x7
  1945                           
  1946  0077                     Tm_Procese_tiempo@ctp:	
  1947                           ; 1 bytes @ 0x7
  1948                           
  1949                           
  1950                           ; 1 bytes @ 0x7
  1951  0077                     	ds	1
  1952                           
  1953                           	psect	cstackBANK0
  1954  0020                     __pcstackBANK0:
  1955  0020                     ??_Ds_Iniciar_displays:
  1956  0020                     ??___xxtofl:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959  0020                     Ds_Procese_displays@dsp:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962  0020                     ___lwdiv@counter:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965  0020                     ___lwmod@counter:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968  0020                     __Umul8_16@product:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971                           
  1972                           ; 2 bytes @ 0x0
  1973  0020                     	ds	1
  1974  0021                     Ds_Iniciar_displays@dsp:
  1975  0021                     ___lwdiv@quotient:	
  1976                           ; 1 bytes @ 0x1
  1977                           
  1978                           
  1979                           ; 2 bytes @ 0x1
  1980  0021                     	ds	1
  1981  0022                     __Umul8_16@word_mpld:
  1982                           
  1983                           ; 2 bytes @ 0x2
  1984  0022                     	ds	1
  1985  0023                     ?_Ds_Convertir_en_uni:
  1986  0023                     Ds_Convertir_en_uni@voltaje:	
  1987                           ; 1 bytes @ 0x3
  1988                           
  1989                           
  1990                           ; 2 bytes @ 0x3
  1991  0023                     	ds	1
  1992  0024                     __Umul8_16@multiplier:
  1993  0024                     ___xxtofl@sign:	
  1994                           ; 1 bytes @ 0x4
  1995                           
  1996                           
  1997                           ; 1 bytes @ 0x4
  1998  0024                     	ds	1
  1999  0025                     ??_Ds_Convertir_en_uni:
  2000  0025                     ___xxtofl@exp:	
  2001                           ; 1 bytes @ 0x5
  2002                           
  2003                           
  2004                           ; 1 bytes @ 0x5
  2005  0025                     	ds	1
  2006  0026                     Ds_Convertir_en_uni@dsp:
  2007  0026                     ___xxtofl@arg:	
  2008                           ; 1 bytes @ 0x6
  2009                           
  2010                           
  2011                           ; 4 bytes @ 0x6
  2012  0026                     	ds	4
  2013  002A                     ?___flmul:
  2014  002A                     ___flmul@b:	
  2015                           ; 4 bytes @ 0xA
  2016                           
  2017                           
  2018                           ; 4 bytes @ 0xA
  2019  002A                     	ds	4
  2020  002E                     ___flmul@a:
  2021                           
  2022                           ; 4 bytes @ 0xE
  2023  002E                     	ds	4
  2024  0032                     ??___flmul:
  2025                           
  2026                           ; 1 bytes @ 0x12
  2027  0032                     	ds	5
  2028  0037                     ___flmul@sign:
  2029                           
  2030                           ; 1 bytes @ 0x17
  2031  0037                     	ds	1
  2032  0038                     ___flmul@aexp:
  2033                           
  2034                           ; 1 bytes @ 0x18
  2035  0038                     	ds	1
  2036  0039                     ___flmul@grs:
  2037                           
  2038                           ; 4 bytes @ 0x19
  2039  0039                     	ds	4
  2040  003D                     ___flmul@bexp:
  2041                           
  2042                           ; 1 bytes @ 0x1D
  2043  003D                     	ds	1
  2044  003E                     ___flmul@prod:
  2045                           
  2046                           ; 4 bytes @ 0x1E
  2047  003E                     	ds	4
  2048  0042                     ___flmul@temp:
  2049                           
  2050                           ; 2 bytes @ 0x22
  2051  0042                     	ds	2
  2052  0044                     ?___fltol:
  2053  0044                     ___fltol@f1:	
  2054                           ; 4 bytes @ 0x24
  2055                           
  2056                           
  2057                           ; 4 bytes @ 0x24
  2058  0044                     	ds	4
  2059  0048                     ??___fltol:
  2060                           
  2061                           ; 1 bytes @ 0x28
  2062  0048                     	ds	5
  2063  004D                     ___fltol@sign1:
  2064                           
  2065                           ; 1 bytes @ 0x2D
  2066  004D                     	ds	1
  2067  004E                     ___fltol@exp1:
  2068                           
  2069                           ; 1 bytes @ 0x2E
  2070  004E                     	ds	1
  2071  004F                     ?_Ds_Conversor_ADC:
  2072  004F                     Ds_Conversor_ADC@adcOUT:	
  2073                           ; 2 bytes @ 0x2F
  2074                           
  2075                           
  2076                           ; 2 bytes @ 0x2F
  2077  004F                     	ds	2
  2078  0051                     Ds_Conversor_ADC@pendiente:
  2079                           
  2080                           ; 4 bytes @ 0x31
  2081  0051                     	ds	4
  2082  0055                     Ds_Conversor_ADC@voltios:
  2083                           
  2084                           ; 2 bytes @ 0x35
  2085  0055                     	ds	2
  2086  0057                     ??_main:
  2087                           
  2088                           ; 1 bytes @ 0x37
  2089  0057                     	ds	1
  2090                           
  2091                           	psect	maintext
  2092  03BE                     __pmaintext:	
  2093 ;;
  2094 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2095 ;;
  2096 ;; *************** function _main *****************
  2097 ;; Defined at:
  2098 ;;		line 24 in file "main.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  timer_1ms       9   11[BANK1 ] struct Tm_Periodico
  2103 ;;  seven_seg       8   20[BANK1 ] struct Ds_Display
  2104 ;;  Pack            6    5[BANK1 ] unsigned char [6]
  2105 ;;  volt_ADC        2    2[BANK1 ] unsigned short 
  2106 ;;  valor_ADC       2    0[BANK1 ] unsigned short 
  2107 ;;  EnviarPorSer    1    4[BANK1 ] unsigned char 
  2108 ;;  send            1    0        unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : B1F/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2118 ;;      Params:         0       0       0       0       0       0
  2119 ;;      Locals:         0       0      28       0       0       0
  2120 ;;      Temps:          0       1       0       0       0       0
  2121 ;;      Totals:         0       1      28       0       0       0
  2122 ;;Total ram usage:       29 bytes
  2123 ;; Hardware stack levels required when called: 7
  2124 ;; This function calls:
  2125 ;;		_ADC_Initialize
  2126 ;;		_ADC_SetInterruptHandler
  2127 ;;		_ADC_StartConversion
  2128 ;;		_Ds_BCD
  2129 ;;		_Ds_Conversor_ADC
  2130 ;;		_Ds_Convertir_en_uni
  2131 ;;		_Ds_Encienda_Disp
  2132 ;;		_Ds_Iniciar_displays
  2133 ;;		_Ds_Procese_displays
  2134 ;;		_EUSART_Write
  2135 ;;		_EUSART_is_tx_ready
  2136 ;;		_SYSTEM_Initialize
  2137 ;;		_TMR6_SetInterruptHandler
  2138 ;;		_TMR6_StartTimer
  2139 ;;		_Tm_Baje_periodico
  2140 ;;		_Tm_Hubo_periodico
  2141 ;;		_Tm_Inicie_periodico
  2142 ;;		_Tm_Procese_tiempo
  2143 ;;		_WDT_Initialize
  2144 ;; This function is called by:
  2145 ;;		Startup code after reset
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _main
  2151  03BE                     _main:
  2152  03BE                     l3201:	
  2153                           ;incstack = 0
  2154                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2155                           
  2156                           
  2157                           ;main.c: 26:     SYSTEM_Initialize();
  2158  03BE  318F  2728  3183   	fcall	_SYSTEM_Initialize
  2159  03C1                     l3203:
  2160                           
  2161                           ;main.c: 27:     WDT_Initialize();
  2162  03C1  318E  2674  3183   	fcall	_WDT_Initialize
  2163  03C4                     l3205:
  2164                           
  2165                           ;main.c: 28:     (INTCONbits.GIE = 1);
  2166  03C4  178B               	bsf	11,7	;volatile
  2167  03C5                     l3207:
  2168                           
  2169                           ;main.c: 29:     (INTCONbits.PEIE = 1);
  2170  03C5  170B               	bsf	11,6	;volatile
  2171  03C6                     l3209:
  2172  03C6                     l3211:
  2173  03C6                     l3213:
  2174                           
  2175                           ;main.c: 32:     uint8_t Pack[6];;main.c: 33:     char EnviarPorSerial = 0;
  2176  03C6  0021               	movlb	1	; select bank1
  2177  03C7  01A4               	clrf	main@EnviarPorSerial^(0+128)
  2178  03C8                     l3215:
  2179  03C8                     l3217:
  2180                           
  2181                           ;main.c: 35:  Ds_Display seven_seg;;main.c: 36:  Tm_Periodico timer_1ms;;main.c: 37:  Tm
      +                          _Inicie_periodico (&timer_1ms, 1000);
  2182  03C8  30E8               	movlw	232
  2183  03C9  00F3               	movwf	Tm_Inicie_periodico@periodo
  2184  03CA  3003               	movlw	3
  2185  03CB  00F4               	movwf	Tm_Inicie_periodico@periodo+1
  2186  03CC  30AB               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2187  03CD  318F  273B  3183   	fcall	_Tm_Inicie_periodico
  2188  03D0                     l3219:
  2189                           
  2190                           ;main.c: 38:  ADC_Initialize();
  2191  03D0  318F  2705  3183   	fcall	_ADC_Initialize
  2192  03D3                     l3221:
  2193                           
  2194                           ;main.c: 39:     ADCON0 = ADCON0 | 0b00011101;
  2195  03D3  0021               	movlb	1	; select bank1
  2196  03D4  081D               	movf	29,w	;volatile
  2197  03D5  381D               	iorlw	29
  2198  03D6  009D               	movwf	29	;volatile
  2199  03D7                     l3223:
  2200                           
  2201                           ;main.c: 40:     ADCON0 = ADCON0 & 0b10011111;
  2202  03D7  081D               	movf	29,w	;volatile
  2203  03D8  399F               	andlw	159
  2204  03D9  009D               	movwf	29	;volatile
  2205  03DA                     l3225:
  2206                           
  2207                           ;main.c: 41:     ADCON1 = 0b11100000;
  2208  03DA  30E0               	movlw	224
  2209  03DB  009E               	movwf	30	;volatile
  2210  03DC                     l3227:
  2211                           
  2212                           ;main.c: 42:  Ds_Iniciar_displays (&seven_seg, 1, 1, 1, 4, 1);
  2213  03DC  01F3               	clrf	Ds_Iniciar_displays@d1
  2214  03DD  0AF3               	incf	Ds_Iniciar_displays@d1,f
  2215  03DE  01F4               	clrf	Ds_Iniciar_displays@d2
  2216  03DF  0AF4               	incf	Ds_Iniciar_displays@d2,f
  2217  03E0  01F5               	clrf	Ds_Iniciar_displays@d3
  2218  03E1  0AF5               	incf	Ds_Iniciar_displays@d3,f
  2219  03E2  3004               	movlw	4
  2220  03E3  0020               	movlb	0	; select bank0
  2221  03E4  00D7               	movwf	??_main
  2222  03E5  0857               	movf	??_main,w
  2223  03E6  00F6               	movwf	Ds_Iniciar_displays@tE
  2224  03E7  01F7               	clrf	Ds_Iniciar_displays@tA
  2225  03E8  0AF7               	incf	Ds_Iniciar_displays@tA,f
  2226  03E9  30B4               	movlw	(low (main@seven_seg| 0))& (0+255)
  2227  03EA  3187  272B  3183   	fcall	_Ds_Iniciar_displays
  2228  03ED                     l3229:
  2229                           
  2230                           ;main.c: 43:     TMR6_StartTimer();
  2231  03ED  318E  2677  3183   	fcall	_TMR6_StartTimer
  2232  03F0                     l3231:
  2233                           
  2234                           ;main.c: 44:  ADC_SetInterruptHandler(Interrupcion_ADC);
  2235  03F0  30CB               	movlw	low _Interrupcion_ADC
  2236  03F1  00F3               	movwf	ADC_SetInterruptHandler@InterruptHandler
  2237  03F2  300E               	movlw	high _Interrupcion_ADC
  2238  03F3  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  2239  03F4  318E  2685  3183   	fcall	_ADC_SetInterruptHandler
  2240  03F7                     l3233:
  2241                           
  2242                           ;main.c: 45:  TMR6_SetInterruptHandler(Interrupcion_timer);
  2243  03F7  307A               	movlw	low _Interrupcion_timer
  2244  03F8  00F3               	movwf	TMR6_SetInterruptHandler@InterruptHandler
  2245  03F9  300E               	movlw	high _Interrupcion_timer
  2246  03FA  00F4               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
  2247  03FB  318E  269D  3183   	fcall	_TMR6_SetInterruptHandler
  2248  03FE                     l3235:
  2249                           
  2250                           ;main.c: 48:   if(timer_flag){
  2251  03FE  0879               	movf	_timer_flag,w	;volatile
  2252  03FF  1903               	btfsc	3,2
  2253  0400  2C02               	goto	u2811
  2254  0401  2C03               	goto	u2810
  2255  0402                     u2811:
  2256  0402  2C0C               	goto	l3243
  2257  0403                     u2810:
  2258  0403                     l3237:
  2259                           
  2260                           ;main.c: 49:             timer_flag = 0;
  2261  0403  01F9               	clrf	_timer_flag	;volatile
  2262  0404                     l3239:
  2263                           
  2264                           ;main.c: 50:             Tm_Procese_tiempo(&timer_1ms);
  2265  0404  30AB               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2266  0405  3186  266D  3183   	fcall	_Tm_Procese_tiempo
  2267  0408                     l3241:
  2268                           
  2269                           ;main.c: 51:             Ds_Procese_displays(&seven_seg);
  2270  0408  30B4               	movlw	(low (main@seven_seg| 0))& (0+255)
  2271  0409  3182  2290  3183   	fcall	_Ds_Procese_displays
  2272  040C                     l3243:
  2273                           
  2274                           ;main.c: 54:         if(Tm_Hubo_periodico(&timer_1ms)){
  2275  040C  30AB               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2276  040D  318E  26A3  3183   	fcall	_Tm_Hubo_periodico
  2277  0410  3A00               	xorlw	0
  2278  0411  1903               	skipnz
  2279  0412  2C14               	goto	u2821
  2280  0413  2C15               	goto	u2820
  2281  0414                     u2821:
  2282  0414  2C1C               	goto	l3251
  2283  0415                     u2820:
  2284  0415                     l3245:
  2285                           
  2286                           ;main.c: 55:     Tm_Baje_periodico(&timer_1ms);
  2287  0415  30AB               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2288  0416  318E  26B5  3183   	fcall	_Tm_Baje_periodico
  2289  0419                     l3247:
  2290                           
  2291                           ;main.c: 56:                 ADC_StartConversion();
  2292  0419  318E  2671  3183   	fcall	_ADC_StartConversion
  2293  041C                     l3249:
  2294  041C                     l3251:
  2295                           
  2296                           ;main.c: 61:         if(ADC_flag){
  2297  041C  087A               	movf	_ADC_flag,w	;volatile
  2298  041D  1903               	btfsc	3,2
  2299  041E  2C20               	goto	u2831
  2300  041F  2C21               	goto	u2830
  2301  0420                     u2831:
  2302  0420  2C47               	goto	l3263
  2303  0421                     u2830:
  2304  0421                     l3253:
  2305                           
  2306                           ;main.c: 62:    ADC_flag = 0;
  2307  0421  01FA               	clrf	_ADC_flag	;volatile
  2308  0422                     l3255:
  2309                           
  2310                           ;main.c: 64:    valor_ADC = num_ADC;
  2311  0422  0021               	movlb	1	; select bank1
  2312  0423  083D               	movf	(_num_ADC+1)^(0+128),w	;volatile
  2313  0424  00A1               	movwf	(main@valor_ADC+1)^(0+128)
  2314  0425  083C               	movf	_num_ADC^(0+128),w	;volatile
  2315  0426  00A0               	movwf	main@valor_ADC^(0+128)
  2316  0427                     l3257:
  2317                           
  2318                           ;main.c: 65:             volt_ADC = Ds_Conversor_ADC(valor_ADC);
  2319  0427  0821               	movf	(main@valor_ADC+1)^(0+128),w
  2320  0428  0020               	movlb	0	; select bank0
  2321  0429  00D0               	movwf	Ds_Conversor_ADC@adcOUT+1
  2322  042A  0021               	movlb	1	; select bank1
  2323  042B  0820               	movf	main@valor_ADC^(0+128),w
  2324  042C  0020               	movlb	0	; select bank0
  2325  042D  00CF               	movwf	Ds_Conversor_ADC@adcOUT
  2326  042E  3187  27A7  3183   	fcall	_Ds_Conversor_ADC
  2327  0431  0020               	movlb	0	; select bank0
  2328  0432  0850               	movf	?_Ds_Conversor_ADC+1,w
  2329  0433  0021               	movlb	1	; select bank1
  2330  0434  00A3               	movwf	(main@volt_ADC+1)^(0+128)
  2331  0435  0020               	movlb	0	; select bank0
  2332  0436  084F               	movf	?_Ds_Conversor_ADC,w
  2333  0437  0021               	movlb	1	; select bank1
  2334  0438  00A2               	movwf	main@volt_ADC^(0+128)
  2335  0439                     l3259:
  2336                           
  2337                           ;main.c: 66:             Ds_Convertir_en_uni(&seven_seg, volt_ADC);
  2338  0439  0823               	movf	(main@volt_ADC+1)^(0+128),w
  2339  043A  0020               	movlb	0	; select bank0
  2340  043B  00A4               	movwf	Ds_Convertir_en_uni@voltaje+1
  2341  043C  0021               	movlb	1	; select bank1
  2342  043D  0822               	movf	main@volt_ADC^(0+128),w
  2343  043E  0020               	movlb	0	; select bank0
  2344  043F  00A3               	movwf	Ds_Convertir_en_uni@voltaje
  2345  0440  30B4               	movlw	(low (main@seven_seg| 0))& (0+255)
  2346  0441  3186  26CD  3183   	fcall	_Ds_Convertir_en_uni
  2347  0444                     l3261:
  2348                           
  2349                           ;main.c: 67:             EnviarPorSerial = 1;
  2350  0444  0021               	movlb	1	; select bank1
  2351  0445  01A4               	clrf	main@EnviarPorSerial^(0+128)
  2352  0446  0AA4               	incf	main@EnviarPorSerial^(0+128),f
  2353  0447                     l3263:
  2354                           
  2355                           ;main.c: 72:         if (EnviarPorSerial){
  2356  0447  0021               	movlb	1	; select bank1
  2357  0448  0824               	movf	main@EnviarPorSerial^(0+128),w
  2358  0449  1903               	btfsc	3,2
  2359  044A  2C4C               	goto	u2841
  2360  044B  2C4D               	goto	u2840
  2361  044C                     u2841:
  2362  044C  2C9C               	goto	l3293
  2363  044D                     u2840:
  2364  044D  2C94               	goto	l3291
  2365  044E                     l3267:
  2366                           
  2367                           ;main.c: 74:                 Pack[0]=(seven_seg.D3 + '0');
  2368  044E  0021               	movlb	1	; select bank1
  2369  044F  0837               	movf	(main@seven_seg^(0+128)+3),w
  2370  0450  3E30               	addlw	48
  2371  0451  0020               	movlb	0	; select bank0
  2372  0452  00D7               	movwf	??_main
  2373  0453  0857               	movf	??_main,w
  2374  0454  0021               	movlb	1	; select bank1
  2375  0455  00A5               	movwf	main@Pack^(0+128)
  2376  0456                     l3269:
  2377                           
  2378                           ;main.c: 75:                 Pack[1]=(',');
  2379  0456  302C               	movlw	44
  2380  0457  0020               	movlb	0	; select bank0
  2381  0458  00D7               	movwf	??_main
  2382  0459  0857               	movf	??_main,w
  2383  045A  0021               	movlb	1	; select bank1
  2384  045B  00A6               	movwf	(main@Pack^(0+128)+1)
  2385  045C                     l3271:
  2386                           
  2387                           ;main.c: 76:                 Pack[2]=(seven_seg.D2 + '0');
  2388  045C  0836               	movf	(main@seven_seg^(0+128)+2),w
  2389  045D  3E30               	addlw	48
  2390  045E  0020               	movlb	0	; select bank0
  2391  045F  00D7               	movwf	??_main
  2392  0460  0857               	movf	??_main,w
  2393  0461  0021               	movlb	1	; select bank1
  2394  0462  00A7               	movwf	(main@Pack^(0+128)+2)
  2395  0463                     l3273:
  2396                           
  2397                           ;main.c: 77:                 Pack[3]=(seven_seg.D1 + '0');
  2398  0463  0835               	movf	(main@seven_seg^(0+128)+1),w
  2399  0464  3E30               	addlw	48
  2400  0465  0020               	movlb	0	; select bank0
  2401  0466  00D7               	movwf	??_main
  2402  0467  0857               	movf	??_main,w
  2403  0468  0021               	movlb	1	; select bank1
  2404  0469  00A8               	movwf	(main@Pack^(0+128)+3)
  2405  046A                     l3275:
  2406                           
  2407                           ;main.c: 78:                 Pack[5]=0x0D;
  2408  046A  300D               	movlw	13
  2409  046B  0020               	movlb	0	; select bank0
  2410  046C  00D7               	movwf	??_main
  2411  046D  0857               	movf	??_main,w
  2412  046E  0021               	movlb	1	; select bank1
  2413  046F  00AA               	movwf	(main@Pack^(0+128)+5)
  2414  0470                     l3277:
  2415                           
  2416                           ;main.c: 79:                 Pack[4]= '\n';
  2417  0470  300A               	movlw	10
  2418  0471  0020               	movlb	0	; select bank0
  2419  0472  00D7               	movwf	??_main
  2420  0473  0857               	movf	??_main,w
  2421  0474  0021               	movlb	1	; select bank1
  2422  0475  00A9               	movwf	(main@Pack^(0+128)+4)
  2423  0476                     l3279:
  2424                           
  2425                           ;main.c: 80:                 EUSART_Write(Pack[0]);
  2426  0476  0825               	movf	main@Pack^(0+128),w
  2427  0477  318E  26AB  3183   	fcall	_EUSART_Write
  2428  047A  0064               	clrwdt	;# 
  2429  047B                     l3281:
  2430                           
  2431                           ;main.c: 82:                 EUSART_Write(Pack[1]);
  2432  047B  0021               	movlb	1	; select bank1
  2433  047C  0826               	movf	(main@Pack^(0+128)+1),w
  2434  047D  318E  26AB  3183   	fcall	_EUSART_Write
  2435  0480                     l3283:
  2436                           
  2437                           ;main.c: 83:                 EUSART_Write(Pack[2]);
  2438  0480  0021               	movlb	1	; select bank1
  2439  0481  0827               	movf	(main@Pack^(0+128)+2),w
  2440  0482  318E  26AB  3183   	fcall	_EUSART_Write
  2441  0485                     l3285:
  2442                           
  2443                           ;main.c: 84:                 EUSART_Write(Pack[3]);
  2444  0485  0021               	movlb	1	; select bank1
  2445  0486  0828               	movf	(main@Pack^(0+128)+3),w
  2446  0487  318E  26AB  3183   	fcall	_EUSART_Write
  2447  048A                     l3287:
  2448                           
  2449                           ;main.c: 85:                 EUSART_Write(Pack[4]);
  2450  048A  0021               	movlb	1	; select bank1
  2451  048B  0829               	movf	(main@Pack^(0+128)+4),w
  2452  048C  318E  26AB  3183   	fcall	_EUSART_Write
  2453  048F                     l3289:
  2454                           
  2455                           ;main.c: 86:                 EUSART_Write(Pack[5]);
  2456  048F  0021               	movlb	1	; select bank1
  2457  0490  082A               	movf	(main@Pack^(0+128)+5),w
  2458  0491  318E  26AB  3183   	fcall	_EUSART_Write
  2459  0494                     l3291:
  2460                           
  2461                           ;main.c: 73:             while(!EUSART_is_tx_ready()){
  2462  0494  318E  26F6  3183   	fcall	_EUSART_is_tx_ready
  2463  0497  3A00               	xorlw	0
  2464  0498  1903               	skipnz
  2465  0499  2C9B               	goto	u2851
  2466  049A  2C9C               	goto	u2850
  2467  049B                     u2851:
  2468  049B  2C4E               	goto	l3267
  2469  049C                     u2850:
  2470  049C                     l3293:
  2471                           
  2472                           ;main.c: 90:        if (sleep_flag){
  2473  049C  0878               	movf	_sleep_flag,w
  2474  049D  1903               	btfsc	3,2
  2475  049E  2CA0               	goto	u2861
  2476  049F  2CA1               	goto	u2860
  2477  04A0                     u2861:
  2478  04A0  2BFE               	goto	l3235
  2479  04A1                     u2860:
  2480  04A1                     l3295:
  2481                           
  2482                           ;main.c: 91:             sleep_flag = 0;
  2483  04A1  01F8               	clrf	_sleep_flag
  2484  04A2                     l3297:
  2485                           
  2486                           ;main.c: 92:             Ds_BCD(11);
  2487  04A2  300B               	movlw	11
  2488  04A3  3185  255B  3183   	fcall	_Ds_BCD
  2489  04A6                     l3299:
  2490                           
  2491                           ;main.c: 93:             Ds_Encienda_Disp(0);
  2492  04A6  3000               	movlw	0
  2493  04A7  318F  27A0  3183   	fcall	_Ds_Encienda_Disp
  2494  04AA  0063               	sleep	;# 
  2495  04AB  2BFE               	goto	l3235
  2496  04AC  3180  2828         	ljmp	start
  2497  04AE                     __end_of_main:
  2498                           
  2499                           	psect	text1
  2500  066D                     __ptext1:	
  2501 ;; *************** function _Tm_Procese_tiempo *****************
  2502 ;; Defined at:
  2503 ;;		line 17 in file "nuestrostimers.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2506 ;;		 -> main@timer_1ms(9), 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  ctp             1    7[COMMON] PTR struct Tm_Periodico
  2509 ;;		 -> main@timer_1ms(9), 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2519 ;;      Params:         0       0       0       0       0       0
  2520 ;;      Locals:         1       0       0       0       0       0
  2521 ;;      Temps:          4       0       0       0       0       0
  2522 ;;      Totals:         5       0       0       0       0       0
  2523 ;;Total ram usage:        5 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 4
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_main
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           
  2534                           ;psect for function _Tm_Procese_tiempo
  2535  066D                     _Tm_Procese_tiempo:
  2536                           
  2537                           ;incstack = 0
  2538                           ; Regs used in _Tm_Procese_tiempo: [wreg-fsr1h+status,2+status,0]
  2539                           ;Tm_Procese_tiempo@ctp stored from wreg
  2540  066D  00F7               	movwf	Tm_Procese_tiempo@ctp
  2541  066E                     l3097:
  2542                           
  2543                           ;nuestrostimers.c: 17: void Tm_Procese_tiempo (Tm_Periodico *ctp);nuestrostimers.c: 18: 
      +                          {;nuestrostimers.c: 21:  if (ctp->banderas & 0x01U)
  2544  066E  0877               	movf	Tm_Procese_tiempo@ctp,w
  2545  066F  3E08               	addlw	8
  2546  0670  0086               	movwf	6
  2547  0671  0187               	clrf	7
  2548  0672  1C01               	btfss	1,0
  2549  0673  2E75               	goto	u2721
  2550  0674  2E76               	goto	u2720
  2551  0675                     u2721:
  2552  0675  2E98               	goto	l3107
  2553  0676                     u2720:
  2554  0676                     l3099:
  2555                           
  2556                           ;nuestrostimers.c: 22:  {;nuestrostimers.c: 23:   --(ctp->contador);
  2557  0676  0877               	movf	Tm_Procese_tiempo@ctp,w
  2558  0677  0086               	movwf	6
  2559  0678  0187               	clrf	7
  2560  0679  3001               	movlw	1
  2561  067A  0281               	subwf	1,f
  2562  067B  3141               	addfsr 1,1
  2563  067C  3000               	movlw	0
  2564  067D  3B81               	subwfb	1,f
  2565  067E  317F               	addfsr 1,-1
  2566  067F                     l3101:
  2567                           
  2568                           ;nuestrostimers.c: 24:   if ( !(ctp->contador) )
  2569  067F  0877               	movf	Tm_Procese_tiempo@ctp,w
  2570  0680  0086               	movwf	6
  2571  0681  0187               	clrf	7
  2572  0682  0016               	moviw fsr1++
  2573  0683  0401               	iorwf	1,w
  2574  0684  1D03               	btfss	3,2
  2575  0685  2E87               	goto	u2731
  2576  0686  2E88               	goto	u2730
  2577  0687                     u2731:
  2578  0687  2E98               	goto	l3107
  2579  0688                     u2730:
  2580  0688                     l3103:
  2581                           
  2582                           ;nuestrostimers.c: 25:   {;nuestrostimers.c: 26:    ctp->banderas |= 0x02U;
  2583  0688  0877               	movf	Tm_Procese_tiempo@ctp,w
  2584  0689  3E08               	addlw	8
  2585  068A  0086               	movwf	6
  2586  068B  0187               	clrf	7
  2587  068C  1481               	bsf	1,1
  2588  068D                     l3105:
  2589                           
  2590                           ;nuestrostimers.c: 27:    ctp->contador = ctp-> periodo;
  2591  068D  0877               	movf	Tm_Procese_tiempo@ctp,w
  2592  068E  3E02               	addlw	2
  2593  068F  0086               	movwf	6
  2594  0690  0187               	clrf	7
  2595  0691  0877               	movf	Tm_Procese_tiempo@ctp,w
  2596  0692  0084               	movwf	4
  2597  0693  0185               	clrf	5
  2598  0694  3F40               	moviw [0]fsr1
  2599  0695  3F80               	movwi [0]fsr0
  2600  0696  3F41               	moviw [1]fsr1
  2601  0697  3F81               	movwi [1]fsr0
  2602  0698                     l3107:
  2603                           
  2604                           ;nuestrostimers.c: 30:  if ((ctp->timeout))
  2605  0698  0877               	movf	Tm_Procese_tiempo@ctp,w
  2606  0699  3E04               	addlw	4
  2607  069A  0086               	movwf	6
  2608  069B  0187               	clrf	7
  2609  069C  3F40               	moviw [0]fsr1
  2610  069D  00F3               	movwf	??_Tm_Procese_tiempo
  2611  069E  3F41               	moviw [1]fsr1
  2612  069F  00F4               	movwf	??_Tm_Procese_tiempo+1
  2613  06A0  3F42               	moviw [2]fsr1
  2614  06A1  00F5               	movwf	??_Tm_Procese_tiempo+2
  2615  06A2  3F43               	moviw [3]fsr1
  2616  06A3  00F6               	movwf	??_Tm_Procese_tiempo+3
  2617  06A4  0876               	movf	??_Tm_Procese_tiempo+3,w
  2618  06A5  0475               	iorwf	??_Tm_Procese_tiempo+2,w
  2619  06A6  0474               	iorwf	??_Tm_Procese_tiempo+1,w
  2620  06A7  0473               	iorwf	??_Tm_Procese_tiempo,w
  2621  06A8  1903               	skipnz
  2622  06A9  2EAB               	goto	u2741
  2623  06AA  2EAC               	goto	u2740
  2624  06AB                     u2741:
  2625  06AB  2ECC               	goto	l617
  2626  06AC                     u2740:
  2627  06AC                     l3109:
  2628                           
  2629                           ;nuestrostimers.c: 31:   ctp->timeout=ctp->timeout-1;
  2630  06AC  30FF               	movlw	255
  2631  06AD  00F3               	movwf	??_Tm_Procese_tiempo
  2632  06AE  30FF               	movlw	255
  2633  06AF  00F4               	movwf	??_Tm_Procese_tiempo+1
  2634  06B0  30FF               	movlw	255
  2635  06B1  00F5               	movwf	??_Tm_Procese_tiempo+2
  2636  06B2  30FF               	movlw	255
  2637  06B3  00F6               	movwf	??_Tm_Procese_tiempo+3
  2638  06B4  0877               	movf	Tm_Procese_tiempo@ctp,w
  2639  06B5  3E04               	addlw	4
  2640  06B6  0086               	movwf	6
  2641  06B7  0187               	clrf	7
  2642  06B8  3F40               	moviw [0]fsr1
  2643  06B9  07F3               	addwf	??_Tm_Procese_tiempo,f
  2644  06BA  3F41               	moviw [1]fsr1
  2645  06BB  3DF4               	addwfc	??_Tm_Procese_tiempo+1,f
  2646  06BC  3F42               	moviw [2]fsr1
  2647  06BD  3DF5               	addwfc	??_Tm_Procese_tiempo+2,f
  2648  06BE  3F43               	moviw [3]fsr1
  2649  06BF  3DF6               	addwfc	??_Tm_Procese_tiempo+3,f
  2650  06C0  0877               	movf	Tm_Procese_tiempo@ctp,w
  2651  06C1  3E04               	addlw	4
  2652  06C2  0086               	movwf	6
  2653  06C3  0187               	clrf	7
  2654  06C4  0873               	movf	??_Tm_Procese_tiempo,w
  2655  06C5  3FC0               	movwi [0]fsr1
  2656  06C6  0874               	movf	??_Tm_Procese_tiempo+1,w
  2657  06C7  3FC1               	movwi [1]fsr1
  2658  06C8  0875               	movf	??_Tm_Procese_tiempo+2,w
  2659  06C9  3FC2               	movwi [2]fsr1
  2660  06CA  0876               	movf	??_Tm_Procese_tiempo+3,w
  2661  06CB  3FC3               	movwi [3]fsr1
  2662  06CC                     l617:
  2663  06CC  0008               	return
  2664  06CD                     __end_of_Tm_Procese_tiempo:
  2665                           
  2666                           	psect	text2
  2667  0F3B                     __ptext2:	
  2668 ;; *************** function _Tm_Inicie_periodico *****************
  2669 ;; Defined at:
  2670 ;;		line 11 in file "nuestrostimers.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2673 ;;		 -> main@timer_1ms(9), 
  2674 ;;  periodo         2    3[COMMON] unsigned int 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  ctp             1    6[COMMON] PTR struct Tm_Periodico
  2677 ;;		 -> main@timer_1ms(9), 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2687 ;;      Params:         2       0       0       0       0       0
  2688 ;;      Locals:         1       0       0       0       0       0
  2689 ;;      Temps:          1       0       0       0       0       0
  2690 ;;      Totals:         4       0       0       0       0       0
  2691 ;;Total ram usage:        4 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 4
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function _Tm_Inicie_periodico
  2703  0F3B                     _Tm_Inicie_periodico:
  2704                           
  2705                           ;incstack = 0
  2706                           ; Regs used in _Tm_Inicie_periodico: [wreg+fsr1l+fsr1h+status,2+status,0]
  2707                           ;Tm_Inicie_periodico@ctp stored from wreg
  2708  0F3B  00F6               	movwf	Tm_Inicie_periodico@ctp
  2709  0F3C                     l3081:
  2710                           
  2711                           ;nuestrostimers.c: 11: void Tm_Inicie_periodico (Tm_Periodico *ctp,unsigned int periodo)
      +                          ;nuestrostimers.c: 12: {;nuestrostimers.c: 13:  ctp->banderas |= 0x01U;
  2712  0F3C  0876               	movf	Tm_Inicie_periodico@ctp,w
  2713  0F3D  3E08               	addlw	8
  2714  0F3E  0086               	movwf	6
  2715  0F3F  0187               	clrf	7
  2716  0F40  1401               	bsf	1,0
  2717                           
  2718                           ;nuestrostimers.c: 14:  ctp->banderas &= ~0x02U;
  2719  0F41  30FD               	movlw	253
  2720  0F42  00F5               	movwf	??_Tm_Inicie_periodico
  2721  0F43  0876               	movf	Tm_Inicie_periodico@ctp,w
  2722  0F44  3E08               	addlw	8
  2723  0F45  0086               	movwf	6
  2724  0F46  0187               	clrf	7
  2725  0F47  0875               	movf	??_Tm_Inicie_periodico,w
  2726  0F48  0581               	andwf	1,f
  2727                           
  2728                           ;nuestrostimers.c: 15:  ctp->contador = ctp->periodo = periodo;
  2729  0F49  0876               	movf	Tm_Inicie_periodico@ctp,w
  2730  0F4A  3E02               	addlw	2
  2731  0F4B  0086               	movwf	6
  2732  0F4C  0187               	clrf	7
  2733  0F4D  0873               	movf	Tm_Inicie_periodico@periodo,w
  2734  0F4E  3FC0               	movwi [0]fsr1
  2735  0F4F  0874               	movf	Tm_Inicie_periodico@periodo+1,w
  2736  0F50  3FC1               	movwi [1]fsr1
  2737  0F51  0876               	movf	Tm_Inicie_periodico@ctp,w
  2738  0F52  0086               	movwf	6
  2739  0F53  0187               	clrf	7
  2740  0F54  0873               	movf	Tm_Inicie_periodico@periodo,w
  2741  0F55  3FC0               	movwi [0]fsr1
  2742  0F56  0874               	movf	Tm_Inicie_periodico@periodo+1,w
  2743  0F57  3FC1               	movwi [1]fsr1
  2744  0F58                     l611:
  2745  0F58  0008               	return
  2746  0F59                     __end_of_Tm_Inicie_periodico:
  2747                           
  2748                           	psect	text3
  2749  0EA3                     __ptext3:	
  2750 ;; *************** function _Tm_Hubo_periodico *****************
  2751 ;; Defined at:
  2752 ;;		line 36 in file "nuestrostimers.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2755 ;;		 -> main@timer_1ms(9), 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  ctp             1    3[COMMON] PTR struct Tm_Periodico
  2758 ;;		 -> main@timer_1ms(9), 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      unsigned char 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2768 ;;      Params:         0       0       0       0       0       0
  2769 ;;      Locals:         1       0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0
  2771 ;;      Totals:         1       0       0       0       0       0
  2772 ;;Total ram usage:        1 bytes
  2773 ;; Hardware stack levels used: 1
  2774 ;; Hardware stack levels required when called: 4
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_main
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _Tm_Hubo_periodico
  2784  0EA3                     _Tm_Hubo_periodico:
  2785                           
  2786                           ;incstack = 0
  2787                           ; Regs used in _Tm_Hubo_periodico: [wreg+fsr1l+fsr1h+status,2+status,0]
  2788                           ;Tm_Hubo_periodico@ctp stored from wreg
  2789  0EA3  00F3               	movwf	Tm_Hubo_periodico@ctp
  2790  0EA4                     l3179:
  2791                           
  2792                           ;nuestrostimers.c: 36: char Tm_Hubo_periodico (Tm_Periodico *ctp);nuestrostimers.c: 37: 
      +                          {;nuestrostimers.c: 38:  return (ctp->banderas & 0x02U);
  2793  0EA4  0873               	movf	Tm_Hubo_periodico@ctp,w
  2794  0EA5  3E08               	addlw	8
  2795  0EA6  0086               	movwf	6
  2796  0EA7  0187               	clrf	7
  2797  0EA8  0801               	movf	1,w
  2798  0EA9  3902               	andlw	2
  2799  0EAA                     l620:
  2800  0EAA  0008               	return
  2801  0EAB                     __end_of_Tm_Hubo_periodico:
  2802                           
  2803                           	psect	text4
  2804  0EB5                     __ptext4:	
  2805 ;; *************** function _Tm_Baje_periodico *****************
  2806 ;; Defined at:
  2807 ;;		line 43 in file "nuestrostimers.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2810 ;;		 -> main@timer_1ms(9), 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  ctp             1    4[COMMON] PTR struct Tm_Periodico
  2813 ;;		 -> main@timer_1ms(9), 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2823 ;;      Params:         0       0       0       0       0       0
  2824 ;;      Locals:         1       0       0       0       0       0
  2825 ;;      Temps:          1       0       0       0       0       0
  2826 ;;      Totals:         2       0       0       0       0       0
  2827 ;;Total ram usage:        2 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 4
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _Tm_Baje_periodico
  2839  0EB5                     _Tm_Baje_periodico:
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in _Tm_Baje_periodico: [wreg+fsr1l+fsr1h+status,2+status,0]
  2843                           ;Tm_Baje_periodico@ctp stored from wreg
  2844  0EB5  00F4               	movwf	Tm_Baje_periodico@ctp
  2845  0EB6                     l3183:
  2846                           
  2847                           ;nuestrostimers.c: 43: void Tm_Baje_periodico (Tm_Periodico *ctp);nuestrostimers.c: 44: 
      +                          {;nuestrostimers.c: 45:  ctp->banderas &= ~0x02U;
  2848  0EB6  30FD               	movlw	253
  2849  0EB7  00F3               	movwf	??_Tm_Baje_periodico
  2850  0EB8  0874               	movf	Tm_Baje_periodico@ctp,w
  2851  0EB9  3E08               	addlw	8
  2852  0EBA  0086               	movwf	6
  2853  0EBB  0187               	clrf	7
  2854  0EBC  0873               	movf	??_Tm_Baje_periodico,w
  2855  0EBD  0581               	andwf	1,f
  2856  0EBE                     l623:
  2857  0EBE  0008               	return
  2858  0EBF                     __end_of_Tm_Baje_periodico:
  2859                           
  2860                           	psect	text5
  2861  0E77                     __ptext5:	
  2862 ;; *************** function _TMR6_StartTimer *****************
  2863 ;; Defined at:
  2864 ;;		line 87 in file "mcc_generated_files/tmr6.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		None
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2878 ;;      Params:         0       0       0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0
  2881 ;;      Totals:         0       0       0       0       0       0
  2882 ;;Total ram usage:        0 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 4
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_main
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function _TMR6_StartTimer
  2894  0E77                     _TMR6_StartTimer:
  2895  0E77                     l3051:	
  2896                           ;incstack = 0
  2897                           ; Regs used in _TMR6_StartTimer: []
  2898                           
  2899                           
  2900                           ;mcc_generated_files/tmr6.c: 90:     T6CONbits.TMR6ON = 1;
  2901  0E77  0028               	movlb	8	; select bank8
  2902  0E78  151E               	bsf	30,2	;volatile
  2903  0E79                     l24:
  2904  0E79  0008               	return
  2905  0E7A                     __end_of_TMR6_StartTimer:
  2906                           
  2907                           	psect	text6
  2908  0F28                     __ptext6:	
  2909 ;; *************** function _SYSTEM_Initialize *****************
  2910 ;; Defined at:
  2911 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;		None
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;		None
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0, pclath, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2925 ;;      Params:         0       0       0       0       0       0
  2926 ;;      Locals:         0       0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0
  2928 ;;      Totals:         0       0       0       0       0       0
  2929 ;;Total ram usage:        0 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 6
  2932 ;; This function calls:
  2933 ;;		_ADC_Initialize
  2934 ;;		_EUSART_Initialize
  2935 ;;		_OSCILLATOR_Initialize
  2936 ;;		_PIN_MANAGER_Initialize
  2937 ;;		_TMR6_Initialize
  2938 ;;		_WDT_Initialize
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           
  2945                           ;psect for function _SYSTEM_Initialize
  2946  0F28                     _SYSTEM_Initialize:
  2947  0F28                     l3071:	
  2948                           ;incstack = 0
  2949                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2950                           
  2951                           
  2952                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2953  0F28  3187  27E4  318F   	fcall	_PIN_MANAGER_Initialize
  2954                           
  2955                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2956  0F2B  318E  26BF  318F   	fcall	_OSCILLATOR_Initialize
  2957  0F2E                     l3073:
  2958                           
  2959                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2960  0F2E  318E  2674  318F   	fcall	_WDT_Initialize
  2961  0F31                     l3075:
  2962                           
  2963                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
  2964  0F31  318F  2715  318F   	fcall	_TMR6_Initialize
  2965  0F34                     l3077:
  2966                           
  2967                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2968  0F34  318F  2705  318F   	fcall	_ADC_Initialize
  2969  0F37                     l3079:
  2970                           
  2971                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2972  0F37  318F  2759  318F   	fcall	_EUSART_Initialize
  2973  0F3A                     l243:
  2974  0F3A  0008               	return
  2975  0F3B                     __end_of_SYSTEM_Initialize:
  2976                           
  2977                           	psect	text7
  2978  0E74                     __ptext7:	
  2979 ;; *************** function _WDT_Initialize *****************
  2980 ;; Defined at:
  2981 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		status,2
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2995 ;;      Params:         0       0       0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0
  2998 ;;      Totals:         0       0       0       0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 4
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_SYSTEM_Initialize
  3006 ;;		_main
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           
  3011                           ;psect for function _WDT_Initialize
  3012  0E74                     _WDT_Initialize:
  3013  0E74                     l2763:	
  3014                           ;incstack = 0
  3015                           ; Regs used in _WDT_Initialize: [status,2]
  3016                           
  3017                           
  3018                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x00;
  3019  0E74  0021               	movlb	1	; select bank1
  3020  0E75  0197               	clrf	23	;volatile
  3021  0E76                     l252:
  3022  0E76  0008               	return
  3023  0E77                     __end_of_WDT_Initialize:
  3024                           
  3025                           	psect	text8
  3026  0F15                     __ptext8:	
  3027 ;; *************** function _TMR6_Initialize *****************
  3028 ;; Defined at:
  3029 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0, pclath, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3043 ;;      Params:         0       0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0
  3046 ;;      Totals:         0       0       0       0       0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 5
  3050 ;; This function calls:
  3051 ;;		_TMR6_SetInterruptHandler
  3052 ;; This function is called by:
  3053 ;;		_SYSTEM_Initialize
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function _TMR6_Initialize
  3059  0F15                     _TMR6_Initialize:
  3060  0F15                     l2713:	
  3061                           ;incstack = 0
  3062                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3063                           
  3064                           
  3065                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xF9;
  3066  0F15  30F9               	movlw	249
  3067  0F16  0028               	movlb	8	; select bank8
  3068  0F17  009D               	movwf	29	;volatile
  3069  0F18                     l2715:
  3070                           
  3071                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
  3072  0F18  019C               	clrf	28	;volatile
  3073  0F19                     l2717:
  3074                           
  3075                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
  3076  0F19  0020               	movlb	0	; select bank0
  3077  0F1A  1193               	bcf	19,3	;volatile
  3078  0F1B                     l2719:
  3079                           
  3080                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
  3081  0F1B  0021               	movlb	1	; select bank1
  3082  0F1C  1593               	bsf	19,3	;volatile
  3083  0F1D                     l2721:
  3084                           
  3085                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  3086  0F1D  3003               	movlw	low _TMR6_DefaultInterruptHandler
  3087  0F1E  00F3               	movwf	TMR6_SetInterruptHandler@InterruptHandler
  3088  0F1F  3000               	movlw	high _TMR6_DefaultInterruptHandler
  3089  0F20  00F4               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
  3090  0F21  318E  269D  318F   	fcall	_TMR6_SetInterruptHandler
  3091  0F24                     l2723:
  3092                           
  3093                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x3D;
  3094  0F24  303D               	movlw	61
  3095  0F25  0028               	movlb	8	; select bank8
  3096  0F26  009E               	movwf	30	;volatile
  3097  0F27                     l21:
  3098  0F27  0008               	return
  3099  0F28                     __end_of_TMR6_Initialize:
  3100                           
  3101                           	psect	text9
  3102  0E9D                     __ptext9:	
  3103 ;; *************** function _TMR6_SetInterruptHandler *****************
  3104 ;; Defined at:
  3105 ;;		line 132 in file "mcc_generated_files/tmr6.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  3108 ;;		 -> Interrupcion_timer(1), TMR6_DefaultInterruptHandler(1), 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		wreg
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3120 ;;      Params:         2       0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0       0
  3122 ;;      Temps:          0       0       0       0       0       0
  3123 ;;      Totals:         2       0       0       0       0       0
  3124 ;;Total ram usage:        2 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; Hardware stack levels required when called: 4
  3127 ;; This function calls:
  3128 ;;		Nothing
  3129 ;; This function is called by:
  3130 ;;		_TMR6_Initialize
  3131 ;;		_main
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           
  3136                           ;psect for function _TMR6_SetInterruptHandler
  3137  0E9D                     _TMR6_SetInterruptHandler:
  3138  0E9D                     l2689:	
  3139                           ;incstack = 0
  3140                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  3141                           
  3142                           
  3143                           ;mcc_generated_files/tmr6.c: 133:     TMR6_InterruptHandler = InterruptHandler;
  3144  0E9D  0874               	movf	TMR6_SetInterruptHandler@InterruptHandler+1,w
  3145  0E9E  0021               	movlb	1	; select bank1
  3146  0E9F  00C7               	movwf	(_TMR6_InterruptHandler+1)^(0+128)
  3147  0EA0  0873               	movf	TMR6_SetInterruptHandler@InterruptHandler,w
  3148  0EA1  00C6               	movwf	_TMR6_InterruptHandler^(0+128)
  3149  0EA2                     l43:
  3150  0EA2  0008               	return
  3151  0EA3                     __end_of_TMR6_SetInterruptHandler:
  3152                           
  3153                           	psect	text10
  3154  07E4                     __ptext10:	
  3155 ;; *************** function _PIN_MANAGER_Initialize *****************
  3156 ;; Defined at:
  3157 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3171 ;;      Params:         0       0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0
  3174 ;;      Totals:         0       0       0       0       0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 4
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_SYSTEM_Initialize
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function _PIN_MANAGER_Initialize
  3187  07E4                     _PIN_MANAGER_Initialize:
  3188  07E4                     l2725:	
  3189                           ;incstack = 0
  3190                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3191                           
  3192                           
  3193                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3194  07E4  0022               	movlb	2	; select bank2
  3195  07E5  018C               	clrf	12	;volatile
  3196                           
  3197                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3198  07E6  018D               	clrf	13	;volatile
  3199  07E7                     l2727:
  3200                           
  3201                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x20;
  3202  07E7  3020               	movlw	32
  3203  07E8  0021               	movlb	1	; select bank1
  3204  07E9  008C               	movwf	12	;volatile
  3205  07EA                     l2729:
  3206                           
  3207                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xE6;
  3208  07EA  30E6               	movlw	230
  3209  07EB  008D               	movwf	13	;volatile
  3210  07EC                     l2731:
  3211                           
  3212                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0x38;
  3213  07EC  3038               	movlw	56
  3214  07ED  0023               	movlb	3	; select bank3
  3215  07EE  008D               	movwf	13	;volatile
  3216  07EF                     l2733:
  3217                           
  3218                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  3219  07EF  301F               	movlw	31
  3220  07F0  008C               	movwf	12	;volatile
  3221                           
  3222                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  3223  07F1  0024               	movlb	4	; select bank4
  3224  07F2  018D               	clrf	13	;volatile
  3225                           
  3226                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  3227  07F3  018C               	clrf	12	;volatile
  3228  07F4                     l2735:
  3229                           
  3230                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3231  07F4  0021               	movlb	1	; select bank1
  3232  07F5  1795               	bsf	21,7	;volatile
  3233                           
  3234                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  3235  07F6  0022               	movlb	2	; select bank2
  3236  07F7  019D               	clrf	29	;volatile
  3237                           
  3238                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  3239  07F8  019E               	clrf	30	;volatile
  3240  07F9                     l71:
  3241  07F9  0008               	return
  3242  07FA                     __end_of_PIN_MANAGER_Initialize:
  3243                           
  3244                           	psect	text11
  3245  0EBF                     __ptext11:	
  3246 ;; *************** function _OSCILLATOR_Initialize *****************
  3247 ;; Defined at:
  3248 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      void 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3262 ;;      Params:         0       0       0       0       0       0
  3263 ;;      Locals:         0       0       0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0
  3265 ;;      Totals:         0       0       0       0       0       0
  3266 ;;Total ram usage:        0 bytes
  3267 ;; Hardware stack levels used: 1
  3268 ;; Hardware stack levels required when called: 4
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_SYSTEM_Initialize
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           
  3277                           ;psect for function _OSCILLATOR_Initialize
  3278  0EBF                     _OSCILLATOR_Initialize:
  3279  0EBF                     l2757:	
  3280                           ;incstack = 0
  3281                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3282                           
  3283                           
  3284                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3285  0EBF  3070               	movlw	112
  3286  0EC0  0021               	movlb	1	; select bank1
  3287  0EC1  0099               	movwf	25	;volatile
  3288  0EC2                     l2759:
  3289                           
  3290                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3291  0EC2  0198               	clrf	24	;volatile
  3292  0EC3                     l2761:
  3293                           
  3294                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3295  0EC3  0022               	movlb	2	; select bank2
  3296  0EC4  0196               	clrf	22	;volatile
  3297  0EC5                     l246:	
  3298                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  3299                           
  3300                           
  3301                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  3302  0EC5  0021               	movlb	1	; select bank1
  3303  0EC6  1F1A               	btfss	26,6	;volatile
  3304  0EC7  2EC9               	goto	u2011
  3305  0EC8  2ECA               	goto	u2010
  3306  0EC9                     u2011:
  3307  0EC9  2EC5               	goto	l246
  3308  0ECA                     u2010:
  3309  0ECA                     l249:
  3310  0ECA  0008               	return
  3311  0ECB                     __end_of_OSCILLATOR_Initialize:
  3312                           
  3313                           	psect	text12
  3314  0F59                     __ptext12:	
  3315 ;; *************** function _EUSART_Initialize *****************
  3316 ;; Defined at:
  3317 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;		None
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      void 
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0, pclath, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3331 ;;      Params:         0       0       0       0       0       0
  3332 ;;      Locals:         0       0       0       0       0       0
  3333 ;;      Temps:          0       0       0       0       0       0
  3334 ;;      Totals:         0       0       0       0       0       0
  3335 ;;Total ram usage:        0 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 5
  3338 ;; This function calls:
  3339 ;;		_EUSART_SetErrorHandler
  3340 ;;		_EUSART_SetFramingErrorHandler
  3341 ;;		_EUSART_SetOverrunErrorHandler
  3342 ;; This function is called by:
  3343 ;;		_SYSTEM_Initialize
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function _EUSART_Initialize
  3349  0F59                     _EUSART_Initialize:
  3350  0F59                     l2737:	
  3351                           ;incstack = 0
  3352                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3353                           
  3354                           
  3355                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  3356  0F59  3008               	movlw	8
  3357  0F5A  0023               	movlb	3	; select bank3
  3358  0F5B  009F               	movwf	31	;volatile
  3359                           
  3360                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  3361  0F5C  3090               	movlw	144
  3362  0F5D  009D               	movwf	29	;volatile
  3363                           
  3364                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  3365  0F5E  3024               	movlw	36
  3366  0F5F  009E               	movwf	30	;volatile
  3367                           
  3368                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x40;
  3369  0F60  3040               	movlw	64
  3370  0F61  009B               	movwf	27	;volatile
  3371                           
  3372                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x03;
  3373  0F62  3003               	movlw	3
  3374  0F63  009C               	movwf	28	;volatile
  3375  0F64                     l2739:
  3376                           
  3377                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3378  0F64  3000               	movlw	0
  3379  0F65  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3380  0F66  3000               	movlw	0
  3381  0F67  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3382  0F68  318E  2691  318F   	fcall	_EUSART_SetFramingErrorHandler
  3383  0F6B                     l2741:
  3384                           
  3385                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3386  0F6B  3000               	movlw	0
  3387  0F6C  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3388  0F6D  3000               	movlw	0
  3389  0F6E  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3390  0F6F  318E  2697  318F   	fcall	_EUSART_SetOverrunErrorHandler
  3391  0F72                     l2743:
  3392                           
  3393                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3394  0F72  3000               	movlw	0
  3395  0F73  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler
  3396  0F74  3000               	movlw	0
  3397  0F75  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3398  0F76  318E  268B  318F   	fcall	_EUSART_SetErrorHandler
  3399  0F79                     l2745:
  3400                           
  3401                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  3402  0F79  0021               	movlb	1	; select bank1
  3403  0F7A  01C8               	clrf	_eusartRxLastError^(0+128)	;volatile
  3404  0F7B                     l117:
  3405  0F7B  0008               	return
  3406  0F7C                     __end_of_EUSART_Initialize:
  3407                           
  3408                           	psect	text13
  3409  0E97                     __ptext13:	
  3410 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3411 ;; Defined at:
  3412 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  3415 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3427 ;;      Params:         2       0       0       0       0       0
  3428 ;;      Locals:         0       0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0
  3430 ;;      Totals:         2       0       0       0       0       0
  3431 ;;Total ram usage:        2 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; Hardware stack levels required when called: 4
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_EUSART_Initialize
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           
  3442                           ;psect for function _EUSART_SetOverrunErrorHandler
  3443  0E97                     _EUSART_SetOverrunErrorHandler:
  3444  0E97                     l2693:	
  3445                           ;incstack = 0
  3446                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3447                           
  3448                           
  3449                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  3450  0E97  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3451  0E98  0021               	movlb	1	; select bank1
  3452  0E99  00C3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  3453  0E9A  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3454  0E9B  00C2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  3455  0E9C                     l159:
  3456  0E9C  0008               	return
  3457  0E9D                     __end_of_EUSART_SetOverrunErrorHandler:
  3458                           
  3459                           	psect	text14
  3460  0E91                     __ptext14:	
  3461 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3462 ;; Defined at:
  3463 ;;		line 157 in file "mcc_generated_files/eusart.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  3466 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3478 ;;      Params:         2       0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0
  3481 ;;      Totals:         2       0       0       0       0       0
  3482 ;;Total ram usage:        2 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 4
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_EUSART_Initialize
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           
  3493                           ;psect for function _EUSART_SetFramingErrorHandler
  3494  0E91                     _EUSART_SetFramingErrorHandler:
  3495  0E91                     l2691:	
  3496                           ;incstack = 0
  3497                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3498                           
  3499                           
  3500                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  3501  0E91  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3502  0E92  0021               	movlb	1	; select bank1
  3503  0E93  00C5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  3504  0E94  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3505  0E95  00C4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  3506  0E96                     l156:
  3507  0E96  0008               	return
  3508  0E97                     __end_of_EUSART_SetFramingErrorHandler:
  3509                           
  3510                           	psect	text15
  3511  0E8B                     __ptext15:	
  3512 ;; *************** function _EUSART_SetErrorHandler *****************
  3513 ;; Defined at:
  3514 ;;		line 165 in file "mcc_generated_files/eusart.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  3517 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3529 ;;      Params:         2       0       0       0       0       0
  3530 ;;      Locals:         0       0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0
  3532 ;;      Totals:         2       0       0       0       0       0
  3533 ;;Total ram usage:        2 bytes
  3534 ;; Hardware stack levels used: 1
  3535 ;; Hardware stack levels required when called: 4
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_EUSART_Initialize
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           
  3544                           ;psect for function _EUSART_SetErrorHandler
  3545  0E8B                     _EUSART_SetErrorHandler:
  3546  0E8B                     l2695:	
  3547                           ;incstack = 0
  3548                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3549                           
  3550                           
  3551                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  3552  0E8B  0874               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3553  0E8C  0021               	movlb	1	; select bank1
  3554  0E8D  00C1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  3555  0E8E  0873               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3556  0E8F  00C0               	movwf	_EUSART_ErrorHandler^(0+128)
  3557  0E90                     l162:
  3558  0E90  0008               	return
  3559  0E91                     __end_of_EUSART_SetErrorHandler:
  3560                           
  3561                           	psect	text16
  3562  0F05                     __ptext16:	
  3563 ;; *************** function _ADC_Initialize *****************
  3564 ;; Defined at:
  3565 ;;		line 67 in file "mcc_generated_files/adc.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0, pclath, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3579 ;;      Params:         0       0       0       0       0       0
  3580 ;;      Locals:         0       0       0       0       0       0
  3581 ;;      Temps:          0       0       0       0       0       0
  3582 ;;      Totals:         0       0       0       0       0       0
  3583 ;;Total ram usage:        0 bytes
  3584 ;; Hardware stack levels used: 1
  3585 ;; Hardware stack levels required when called: 5
  3586 ;; This function calls:
  3587 ;;		_ADC_SetInterruptHandler
  3588 ;; This function is called by:
  3589 ;;		_SYSTEM_Initialize
  3590 ;;		_main
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function _ADC_Initialize
  3596  0F05                     _ADC_Initialize:
  3597  0F05                     l2747:	
  3598                           ;incstack = 0
  3599                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3600                           
  3601                           
  3602                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0b11100000;
  3603  0F05  30E0               	movlw	224
  3604  0F06  0021               	movlb	1	; select bank1
  3605  0F07  009E               	movwf	30	;volatile
  3606  0F08                     l2749:
  3607                           
  3608                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3609  0F08  019B               	clrf	27	;volatile
  3610  0F09                     l2751:
  3611                           
  3612                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3613  0F09  019C               	clrf	28	;volatile
  3614                           
  3615                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0b00011101;
  3616  0F0A  301D               	movlw	29
  3617  0F0B  009D               	movwf	29	;volatile
  3618  0F0C                     l2753:
  3619                           
  3620                           ;mcc_generated_files/adc.c: 84:     PIE1bits.ADIE = 1;
  3621  0F0C  1711               	bsf	17,6	;volatile
  3622  0F0D                     l2755:
  3623                           
  3624                           ;mcc_generated_files/adc.c: 87:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  3625  0F0D  3002               	movlw	low _ADC_DefaultInterruptHandler
  3626  0F0E  00F3               	movwf	ADC_SetInterruptHandler@InterruptHandler
  3627  0F0F  3000               	movlw	high _ADC_DefaultInterruptHandler
  3628  0F10  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  3629  0F11  318E  2685  318F   	fcall	_ADC_SetInterruptHandler
  3630  0F14                     l187:
  3631  0F14  0008               	return
  3632  0F15                     __end_of_ADC_Initialize:
  3633                           
  3634                           	psect	text17
  3635  0E85                     __ptext17:	
  3636 ;; *************** function _ADC_SetInterruptHandler *****************
  3637 ;; Defined at:
  3638 ;;		line 156 in file "mcc_generated_files/adc.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  3641 ;;		 -> Interrupcion_ADC(1), ADC_DefaultInterruptHandler(1), 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3653 ;;      Params:         2       0       0       0       0       0
  3654 ;;      Locals:         0       0       0       0       0       0
  3655 ;;      Temps:          0       0       0       0       0       0
  3656 ;;      Totals:         2       0       0       0       0       0
  3657 ;;Total ram usage:        2 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 4
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_ADC_Initialize
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           
  3669                           ;psect for function _ADC_SetInterruptHandler
  3670  0E85                     _ADC_SetInterruptHandler:
  3671  0E85                     l2697:	
  3672                           ;incstack = 0
  3673                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  3674                           
  3675                           
  3676                           ;mcc_generated_files/adc.c: 157:     ADC_InterruptHandler = InterruptHandler;
  3677  0E85  0874               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  3678  0E86  0021               	movlb	1	; select bank1
  3679  0E87  00BF               	movwf	(_ADC_InterruptHandler+1)^(0+128)
  3680  0E88  0873               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  3681  0E89  00BE               	movwf	_ADC_InterruptHandler^(0+128)
  3682  0E8A                     l215:
  3683  0E8A  0008               	return
  3684  0E8B                     __end_of_ADC_SetInterruptHandler:
  3685                           
  3686                           	psect	text18
  3687  0EF6                     __ptext18:	
  3688 ;; *************** function _EUSART_is_tx_ready *****************
  3689 ;; Defined at:
  3690 ;;		line 94 in file "mcc_generated_files/eusart.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;		None
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      _Bool 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3704 ;;      Params:         0       0       0       0       0       0
  3705 ;;      Locals:         1       0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0
  3707 ;;      Totals:         1       0       0       0       0       0
  3708 ;;Total ram usage:        1 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; Hardware stack levels required when called: 4
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		_main
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           
  3719                           ;psect for function _EUSART_is_tx_ready
  3720  0EF6                     _EUSART_is_tx_ready:
  3721  0EF6                     l3053:	
  3722                           ;incstack = 0
  3723                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  3724                           
  3725                           
  3726                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  3727  0EF6  01F3               	clrf	_EUSART_is_tx_ready$336
  3728  0EF7                     l3055:
  3729  0EF7  0020               	movlb	0	; select bank0
  3730  0EF8  1E11               	btfss	17,4	;volatile
  3731  0EF9  2EFB               	goto	u2691
  3732  0EFA  2EFC               	goto	u2690
  3733  0EFB                     u2691:
  3734  0EFB  2F03               	goto	l3061
  3735  0EFC                     u2690:
  3736  0EFC                     l3057:
  3737  0EFC  0023               	movlb	3	; select bank3
  3738  0EFD  1E9E               	btfss	30,5	;volatile
  3739  0EFE  2F00               	goto	u2701
  3740  0EFF  2F01               	goto	u2700
  3741  0F00                     u2701:
  3742  0F00  2F03               	goto	l3061
  3743  0F01                     u2700:
  3744  0F01                     l3059:
  3745  0F01  01F3               	clrf	_EUSART_is_tx_ready$336
  3746  0F02  0AF3               	incf	_EUSART_is_tx_ready$336,f
  3747  0F03                     l3061:
  3748  0F03  0873               	movf	_EUSART_is_tx_ready$336,w
  3749  0F04                     l122:
  3750  0F04  0008               	return
  3751  0F05                     __end_of_EUSART_is_tx_ready:
  3752                           
  3753                           	psect	text19
  3754  0EAB                     __ptext19:	
  3755 ;; *************** function _EUSART_Write *****************
  3756 ;; Defined at:
  3757 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  txData          1    wreg     unsigned char 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  txData          1    3[COMMON] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3771 ;;      Params:         0       0       0       0       0       0
  3772 ;;      Locals:         1       0       0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0
  3774 ;;      Totals:         1       0       0       0       0       0
  3775 ;;Total ram usage:        1 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; Hardware stack levels required when called: 4
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_main
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           
  3786                           ;psect for function _EUSART_Write
  3787  0EAB                     _EUSART_Write:
  3788                           
  3789                           ;incstack = 0
  3790                           ; Regs used in _EUSART_Write: [wreg]
  3791                           ;EUSART_Write@txData stored from wreg
  3792  0EAB  00F3               	movwf	EUSART_Write@txData
  3793  0EAC                     l3065:
  3794  0EAC                     l141:	
  3795                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3796                           
  3797                           
  3798                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3799  0EAC  0020               	movlb	0	; select bank0
  3800  0EAD  1E11               	btfss	17,4	;volatile
  3801  0EAE  2EB0               	goto	u2711
  3802  0EAF  2EB1               	goto	u2710
  3803  0EB0                     u2711:
  3804  0EB0  2EAC               	goto	l141
  3805  0EB1                     u2710:
  3806  0EB1                     l3067:
  3807                           
  3808                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3809  0EB1  0873               	movf	EUSART_Write@txData,w
  3810  0EB2  0023               	movlb	3	; select bank3
  3811  0EB3  009A               	movwf	26	;volatile
  3812  0EB4                     l144:
  3813  0EB4  0008               	return
  3814  0EB5                     __end_of_EUSART_Write:
  3815                           
  3816                           	psect	text20
  3817  0290                     __ptext20:	
  3818 ;; *************** function _Ds_Procese_displays *****************
  3819 ;; Defined at:
  3820 ;;		line 205 in file "displays.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  dsp             1    wreg     PTR struct Ds_Display
  3823 ;;		 -> main@seven_seg(8), 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  dsp             1    0[BANK0 ] PTR struct Ds_Display
  3826 ;;		 -> main@seven_seg(8), 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3836 ;;      Params:         0       0       0       0       0       0
  3837 ;;      Locals:         0       1       0       0       0       0
  3838 ;;      Temps:          2       0       0       0       0       0
  3839 ;;      Totals:         2       1       0       0       0       0
  3840 ;;Total ram usage:        3 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 5
  3843 ;; This function calls:
  3844 ;;		_Ds_BCD
  3845 ;;		_Ds_Encienda_Disp
  3846 ;; This function is called by:
  3847 ;;		_main
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           
  3852                           ;psect for function _Ds_Procese_displays
  3853  0290                     _Ds_Procese_displays:
  3854                           
  3855                           ;incstack = 0
  3856                           ; Regs used in _Ds_Procese_displays: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3857                           ;Ds_Procese_displays@dsp stored from wreg
  3858  0290  0020               	movlb	0	; select bank0
  3859  0291  00A0               	movwf	Ds_Procese_displays@dsp
  3860  0292                     l3111:
  3861                           
  3862                           ;displays.c: 207:     switch ( dsp->estados ){
  3863  0292  2B9E               	goto	l3171
  3864  0293                     l3113:
  3865                           
  3866                           ;displays.c: 210:             --(dsp->tempE);
  3867  0293  0820               	movf	Ds_Procese_displays@dsp,w
  3868  0294  3E06               	addlw	6
  3869  0295  0086               	movwf	6
  3870  0296  0187               	clrf	7
  3871  0297  3001               	movlw	1
  3872  0298  0281               	subwf	1,f
  3873                           
  3874                           ;displays.c: 211:             if(!(dsp->tempE)){
  3875  0299  0820               	movf	Ds_Procese_displays@dsp,w
  3876  029A  3E06               	addlw	6
  3877  029B  0086               	movwf	6
  3878  029C  0187               	clrf	7
  3879  029D  0801               	movf	1,w
  3880  029E  1D03               	btfss	3,2
  3881  029F  2AA1               	goto	u2751
  3882  02A0  2AA2               	goto	u2750
  3883  02A1                     u2751:
  3884  02A1  2AB5               	goto	l3119
  3885  02A2                     u2750:
  3886  02A2                     l3115:
  3887                           
  3888                           ;displays.c: 212:                 dsp->estados =2;
  3889  02A2  3002               	movlw	2
  3890  02A3  00F6               	movwf	??_Ds_Procese_displays
  3891  02A4  0820               	movf	Ds_Procese_displays@dsp,w
  3892  02A5  0086               	movwf	6
  3893  02A6  0187               	clrf	7
  3894  02A7  0876               	movf	??_Ds_Procese_displays,w
  3895  02A8  0081               	movwf	1
  3896  02A9                     l3117:
  3897                           
  3898                           ;displays.c: 213:                 dsp->tempA=dsp->tiempoApagado;
  3899  02A9  0820               	movf	Ds_Procese_displays@dsp,w
  3900  02AA  3E05               	addlw	5
  3901  02AB  0086               	movwf	6
  3902  02AC  0187               	clrf	7
  3903  02AD  0801               	movf	1,w
  3904  02AE  00F6               	movwf	??_Ds_Procese_displays
  3905  02AF  0820               	movf	Ds_Procese_displays@dsp,w
  3906  02B0  3E07               	addlw	7
  3907  02B1  0086               	movwf	6
  3908  02B2  0187               	clrf	7
  3909  02B3  0876               	movf	??_Ds_Procese_displays,w
  3910  02B4  0081               	movwf	1
  3911  02B5                     l3119:
  3912                           
  3913                           ;displays.c: 216:             Ds_Encienda_Disp(1);
  3914  02B5  3001               	movlw	1
  3915  02B6  318F  27A0  3182   	fcall	_Ds_Encienda_Disp
  3916  02B9                     l3121:
  3917                           
  3918                           ;displays.c: 217:             Ds_BCD(dsp->D1);
  3919  02B9  0020               	movlb	0	; select bank0
  3920  02BA  0A20               	incf	Ds_Procese_displays@dsp,w
  3921  02BB  0086               	movwf	6
  3922  02BC  0187               	clrf	7
  3923  02BD  0801               	movf	1,w
  3924  02BE  3185  255B  3182   	fcall	_Ds_BCD
  3925                           
  3926                           ;displays.c: 219:         break;
  3927  02C1  2BBD               	goto	l574
  3928  02C2                     l3123:
  3929                           
  3930                           ;displays.c: 222:             --(dsp->tempA);
  3931  02C2  0820               	movf	Ds_Procese_displays@dsp,w
  3932  02C3  3E07               	addlw	7
  3933  02C4  0086               	movwf	6
  3934  02C5  0187               	clrf	7
  3935  02C6  3001               	movlw	1
  3936  02C7  0281               	subwf	1,f
  3937                           
  3938                           ;displays.c: 223:             if(!(dsp->tempA)){
  3939  02C8  0820               	movf	Ds_Procese_displays@dsp,w
  3940  02C9  3E07               	addlw	7
  3941  02CA  0086               	movwf	6
  3942  02CB  0187               	clrf	7
  3943  02CC  0801               	movf	1,w
  3944  02CD  1D03               	btfss	3,2
  3945  02CE  2AD0               	goto	u2761
  3946  02CF  2AD1               	goto	u2760
  3947  02D0                     u2761:
  3948  02D0  2AE4               	goto	l3129
  3949  02D1                     u2760:
  3950  02D1                     l3125:
  3951                           
  3952                           ;displays.c: 224:                 dsp->estados =3;
  3953  02D1  3003               	movlw	3
  3954  02D2  00F6               	movwf	??_Ds_Procese_displays
  3955  02D3  0820               	movf	Ds_Procese_displays@dsp,w
  3956  02D4  0086               	movwf	6
  3957  02D5  0187               	clrf	7
  3958  02D6  0876               	movf	??_Ds_Procese_displays,w
  3959  02D7  0081               	movwf	1
  3960  02D8                     l3127:
  3961                           
  3962                           ;displays.c: 225:                 dsp->tempE=dsp->tiempoEncendido;
  3963  02D8  0820               	movf	Ds_Procese_displays@dsp,w
  3964  02D9  3E04               	addlw	4
  3965  02DA  0086               	movwf	6
  3966  02DB  0187               	clrf	7
  3967  02DC  0801               	movf	1,w
  3968  02DD  00F6               	movwf	??_Ds_Procese_displays
  3969  02DE  0820               	movf	Ds_Procese_displays@dsp,w
  3970  02DF  3E06               	addlw	6
  3971  02E0  0086               	movwf	6
  3972  02E1  0187               	clrf	7
  3973  02E2  0876               	movf	??_Ds_Procese_displays,w
  3974  02E3  0081               	movwf	1
  3975  02E4                     l3129:
  3976                           
  3977                           ;displays.c: 228:             Ds_Encienda_Disp(0);
  3978  02E4  3000               	movlw	0
  3979  02E5  318F  27A0  3182   	fcall	_Ds_Encienda_Disp
  3980                           
  3981                           ;displays.c: 229:         break;
  3982  02E8  2BBD               	goto	l574
  3983  02E9                     l3131:
  3984                           
  3985                           ;displays.c: 232:             --(dsp->tempE);
  3986  02E9  0820               	movf	Ds_Procese_displays@dsp,w
  3987  02EA  3E06               	addlw	6
  3988  02EB  0086               	movwf	6
  3989  02EC  0187               	clrf	7
  3990  02ED  3001               	movlw	1
  3991  02EE  0281               	subwf	1,f
  3992                           
  3993                           ;displays.c: 233:             if(!(dsp->tempE)){
  3994  02EF  0820               	movf	Ds_Procese_displays@dsp,w
  3995  02F0  3E06               	addlw	6
  3996  02F1  0086               	movwf	6
  3997  02F2  0187               	clrf	7
  3998  02F3  0801               	movf	1,w
  3999  02F4  1D03               	btfss	3,2
  4000  02F5  2AF7               	goto	u2771
  4001  02F6  2AF8               	goto	u2770
  4002  02F7                     u2771:
  4003  02F7  2B0B               	goto	l3137
  4004  02F8                     u2770:
  4005  02F8                     l3133:
  4006                           
  4007                           ;displays.c: 234:                 dsp->estados =4;
  4008  02F8  3004               	movlw	4
  4009  02F9  00F6               	movwf	??_Ds_Procese_displays
  4010  02FA  0820               	movf	Ds_Procese_displays@dsp,w
  4011  02FB  0086               	movwf	6
  4012  02FC  0187               	clrf	7
  4013  02FD  0876               	movf	??_Ds_Procese_displays,w
  4014  02FE  0081               	movwf	1
  4015  02FF                     l3135:
  4016                           
  4017                           ;displays.c: 235:                 dsp->tempA=dsp->tiempoApagado;
  4018  02FF  0820               	movf	Ds_Procese_displays@dsp,w
  4019  0300  3E05               	addlw	5
  4020  0301  0086               	movwf	6
  4021  0302  0187               	clrf	7
  4022  0303  0801               	movf	1,w
  4023  0304  00F6               	movwf	??_Ds_Procese_displays
  4024  0305  0820               	movf	Ds_Procese_displays@dsp,w
  4025  0306  3E07               	addlw	7
  4026  0307  0086               	movwf	6
  4027  0308  0187               	clrf	7
  4028  0309  0876               	movf	??_Ds_Procese_displays,w
  4029  030A  0081               	movwf	1
  4030  030B                     l3137:
  4031                           
  4032                           ;displays.c: 238:             Ds_Encienda_Disp(2);
  4033  030B  3002               	movlw	2
  4034  030C  318F  27A0  3182   	fcall	_Ds_Encienda_Disp
  4035  030F                     l3139:
  4036                           
  4037                           ;displays.c: 239:             Ds_BCD(dsp->D2);
  4038  030F  0020               	movlb	0	; select bank0
  4039  0310  0820               	movf	Ds_Procese_displays@dsp,w
  4040  0311  3E02               	addlw	2
  4041  0312  0086               	movwf	6
  4042  0313  0187               	clrf	7
  4043  0314  0801               	movf	1,w
  4044  0315  3185  255B  3182   	fcall	_Ds_BCD
  4045                           
  4046                           ;displays.c: 240:         break;
  4047  0318  2BBD               	goto	l574
  4048  0319                     l3141:
  4049                           
  4050                           ;displays.c: 243:             --(dsp->tempA);
  4051  0319  0820               	movf	Ds_Procese_displays@dsp,w
  4052  031A  3E07               	addlw	7
  4053  031B  0086               	movwf	6
  4054  031C  0187               	clrf	7
  4055  031D  3001               	movlw	1
  4056  031E  0281               	subwf	1,f
  4057                           
  4058                           ;displays.c: 244:             if(!(dsp->tempA)){
  4059  031F  0820               	movf	Ds_Procese_displays@dsp,w
  4060  0320  3E07               	addlw	7
  4061  0321  0086               	movwf	6
  4062  0322  0187               	clrf	7
  4063  0323  0801               	movf	1,w
  4064  0324  1D03               	btfss	3,2
  4065  0325  2B27               	goto	u2781
  4066  0326  2B28               	goto	u2780
  4067  0327                     u2781:
  4068  0327  2B3B               	goto	l3147
  4069  0328                     u2780:
  4070  0328                     l3143:
  4071                           
  4072                           ;displays.c: 245:                 dsp->estados =5;
  4073  0328  3005               	movlw	5
  4074  0329  00F6               	movwf	??_Ds_Procese_displays
  4075  032A  0820               	movf	Ds_Procese_displays@dsp,w
  4076  032B  0086               	movwf	6
  4077  032C  0187               	clrf	7
  4078  032D  0876               	movf	??_Ds_Procese_displays,w
  4079  032E  0081               	movwf	1
  4080  032F                     l3145:
  4081                           
  4082                           ;displays.c: 246:                 dsp->tempE=dsp->tiempoEncendido;
  4083  032F  0820               	movf	Ds_Procese_displays@dsp,w
  4084  0330  3E04               	addlw	4
  4085  0331  0086               	movwf	6
  4086  0332  0187               	clrf	7
  4087  0333  0801               	movf	1,w
  4088  0334  00F6               	movwf	??_Ds_Procese_displays
  4089  0335  0820               	movf	Ds_Procese_displays@dsp,w
  4090  0336  3E06               	addlw	6
  4091  0337  0086               	movwf	6
  4092  0338  0187               	clrf	7
  4093  0339  0876               	movf	??_Ds_Procese_displays,w
  4094  033A  0081               	movwf	1
  4095  033B                     l3147:
  4096                           
  4097                           ;displays.c: 249:             Ds_Encienda_Disp(0);
  4098  033B  3000               	movlw	0
  4099  033C  318F  27A0  3182   	fcall	_Ds_Encienda_Disp
  4100                           
  4101                           ;displays.c: 250:         break;
  4102  033F  2BBD               	goto	l574
  4103  0340                     l3149:
  4104                           
  4105                           ;displays.c: 253:             --(dsp->tempE);
  4106  0340  0820               	movf	Ds_Procese_displays@dsp,w
  4107  0341  3E06               	addlw	6
  4108  0342  0086               	movwf	6
  4109  0343  0187               	clrf	7
  4110  0344  3001               	movlw	1
  4111  0345  0281               	subwf	1,f
  4112                           
  4113                           ;displays.c: 254:             if(!(dsp->tempE)){
  4114  0346  0820               	movf	Ds_Procese_displays@dsp,w
  4115  0347  3E06               	addlw	6
  4116  0348  0086               	movwf	6
  4117  0349  0187               	clrf	7
  4118  034A  0801               	movf	1,w
  4119  034B  1D03               	btfss	3,2
  4120  034C  2B4E               	goto	u2791
  4121  034D  2B4F               	goto	u2790
  4122  034E                     u2791:
  4123  034E  2B62               	goto	l3155
  4124  034F                     u2790:
  4125  034F                     l3151:
  4126                           
  4127                           ;displays.c: 255:                 dsp->estados =6;
  4128  034F  3006               	movlw	6
  4129  0350  00F6               	movwf	??_Ds_Procese_displays
  4130  0351  0820               	movf	Ds_Procese_displays@dsp,w
  4131  0352  0086               	movwf	6
  4132  0353  0187               	clrf	7
  4133  0354  0876               	movf	??_Ds_Procese_displays,w
  4134  0355  0081               	movwf	1
  4135  0356                     l3153:
  4136                           
  4137                           ;displays.c: 256:                 dsp->tempA=dsp->tiempoApagado;
  4138  0356  0820               	movf	Ds_Procese_displays@dsp,w
  4139  0357  3E05               	addlw	5
  4140  0358  0086               	movwf	6
  4141  0359  0187               	clrf	7
  4142  035A  0801               	movf	1,w
  4143  035B  00F6               	movwf	??_Ds_Procese_displays
  4144  035C  0820               	movf	Ds_Procese_displays@dsp,w
  4145  035D  3E07               	addlw	7
  4146  035E  0086               	movwf	6
  4147  035F  0187               	clrf	7
  4148  0360  0876               	movf	??_Ds_Procese_displays,w
  4149  0361  0081               	movwf	1
  4150  0362                     l3155:
  4151                           
  4152                           ;displays.c: 259:             Ds_Encienda_Disp(3);
  4153  0362  3003               	movlw	3
  4154  0363  318F  27A0  3182   	fcall	_Ds_Encienda_Disp
  4155  0366                     l3157:
  4156                           
  4157                           ;displays.c: 260:             Ds_BCD(dsp->D3);
  4158  0366  0020               	movlb	0	; select bank0
  4159  0367  0820               	movf	Ds_Procese_displays@dsp,w
  4160  0368  3E03               	addlw	3
  4161  0369  0086               	movwf	6
  4162  036A  0187               	clrf	7
  4163  036B  0801               	movf	1,w
  4164  036C  3185  255B  3182   	fcall	_Ds_BCD
  4165                           
  4166                           ;displays.c: 261:         break;
  4167  036F  2BBD               	goto	l574
  4168  0370                     l3159:
  4169                           
  4170                           ;displays.c: 264:             --(dsp->tempA);
  4171  0370  0820               	movf	Ds_Procese_displays@dsp,w
  4172  0371  3E07               	addlw	7
  4173  0372  0086               	movwf	6
  4174  0373  0187               	clrf	7
  4175  0374  3001               	movlw	1
  4176  0375  0281               	subwf	1,f
  4177                           
  4178                           ;displays.c: 265:             if(!(dsp->tempA)){
  4179  0376  0820               	movf	Ds_Procese_displays@dsp,w
  4180  0377  3E07               	addlw	7
  4181  0378  0086               	movwf	6
  4182  0379  0187               	clrf	7
  4183  037A  0801               	movf	1,w
  4184  037B  1D03               	btfss	3,2
  4185  037C  2B7E               	goto	u2801
  4186  037D  2B7F               	goto	u2800
  4187  037E                     u2801:
  4188  037E  2B90               	goto	l3165
  4189  037F                     u2800:
  4190  037F                     l3161:
  4191                           
  4192                           ;displays.c: 266:                 dsp->estados = 1;
  4193  037F  0820               	movf	Ds_Procese_displays@dsp,w
  4194  0380  0086               	movwf	6
  4195  0381  0187               	clrf	7
  4196  0382  0181               	clrf	1
  4197  0383  0A81               	incf	1,f
  4198  0384                     l3163:
  4199                           
  4200                           ;displays.c: 267:                 dsp->tempE=dsp->tiempoEncendido;
  4201  0384  0820               	movf	Ds_Procese_displays@dsp,w
  4202  0385  3E04               	addlw	4
  4203  0386  0086               	movwf	6
  4204  0387  0187               	clrf	7
  4205  0388  0801               	movf	1,w
  4206  0389  00F6               	movwf	??_Ds_Procese_displays
  4207  038A  0820               	movf	Ds_Procese_displays@dsp,w
  4208  038B  3E06               	addlw	6
  4209  038C  0086               	movwf	6
  4210  038D  0187               	clrf	7
  4211  038E  0876               	movf	??_Ds_Procese_displays,w
  4212  038F  0081               	movwf	1
  4213  0390                     l3165:
  4214                           
  4215                           ;displays.c: 270:             Ds_Encienda_Disp(0);
  4216  0390  3000               	movlw	0
  4217  0391  318F  27A0  3182   	fcall	_Ds_Encienda_Disp
  4218                           
  4219                           ;displays.c: 271:         break;
  4220  0394  2BBD               	goto	l574
  4221  0395                     l3167:
  4222                           
  4223                           ;displays.c: 276:                 Ds_BCD(10);
  4224  0395  300A               	movlw	10
  4225  0396  3185  255B  3182   	fcall	_Ds_BCD
  4226  0399                     l3169:
  4227                           
  4228                           ;displays.c: 277:        Ds_Encienda_Disp(2);
  4229  0399  3002               	movlw	2
  4230  039A  318F  27A0  3182   	fcall	_Ds_Encienda_Disp
  4231  039D  2B95               	goto	l3167
  4232  039E                     l3171:
  4233  039E  0820               	movf	Ds_Procese_displays@dsp,w
  4234  039F  0086               	movwf	6
  4235  03A0  0187               	clrf	7
  4236  03A1  0801               	movf	1,w
  4237  03A2  00F6               	movwf	??_Ds_Procese_displays
  4238  03A3  01F7               	clrf	??_Ds_Procese_displays+1
  4239                           
  4240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4241                           ; Switch size 1, requested type "simple"
  4242                           ; Number of cases is 1, Range of values is 0 to 0
  4243                           ; switch strategies available:
  4244                           ; Name         Instructions Cycles
  4245                           ; simple_byte            4     3 (average)
  4246                           ; direct_byte            8     6 (fixed)
  4247                           ; jumptable            260     6 (fixed)
  4248                           ;	Chosen strategy is simple_byte
  4249  03A4  0877               	movf	??_Ds_Procese_displays+1,w
  4250  03A5  3A00               	xorlw	0	; case 0
  4251  03A6  1903               	skipnz
  4252  03A7  2BA9               	goto	l3351
  4253  03A8  2B95               	goto	l3167
  4254  03A9                     l3351:
  4255                           
  4256                           ; Switch size 1, requested type "simple"
  4257                           ; Number of cases is 6, Range of values is 1 to 6
  4258                           ; switch strategies available:
  4259                           ; Name         Instructions Cycles
  4260                           ; simple_byte           19    10 (average)
  4261                           ; direct_byte           21     9 (fixed)
  4262                           ; jumptable            263     9 (fixed)
  4263                           ;	Chosen strategy is simple_byte
  4264  03A9  0876               	movf	??_Ds_Procese_displays,w
  4265  03AA  3A01               	xorlw	1	; case 1
  4266  03AB  1903               	skipnz
  4267  03AC  2A93               	goto	l3113
  4268  03AD  3A03               	xorlw	3	; case 2
  4269  03AE  1903               	skipnz
  4270  03AF  2AC2               	goto	l3123
  4271  03B0  3A01               	xorlw	1	; case 3
  4272  03B1  1903               	skipnz
  4273  03B2  2AE9               	goto	l3131
  4274  03B3  3A07               	xorlw	7	; case 4
  4275  03B4  1903               	skipnz
  4276  03B5  2B19               	goto	l3141
  4277  03B6  3A01               	xorlw	1	; case 5
  4278  03B7  1903               	skipnz
  4279  03B8  2B40               	goto	l3149
  4280  03B9  3A03               	xorlw	3	; case 6
  4281  03BA  1903               	skipnz
  4282  03BB  2B70               	goto	l3159
  4283  03BC  2B95               	goto	l3167
  4284  03BD                     l574:
  4285  03BD  0008               	return
  4286  03BE                     __end_of_Ds_Procese_displays:
  4287                           
  4288                           	psect	text21
  4289  0FA0                     __ptext21:	
  4290 ;; *************** function _Ds_Encienda_Disp *****************
  4291 ;; Defined at:
  4292 ;;		line 282 in file "displays.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  dispNum         1    wreg     unsigned char 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  dispNum         1    3[COMMON] unsigned char 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4306 ;;      Params:         0       0       0       0       0       0
  4307 ;;      Locals:         1       0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0
  4309 ;;      Totals:         1       0       0       0       0       0
  4310 ;;Total ram usage:        1 bytes
  4311 ;; Hardware stack levels used: 1
  4312 ;; Hardware stack levels required when called: 4
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_main
  4317 ;;		_Ds_Procese_displays
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           
  4322                           ;psect for function _Ds_Encienda_Disp
  4323  0FA0                     _Ds_Encienda_Disp:
  4324                           
  4325                           ;incstack = 0
  4326                           ; Regs used in _Ds_Encienda_Disp: [wreg+status,2+status,0]
  4327                           ;Ds_Encienda_Disp@dispNum stored from wreg
  4328  0FA0  00F3               	movwf	Ds_Encienda_Disp@dispNum
  4329  0FA1                     l2775:
  4330                           
  4331                           ;displays.c: 283:     if(dispNum == 1){
  4332  0FA1  0373               	decf	Ds_Encienda_Disp@dispNum,w
  4333  0FA2  1D03               	btfss	3,2
  4334  0FA3  2FA5               	goto	u2021
  4335  0FA4  2FA6               	goto	u2020
  4336  0FA5                     u2021:
  4337  0FA5  2FAB               	goto	l2777
  4338  0FA6                     u2020:
  4339  0FA6                     l578:	
  4340                           ;displays.c: 284:         do { LATBbits.LATB0 = 1; } while(0);
  4341                           
  4342  0FA6  0022               	movlb	2	; select bank2
  4343  0FA7  140D               	bsf	13,0	;volatile
  4344  0FA8                     l580:	
  4345                           ;displays.c: 285:         do { LATBbits.LATB4 = 0; } while(0);
  4346                           
  4347  0FA8  120D               	bcf	13,4	;volatile
  4348  0FA9                     l582:	
  4349                           ;displays.c: 286:         do { LATBbits.LATB3 = 0; } while(0);
  4350                           
  4351  0FA9  118D               	bcf	13,3	;volatile
  4352  0FAA  2FCA               	goto	l608
  4353  0FAB                     l2777:
  4354  0FAB  3002               	movlw	2
  4355  0FAC  0673               	xorwf	Ds_Encienda_Disp@dispNum,w
  4356  0FAD  1D03               	btfss	3,2
  4357  0FAE  2FB0               	goto	u2031
  4358  0FAF  2FB1               	goto	u2030
  4359  0FB0                     u2031:
  4360  0FB0  2FB6               	goto	l2779
  4361  0FB1                     u2030:
  4362  0FB1                     l586:	
  4363                           ;displays.c: 288:         do { LATBbits.LATB0 = 0; } while(0);
  4364                           
  4365  0FB1  0022               	movlb	2	; select bank2
  4366  0FB2  100D               	bcf	13,0	;volatile
  4367  0FB3                     l588:	
  4368                           ;displays.c: 289:         do { LATBbits.LATB3 = 1; } while(0);
  4369                           
  4370  0FB3  158D               	bsf	13,3	;volatile
  4371  0FB4                     l590:	
  4372                           ;displays.c: 290:         do { LATBbits.LATB4 = 0; } while(0);
  4373                           
  4374  0FB4  120D               	bcf	13,4	;volatile
  4375  0FB5  2FCA               	goto	l608
  4376  0FB6                     l2779:
  4377  0FB6  3003               	movlw	3
  4378  0FB7  0673               	xorwf	Ds_Encienda_Disp@dispNum,w
  4379  0FB8  1D03               	btfss	3,2
  4380  0FB9  2FBB               	goto	u2041
  4381  0FBA  2FBC               	goto	u2040
  4382  0FBB                     u2041:
  4383  0FBB  2FC1               	goto	l2781
  4384  0FBC                     u2040:
  4385  0FBC                     l594:	
  4386                           ;displays.c: 292:         do { LATBbits.LATB0 = 0; } while(0);
  4387                           
  4388  0FBC  0022               	movlb	2	; select bank2
  4389  0FBD  100D               	bcf	13,0	;volatile
  4390  0FBE                     l596:	
  4391                           ;displays.c: 293:         do { LATBbits.LATB3 = 0; } while(0);
  4392                           
  4393  0FBE  118D               	bcf	13,3	;volatile
  4394  0FBF                     l598:	
  4395                           ;displays.c: 294:         do { LATBbits.LATB4 = 1; } while(0);
  4396                           
  4397  0FBF  160D               	bsf	13,4	;volatile
  4398  0FC0  2FCA               	goto	l608
  4399  0FC1                     l2781:
  4400  0FC1  0873               	movf	Ds_Encienda_Disp@dispNum,w
  4401  0FC2  1D03               	btfss	3,2
  4402  0FC3  2FC5               	goto	u2051
  4403  0FC4  2FC6               	goto	u2050
  4404  0FC5                     u2051:
  4405  0FC5  2FCA               	goto	l608
  4406  0FC6                     u2050:
  4407  0FC6                     l602:	
  4408                           ;displays.c: 296:         do { LATBbits.LATB0 = 0; } while(0);
  4409                           
  4410  0FC6  0022               	movlb	2	; select bank2
  4411  0FC7  100D               	bcf	13,0	;volatile
  4412  0FC8                     l604:	
  4413                           ;displays.c: 297:         do { LATBbits.LATB4 = 0; } while(0);
  4414                           
  4415  0FC8  120D               	bcf	13,4	;volatile
  4416  0FC9                     l606:	
  4417                           ;displays.c: 298:         do { LATBbits.LATB3 = 0; } while(0);
  4418                           
  4419  0FC9  118D               	bcf	13,3	;volatile
  4420  0FCA                     l608:
  4421  0FCA  0008               	return
  4422  0FCB                     __end_of_Ds_Encienda_Disp:
  4423                           
  4424                           	psect	text22
  4425  055B                     __ptext22:	
  4426 ;; *************** function _Ds_BCD *****************
  4427 ;; Defined at:
  4428 ;;		line 22 in file "displays.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  segmento        1    wreg     unsigned char 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  segmento        1    5[COMMON] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4442 ;;      Params:         0       0       0       0       0       0
  4443 ;;      Locals:         1       0       0       0       0       0
  4444 ;;      Temps:          2       0       0       0       0       0
  4445 ;;      Totals:         3       0       0       0       0       0
  4446 ;;Total ram usage:        3 bytes
  4447 ;; Hardware stack levels used: 1
  4448 ;; Hardware stack levels required when called: 4
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_main
  4453 ;;		_Ds_Procese_displays
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           
  4458                           ;psect for function _Ds_BCD
  4459  055B                     _Ds_BCD:
  4460                           
  4461                           ;incstack = 0
  4462                           ; Regs used in _Ds_BCD: [wreg-fsr0h+status,2+status,0]
  4463                           ;Ds_BCD@segmento stored from wreg
  4464  055B  00F5               	movwf	Ds_BCD@segmento
  4465  055C                     l2765:
  4466                           
  4467                           ;displays.c: 24:     switch (segmento){
  4468  055C  2DC9               	goto	l2769
  4469  055D                     l367:	
  4470                           ;displays.c: 28:             do { LATAbits.LATA0 = 1; } while(0);
  4471                           
  4472  055D  0022               	movlb	2	; select bank2
  4473  055E  140C               	bsf	12,0	;volatile
  4474  055F                     l369:	
  4475                           ;displays.c: 29:             do { LATAbits.LATA1 = 1; } while(0);
  4476                           
  4477  055F  148C               	bsf	12,1	;volatile
  4478  0560                     l371:	
  4479                           ;displays.c: 30:             do { LATAbits.LATA2 = 1; } while(0);
  4480                           
  4481  0560  150C               	bsf	12,2	;volatile
  4482  0561                     l373:	
  4483                           ;displays.c: 31:             do { LATAbits.LATA3 = 1; } while(0);
  4484                           
  4485  0561  158C               	bsf	12,3	;volatile
  4486  0562                     l375:	
  4487                           ;displays.c: 32:             do { LATAbits.LATA4 = 1; } while(0);
  4488                           
  4489  0562  160C               	bsf	12,4	;volatile
  4490  0563                     l377:	
  4491                           ;displays.c: 33:             do { LATAbits.LATA7 = 1; } while(0);
  4492                           
  4493  0563  178C               	bsf	12,7	;volatile
  4494  0564                     l379:	
  4495                           ;displays.c: 34:             do { LATAbits.LATA6 = 0; } while(0);
  4496                           
  4497  0564  130C               	bcf	12,6	;volatile
  4498  0565  2DF7               	goto	l547
  4499  0566                     l383:	
  4500                           ;displays.c: 41:             do { LATAbits.LATA0 = 0; } while(0);
  4501                           
  4502  0566  0022               	movlb	2	; select bank2
  4503  0567  100C               	bcf	12,0	;volatile
  4504  0568                     l385:	
  4505                           ;displays.c: 42:             do { LATAbits.LATA1 = 1; } while(0);
  4506                           
  4507  0568  148C               	bsf	12,1	;volatile
  4508  0569                     l387:	
  4509                           ;displays.c: 43:             do { LATAbits.LATA2 = 1; } while(0);
  4510                           
  4511  0569  150C               	bsf	12,2	;volatile
  4512  056A                     l389:	
  4513                           ;displays.c: 44:             do { LATAbits.LATA3 = 0; } while(0);
  4514                           
  4515  056A  118C               	bcf	12,3	;volatile
  4516  056B                     l391:	
  4517                           ;displays.c: 45:             do { LATAbits.LATA4 = 0; } while(0);
  4518                           
  4519  056B  120C               	bcf	12,4	;volatile
  4520  056C                     l393:	
  4521                           ;displays.c: 46:             do { LATAbits.LATA7 = 0; } while(0);
  4522                           
  4523  056C  138C               	bcf	12,7	;volatile
  4524  056D                     l395:	
  4525                           ;displays.c: 47:             do { LATAbits.LATA6 = 0; } while(0);
  4526                           
  4527  056D  130C               	bcf	12,6	;volatile
  4528  056E  2DF7               	goto	l547
  4529  056F                     l398:	
  4530                           ;displays.c: 55:             do { LATAbits.LATA0 = 1; } while(0);
  4531                           
  4532  056F  0022               	movlb	2	; select bank2
  4533  0570  140C               	bsf	12,0	;volatile
  4534  0571                     l400:	
  4535                           ;displays.c: 56:             do { LATAbits.LATA1 = 1; } while(0);
  4536                           
  4537  0571  148C               	bsf	12,1	;volatile
  4538  0572                     l402:	
  4539                           ;displays.c: 57:             do { LATAbits.LATA2 = 0; } while(0);
  4540                           
  4541  0572  110C               	bcf	12,2	;volatile
  4542  0573                     l404:	
  4543                           ;displays.c: 58:             do { LATAbits.LATA3 = 1; } while(0);
  4544                           
  4545  0573  158C               	bsf	12,3	;volatile
  4546  0574                     l406:	
  4547                           ;displays.c: 59:             do { LATAbits.LATA4 = 1; } while(0);
  4548                           
  4549  0574  160C               	bsf	12,4	;volatile
  4550  0575                     l408:	
  4551                           ;displays.c: 60:             do { LATAbits.LATA7 = 0; } while(0);
  4552                           
  4553  0575  138C               	bcf	12,7	;volatile
  4554  0576                     l410:	
  4555                           ;displays.c: 61:             do { LATAbits.LATA6 = 1; } while(0);
  4556                           
  4557  0576  170C               	bsf	12,6	;volatile
  4558  0577  2DF7               	goto	l547
  4559  0578                     l413:	
  4560                           ;displays.c: 69:             do { LATAbits.LATA0 = 1; } while(0);
  4561                           
  4562  0578  0022               	movlb	2	; select bank2
  4563  0579  140C               	bsf	12,0	;volatile
  4564  057A                     l415:	
  4565                           ;displays.c: 70:             do { LATAbits.LATA1 = 1; } while(0);
  4566                           
  4567  057A  148C               	bsf	12,1	;volatile
  4568  057B                     l417:	
  4569                           ;displays.c: 71:             do { LATAbits.LATA2 = 1; } while(0);
  4570                           
  4571  057B  150C               	bsf	12,2	;volatile
  4572  057C                     l419:	
  4573                           ;displays.c: 72:             do { LATAbits.LATA3 = 1; } while(0);
  4574                           
  4575  057C  158C               	bsf	12,3	;volatile
  4576  057D                     l421:	
  4577                           ;displays.c: 73:             do { LATAbits.LATA4 = 0; } while(0);
  4578                           
  4579  057D  120C               	bcf	12,4	;volatile
  4580  057E                     l423:	
  4581                           ;displays.c: 74:             do { LATAbits.LATA7 = 0; } while(0);
  4582                           
  4583  057E  138C               	bcf	12,7	;volatile
  4584  057F                     l425:	
  4585                           ;displays.c: 75:             do { LATAbits.LATA6 = 1; } while(0);
  4586                           
  4587  057F  170C               	bsf	12,6	;volatile
  4588  0580  2DF7               	goto	l547
  4589  0581                     l428:	
  4590                           ;displays.c: 84:             do { LATAbits.LATA0 = 0; } while(0);
  4591                           
  4592  0581  0022               	movlb	2	; select bank2
  4593  0582  100C               	bcf	12,0	;volatile
  4594  0583                     l430:	
  4595                           ;displays.c: 85:             do { LATAbits.LATA1 = 1; } while(0);
  4596                           
  4597  0583  148C               	bsf	12,1	;volatile
  4598  0584                     l432:	
  4599                           ;displays.c: 86:             do { LATAbits.LATA2 = 1; } while(0);
  4600                           
  4601  0584  150C               	bsf	12,2	;volatile
  4602  0585                     l434:	
  4603                           ;displays.c: 87:             do { LATAbits.LATA3 = 0; } while(0);
  4604                           
  4605  0585  118C               	bcf	12,3	;volatile
  4606  0586                     l436:	
  4607                           ;displays.c: 88:             do { LATAbits.LATA4 = 0; } while(0);
  4608                           
  4609  0586  120C               	bcf	12,4	;volatile
  4610  0587                     l438:	
  4611                           ;displays.c: 89:             do { LATAbits.LATA7 = 1; } while(0);
  4612                           
  4613  0587  178C               	bsf	12,7	;volatile
  4614  0588                     l440:	
  4615                           ;displays.c: 90:             do { LATAbits.LATA6 = 1; } while(0);
  4616                           
  4617  0588  170C               	bsf	12,6	;volatile
  4618  0589  2DF7               	goto	l547
  4619  058A                     l443:	
  4620                           ;displays.c: 97:             do { LATAbits.LATA0 = 1; } while(0);
  4621                           
  4622  058A  0022               	movlb	2	; select bank2
  4623  058B  140C               	bsf	12,0	;volatile
  4624  058C                     l445:	
  4625                           ;displays.c: 98:             do { LATAbits.LATA1 = 0; } while(0);
  4626                           
  4627  058C  108C               	bcf	12,1	;volatile
  4628  058D                     l447:	
  4629                           ;displays.c: 99:             do { LATAbits.LATA2 = 1; } while(0);
  4630                           
  4631  058D  150C               	bsf	12,2	;volatile
  4632  058E                     l449:	
  4633                           ;displays.c: 100:             do { LATAbits.LATA3 = 1; } while(0);
  4634                           
  4635  058E  158C               	bsf	12,3	;volatile
  4636  058F                     l451:	
  4637                           ;displays.c: 101:             do { LATAbits.LATA4 = 0; } while(0);
  4638                           
  4639  058F  120C               	bcf	12,4	;volatile
  4640  0590                     l453:	
  4641                           ;displays.c: 102:             do { LATAbits.LATA7 = 1; } while(0);
  4642                           
  4643  0590  178C               	bsf	12,7	;volatile
  4644  0591                     l455:	
  4645                           ;displays.c: 103:             do { LATAbits.LATA6 = 1; } while(0);
  4646                           
  4647  0591  170C               	bsf	12,6	;volatile
  4648  0592  2DF7               	goto	l547
  4649  0593                     l458:	
  4650                           ;displays.c: 111:             do { LATAbits.LATA0 = 1; } while(0);
  4651                           
  4652  0593  0022               	movlb	2	; select bank2
  4653  0594  140C               	bsf	12,0	;volatile
  4654  0595                     l460:	
  4655                           ;displays.c: 112:             do { LATAbits.LATA1 = 0; } while(0);
  4656                           
  4657  0595  108C               	bcf	12,1	;volatile
  4658  0596                     l462:	
  4659                           ;displays.c: 113:             do { LATAbits.LATA2 = 1; } while(0);
  4660                           
  4661  0596  150C               	bsf	12,2	;volatile
  4662  0597                     l464:	
  4663                           ;displays.c: 114:             do { LATAbits.LATA3 = 1; } while(0);
  4664                           
  4665  0597  158C               	bsf	12,3	;volatile
  4666  0598                     l466:	
  4667                           ;displays.c: 115:             do { LATAbits.LATA4 = 1; } while(0);
  4668                           
  4669  0598  160C               	bsf	12,4	;volatile
  4670  0599                     l468:	
  4671                           ;displays.c: 116:             do { LATAbits.LATA7 = 1; } while(0);
  4672                           
  4673  0599  178C               	bsf	12,7	;volatile
  4674  059A                     l470:	
  4675                           ;displays.c: 117:             do { LATAbits.LATA6 = 1; } while(0);
  4676                           
  4677  059A  170C               	bsf	12,6	;volatile
  4678  059B  2DF7               	goto	l547
  4679  059C                     l473:	
  4680                           ;displays.c: 125:             do { LATAbits.LATA0 = 1; } while(0);
  4681                           
  4682  059C  0022               	movlb	2	; select bank2
  4683  059D  140C               	bsf	12,0	;volatile
  4684  059E                     l475:	
  4685                           ;displays.c: 126:             do { LATAbits.LATA1 = 1; } while(0);
  4686                           
  4687  059E  148C               	bsf	12,1	;volatile
  4688  059F                     l477:	
  4689                           ;displays.c: 127:             do { LATAbits.LATA2 = 1; } while(0);
  4690                           
  4691  059F  150C               	bsf	12,2	;volatile
  4692  05A0                     l479:	
  4693                           ;displays.c: 128:             do { LATAbits.LATA3 = 0; } while(0);
  4694                           
  4695  05A0  118C               	bcf	12,3	;volatile
  4696  05A1                     l481:	
  4697                           ;displays.c: 129:             do { LATAbits.LATA4 = 0; } while(0);
  4698                           
  4699  05A1  120C               	bcf	12,4	;volatile
  4700  05A2                     l483:	
  4701                           ;displays.c: 130:             do { LATAbits.LATA7 = 0; } while(0);
  4702                           
  4703  05A2  138C               	bcf	12,7	;volatile
  4704  05A3                     l485:	
  4705                           ;displays.c: 131:             do { LATAbits.LATA6 = 0; } while(0);
  4706                           
  4707  05A3  130C               	bcf	12,6	;volatile
  4708  05A4  2DF7               	goto	l547
  4709  05A5                     l488:	
  4710                           ;displays.c: 139:             do { LATAbits.LATA0 = 1; } while(0);
  4711                           
  4712  05A5  0022               	movlb	2	; select bank2
  4713  05A6  140C               	bsf	12,0	;volatile
  4714  05A7                     l490:	
  4715                           ;displays.c: 140:             do { LATAbits.LATA1 = 1; } while(0);
  4716                           
  4717  05A7  148C               	bsf	12,1	;volatile
  4718  05A8                     l492:	
  4719                           ;displays.c: 141:             do { LATAbits.LATA2 = 1; } while(0);
  4720                           
  4721  05A8  150C               	bsf	12,2	;volatile
  4722  05A9                     l494:	
  4723                           ;displays.c: 142:             do { LATAbits.LATA3 = 1; } while(0);
  4724                           
  4725  05A9  158C               	bsf	12,3	;volatile
  4726  05AA                     l496:	
  4727                           ;displays.c: 143:             do { LATAbits.LATA4 = 1; } while(0);
  4728                           
  4729  05AA  160C               	bsf	12,4	;volatile
  4730  05AB                     l498:	
  4731                           ;displays.c: 144:             do { LATAbits.LATA7 = 1; } while(0);
  4732                           
  4733  05AB  178C               	bsf	12,7	;volatile
  4734  05AC                     l500:	
  4735                           ;displays.c: 145:             do { LATAbits.LATA6 = 1; } while(0);
  4736                           
  4737  05AC  170C               	bsf	12,6	;volatile
  4738  05AD  2DF7               	goto	l547
  4739  05AE                     l503:	
  4740                           ;displays.c: 153:             do { LATAbits.LATA0 = 1; } while(0);
  4741                           
  4742  05AE  0022               	movlb	2	; select bank2
  4743  05AF  140C               	bsf	12,0	;volatile
  4744  05B0                     l505:	
  4745                           ;displays.c: 154:             do { LATAbits.LATA1 = 1; } while(0);
  4746                           
  4747  05B0  148C               	bsf	12,1	;volatile
  4748  05B1                     l507:	
  4749                           ;displays.c: 155:             do { LATAbits.LATA2 = 1; } while(0);
  4750                           
  4751  05B1  150C               	bsf	12,2	;volatile
  4752  05B2                     l509:	
  4753                           ;displays.c: 156:             do { LATAbits.LATA3 = 1; } while(0);
  4754                           
  4755  05B2  158C               	bsf	12,3	;volatile
  4756  05B3                     l511:	
  4757                           ;displays.c: 157:             do { LATAbits.LATA4 = 0; } while(0);
  4758                           
  4759  05B3  120C               	bcf	12,4	;volatile
  4760  05B4                     l513:	
  4761                           ;displays.c: 158:             do { LATAbits.LATA7 = 1; } while(0);
  4762                           
  4763  05B4  178C               	bsf	12,7	;volatile
  4764  05B5                     l515:	
  4765                           ;displays.c: 159:             do { LATAbits.LATA6 = 1; } while(0);
  4766                           
  4767  05B5  170C               	bsf	12,6	;volatile
  4768  05B6  2DF7               	goto	l547
  4769  05B7                     l518:	
  4770                           ;displays.c: 165:       do { LATAbits.LATA0 = 0; } while(0);
  4771                           
  4772  05B7  0022               	movlb	2	; select bank2
  4773  05B8  100C               	bcf	12,0	;volatile
  4774  05B9                     l520:	
  4775                           ;displays.c: 166:             do { LATAbits.LATA1 = 1; } while(0);
  4776                           
  4777  05B9  148C               	bsf	12,1	;volatile
  4778  05BA                     l522:	
  4779                           ;displays.c: 167:             do { LATAbits.LATA2 = 1; } while(0);
  4780                           
  4781  05BA  150C               	bsf	12,2	;volatile
  4782  05BB                     l524:	
  4783                           ;displays.c: 168:             do { LATAbits.LATA3 = 0; } while(0);
  4784                           
  4785  05BB  118C               	bcf	12,3	;volatile
  4786  05BC                     l526:	
  4787                           ;displays.c: 169:             do { LATAbits.LATA4 = 1; } while(0);
  4788                           
  4789  05BC  160C               	bsf	12,4	;volatile
  4790  05BD                     l528:	
  4791                           ;displays.c: 170:             do { LATAbits.LATA7 = 1; } while(0);
  4792                           
  4793  05BD  178C               	bsf	12,7	;volatile
  4794  05BE                     l530:	
  4795                           ;displays.c: 171:             do { LATAbits.LATA6 = 1; } while(0);
  4796                           
  4797  05BE  170C               	bsf	12,6	;volatile
  4798  05BF  2DF7               	goto	l547
  4799  05C0                     l533:	
  4800                           ;displays.c: 177:       do { LATAbits.LATA0 = 0; } while(0);
  4801                           
  4802  05C0  0022               	movlb	2	; select bank2
  4803  05C1  100C               	bcf	12,0	;volatile
  4804  05C2                     l535:	
  4805                           ;displays.c: 178:       do { LATAbits.LATA1 = 0; } while(0);
  4806                           
  4807  05C2  108C               	bcf	12,1	;volatile
  4808  05C3                     l537:	
  4809                           ;displays.c: 179:       do { LATAbits.LATA2 = 0; } while(0);
  4810                           
  4811  05C3  110C               	bcf	12,2	;volatile
  4812  05C4                     l539:	
  4813                           ;displays.c: 180:       do { LATAbits.LATA3 = 0; } while(0);
  4814                           
  4815  05C4  118C               	bcf	12,3	;volatile
  4816  05C5                     l541:	
  4817                           ;displays.c: 181:             do { LATAbits.LATA4 = 0; } while(0);
  4818                           
  4819  05C5  120C               	bcf	12,4	;volatile
  4820  05C6                     l543:	
  4821                           ;displays.c: 182:             do { LATAbits.LATA7 = 0; } while(0);
  4822                           
  4823  05C6  138C               	bcf	12,7	;volatile
  4824  05C7                     l545:	
  4825                           ;displays.c: 183:       do { LATAbits.LATA6 = 0; } while(0);
  4826                           
  4827  05C7  130C               	bcf	12,6	;volatile
  4828  05C8  2DF7               	goto	l547
  4829  05C9                     l2769:
  4830  05C9  0875               	movf	Ds_BCD@segmento,w
  4831  05CA  00F3               	movwf	??_Ds_BCD
  4832  05CB  01F4               	clrf	??_Ds_BCD+1
  4833                           
  4834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4835                           ; Switch size 1, requested type "simple"
  4836                           ; Number of cases is 1, Range of values is 0 to 0
  4837                           ; switch strategies available:
  4838                           ; Name         Instructions Cycles
  4839                           ; simple_byte            4     3 (average)
  4840                           ; direct_byte            8     6 (fixed)
  4841                           ; jumptable            260     6 (fixed)
  4842                           ;	Chosen strategy is simple_byte
  4843  05CC  0874               	movf	??_Ds_BCD+1,w
  4844  05CD  3A00               	xorlw	0	; case 0
  4845  05CE  1903               	skipnz
  4846  05CF  2DD1               	goto	l3353
  4847  05D0  2DF7               	goto	l547
  4848  05D1                     l3353:
  4849                           
  4850                           ; Switch size 1, requested type "simple"
  4851                           ; Number of cases is 12, Range of values is 0 to 11
  4852                           ; switch strategies available:
  4853                           ; Name         Instructions Cycles
  4854                           ; direct_byte           30     6 (fixed)
  4855                           ; simple_byte           37    19 (average)
  4856                           ; jumptable            260     6 (fixed)
  4857                           ;	Chosen strategy is simple_byte
  4858  05D1  0873               	movf	??_Ds_BCD,w
  4859  05D2  3A00               	xorlw	0	; case 0
  4860  05D3  1903               	skipnz
  4861  05D4  2D5D               	goto	l367
  4862  05D5  3A01               	xorlw	1	; case 1
  4863  05D6  1903               	skipnz
  4864  05D7  2D66               	goto	l383
  4865  05D8  3A03               	xorlw	3	; case 2
  4866  05D9  1903               	skipnz
  4867  05DA  2D6F               	goto	l398
  4868  05DB  3A01               	xorlw	1	; case 3
  4869  05DC  1903               	skipnz
  4870  05DD  2D78               	goto	l413
  4871  05DE  3A07               	xorlw	7	; case 4
  4872  05DF  1903               	skipnz
  4873  05E0  2D81               	goto	l428
  4874  05E1  3A01               	xorlw	1	; case 5
  4875  05E2  1903               	skipnz
  4876  05E3  2D8A               	goto	l443
  4877  05E4  3A03               	xorlw	3	; case 6
  4878  05E5  1903               	skipnz
  4879  05E6  2D93               	goto	l458
  4880  05E7  3A01               	xorlw	1	; case 7
  4881  05E8  1903               	skipnz
  4882  05E9  2D9C               	goto	l473
  4883  05EA  3A0F               	xorlw	15	; case 8
  4884  05EB  1903               	skipnz
  4885  05EC  2DA5               	goto	l488
  4886  05ED  3A01               	xorlw	1	; case 9
  4887  05EE  1903               	skipnz
  4888  05EF  2DAE               	goto	l503
  4889  05F0  3A03               	xorlw	3	; case 10
  4890  05F1  1903               	skipnz
  4891  05F2  2DB7               	goto	l518
  4892  05F3  3A01               	xorlw	1	; case 11
  4893  05F4  1903               	skipnz
  4894  05F5  2DC0               	goto	l533
  4895  05F6  2DF7               	goto	l547
  4896  05F7                     l547:
  4897  05F7  0008               	return
  4898  05F8                     __end_of_Ds_BCD:
  4899                           
  4900                           	psect	text23
  4901  072B                     __ptext23:	
  4902 ;; *************** function _Ds_Iniciar_displays *****************
  4903 ;; Defined at:
  4904 ;;		line 9 in file "displays.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  dsp             1    wreg     PTR struct Ds_Display
  4907 ;;		 -> main@seven_seg(8), 
  4908 ;;  d1              1    3[COMMON] unsigned char 
  4909 ;;  d2              1    4[COMMON] unsigned char 
  4910 ;;  d3              1    5[COMMON] unsigned char 
  4911 ;;  tE              1    6[COMMON] unsigned char 
  4912 ;;  tA              1    7[COMMON] unsigned char 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  dsp             1    1[BANK0 ] PTR struct Ds_Display
  4915 ;;		 -> main@seven_seg(8), 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4925 ;;      Params:         5       0       0       0       0       0
  4926 ;;      Locals:         0       1       0       0       0       0
  4927 ;;      Temps:          0       1       0       0       0       0
  4928 ;;      Totals:         5       2       0       0       0       0
  4929 ;;Total ram usage:        7 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 4
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_main
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           
  4940                           ;psect for function _Ds_Iniciar_displays
  4941  072B                     _Ds_Iniciar_displays:
  4942                           
  4943                           ;incstack = 0
  4944                           ; Regs used in _Ds_Iniciar_displays: [wreg+fsr1l+fsr1h+status,2+status,0]
  4945                           ;Ds_Iniciar_displays@dsp stored from wreg
  4946  072B  0020               	movlb	0	; select bank0
  4947  072C  00A1               	movwf	Ds_Iniciar_displays@dsp
  4948  072D                     l3083:
  4949                           
  4950                           ;displays.c: 10:     dsp->estados=1;
  4951  072D  0821               	movf	Ds_Iniciar_displays@dsp,w
  4952  072E  0086               	movwf	6
  4953  072F  0187               	clrf	7
  4954  0730  0181               	clrf	1
  4955  0731  0A81               	incf	1,f
  4956                           
  4957                           ;displays.c: 11:     dsp->D1=d1;
  4958  0732  0873               	movf	Ds_Iniciar_displays@d1,w
  4959  0733  00A0               	movwf	??_Ds_Iniciar_displays
  4960  0734  0A21               	incf	Ds_Iniciar_displays@dsp,w
  4961  0735  0086               	movwf	6
  4962  0736  0187               	clrf	7
  4963  0737  0820               	movf	??_Ds_Iniciar_displays,w
  4964  0738  0081               	movwf	1
  4965  0739                     l3085:
  4966                           
  4967                           ;displays.c: 12:     dsp->D2=d2;
  4968  0739  0874               	movf	Ds_Iniciar_displays@d2,w
  4969  073A  00A0               	movwf	??_Ds_Iniciar_displays
  4970  073B  0821               	movf	Ds_Iniciar_displays@dsp,w
  4971  073C  3E02               	addlw	2
  4972  073D  0086               	movwf	6
  4973  073E  0187               	clrf	7
  4974  073F  0820               	movf	??_Ds_Iniciar_displays,w
  4975  0740  0081               	movwf	1
  4976  0741                     l3087:
  4977                           
  4978                           ;displays.c: 13:     dsp->D3=d3;
  4979  0741  0875               	movf	Ds_Iniciar_displays@d3,w
  4980  0742  00A0               	movwf	??_Ds_Iniciar_displays
  4981  0743  0821               	movf	Ds_Iniciar_displays@dsp,w
  4982  0744  3E03               	addlw	3
  4983  0745  0086               	movwf	6
  4984  0746  0187               	clrf	7
  4985  0747  0820               	movf	??_Ds_Iniciar_displays,w
  4986  0748  0081               	movwf	1
  4987  0749                     l3089:
  4988                           
  4989                           ;displays.c: 14:     dsp->tiempoEncendido=tE;
  4990  0749  0876               	movf	Ds_Iniciar_displays@tE,w
  4991  074A  00A0               	movwf	??_Ds_Iniciar_displays
  4992  074B  0821               	movf	Ds_Iniciar_displays@dsp,w
  4993  074C  3E04               	addlw	4
  4994  074D  0086               	movwf	6
  4995  074E  0187               	clrf	7
  4996  074F  0820               	movf	??_Ds_Iniciar_displays,w
  4997  0750  0081               	movwf	1
  4998  0751                     l3091:
  4999                           
  5000                           ;displays.c: 15:     dsp->tiempoApagado=tA;
  5001  0751  0877               	movf	Ds_Iniciar_displays@tA,w
  5002  0752  00A0               	movwf	??_Ds_Iniciar_displays
  5003  0753  0821               	movf	Ds_Iniciar_displays@dsp,w
  5004  0754  3E05               	addlw	5
  5005  0755  0086               	movwf	6
  5006  0756  0187               	clrf	7
  5007  0757  0820               	movf	??_Ds_Iniciar_displays,w
  5008  0758  0081               	movwf	1
  5009  0759                     l3093:
  5010                           
  5011                           ;displays.c: 16:     dsp->tempE=tE;
  5012  0759  0876               	movf	Ds_Iniciar_displays@tE,w
  5013  075A  00A0               	movwf	??_Ds_Iniciar_displays
  5014  075B  0821               	movf	Ds_Iniciar_displays@dsp,w
  5015  075C  3E06               	addlw	6
  5016  075D  0086               	movwf	6
  5017  075E  0187               	clrf	7
  5018  075F  0820               	movf	??_Ds_Iniciar_displays,w
  5019  0760  0081               	movwf	1
  5020  0761                     l3095:
  5021                           
  5022                           ;displays.c: 17:     dsp->tempA=tA;
  5023  0761  0877               	movf	Ds_Iniciar_displays@tA,w
  5024  0762  00A0               	movwf	??_Ds_Iniciar_displays
  5025  0763  0821               	movf	Ds_Iniciar_displays@dsp,w
  5026  0764  3E07               	addlw	7
  5027  0765  0086               	movwf	6
  5028  0766  0187               	clrf	7
  5029  0767  0820               	movf	??_Ds_Iniciar_displays,w
  5030  0768  0081               	movwf	1
  5031  0769                     l362:
  5032  0769  0008               	return
  5033  076A                     __end_of_Ds_Iniciar_displays:
  5034                           
  5035                           	psect	text24
  5036  06CD                     __ptext24:	
  5037 ;; *************** function _Ds_Convertir_en_uni *****************
  5038 ;; Defined at:
  5039 ;;		line 190 in file "displays.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  dsp             1    wreg     PTR struct Ds_Display
  5042 ;;		 -> main@seven_seg(8), 
  5043 ;;  voltaje         2    3[BANK0 ] unsigned short 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;  dsp             1    6[BANK0 ] PTR struct Ds_Display
  5046 ;;		 -> main@seven_seg(8), 
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5056 ;;      Params:         0       2       0       0       0       0
  5057 ;;      Locals:         0       1       0       0       0       0
  5058 ;;      Temps:          0       1       0       0       0       0
  5059 ;;      Totals:         0       4       0       0       0       0
  5060 ;;Total ram usage:        4 bytes
  5061 ;; Hardware stack levels used: 1
  5062 ;; Hardware stack levels required when called: 5
  5063 ;; This function calls:
  5064 ;;		___lwdiv
  5065 ;;		___lwmod
  5066 ;; This function is called by:
  5067 ;;		_main
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           
  5072                           ;psect for function _Ds_Convertir_en_uni
  5073  06CD                     _Ds_Convertir_en_uni:
  5074                           
  5075                           ;incstack = 0
  5076                           ; Regs used in _Ds_Convertir_en_uni: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5077                           ;Ds_Convertir_en_uni@dsp stored from wreg
  5078  06CD  0020               	movlb	0	; select bank0
  5079  06CE  00A6               	movwf	Ds_Convertir_en_uni@dsp
  5080  06CF                     l3193:
  5081                           
  5082                           ;displays.c: 191:  dsp->D1 = voltaje % 10;
  5083  06CF  300A               	movlw	10
  5084  06D0  00F3               	movwf	___lwmod@divisor
  5085  06D1  3000               	movlw	0
  5086  06D2  00F4               	movwf	___lwmod@divisor+1
  5087  06D3  0824               	movf	Ds_Convertir_en_uni@voltaje+1,w
  5088  06D4  00F6               	movwf	___lwmod@dividend+1
  5089  06D5  0823               	movf	Ds_Convertir_en_uni@voltaje,w
  5090  06D6  00F5               	movwf	___lwmod@dividend
  5091  06D7  318F  27CB  3186   	fcall	___lwmod
  5092  06DA  0873               	movf	?___lwmod,w
  5093  06DB  0020               	movlb	0	; select bank0
  5094  06DC  00A5               	movwf	??_Ds_Convertir_en_uni
  5095  06DD  0A26               	incf	Ds_Convertir_en_uni@dsp,w
  5096  06DE  0086               	movwf	6
  5097  06DF  0187               	clrf	7
  5098  06E0  0825               	movf	??_Ds_Convertir_en_uni,w
  5099  06E1  0081               	movwf	1
  5100  06E2                     l3195:
  5101                           
  5102                           ;displays.c: 192:  voltaje = voltaje/10;
  5103  06E2  300A               	movlw	10
  5104  06E3  00F3               	movwf	___lwdiv@divisor
  5105  06E4  3000               	movlw	0
  5106  06E5  00F4               	movwf	___lwdiv@divisor+1
  5107  06E6  0824               	movf	Ds_Convertir_en_uni@voltaje+1,w
  5108  06E7  00F6               	movwf	___lwdiv@dividend+1
  5109  06E8  0823               	movf	Ds_Convertir_en_uni@voltaje,w
  5110  06E9  00F5               	movwf	___lwdiv@dividend
  5111  06EA  3187  276A  3186   	fcall	___lwdiv
  5112  06ED  0874               	movf	?___lwdiv+1,w
  5113  06EE  0020               	movlb	0	; select bank0
  5114  06EF  00A4               	movwf	Ds_Convertir_en_uni@voltaje+1
  5115  06F0  0873               	movf	?___lwdiv,w
  5116  06F1  00A3               	movwf	Ds_Convertir_en_uni@voltaje
  5117  06F2                     l3197:
  5118                           
  5119                           ;displays.c: 193:  dsp->D2 = voltaje % 10;
  5120  06F2  300A               	movlw	10
  5121  06F3  00F3               	movwf	___lwmod@divisor
  5122  06F4  3000               	movlw	0
  5123  06F5  00F4               	movwf	___lwmod@divisor+1
  5124  06F6  0824               	movf	Ds_Convertir_en_uni@voltaje+1,w
  5125  06F7  00F6               	movwf	___lwmod@dividend+1
  5126  06F8  0823               	movf	Ds_Convertir_en_uni@voltaje,w
  5127  06F9  00F5               	movwf	___lwmod@dividend
  5128  06FA  318F  27CB  3186   	fcall	___lwmod
  5129  06FD  0873               	movf	?___lwmod,w
  5130  06FE  0020               	movlb	0	; select bank0
  5131  06FF  00A5               	movwf	??_Ds_Convertir_en_uni
  5132  0700  0826               	movf	Ds_Convertir_en_uni@dsp,w
  5133  0701  3E02               	addlw	2
  5134  0702  0086               	movwf	6
  5135  0703  0187               	clrf	7
  5136  0704  0825               	movf	??_Ds_Convertir_en_uni,w
  5137  0705  0081               	movwf	1
  5138                           
  5139                           ;displays.c: 194:  voltaje = voltaje/10;
  5140  0706  300A               	movlw	10
  5141  0707  00F3               	movwf	___lwdiv@divisor
  5142  0708  3000               	movlw	0
  5143  0709  00F4               	movwf	___lwdiv@divisor+1
  5144  070A  0824               	movf	Ds_Convertir_en_uni@voltaje+1,w
  5145  070B  00F6               	movwf	___lwdiv@dividend+1
  5146  070C  0823               	movf	Ds_Convertir_en_uni@voltaje,w
  5147  070D  00F5               	movwf	___lwdiv@dividend
  5148  070E  3187  276A  3186   	fcall	___lwdiv
  5149  0711  0874               	movf	?___lwdiv+1,w
  5150  0712  0020               	movlb	0	; select bank0
  5151  0713  00A4               	movwf	Ds_Convertir_en_uni@voltaje+1
  5152  0714  0873               	movf	?___lwdiv,w
  5153  0715  00A3               	movwf	Ds_Convertir_en_uni@voltaje
  5154  0716                     l3199:
  5155                           
  5156                           ;displays.c: 195:  dsp->D3 = voltaje % 10;
  5157  0716  300A               	movlw	10
  5158  0717  00F3               	movwf	___lwmod@divisor
  5159  0718  3000               	movlw	0
  5160  0719  00F4               	movwf	___lwmod@divisor+1
  5161  071A  0824               	movf	Ds_Convertir_en_uni@voltaje+1,w
  5162  071B  00F6               	movwf	___lwmod@dividend+1
  5163  071C  0823               	movf	Ds_Convertir_en_uni@voltaje,w
  5164  071D  00F5               	movwf	___lwmod@dividend
  5165  071E  318F  27CB  3186   	fcall	___lwmod
  5166  0721  0873               	movf	?___lwmod,w
  5167  0722  0020               	movlb	0	; select bank0
  5168  0723  00A5               	movwf	??_Ds_Convertir_en_uni
  5169  0724  0826               	movf	Ds_Convertir_en_uni@dsp,w
  5170  0725  3E03               	addlw	3
  5171  0726  0086               	movwf	6
  5172  0727  0187               	clrf	7
  5173  0728  0825               	movf	??_Ds_Convertir_en_uni,w
  5174  0729  0081               	movwf	1
  5175  072A                     l550:
  5176  072A  0008               	return
  5177  072B                     __end_of_Ds_Convertir_en_uni:
  5178                           
  5179                           	psect	text25
  5180  0FCB                     __ptext25:	
  5181 ;; *************** function ___lwmod *****************
  5182 ;; Defined at:
  5183 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  divisor         2    3[COMMON] unsigned int 
  5186 ;;  dividend        2    5[COMMON] unsigned int 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  counter         1    0[BANK0 ] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  2    3[COMMON] unsigned int 
  5191 ;; Registers used:
  5192 ;;		wreg, status,2, status,0
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5198 ;;      Params:         4       0       0       0       0       0
  5199 ;;      Locals:         0       1       0       0       0       0
  5200 ;;      Temps:          1       0       0       0       0       0
  5201 ;;      Totals:         5       1       0       0       0       0
  5202 ;;Total ram usage:        6 bytes
  5203 ;; Hardware stack levels used: 1
  5204 ;; Hardware stack levels required when called: 4
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_Ds_Convertir_en_uni
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           
  5213                           ;psect for function ___lwmod
  5214  0FCB                     ___lwmod:
  5215  0FCB                     l2845:	
  5216                           ;incstack = 0
  5217                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5218                           
  5219  0FCB  0873               	movf	___lwmod@divisor,w
  5220  0FCC  0474               	iorwf	___lwmod@divisor+1,w
  5221  0FCD  1903               	btfsc	3,2
  5222  0FCE  2FD0               	goto	u2231
  5223  0FCF  2FD1               	goto	u2230
  5224  0FD0                     u2231:
  5225  0FD0  2FFB               	goto	l2863
  5226  0FD1                     u2230:
  5227  0FD1                     l2847:
  5228  0FD1  0020               	movlb	0	; select bank0
  5229  0FD2  01A0               	clrf	___lwmod@counter
  5230  0FD3  0AA0               	incf	___lwmod@counter,f
  5231  0FD4  2FDE               	goto	l2853
  5232  0FD5                     l2849:
  5233  0FD5  3001               	movlw	1
  5234  0FD6                     u2245:
  5235  0FD6  35F3               	lslf	___lwmod@divisor,f
  5236  0FD7  0DF4               	rlf	___lwmod@divisor+1,f
  5237  0FD8  0B89               	decfsz	9,f
  5238  0FD9  2FD6               	goto	u2245
  5239  0FDA                     l2851:
  5240  0FDA  3001               	movlw	1
  5241  0FDB  00F7               	movwf	??___lwmod
  5242  0FDC  0877               	movf	??___lwmod,w
  5243  0FDD  07A0               	addwf	___lwmod@counter,f
  5244  0FDE                     l2853:
  5245  0FDE  1FF4               	btfss	___lwmod@divisor+1,7
  5246  0FDF  2FE1               	goto	u2251
  5247  0FE0  2FE2               	goto	u2250
  5248  0FE1                     u2251:
  5249  0FE1  2FD5               	goto	l2849
  5250  0FE2                     u2250:
  5251  0FE2                     l2855:
  5252  0FE2  0874               	movf	___lwmod@divisor+1,w
  5253  0FE3  0276               	subwf	___lwmod@dividend+1,w
  5254  0FE4  1D03               	skipz
  5255  0FE5  2FE8               	goto	u2265
  5256  0FE6  0873               	movf	___lwmod@divisor,w
  5257  0FE7  0275               	subwf	___lwmod@dividend,w
  5258  0FE8                     u2265:
  5259  0FE8  1C03               	skipc
  5260  0FE9  2FEB               	goto	u2261
  5261  0FEA  2FEC               	goto	u2260
  5262  0FEB                     u2261:
  5263  0FEB  2FF0               	goto	l2859
  5264  0FEC                     u2260:
  5265  0FEC                     l2857:
  5266  0FEC  0873               	movf	___lwmod@divisor,w
  5267  0FED  02F5               	subwf	___lwmod@dividend,f
  5268  0FEE  0874               	movf	___lwmod@divisor+1,w
  5269  0FEF  3BF6               	subwfb	___lwmod@dividend+1,f
  5270  0FF0                     l2859:
  5271  0FF0  3001               	movlw	1
  5272  0FF1                     u2275:
  5273  0FF1  36F4               	lsrf	___lwmod@divisor+1,f
  5274  0FF2  0CF3               	rrf	___lwmod@divisor,f
  5275  0FF3  0B89               	decfsz	9,f
  5276  0FF4  2FF1               	goto	u2275
  5277  0FF5                     l2861:
  5278  0FF5  3001               	movlw	1
  5279  0FF6  02A0               	subwf	___lwmod@counter,f
  5280  0FF7  1D03               	btfss	3,2
  5281  0FF8  2FFA               	goto	u2281
  5282  0FF9  2FFB               	goto	u2280
  5283  0FFA                     u2281:
  5284  0FFA  2FE2               	goto	l2855
  5285  0FFB                     u2280:
  5286  0FFB                     l2863:
  5287  0FFB  0876               	movf	___lwmod@dividend+1,w
  5288  0FFC  00F4               	movwf	?___lwmod+1
  5289  0FFD  0875               	movf	___lwmod@dividend,w
  5290  0FFE  00F3               	movwf	?___lwmod
  5291  0FFF                     l1077:
  5292  0FFF  0008               	return
  5293  1000                     __end_of___lwmod:
  5294                           
  5295                           	psect	text26
  5296  076A                     __ptext26:	
  5297 ;; *************** function ___lwdiv *****************
  5298 ;; Defined at:
  5299 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;  divisor         2    3[COMMON] unsigned int 
  5302 ;;  dividend        2    5[COMMON] unsigned int 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  quotient        2    1[BANK0 ] unsigned int 
  5305 ;;  counter         1    0[BANK0 ] unsigned char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  2    3[COMMON] unsigned int 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2, status,0
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5315 ;;      Params:         4       0       0       0       0       0
  5316 ;;      Locals:         0       3       0       0       0       0
  5317 ;;      Temps:          1       0       0       0       0       0
  5318 ;;      Totals:         5       3       0       0       0       0
  5319 ;;Total ram usage:        8 bytes
  5320 ;; Hardware stack levels used: 1
  5321 ;; Hardware stack levels required when called: 4
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_Ds_Convertir_en_uni
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           
  5330                           ;psect for function ___lwdiv
  5331  076A                     ___lwdiv:
  5332  076A                     l2819:	
  5333                           ;incstack = 0
  5334                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5335                           
  5336  076A  0020               	movlb	0	; select bank0
  5337  076B  01A1               	clrf	___lwdiv@quotient
  5338  076C  01A2               	clrf	___lwdiv@quotient+1
  5339  076D                     l2821:
  5340  076D  0873               	movf	___lwdiv@divisor,w
  5341  076E  0474               	iorwf	___lwdiv@divisor+1,w
  5342  076F  1903               	btfsc	3,2
  5343  0770  2F72               	goto	u2161
  5344  0771  2F73               	goto	u2160
  5345  0772                     u2161:
  5346  0772  2FA2               	goto	l2841
  5347  0773                     u2160:
  5348  0773                     l2823:
  5349  0773  01A0               	clrf	___lwdiv@counter
  5350  0774  0AA0               	incf	___lwdiv@counter,f
  5351  0775  2F7F               	goto	l2829
  5352  0776                     l2825:
  5353  0776  3001               	movlw	1
  5354  0777                     u2175:
  5355  0777  35F3               	lslf	___lwdiv@divisor,f
  5356  0778  0DF4               	rlf	___lwdiv@divisor+1,f
  5357  0779  0B89               	decfsz	9,f
  5358  077A  2F77               	goto	u2175
  5359  077B                     l2827:
  5360  077B  3001               	movlw	1
  5361  077C  00F7               	movwf	??___lwdiv
  5362  077D  0877               	movf	??___lwdiv,w
  5363  077E  07A0               	addwf	___lwdiv@counter,f
  5364  077F                     l2829:
  5365  077F  1FF4               	btfss	___lwdiv@divisor+1,7
  5366  0780  2F82               	goto	u2181
  5367  0781  2F83               	goto	u2180
  5368  0782                     u2181:
  5369  0782  2F76               	goto	l2825
  5370  0783                     u2180:
  5371  0783                     l2831:
  5372  0783  3001               	movlw	1
  5373  0784                     u2195:
  5374  0784  35A1               	lslf	___lwdiv@quotient,f
  5375  0785  0DA2               	rlf	___lwdiv@quotient+1,f
  5376  0786  0B89               	decfsz	9,f
  5377  0787  2F84               	goto	u2195
  5378  0788  0874               	movf	___lwdiv@divisor+1,w
  5379  0789  0276               	subwf	___lwdiv@dividend+1,w
  5380  078A  1D03               	skipz
  5381  078B  2F8E               	goto	u2205
  5382  078C  0873               	movf	___lwdiv@divisor,w
  5383  078D  0275               	subwf	___lwdiv@dividend,w
  5384  078E                     u2205:
  5385  078E  1C03               	skipc
  5386  078F  2F91               	goto	u2201
  5387  0790  2F92               	goto	u2200
  5388  0791                     u2201:
  5389  0791  2F97               	goto	l2837
  5390  0792                     u2200:
  5391  0792                     l2833:
  5392  0792  0873               	movf	___lwdiv@divisor,w
  5393  0793  02F5               	subwf	___lwdiv@dividend,f
  5394  0794  0874               	movf	___lwdiv@divisor+1,w
  5395  0795  3BF6               	subwfb	___lwdiv@dividend+1,f
  5396  0796                     l2835:
  5397  0796  1421               	bsf	___lwdiv@quotient,0
  5398  0797                     l2837:
  5399  0797  3001               	movlw	1
  5400  0798                     u2215:
  5401  0798  36F4               	lsrf	___lwdiv@divisor+1,f
  5402  0799  0CF3               	rrf	___lwdiv@divisor,f
  5403  079A  0B89               	decfsz	9,f
  5404  079B  2F98               	goto	u2215
  5405  079C                     l2839:
  5406  079C  3001               	movlw	1
  5407  079D  02A0               	subwf	___lwdiv@counter,f
  5408  079E  1D03               	btfss	3,2
  5409  079F  2FA1               	goto	u2221
  5410  07A0  2FA2               	goto	u2220
  5411  07A1                     u2221:
  5412  07A1  2F83               	goto	l2831
  5413  07A2                     u2220:
  5414  07A2                     l2841:
  5415  07A2  0822               	movf	___lwdiv@quotient+1,w
  5416  07A3  00F4               	movwf	?___lwdiv+1
  5417  07A4  0821               	movf	___lwdiv@quotient,w
  5418  07A5  00F3               	movwf	?___lwdiv
  5419  07A6                     l1067:
  5420  07A6  0008               	return
  5421  07A7                     __end_of___lwdiv:
  5422                           
  5423                           	psect	text27
  5424  07A7                     __ptext27:	
  5425 ;; *************** function _Ds_Conversor_ADC *****************
  5426 ;; Defined at:
  5427 ;;		line 198 in file "displays.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  adcOUT          2   47[BANK0 ] unsigned short 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  pendiente       4   49[BANK0 ] float 
  5432 ;;  voltios         2   53[BANK0 ] unsigned short 
  5433 ;; Return value:  Size  Location     Type
  5434 ;;                  2   47[BANK0 ] unsigned short 
  5435 ;; Registers used:
  5436 ;;		wreg, status,2, status,0, pclath, cstack
  5437 ;; Tracked objects:
  5438 ;;		On entry : 0/0
  5439 ;;		On exit  : 0/0
  5440 ;;		Unchanged: 0/0
  5441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5442 ;;      Params:         0       2       0       0       0       0
  5443 ;;      Locals:         0       6       0       0       0       0
  5444 ;;      Temps:          0       0       0       0       0       0
  5445 ;;      Totals:         0       8       0       0       0       0
  5446 ;;Total ram usage:        8 bytes
  5447 ;; Hardware stack levels used: 1
  5448 ;; Hardware stack levels required when called: 6
  5449 ;; This function calls:
  5450 ;;		___flmul
  5451 ;;		___fltol
  5452 ;;		___xxtofl
  5453 ;; This function is called by:
  5454 ;;		_main
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           
  5459                           ;psect for function _Ds_Conversor_ADC
  5460  07A7                     _Ds_Conversor_ADC:
  5461  07A7                     l3185:	
  5462                           ;incstack = 0
  5463                           ; Regs used in _Ds_Conversor_ADC: [wreg+status,2+status,0+pclath+cstack]
  5464                           
  5465                           
  5466                           ;displays.c: 199:     float pendiente = 0.97665;
  5467  07A7  303F               	movlw	63
  5468  07A8  0020               	movlb	0	; select bank0
  5469  07A9  00D4               	movwf	Ds_Conversor_ADC@pendiente+3
  5470  07AA  307A               	movlw	122
  5471  07AB  00D3               	movwf	Ds_Conversor_ADC@pendiente+2
  5472  07AC  3005               	movlw	5
  5473  07AD  00D2               	movwf	Ds_Conversor_ADC@pendiente+1
  5474  07AE  30BC               	movlw	188
  5475  07AF  00D1               	movwf	Ds_Conversor_ADC@pendiente
  5476  07B0                     l3187:
  5477                           
  5478                           ;displays.c: 200:     uint16_t voltios = (uint16_t)(((float)adcOUT)*pendiente);
  5479  07B0  084F               	movf	Ds_Conversor_ADC@adcOUT,w
  5480  07B1  00F3               	movwf	___xxtofl@val
  5481  07B2  0850               	movf	Ds_Conversor_ADC@adcOUT+1,w
  5482  07B3  00F4               	movwf	___xxtofl@val+1
  5483  07B4  01F5               	clrf	___xxtofl@val+2
  5484  07B5  01F6               	clrf	___xxtofl@val+3
  5485  07B6  3000               	movlw	0
  5486  07B7  3184  24AE  3187   	fcall	___xxtofl
  5487  07BA  0876               	movf	?___xxtofl+3,w
  5488  07BB  0020               	movlb	0	; select bank0
  5489  07BC  00B1               	movwf	___flmul@a+3
  5490  07BD  0875               	movf	?___xxtofl+2,w
  5491  07BE  00B0               	movwf	___flmul@a+2
  5492  07BF  0874               	movf	?___xxtofl+1,w
  5493  07C0  00AF               	movwf	___flmul@a+1
  5494  07C1  0873               	movf	?___xxtofl,w
  5495  07C2  00AE               	movwf	___flmul@a
  5496  07C3  0854               	movf	Ds_Conversor_ADC@pendiente+3,w
  5497  07C4  00AD               	movwf	___flmul@b+3
  5498  07C5  0853               	movf	Ds_Conversor_ADC@pendiente+2,w
  5499  07C6  00AC               	movwf	___flmul@b+2
  5500  07C7  0852               	movf	Ds_Conversor_ADC@pendiente+1,w
  5501  07C8  00AB               	movwf	___flmul@b+1
  5502  07C9  0851               	movf	Ds_Conversor_ADC@pendiente,w
  5503  07CA  00AA               	movwf	___flmul@b
  5504  07CB  3180  2039  3187   	fcall	___flmul
  5505  07CE  0020               	movlb	0	; select bank0
  5506  07CF  082D               	movf	?___flmul+3,w
  5507  07D0  00C7               	movwf	___fltol@f1+3
  5508  07D1  082C               	movf	?___flmul+2,w
  5509  07D2  00C6               	movwf	___fltol@f1+2
  5510  07D3  082B               	movf	?___flmul+1,w
  5511  07D4  00C5               	movwf	___fltol@f1+1
  5512  07D5  082A               	movf	?___flmul,w
  5513  07D6  00C4               	movwf	___fltol@f1
  5514  07D7  3185  25F8  3187   	fcall	___fltol
  5515  07DA  0020               	movlb	0	; select bank0
  5516  07DB  0845               	movf	?___fltol+1,w
  5517  07DC  00D6               	movwf	Ds_Conversor_ADC@voltios+1
  5518  07DD  0844               	movf	?___fltol,w
  5519  07DE  00D5               	movwf	Ds_Conversor_ADC@voltios
  5520  07DF                     l3189:
  5521                           
  5522                           ;displays.c: 201:  return(voltios);
  5523  07DF  0856               	movf	Ds_Conversor_ADC@voltios+1,w
  5524  07E0  00D0               	movwf	?_Ds_Conversor_ADC+1
  5525  07E1  0855               	movf	Ds_Conversor_ADC@voltios,w
  5526  07E2  00CF               	movwf	?_Ds_Conversor_ADC
  5527  07E3                     l553:
  5528  07E3  0008               	return
  5529  07E4                     __end_of_Ds_Conversor_ADC:
  5530                           
  5531                           	psect	text28
  5532  04AE                     __ptext28:	
  5533 ;; *************** function ___xxtofl *****************
  5534 ;; Defined at:
  5535 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  sign            1    wreg     unsigned char 
  5538 ;;  val             4    3[COMMON] long 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  sign            1    4[BANK0 ] unsigned char 
  5541 ;;  arg             4    6[BANK0 ] unsigned long 
  5542 ;;  exp             1    5[BANK0 ] unsigned char 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  4    3[COMMON] unsigned char 
  5545 ;; Registers used:
  5546 ;;		wreg, status,2, status,0
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5552 ;;      Params:         4       0       0       0       0       0
  5553 ;;      Locals:         0       6       0       0       0       0
  5554 ;;      Temps:          0       4       0       0       0       0
  5555 ;;      Totals:         4      10       0       0       0       0
  5556 ;;Total ram usage:       14 bytes
  5557 ;; Hardware stack levels used: 1
  5558 ;; Hardware stack levels required when called: 4
  5559 ;; This function calls:
  5560 ;;		Nothing
  5561 ;; This function is called by:
  5562 ;;		_Ds_Conversor_ADC
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           
  5567                           ;psect for function ___xxtofl
  5568  04AE                     ___xxtofl:
  5569                           
  5570                           ;incstack = 0
  5571                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5572                           ;___xxtofl@sign stored from wreg
  5573  04AE  0020               	movlb	0	; select bank0
  5574  04AF  00A4               	movwf	___xxtofl@sign
  5575  04B0                     l3007:
  5576  04B0  0824               	movf	___xxtofl@sign,w
  5577  04B1  1903               	btfsc	3,2
  5578  04B2  2CB4               	goto	u2551
  5579  04B3  2CB5               	goto	u2550
  5580  04B4                     u2551:
  5581  04B4  2CC9               	goto	l3013
  5582  04B5                     u2550:
  5583  04B5                     l3009:
  5584  04B5  1FF6               	btfss	___xxtofl@val+3,7
  5585  04B6  2CB8               	goto	u2561
  5586  04B7  2CB9               	goto	u2560
  5587  04B8                     u2561:
  5588  04B8  2CC9               	goto	l3013
  5589  04B9                     u2560:
  5590  04B9                     l3011:
  5591  04B9  0973               	comf	___xxtofl@val,w
  5592  04BA  00A6               	movwf	___xxtofl@arg
  5593  04BB  0974               	comf	___xxtofl@val+1,w
  5594  04BC  00A7               	movwf	___xxtofl@arg+1
  5595  04BD  0975               	comf	___xxtofl@val+2,w
  5596  04BE  00A8               	movwf	___xxtofl@arg+2
  5597  04BF  0976               	comf	___xxtofl@val+3,w
  5598  04C0  00A9               	movwf	___xxtofl@arg+3
  5599  04C1  0AA6               	incf	___xxtofl@arg,f
  5600  04C2  1903               	skipnz
  5601  04C3  0AA7               	incf	___xxtofl@arg+1,f
  5602  04C4  1903               	skipnz
  5603  04C5  0AA8               	incf	___xxtofl@arg+2,f
  5604  04C6  1903               	skipnz
  5605  04C7  0AA9               	incf	___xxtofl@arg+3,f
  5606  04C8  2CD1               	goto	l1228
  5607  04C9                     l3013:
  5608  04C9  0876               	movf	___xxtofl@val+3,w
  5609  04CA  00A9               	movwf	___xxtofl@arg+3
  5610  04CB  0875               	movf	___xxtofl@val+2,w
  5611  04CC  00A8               	movwf	___xxtofl@arg+2
  5612  04CD  0874               	movf	___xxtofl@val+1,w
  5613  04CE  00A7               	movwf	___xxtofl@arg+1
  5614  04CF  0873               	movf	___xxtofl@val,w
  5615  04D0  00A6               	movwf	___xxtofl@arg
  5616  04D1                     l1228:
  5617  04D1  0876               	movf	___xxtofl@val+3,w
  5618  04D2  0475               	iorwf	___xxtofl@val+2,w
  5619  04D3  0474               	iorwf	___xxtofl@val+1,w
  5620  04D4  0473               	iorwf	___xxtofl@val,w
  5621  04D5  1D03               	skipz
  5622  04D6  2CD8               	goto	u2571
  5623  04D7  2CD9               	goto	u2570
  5624  04D8                     u2571:
  5625  04D8  2CE2               	goto	l3019
  5626  04D9                     u2570:
  5627  04D9                     l3015:
  5628  04D9  3000               	movlw	0
  5629  04DA  00F6               	movwf	?___xxtofl+3
  5630  04DB  3000               	movlw	0
  5631  04DC  00F5               	movwf	?___xxtofl+2
  5632  04DD  3000               	movlw	0
  5633  04DE  00F4               	movwf	?___xxtofl+1
  5634  04DF  3000               	movlw	0
  5635  04E0  00F3               	movwf	?___xxtofl
  5636  04E1  2D5A               	goto	l1230
  5637  04E2                     l3019:
  5638  04E2  3096               	movlw	150
  5639  04E3  00A0               	movwf	??___xxtofl
  5640  04E4  0820               	movf	??___xxtofl,w
  5641  04E5  00A5               	movwf	___xxtofl@exp
  5642  04E6  2CF2               	goto	l3023
  5643  04E7                     l3021:
  5644  04E7  3001               	movlw	1
  5645  04E8  00A0               	movwf	??___xxtofl
  5646  04E9  0820               	movf	??___xxtofl,w
  5647  04EA  07A5               	addwf	___xxtofl@exp,f
  5648  04EB  3001               	movlw	1
  5649  04EC                     u2585:
  5650  04EC  36A9               	lsrf	___xxtofl@arg+3,f
  5651  04ED  0CA8               	rrf	___xxtofl@arg+2,f
  5652  04EE  0CA7               	rrf	___xxtofl@arg+1,f
  5653  04EF  0CA6               	rrf	___xxtofl@arg,f
  5654  04F0  0B89               	decfsz	9,f
  5655  04F1  2CEC               	goto	u2585
  5656  04F2                     l3023:
  5657  04F2  30FE               	movlw	254
  5658  04F3  0529               	andwf	___xxtofl@arg+3,w
  5659  04F4  1D03               	btfss	3,2
  5660  04F5  2CF7               	goto	u2591
  5661  04F6  2CF8               	goto	u2590
  5662  04F7                     u2591:
  5663  04F7  2CE7               	goto	l3021
  5664  04F8                     u2590:
  5665  04F8  2D0C               	goto	l1234
  5666  04F9                     l3025:
  5667  04F9  3001               	movlw	1
  5668  04FA  00A0               	movwf	??___xxtofl
  5669  04FB  0820               	movf	??___xxtofl,w
  5670  04FC  07A5               	addwf	___xxtofl@exp,f
  5671  04FD                     l3027:
  5672  04FD  3001               	movlw	1
  5673  04FE  07A6               	addwf	___xxtofl@arg,f
  5674  04FF  3000               	movlw	0
  5675  0500  3DA7               	addwfc	___xxtofl@arg+1,f
  5676  0501  3000               	movlw	0
  5677  0502  3DA8               	addwfc	___xxtofl@arg+2,f
  5678  0503  3000               	movlw	0
  5679  0504  3DA9               	addwfc	___xxtofl@arg+3,f
  5680  0505                     l3029:
  5681  0505  3001               	movlw	1
  5682  0506                     u2605:
  5683  0506  36A9               	lsrf	___xxtofl@arg+3,f
  5684  0507  0CA8               	rrf	___xxtofl@arg+2,f
  5685  0508  0CA7               	rrf	___xxtofl@arg+1,f
  5686  0509  0CA6               	rrf	___xxtofl@arg,f
  5687  050A  0B89               	decfsz	9,f
  5688  050B  2D06               	goto	u2605
  5689  050C                     l1234:
  5690  050C  30FF               	movlw	255
  5691  050D  0529               	andwf	___xxtofl@arg+3,w
  5692  050E  1D03               	btfss	3,2
  5693  050F  2D11               	goto	u2611
  5694  0510  2D12               	goto	u2610
  5695  0511                     u2611:
  5696  0511  2CF9               	goto	l3025
  5697  0512                     u2610:
  5698  0512  2D1C               	goto	l3033
  5699  0513                     l3031:
  5700  0513  3001               	movlw	1
  5701  0514  02A5               	subwf	___xxtofl@exp,f
  5702  0515  3001               	movlw	1
  5703  0516                     u2625:
  5704  0516  35A6               	lslf	___xxtofl@arg,f
  5705  0517  0DA7               	rlf	___xxtofl@arg+1,f
  5706  0518  0DA8               	rlf	___xxtofl@arg+2,f
  5707  0519  0DA9               	rlf	___xxtofl@arg+3,f
  5708  051A  0B89               	decfsz	9,f
  5709  051B  2D16               	goto	u2625
  5710  051C                     l3033:
  5711  051C  1BA8               	btfsc	___xxtofl@arg+2,7
  5712  051D  2D1F               	goto	u2631
  5713  051E  2D20               	goto	u2630
  5714  051F                     u2631:
  5715  051F  2D26               	goto	l1241
  5716  0520                     u2630:
  5717  0520                     l3035:
  5718  0520  3002               	movlw	2
  5719  0521  0225               	subwf	___xxtofl@exp,w
  5720  0522  1803               	skipnc
  5721  0523  2D25               	goto	u2641
  5722  0524  2D26               	goto	u2640
  5723  0525                     u2641:
  5724  0525  2D13               	goto	l3031
  5725  0526                     u2640:
  5726  0526                     l1241:
  5727  0526  1825               	btfsc	___xxtofl@exp,0
  5728  0527  2D29               	goto	u2651
  5729  0528  2D2A               	goto	u2650
  5730  0529                     u2651:
  5731  0529  2D32               	goto	l1242
  5732  052A                     u2650:
  5733  052A                     l3037:
  5734  052A  30FF               	movlw	255
  5735  052B  05A6               	andwf	___xxtofl@arg,f
  5736  052C  30FF               	movlw	255
  5737  052D  05A7               	andwf	___xxtofl@arg+1,f
  5738  052E  307F               	movlw	127
  5739  052F  05A8               	andwf	___xxtofl@arg+2,f
  5740  0530  30FF               	movlw	255
  5741  0531  05A9               	andwf	___xxtofl@arg+3,f
  5742  0532                     l1242:
  5743  0532  1003               	clrc
  5744  0533  0CA5               	rrf	___xxtofl@exp,f
  5745  0534                     l3039:
  5746  0534  0825               	movf	___xxtofl@exp,w
  5747  0535  00A0               	movwf	??___xxtofl
  5748  0536  01A1               	clrf	??___xxtofl+1
  5749  0537  01A2               	clrf	??___xxtofl+2
  5750  0538  01A3               	clrf	??___xxtofl+3
  5751  0539  3018               	movlw	24
  5752  053A                     u2665:
  5753  053A  35A0               	lslf	??___xxtofl,f
  5754  053B  0DA1               	rlf	??___xxtofl+1,f
  5755  053C  0DA2               	rlf	??___xxtofl+2,f
  5756  053D  0DA3               	rlf	??___xxtofl+3,f
  5757  053E                     u2660:
  5758  053E  0B89               	decfsz	9,f
  5759  053F  2D3A               	goto	u2665
  5760  0540  0820               	movf	??___xxtofl,w
  5761  0541  04A6               	iorwf	___xxtofl@arg,f
  5762  0542  0821               	movf	??___xxtofl+1,w
  5763  0543  04A7               	iorwf	___xxtofl@arg+1,f
  5764  0544  0822               	movf	??___xxtofl+2,w
  5765  0545  04A8               	iorwf	___xxtofl@arg+2,f
  5766  0546  0823               	movf	??___xxtofl+3,w
  5767  0547  04A9               	iorwf	___xxtofl@arg+3,f
  5768  0548                     l3041:
  5769  0548  0824               	movf	___xxtofl@sign,w
  5770  0549  1903               	btfsc	3,2
  5771  054A  2D4C               	goto	u2671
  5772  054B  2D4D               	goto	u2670
  5773  054C                     u2671:
  5774  054C  2D52               	goto	l3047
  5775  054D                     u2670:
  5776  054D                     l3043:
  5777  054D  1FF6               	btfss	___xxtofl@val+3,7
  5778  054E  2D50               	goto	u2681
  5779  054F  2D51               	goto	u2680
  5780  0550                     u2681:
  5781  0550  2D52               	goto	l3047
  5782  0551                     u2680:
  5783  0551                     l3045:
  5784  0551  17A9               	bsf	___xxtofl@arg+3,7
  5785  0552                     l3047:
  5786  0552  0829               	movf	___xxtofl@arg+3,w
  5787  0553  00F6               	movwf	?___xxtofl+3
  5788  0554  0828               	movf	___xxtofl@arg+2,w
  5789  0555  00F5               	movwf	?___xxtofl+2
  5790  0556  0827               	movf	___xxtofl@arg+1,w
  5791  0557  00F4               	movwf	?___xxtofl+1
  5792  0558  0826               	movf	___xxtofl@arg,w
  5793  0559  00F3               	movwf	?___xxtofl
  5794  055A                     l1230:
  5795  055A  0008               	return
  5796  055B                     __end_of___xxtofl:
  5797                           
  5798                           	psect	text29
  5799  05F8                     __ptext29:	
  5800 ;; *************** function ___fltol *****************
  5801 ;; Defined at:
  5802 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;  f1              4   36[BANK0 ] unsigned char 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  exp1            1   46[BANK0 ] unsigned char 
  5807 ;;  sign1           1   45[BANK0 ] unsigned char 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  4   36[BANK0 ] long 
  5810 ;; Registers used:
  5811 ;;		wreg, status,2, status,0
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5817 ;;      Params:         0       4       0       0       0       0
  5818 ;;      Locals:         0       2       0       0       0       0
  5819 ;;      Temps:          0       5       0       0       0       0
  5820 ;;      Totals:         0      11       0       0       0       0
  5821 ;;Total ram usage:       11 bytes
  5822 ;; Hardware stack levels used: 1
  5823 ;; Hardware stack levels required when called: 4
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_Ds_Conversor_ADC
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           
  5832                           ;psect for function ___fltol
  5833  05F8                     ___fltol:
  5834  05F8                     l2783:	
  5835                           ;incstack = 0
  5836                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5837                           
  5838  05F8  1003               	clrc
  5839  05F9  0020               	movlb	0	; select bank0
  5840  05FA  0D46               	rlf	___fltol@f1+2,w
  5841  05FB  0D47               	rlf	___fltol@f1+3,w
  5842  05FC  00C8               	movwf	??___fltol
  5843  05FD  0848               	movf	??___fltol,w
  5844  05FE  00CE               	movwf	___fltol@exp1
  5845  05FF  084E               	movf	___fltol@exp1,w
  5846  0600  1D03               	btfss	3,2
  5847  0601  2E03               	goto	u2061
  5848  0602  2E04               	goto	u2060
  5849  0603                     u2061:
  5850  0603  2E0D               	goto	l2789
  5851  0604                     u2060:
  5852  0604                     l2785:
  5853  0604  3000               	movlw	0
  5854  0605  00C7               	movwf	?___fltol+3
  5855  0606  3000               	movlw	0
  5856  0607  00C6               	movwf	?___fltol+2
  5857  0608  3000               	movlw	0
  5858  0609  00C5               	movwf	?___fltol+1
  5859  060A  3000               	movlw	0
  5860  060B  00C4               	movwf	?___fltol
  5861  060C  2E6C               	goto	l981
  5862  060D                     l2789:
  5863  060D  0844               	movf	___fltol@f1,w
  5864  060E  00C8               	movwf	??___fltol
  5865  060F  0845               	movf	___fltol@f1+1,w
  5866  0610  00C9               	movwf	??___fltol+1
  5867  0611  0846               	movf	___fltol@f1+2,w
  5868  0612  00CA               	movwf	??___fltol+2
  5869  0613  0847               	movf	___fltol@f1+3,w
  5870  0614  00CB               	movwf	??___fltol+3
  5871  0615  301F               	movlw	31
  5872  0616                     u2075:
  5873  0616  36CB               	lsrf	??___fltol+3,f
  5874  0617  0CCA               	rrf	??___fltol+2,f
  5875  0618  0CC9               	rrf	??___fltol+1,f
  5876  0619  0CC8               	rrf	??___fltol,f
  5877  061A                     u2070:
  5878  061A  0B89               	decfsz	9,f
  5879  061B  2E16               	goto	u2075
  5880  061C  0848               	movf	??___fltol,w
  5881  061D  00CC               	movwf	??___fltol+4
  5882  061E  084C               	movf	??___fltol+4,w
  5883  061F  00CD               	movwf	___fltol@sign1
  5884  0620                     l2791:
  5885  0620  17C6               	bsf	___fltol@f1+2,7
  5886  0621                     l2793:
  5887  0621  30FF               	movlw	255
  5888  0622  05C4               	andwf	___fltol@f1,f
  5889  0623  30FF               	movlw	255
  5890  0624  05C5               	andwf	___fltol@f1+1,f
  5891  0625  30FF               	movlw	255
  5892  0626  05C6               	andwf	___fltol@f1+2,f
  5893  0627  3000               	movlw	0
  5894  0628  05C7               	andwf	___fltol@f1+3,f
  5895  0629                     l2795:
  5896  0629  3096               	movlw	150
  5897  062A  02CE               	subwf	___fltol@exp1,f
  5898  062B                     l2797:
  5899  062B  1FCE               	btfss	___fltol@exp1,7
  5900  062C  2E2E               	goto	u2081
  5901  062D  2E2F               	goto	u2080
  5902  062E                     u2081:
  5903  062E  2E47               	goto	l2807
  5904  062F                     u2080:
  5905  062F                     l2799:
  5906  062F  084E               	movf	___fltol@exp1,w
  5907  0630  3A80               	xorlw	128
  5908  0631  3E97               	addlw	151
  5909  0632  1803               	skipnc
  5910  0633  2E35               	goto	u2091
  5911  0634  2E36               	goto	u2090
  5912  0635                     u2091:
  5913  0635  2E37               	goto	l2805
  5914  0636                     u2090:
  5915  0636  2E04               	goto	l2785
  5916  0637                     l2805:
  5917  0637  3001               	movlw	1
  5918  0638                     u2105:
  5919  0638  36C7               	lsrf	___fltol@f1+3,f
  5920  0639  0CC6               	rrf	___fltol@f1+2,f
  5921  063A  0CC5               	rrf	___fltol@f1+1,f
  5922  063B  0CC4               	rrf	___fltol@f1,f
  5923  063C  0B89               	decfsz	9,f
  5924  063D  2E38               	goto	u2105
  5925  063E  3001               	movlw	1
  5926  063F  00C8               	movwf	??___fltol
  5927  0640  0848               	movf	??___fltol,w
  5928  0641  07CE               	addwf	___fltol@exp1,f
  5929  0642  1D03               	btfss	3,2
  5930  0643  2E45               	goto	u2111
  5931  0644  2E46               	goto	u2110
  5932  0645                     u2111:
  5933  0645  2E37               	goto	l2805
  5934  0646                     u2110:
  5935  0646  2E5C               	goto	l2815
  5936  0647                     l2807:
  5937  0647  3020               	movlw	32
  5938  0648  024E               	subwf	___fltol@exp1,w
  5939  0649  1C03               	skipc
  5940  064A  2E4C               	goto	u2121
  5941  064B  2E4D               	goto	u2120
  5942  064C                     u2121:
  5943  064C  2E57               	goto	l988
  5944  064D                     u2120:
  5945  064D  2E04               	goto	l2785
  5946  064E                     l2813:
  5947  064E  3001               	movlw	1
  5948  064F                     u2135:
  5949  064F  35C4               	lslf	___fltol@f1,f
  5950  0650  0DC5               	rlf	___fltol@f1+1,f
  5951  0651  0DC6               	rlf	___fltol@f1+2,f
  5952  0652  0DC7               	rlf	___fltol@f1+3,f
  5953  0653  0B89               	decfsz	9,f
  5954  0654  2E4F               	goto	u2135
  5955  0655  3001               	movlw	1
  5956  0656  02CE               	subwf	___fltol@exp1,f
  5957  0657                     l988:
  5958  0657  084E               	movf	___fltol@exp1,w
  5959  0658  1D03               	btfss	3,2
  5960  0659  2E5B               	goto	u2141
  5961  065A  2E5C               	goto	u2140
  5962  065B                     u2141:
  5963  065B  2E4E               	goto	l2813
  5964  065C                     u2140:
  5965  065C                     l2815:
  5966  065C  084D               	movf	___fltol@sign1,w
  5967  065D  1903               	btfsc	3,2
  5968  065E  2E60               	goto	u2151
  5969  065F  2E61               	goto	u2150
  5970  0660                     u2151:
  5971  0660  2E6C               	goto	l991
  5972  0661                     u2150:
  5973  0661                     l2817:
  5974  0661  09C4               	comf	___fltol@f1,f
  5975  0662  09C5               	comf	___fltol@f1+1,f
  5976  0663  09C6               	comf	___fltol@f1+2,f
  5977  0664  09C7               	comf	___fltol@f1+3,f
  5978  0665  0AC4               	incf	___fltol@f1,f
  5979  0666  1903               	skipnz
  5980  0667  0AC5               	incf	___fltol@f1+1,f
  5981  0668  1903               	skipnz
  5982  0669  0AC6               	incf	___fltol@f1+2,f
  5983  066A  1903               	skipnz
  5984  066B  0AC7               	incf	___fltol@f1+3,f
  5985  066C                     l991:
  5986  066C                     l981:
  5987  066C  0008               	return
  5988  066D                     __end_of___fltol:
  5989                           
  5990                           	psect	text30
  5991  0039                     __ptext30:	
  5992 ;; *************** function ___flmul *****************
  5993 ;; Defined at:
  5994 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  b               4   10[BANK0 ] long 
  5997 ;;  a               4   14[BANK0 ] long 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  prod            4   30[BANK0 ] struct .
  6000 ;;  grs             4   25[BANK0 ] unsigned long 
  6001 ;;  temp            2   34[BANK0 ] struct .
  6002 ;;  bexp            1   29[BANK0 ] unsigned char 
  6003 ;;  aexp            1   24[BANK0 ] unsigned char 
  6004 ;;  sign            1   23[BANK0 ] unsigned char 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  4   10[BANK0 ] unsigned char 
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0, pclath, cstack
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6014 ;;      Params:         0       8       0       0       0       0
  6015 ;;      Locals:         0      13       0       0       0       0
  6016 ;;      Temps:          0       5       0       0       0       0
  6017 ;;      Totals:         0      26       0       0       0       0
  6018 ;;Total ram usage:       26 bytes
  6019 ;; Hardware stack levels used: 1
  6020 ;; Hardware stack levels required when called: 5
  6021 ;; This function calls:
  6022 ;;		__Umul8_16
  6023 ;; This function is called by:
  6024 ;;		_Ds_Conversor_ADC
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           
  6029                           ;psect for function ___flmul
  6030  0039                     ___flmul:
  6031  0039                     l2867:	
  6032                           ;incstack = 0
  6033                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6034                           
  6035  0039  0020               	movlb	0	; select bank0
  6036  003A  082D               	movf	___flmul@b+3,w
  6037  003B  3980               	andlw	128
  6038  003C  00B2               	movwf	??___flmul
  6039  003D  0832               	movf	??___flmul,w
  6040  003E  00B7               	movwf	___flmul@sign
  6041  003F                     l2869:
  6042  003F  352D               	lslf	___flmul@b+3,w
  6043  0040  00B2               	movwf	??___flmul
  6044  0041  0832               	movf	??___flmul,w
  6045  0042  00BD               	movwf	___flmul@bexp
  6046  0043                     l2871:
  6047  0043  1FAC               	btfss	___flmul@b+2,7
  6048  0044  2846               	goto	u2291
  6049  0045  2847               	goto	u2290
  6050  0046                     u2291:
  6051  0046  2848               	goto	l2875
  6052  0047                     u2290:
  6053  0047                     l2873:
  6054  0047  143D               	bsf	___flmul@bexp,0
  6055  0048                     l2875:
  6056  0048  083D               	movf	___flmul@bexp,w
  6057  0049  1903               	btfsc	3,2
  6058  004A  284C               	goto	u2301
  6059  004B  284D               	goto	u2300
  6060  004C                     u2301:
  6061  004C  285C               	goto	l2883
  6062  004D                     u2300:
  6063  004D                     l2877:
  6064  004D  0A3D               	incf	___flmul@bexp,w
  6065  004E  1D03               	btfss	3,2
  6066  004F  2851               	goto	u2311
  6067  0050  2852               	goto	u2310
  6068  0051                     u2311:
  6069  0051  285A               	goto	l2881
  6070  0052                     u2310:
  6071  0052                     l2879:
  6072  0052  3000               	movlw	0
  6073  0053  00AD               	movwf	___flmul@b+3
  6074  0054  3000               	movlw	0
  6075  0055  00AC               	movwf	___flmul@b+2
  6076  0056  3000               	movlw	0
  6077  0057  00AB               	movwf	___flmul@b+1
  6078  0058  3000               	movlw	0
  6079  0059  00AA               	movwf	___flmul@b
  6080  005A                     l2881:
  6081  005A  17AC               	bsf	___flmul@b+2,7
  6082  005B  2864               	goto	l2885
  6083  005C                     l2883:
  6084  005C  3000               	movlw	0
  6085  005D  00AD               	movwf	___flmul@b+3
  6086  005E  3000               	movlw	0
  6087  005F  00AC               	movwf	___flmul@b+2
  6088  0060  3000               	movlw	0
  6089  0061  00AB               	movwf	___flmul@b+1
  6090  0062  3000               	movlw	0
  6091  0063  00AA               	movwf	___flmul@b
  6092  0064                     l2885:
  6093  0064  0831               	movf	___flmul@a+3,w
  6094  0065  3980               	andlw	128
  6095  0066  00B2               	movwf	??___flmul
  6096  0067  0832               	movf	??___flmul,w
  6097  0068  06B7               	xorwf	___flmul@sign,f
  6098  0069                     l2887:
  6099  0069  3531               	lslf	___flmul@a+3,w
  6100  006A  00B2               	movwf	??___flmul
  6101  006B  0832               	movf	??___flmul,w
  6102  006C  00B8               	movwf	___flmul@aexp
  6103  006D                     l2889:
  6104  006D  1FB0               	btfss	___flmul@a+2,7
  6105  006E  2870               	goto	u2321
  6106  006F  2871               	goto	u2320
  6107  0070                     u2321:
  6108  0070  2872               	goto	l2893
  6109  0071                     u2320:
  6110  0071                     l2891:
  6111  0071  1438               	bsf	___flmul@aexp,0
  6112  0072                     l2893:
  6113  0072  0838               	movf	___flmul@aexp,w
  6114  0073  1903               	btfsc	3,2
  6115  0074  2876               	goto	u2331
  6116  0075  2877               	goto	u2330
  6117  0076                     u2331:
  6118  0076  2886               	goto	l2901
  6119  0077                     u2330:
  6120  0077                     l2895:
  6121  0077  0A38               	incf	___flmul@aexp,w
  6122  0078  1D03               	btfss	3,2
  6123  0079  287B               	goto	u2341
  6124  007A  287C               	goto	u2340
  6125  007B                     u2341:
  6126  007B  2884               	goto	l2899
  6127  007C                     u2340:
  6128  007C                     l2897:
  6129  007C  3000               	movlw	0
  6130  007D  00B1               	movwf	___flmul@a+3
  6131  007E  3000               	movlw	0
  6132  007F  00B0               	movwf	___flmul@a+2
  6133  0080  3000               	movlw	0
  6134  0081  00AF               	movwf	___flmul@a+1
  6135  0082  3000               	movlw	0
  6136  0083  00AE               	movwf	___flmul@a
  6137  0084                     l2899:
  6138  0084  17B0               	bsf	___flmul@a+2,7
  6139  0085  288E               	goto	l2903
  6140  0086                     l2901:
  6141  0086  3000               	movlw	0
  6142  0087  00B1               	movwf	___flmul@a+3
  6143  0088  3000               	movlw	0
  6144  0089  00B0               	movwf	___flmul@a+2
  6145  008A  3000               	movlw	0
  6146  008B  00AF               	movwf	___flmul@a+1
  6147  008C  3000               	movlw	0
  6148  008D  00AE               	movwf	___flmul@a
  6149  008E                     l2903:
  6150  008E  0838               	movf	___flmul@aexp,w
  6151  008F  1903               	btfsc	3,2
  6152  0090  2892               	goto	u2351
  6153  0091  2893               	goto	u2350
  6154  0092                     u2351:
  6155  0092  2898               	goto	l2907
  6156  0093                     u2350:
  6157  0093                     l2905:
  6158  0093  083D               	movf	___flmul@bexp,w
  6159  0094  1D03               	btfss	3,2
  6160  0095  2897               	goto	u2361
  6161  0096  2898               	goto	u2360
  6162  0097                     u2361:
  6163  0097  28A1               	goto	l2911
  6164  0098                     u2360:
  6165  0098                     l2907:
  6166  0098  3000               	movlw	0
  6167  0099  00AD               	movwf	?___flmul+3
  6168  009A  3000               	movlw	0
  6169  009B  00AC               	movwf	?___flmul+2
  6170  009C  3000               	movlw	0
  6171  009D  00AB               	movwf	?___flmul+1
  6172  009E  3000               	movlw	0
  6173  009F  00AA               	movwf	?___flmul
  6174  00A0  2A8F               	goto	l1184
  6175  00A1                     l2911:
  6176  00A1  082A               	movf	___flmul@b,w
  6177  00A2  00B2               	movwf	??___flmul
  6178  00A3  0832               	movf	??___flmul,w
  6179  00A4  00F3               	movwf	__Umul8_16@multiplicand
  6180  00A5  0830               	movf	___flmul@a+2,w
  6181  00A6  318F  277C  3180   	fcall	__Umul8_16
  6182  00A9  0874               	movf	?__Umul8_16+1,w
  6183  00AA  0020               	movlb	0	; select bank0
  6184  00AB  00C3               	movwf	___flmul@temp+1
  6185  00AC  0873               	movf	?__Umul8_16,w
  6186  00AD  00C2               	movwf	___flmul@temp
  6187  00AE                     l2913:
  6188  00AE  0842               	movf	___flmul@temp,w
  6189  00AF  00B2               	movwf	??___flmul
  6190  00B0  01B3               	clrf	??___flmul+1
  6191  00B1  01B4               	clrf	??___flmul+2
  6192  00B2  01B5               	clrf	??___flmul+3
  6193  00B3  0835               	movf	??___flmul+3,w
  6194  00B4  00BC               	movwf	___flmul@grs+3
  6195  00B5  0834               	movf	??___flmul+2,w
  6196  00B6  00BB               	movwf	___flmul@grs+2
  6197  00B7  0833               	movf	??___flmul+1,w
  6198  00B8  00BA               	movwf	___flmul@grs+1
  6199  00B9  0832               	movf	??___flmul,w
  6200  00BA  00B9               	movwf	___flmul@grs
  6201  00BB                     l2915:
  6202  00BB  0843               	movf	___flmul@temp+1,w
  6203  00BC  00B2               	movwf	??___flmul
  6204  00BD  01B3               	clrf	??___flmul+1
  6205  00BE  01B4               	clrf	??___flmul+2
  6206  00BF  01B5               	clrf	??___flmul+3
  6207  00C0  0835               	movf	??___flmul+3,w
  6208  00C1  00C1               	movwf	___flmul@prod+3
  6209  00C2  0834               	movf	??___flmul+2,w
  6210  00C3  00C0               	movwf	___flmul@prod+2
  6211  00C4  0833               	movf	??___flmul+1,w
  6212  00C5  00BF               	movwf	___flmul@prod+1
  6213  00C6  0832               	movf	??___flmul,w
  6214  00C7  00BE               	movwf	___flmul@prod
  6215  00C8  082B               	movf	___flmul@b+1,w
  6216  00C9  00B2               	movwf	??___flmul
  6217  00CA  0832               	movf	??___flmul,w
  6218  00CB  00F3               	movwf	__Umul8_16@multiplicand
  6219  00CC  082F               	movf	___flmul@a+1,w
  6220  00CD  318F  277C  3180   	fcall	__Umul8_16
  6221  00D0  0874               	movf	?__Umul8_16+1,w
  6222  00D1  0020               	movlb	0	; select bank0
  6223  00D2  00C3               	movwf	___flmul@temp+1
  6224  00D3  0873               	movf	?__Umul8_16,w
  6225  00D4  00C2               	movwf	___flmul@temp
  6226  00D5                     l2917:
  6227  00D5  0842               	movf	___flmul@temp,w
  6228  00D6  00B2               	movwf	??___flmul
  6229  00D7  01B3               	clrf	??___flmul+1
  6230  00D8  01B4               	clrf	??___flmul+2
  6231  00D9  01B5               	clrf	??___flmul+3
  6232  00DA  0832               	movf	??___flmul,w
  6233  00DB  07B9               	addwf	___flmul@grs,f
  6234  00DC  0833               	movf	??___flmul+1,w
  6235  00DD  3DBA               	addwfc	___flmul@grs+1,f
  6236  00DE  0834               	movf	??___flmul+2,w
  6237  00DF  3DBB               	addwfc	___flmul@grs+2,f
  6238  00E0  0835               	movf	??___flmul+3,w
  6239  00E1  3DBC               	addwfc	___flmul@grs+3,f
  6240  00E2                     l2919:
  6241  00E2  0843               	movf	___flmul@temp+1,w
  6242  00E3  00B2               	movwf	??___flmul
  6243  00E4  01B3               	clrf	??___flmul+1
  6244  00E5  01B4               	clrf	??___flmul+2
  6245  00E6  01B5               	clrf	??___flmul+3
  6246  00E7  0832               	movf	??___flmul,w
  6247  00E8  07BE               	addwf	___flmul@prod,f
  6248  00E9  0833               	movf	??___flmul+1,w
  6249  00EA  3DBF               	addwfc	___flmul@prod+1,f
  6250  00EB  0834               	movf	??___flmul+2,w
  6251  00EC  3DC0               	addwfc	___flmul@prod+2,f
  6252  00ED  0835               	movf	??___flmul+3,w
  6253  00EE  3DC1               	addwfc	___flmul@prod+3,f
  6254  00EF  082C               	movf	___flmul@b+2,w
  6255  00F0  00B2               	movwf	??___flmul
  6256  00F1  0832               	movf	??___flmul,w
  6257  00F2  00F3               	movwf	__Umul8_16@multiplicand
  6258  00F3  082E               	movf	___flmul@a,w
  6259  00F4  318F  277C  3180   	fcall	__Umul8_16
  6260  00F7  0874               	movf	?__Umul8_16+1,w
  6261  00F8  0020               	movlb	0	; select bank0
  6262  00F9  00C3               	movwf	___flmul@temp+1
  6263  00FA  0873               	movf	?__Umul8_16,w
  6264  00FB  00C2               	movwf	___flmul@temp
  6265  00FC                     l2921:
  6266  00FC  0842               	movf	___flmul@temp,w
  6267  00FD  00B2               	movwf	??___flmul
  6268  00FE  01B3               	clrf	??___flmul+1
  6269  00FF  01B4               	clrf	??___flmul+2
  6270  0100  01B5               	clrf	??___flmul+3
  6271  0101  0832               	movf	??___flmul,w
  6272  0102  07B9               	addwf	___flmul@grs,f
  6273  0103  0833               	movf	??___flmul+1,w
  6274  0104  3DBA               	addwfc	___flmul@grs+1,f
  6275  0105  0834               	movf	??___flmul+2,w
  6276  0106  3DBB               	addwfc	___flmul@grs+2,f
  6277  0107  0835               	movf	??___flmul+3,w
  6278  0108  3DBC               	addwfc	___flmul@grs+3,f
  6279  0109                     l2923:
  6280  0109  0843               	movf	___flmul@temp+1,w
  6281  010A  00B2               	movwf	??___flmul
  6282  010B  01B3               	clrf	??___flmul+1
  6283  010C  01B4               	clrf	??___flmul+2
  6284  010D  01B5               	clrf	??___flmul+3
  6285  010E  0832               	movf	??___flmul,w
  6286  010F  07BE               	addwf	___flmul@prod,f
  6287  0110  0833               	movf	??___flmul+1,w
  6288  0111  3DBF               	addwfc	___flmul@prod+1,f
  6289  0112  0834               	movf	??___flmul+2,w
  6290  0113  3DC0               	addwfc	___flmul@prod+2,f
  6291  0114  0835               	movf	??___flmul+3,w
  6292  0115  3DC1               	addwfc	___flmul@prod+3,f
  6293  0116                     l2925:
  6294  0116  3008               	movlw	8
  6295  0117                     u2375:
  6296  0117  35B9               	lslf	___flmul@grs,f
  6297  0118  0DBA               	rlf	___flmul@grs+1,f
  6298  0119  0DBB               	rlf	___flmul@grs+2,f
  6299  011A  0DBC               	rlf	___flmul@grs+3,f
  6300  011B  0B89               	decfsz	9,f
  6301  011C  2917               	goto	u2375
  6302  011D                     l2927:
  6303  011D  082B               	movf	___flmul@b+1,w
  6304  011E  00B2               	movwf	??___flmul
  6305  011F  0832               	movf	??___flmul,w
  6306  0120  00F3               	movwf	__Umul8_16@multiplicand
  6307  0121  082E               	movf	___flmul@a,w
  6308  0122  318F  277C  3180   	fcall	__Umul8_16
  6309  0125  0874               	movf	?__Umul8_16+1,w
  6310  0126  0020               	movlb	0	; select bank0
  6311  0127  00C3               	movwf	___flmul@temp+1
  6312  0128  0873               	movf	?__Umul8_16,w
  6313  0129  00C2               	movwf	___flmul@temp
  6314  012A                     l2929:
  6315  012A  0842               	movf	___flmul@temp,w
  6316  012B  07B9               	addwf	___flmul@grs,f
  6317  012C  0843               	movf	___flmul@temp+1,w
  6318  012D  3DBA               	addwfc	___flmul@grs+1,f
  6319  012E  3000               	movlw	0
  6320  012F  3DBB               	addwfc	___flmul@grs+2,f
  6321  0130  3DBC               	addwfc	___flmul@grs+3,f
  6322  0131                     l2931:
  6323  0131  082A               	movf	___flmul@b,w
  6324  0132  00B2               	movwf	??___flmul
  6325  0133  0832               	movf	??___flmul,w
  6326  0134  00F3               	movwf	__Umul8_16@multiplicand
  6327  0135  082F               	movf	___flmul@a+1,w
  6328  0136  318F  277C  3180   	fcall	__Umul8_16
  6329  0139  0874               	movf	?__Umul8_16+1,w
  6330  013A  0020               	movlb	0	; select bank0
  6331  013B  00C3               	movwf	___flmul@temp+1
  6332  013C  0873               	movf	?__Umul8_16,w
  6333  013D  00C2               	movwf	___flmul@temp
  6334  013E                     l2933:
  6335  013E  0842               	movf	___flmul@temp,w
  6336  013F  07B9               	addwf	___flmul@grs,f
  6337  0140  0843               	movf	___flmul@temp+1,w
  6338  0141  3DBA               	addwfc	___flmul@grs+1,f
  6339  0142  3000               	movlw	0
  6340  0143  3DBB               	addwfc	___flmul@grs+2,f
  6341  0144  3DBC               	addwfc	___flmul@grs+3,f
  6342  0145                     l2935:
  6343  0145  3008               	movlw	8
  6344  0146                     u2385:
  6345  0146  35B9               	lslf	___flmul@grs,f
  6346  0147  0DBA               	rlf	___flmul@grs+1,f
  6347  0148  0DBB               	rlf	___flmul@grs+2,f
  6348  0149  0DBC               	rlf	___flmul@grs+3,f
  6349  014A  0B89               	decfsz	9,f
  6350  014B  2946               	goto	u2385
  6351  014C  082A               	movf	___flmul@b,w
  6352  014D  00B2               	movwf	??___flmul
  6353  014E  0832               	movf	??___flmul,w
  6354  014F  00F3               	movwf	__Umul8_16@multiplicand
  6355  0150  082E               	movf	___flmul@a,w
  6356  0151  318F  277C  3180   	fcall	__Umul8_16
  6357  0154  0874               	movf	?__Umul8_16+1,w
  6358  0155  0020               	movlb	0	; select bank0
  6359  0156  00C3               	movwf	___flmul@temp+1
  6360  0157  0873               	movf	?__Umul8_16,w
  6361  0158  00C2               	movwf	___flmul@temp
  6362  0159                     l2937:
  6363  0159  0842               	movf	___flmul@temp,w
  6364  015A  07B9               	addwf	___flmul@grs,f
  6365  015B  0843               	movf	___flmul@temp+1,w
  6366  015C  3DBA               	addwfc	___flmul@grs+1,f
  6367  015D  3000               	movlw	0
  6368  015E  3DBB               	addwfc	___flmul@grs+2,f
  6369  015F  3DBC               	addwfc	___flmul@grs+3,f
  6370  0160                     l2939:
  6371  0160  082B               	movf	___flmul@b+1,w
  6372  0161  00B2               	movwf	??___flmul
  6373  0162  0832               	movf	??___flmul,w
  6374  0163  00F3               	movwf	__Umul8_16@multiplicand
  6375  0164  0830               	movf	___flmul@a+2,w
  6376  0165  318F  277C  3180   	fcall	__Umul8_16
  6377  0168  0874               	movf	?__Umul8_16+1,w
  6378  0169  0020               	movlb	0	; select bank0
  6379  016A  00C3               	movwf	___flmul@temp+1
  6380  016B  0873               	movf	?__Umul8_16,w
  6381  016C  00C2               	movwf	___flmul@temp
  6382  016D  0842               	movf	___flmul@temp,w
  6383  016E  07BE               	addwf	___flmul@prod,f
  6384  016F  0843               	movf	___flmul@temp+1,w
  6385  0170  3DBF               	addwfc	___flmul@prod+1,f
  6386  0171  3000               	movlw	0
  6387  0172  3DC0               	addwfc	___flmul@prod+2,f
  6388  0173  3DC1               	addwfc	___flmul@prod+3,f
  6389  0174                     l2941:
  6390  0174  082C               	movf	___flmul@b+2,w
  6391  0175  00B2               	movwf	??___flmul
  6392  0176  0832               	movf	??___flmul,w
  6393  0177  00F3               	movwf	__Umul8_16@multiplicand
  6394  0178  082F               	movf	___flmul@a+1,w
  6395  0179  318F  277C  3180   	fcall	__Umul8_16
  6396  017C  0874               	movf	?__Umul8_16+1,w
  6397  017D  0020               	movlb	0	; select bank0
  6398  017E  00C3               	movwf	___flmul@temp+1
  6399  017F  0873               	movf	?__Umul8_16,w
  6400  0180  00C2               	movwf	___flmul@temp
  6401  0181                     l2943:
  6402  0181  0842               	movf	___flmul@temp,w
  6403  0182  07BE               	addwf	___flmul@prod,f
  6404  0183  0843               	movf	___flmul@temp+1,w
  6405  0184  3DBF               	addwfc	___flmul@prod+1,f
  6406  0185  3000               	movlw	0
  6407  0186  3DC0               	addwfc	___flmul@prod+2,f
  6408  0187  3DC1               	addwfc	___flmul@prod+3,f
  6409  0188  082C               	movf	___flmul@b+2,w
  6410  0189  00B2               	movwf	??___flmul
  6411  018A  0832               	movf	??___flmul,w
  6412  018B  00F3               	movwf	__Umul8_16@multiplicand
  6413  018C  0830               	movf	___flmul@a+2,w
  6414  018D  318F  277C  3180   	fcall	__Umul8_16
  6415  0190  0874               	movf	?__Umul8_16+1,w
  6416  0191  0020               	movlb	0	; select bank0
  6417  0192  00C3               	movwf	___flmul@temp+1
  6418  0193  0873               	movf	?__Umul8_16,w
  6419  0194  00C2               	movwf	___flmul@temp
  6420  0195                     l2945:
  6421  0195  0842               	movf	___flmul@temp,w
  6422  0196  00B2               	movwf	??___flmul
  6423  0197  0843               	movf	___flmul@temp+1,w
  6424  0198  00B3               	movwf	??___flmul+1
  6425  0199  01B4               	clrf	??___flmul+2
  6426  019A  01B5               	clrf	??___flmul+3
  6427  019B  3008               	movlw	8
  6428  019C                     u2395:
  6429  019C  35B2               	lslf	??___flmul,f
  6430  019D  0DB3               	rlf	??___flmul+1,f
  6431  019E  0DB4               	rlf	??___flmul+2,f
  6432  019F  0DB5               	rlf	??___flmul+3,f
  6433  01A0                     u2390:
  6434  01A0  0B89               	decfsz	9,f
  6435  01A1  299C               	goto	u2395
  6436  01A2  0832               	movf	??___flmul,w
  6437  01A3  07BE               	addwf	___flmul@prod,f
  6438  01A4  0833               	movf	??___flmul+1,w
  6439  01A5  3DBF               	addwfc	___flmul@prod+1,f
  6440  01A6  0834               	movf	??___flmul+2,w
  6441  01A7  3DC0               	addwfc	___flmul@prod+2,f
  6442  01A8  0835               	movf	??___flmul+3,w
  6443  01A9  3DC1               	addwfc	___flmul@prod+3,f
  6444  01AA                     l2947:
  6445  01AA  0839               	movf	___flmul@grs,w
  6446  01AB  00B2               	movwf	??___flmul
  6447  01AC  083A               	movf	___flmul@grs+1,w
  6448  01AD  00B3               	movwf	??___flmul+1
  6449  01AE  083B               	movf	___flmul@grs+2,w
  6450  01AF  00B4               	movwf	??___flmul+2
  6451  01B0  083C               	movf	___flmul@grs+3,w
  6452  01B1  00B5               	movwf	??___flmul+3
  6453  01B2  3018               	movlw	24
  6454  01B3                     u2405:
  6455  01B3  36B5               	lsrf	??___flmul+3,f
  6456  01B4  0CB4               	rrf	??___flmul+2,f
  6457  01B5  0CB3               	rrf	??___flmul+1,f
  6458  01B6  0CB2               	rrf	??___flmul,f
  6459  01B7                     u2400:
  6460  01B7  0B89               	decfsz	9,f
  6461  01B8  29B3               	goto	u2405
  6462  01B9  0832               	movf	??___flmul,w
  6463  01BA  07BE               	addwf	___flmul@prod,f
  6464  01BB  0833               	movf	??___flmul+1,w
  6465  01BC  3DBF               	addwfc	___flmul@prod+1,f
  6466  01BD  0834               	movf	??___flmul+2,w
  6467  01BE  3DC0               	addwfc	___flmul@prod+2,f
  6468  01BF  0835               	movf	??___flmul+3,w
  6469  01C0  3DC1               	addwfc	___flmul@prod+3,f
  6470  01C1                     l2949:
  6471  01C1  3008               	movlw	8
  6472  01C2                     u2415:
  6473  01C2  35B9               	lslf	___flmul@grs,f
  6474  01C3  0DBA               	rlf	___flmul@grs+1,f
  6475  01C4  0DBB               	rlf	___flmul@grs+2,f
  6476  01C5  0DBC               	rlf	___flmul@grs+3,f
  6477  01C6  0B89               	decfsz	9,f
  6478  01C7  29C2               	goto	u2415
  6479  01C8                     l2951:
  6480  01C8  083D               	movf	___flmul@bexp,w
  6481  01C9  0738               	addwf	___flmul@aexp,w
  6482  01CA  00B2               	movwf	??___flmul
  6483  01CB  01B3               	clrf	??___flmul+1
  6484  01CC  0DB3               	rlf	??___flmul+1,f
  6485  01CD  0832               	movf	??___flmul,w
  6486  01CE  3E82               	addlw	130
  6487  01CF  00C2               	movwf	___flmul@temp
  6488  01D0  30FF               	movlw	255
  6489  01D1  3D33               	addwfc	??___flmul+1,w
  6490  01D2  00C3               	movwf	___flmul@temp+1
  6491  01D3  29EB               	goto	l2963
  6492  01D4                     l2953:
  6493  01D4  3001               	movlw	1
  6494  01D5                     u2425:
  6495  01D5  35BE               	lslf	___flmul@prod,f
  6496  01D6  0DBF               	rlf	___flmul@prod+1,f
  6497  01D7  0DC0               	rlf	___flmul@prod+2,f
  6498  01D8  0DC1               	rlf	___flmul@prod+3,f
  6499  01D9  0B89               	decfsz	9,f
  6500  01DA  29D5               	goto	u2425
  6501  01DB                     l2955:
  6502  01DB  1FBC               	btfss	___flmul@grs+3,7
  6503  01DC  29DE               	goto	u2431
  6504  01DD  29DF               	goto	u2430
  6505  01DE                     u2431:
  6506  01DE  29E0               	goto	l2959
  6507  01DF                     u2430:
  6508  01DF                     l2957:
  6509  01DF  143E               	bsf	___flmul@prod,0
  6510  01E0                     l2959:
  6511  01E0  3001               	movlw	1
  6512  01E1                     u2445:
  6513  01E1  35B9               	lslf	___flmul@grs,f
  6514  01E2  0DBA               	rlf	___flmul@grs+1,f
  6515  01E3  0DBB               	rlf	___flmul@grs+2,f
  6516  01E4  0DBC               	rlf	___flmul@grs+3,f
  6517  01E5  0B89               	decfsz	9,f
  6518  01E6  29E1               	goto	u2445
  6519  01E7                     l2961:
  6520  01E7  30FF               	movlw	255
  6521  01E8  07C2               	addwf	___flmul@temp,f
  6522  01E9  30FF               	movlw	255
  6523  01EA  3DC3               	addwfc	___flmul@temp+1,f
  6524  01EB                     l2963:
  6525  01EB  1FC0               	btfss	___flmul@prod+2,7
  6526  01EC  29EE               	goto	u2451
  6527  01ED  29EF               	goto	u2450
  6528  01EE                     u2451:
  6529  01EE  29D4               	goto	l2953
  6530  01EF                     u2450:
  6531  01EF                     l2965:
  6532  01EF  01B8               	clrf	___flmul@aexp
  6533  01F0                     l2967:
  6534  01F0  1FBC               	btfss	___flmul@grs+3,7
  6535  01F1  29F3               	goto	u2461
  6536  01F2  29F4               	goto	u2460
  6537  01F3                     u2461:
  6538  01F3  2A10               	goto	l2975
  6539  01F4                     u2460:
  6540  01F4                     l2969:
  6541  01F4  30FF               	movlw	255
  6542  01F5  0539               	andwf	___flmul@grs,w
  6543  01F6  00B2               	movwf	??___flmul
  6544  01F7  30FF               	movlw	255
  6545  01F8  053A               	andwf	___flmul@grs+1,w
  6546  01F9  00B3               	movwf	??___flmul+1
  6547  01FA  30FF               	movlw	255
  6548  01FB  053B               	andwf	___flmul@grs+2,w
  6549  01FC  00B4               	movwf	??___flmul+2
  6550  01FD  307F               	movlw	127
  6551  01FE  053C               	andwf	___flmul@grs+3,w
  6552  01FF  00B5               	movwf	??___flmul+3
  6553  0200  0835               	movf	??___flmul+3,w
  6554  0201  0434               	iorwf	??___flmul+2,w
  6555  0202  0433               	iorwf	??___flmul+1,w
  6556  0203  0432               	iorwf	??___flmul,w
  6557  0204  1903               	skipnz
  6558  0205  2A07               	goto	u2471
  6559  0206  2A08               	goto	u2470
  6560  0207                     u2471:
  6561  0207  2A0B               	goto	l1190
  6562  0208                     u2470:
  6563  0208                     l2971:
  6564  0208  01B8               	clrf	___flmul@aexp
  6565  0209  0AB8               	incf	___flmul@aexp,f
  6566  020A  2A10               	goto	l2975
  6567  020B                     l1190:
  6568  020B  1C3E               	btfss	___flmul@prod,0
  6569  020C  2A0E               	goto	u2481
  6570  020D  2A0F               	goto	u2480
  6571  020E                     u2481:
  6572  020E  2A10               	goto	l2975
  6573  020F                     u2480:
  6574  020F  2A08               	goto	l2971
  6575  0210                     l2975:
  6576  0210  0838               	movf	___flmul@aexp,w
  6577  0211  1903               	btfsc	3,2
  6578  0212  2A14               	goto	u2491
  6579  0213  2A15               	goto	u2490
  6580  0214                     u2491:
  6581  0214  2A3D               	goto	l2985
  6582  0215                     u2490:
  6583  0215                     l2977:
  6584  0215  3001               	movlw	1
  6585  0216  07BE               	addwf	___flmul@prod,f
  6586  0217  3000               	movlw	0
  6587  0218  3DBF               	addwfc	___flmul@prod+1,f
  6588  0219  3000               	movlw	0
  6589  021A  3DC0               	addwfc	___flmul@prod+2,f
  6590  021B  3000               	movlw	0
  6591  021C  3DC1               	addwfc	___flmul@prod+3,f
  6592  021D                     l2979:
  6593  021D  1C41               	btfss	___flmul@prod+3,0
  6594  021E  2A20               	goto	u2501
  6595  021F  2A21               	goto	u2500
  6596  0220                     u2501:
  6597  0220  2A3D               	goto	l2985
  6598  0221                     u2500:
  6599  0221                     l2981:
  6600  0221  083E               	movf	___flmul@prod,w
  6601  0222  00B2               	movwf	??___flmul
  6602  0223  083F               	movf	___flmul@prod+1,w
  6603  0224  00B3               	movwf	??___flmul+1
  6604  0225  0840               	movf	___flmul@prod+2,w
  6605  0226  00B4               	movwf	??___flmul+2
  6606  0227  0841               	movf	___flmul@prod+3,w
  6607  0228  00B5               	movwf	??___flmul+3
  6608  0229  3001               	movlw	1
  6609  022A  00B6               	movwf	??___flmul+4
  6610  022B                     u2515:
  6611  022B  37B5               	asrf	??___flmul+3,f
  6612  022C  0CB4               	rrf	??___flmul+2,f
  6613  022D  0CB3               	rrf	??___flmul+1,f
  6614  022E  0CB2               	rrf	??___flmul,f
  6615  022F                     u2510:
  6616  022F  0BB6               	decfsz	??___flmul+4,f
  6617  0230  2A2B               	goto	u2515
  6618  0231  0835               	movf	??___flmul+3,w
  6619  0232  00C1               	movwf	___flmul@prod+3
  6620  0233  0834               	movf	??___flmul+2,w
  6621  0234  00C0               	movwf	___flmul@prod+2
  6622  0235  0833               	movf	??___flmul+1,w
  6623  0236  00BF               	movwf	___flmul@prod+1
  6624  0237  0832               	movf	??___flmul,w
  6625  0238  00BE               	movwf	___flmul@prod
  6626  0239                     l2983:
  6627  0239  3001               	movlw	1
  6628  023A  07C2               	addwf	___flmul@temp,f
  6629  023B  3000               	movlw	0
  6630  023C  3DC3               	addwfc	___flmul@temp+1,f
  6631  023D                     l2985:
  6632  023D  0843               	movf	___flmul@temp+1,w
  6633  023E  3A80               	xorlw	128
  6634  023F  00B2               	movwf	??___flmul
  6635  0240  3080               	movlw	128
  6636  0241  0232               	subwf	??___flmul,w
  6637  0242  1D03               	skipz
  6638  0243  2A46               	goto	u2525
  6639  0244  30FF               	movlw	255
  6640  0245  0242               	subwf	___flmul@temp,w
  6641  0246                     u2525:
  6642  0246  1C03               	skipc
  6643  0247  2A49               	goto	u2521
  6644  0248  2A4A               	goto	u2520
  6645  0249                     u2521:
  6646  0249  2A54               	goto	l2989
  6647  024A                     u2520:
  6648  024A                     l2987:
  6649  024A  307F               	movlw	127
  6650  024B  0020               	movlb	0	; select bank0
  6651  024C  00C1               	movwf	___flmul@prod+3
  6652  024D  3080               	movlw	128
  6653  024E  00C0               	movwf	___flmul@prod+2
  6654  024F  3000               	movlw	0
  6655  0250  00BF               	movwf	___flmul@prod+1
  6656  0251  3000               	movlw	0
  6657  0252  00BE               	movwf	___flmul@prod
  6658  0253  2A83               	goto	l1196
  6659  0254                     l2989:
  6660  0254  0020               	movlb	0	; select bank0
  6661  0255  0843               	movf	___flmul@temp+1,w
  6662  0256  3A80               	xorlw	128
  6663  0257  00B2               	movwf	??___flmul
  6664  0258  3080               	movlw	128
  6665  0259  0232               	subwf	??___flmul,w
  6666  025A  1D03               	skipz
  6667  025B  2A5E               	goto	u2535
  6668  025C  3001               	movlw	1
  6669  025D  0242               	subwf	___flmul@temp,w
  6670  025E                     u2535:
  6671  025E  1803               	skipnc
  6672  025F  2A61               	goto	u2531
  6673  0260  2A62               	goto	u2530
  6674  0261                     u2531:
  6675  0261  2A6D               	goto	l2995
  6676  0262                     u2530:
  6677  0262                     l2991:
  6678  0262  3000               	movlw	0
  6679  0263  0020               	movlb	0	; select bank0
  6680  0264  00C1               	movwf	___flmul@prod+3
  6681  0265  3000               	movlw	0
  6682  0266  00C0               	movwf	___flmul@prod+2
  6683  0267  3000               	movlw	0
  6684  0268  00BF               	movwf	___flmul@prod+1
  6685  0269  3000               	movlw	0
  6686  026A  00BE               	movwf	___flmul@prod
  6687  026B                     l2993:
  6688  026B  01B7               	clrf	___flmul@sign
  6689  026C  2A83               	goto	l1196
  6690  026D                     l2995:
  6691  026D  0020               	movlb	0	; select bank0
  6692  026E  0842               	movf	___flmul@temp,w
  6693  026F  00B2               	movwf	??___flmul
  6694  0270  0832               	movf	??___flmul,w
  6695  0271  00BD               	movwf	___flmul@bexp
  6696  0272  30FF               	movlw	255
  6697  0273  05BE               	andwf	___flmul@prod,f
  6698  0274  30FF               	movlw	255
  6699  0275  05BF               	andwf	___flmul@prod+1,f
  6700  0276  307F               	movlw	127
  6701  0277  05C0               	andwf	___flmul@prod+2,f
  6702  0278  3000               	movlw	0
  6703  0279  05C1               	andwf	___flmul@prod+3,f
  6704  027A                     l2997:
  6705  027A  1C3D               	btfss	___flmul@bexp,0
  6706  027B  2A7D               	goto	u2541
  6707  027C  2A7E               	goto	u2540
  6708  027D                     u2541:
  6709  027D  2A7F               	goto	l3001
  6710  027E                     u2540:
  6711  027E                     l2999:
  6712  027E  17C0               	bsf	___flmul@prod+2,7
  6713  027F                     l3001:
  6714  027F  363D               	lsrf	___flmul@bexp,w
  6715  0280  00B2               	movwf	??___flmul
  6716  0281  0832               	movf	??___flmul,w
  6717  0282  00C1               	movwf	___flmul@prod+3
  6718  0283                     l1196:
  6719  0283  0837               	movf	___flmul@sign,w
  6720  0284  00B2               	movwf	??___flmul
  6721  0285  0832               	movf	??___flmul,w
  6722  0286  04C1               	iorwf	___flmul@prod+3,f
  6723  0287                     l3003:
  6724  0287  0841               	movf	___flmul@prod+3,w
  6725  0288  00AD               	movwf	?___flmul+3
  6726  0289  0840               	movf	___flmul@prod+2,w
  6727  028A  00AC               	movwf	?___flmul+2
  6728  028B  083F               	movf	___flmul@prod+1,w
  6729  028C  00AB               	movwf	?___flmul+1
  6730  028D  083E               	movf	___flmul@prod,w
  6731  028E  00AA               	movwf	?___flmul
  6732  028F                     l1184:
  6733  028F  0008               	return
  6734  0290                     __end_of___flmul:
  6735                           
  6736                           	psect	text31
  6737  0F7C                     __ptext31:	
  6738 ;; *************** function __Umul8_16 *****************
  6739 ;; Defined at:
  6740 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  multiplier      1    wreg     unsigned char 
  6743 ;;  multiplicand    1    3[COMMON] unsigned char 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6746 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6747 ;;  product         2    0[BANK0 ] unsigned int 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  2    3[COMMON] unsigned int 
  6750 ;; Registers used:
  6751 ;;		wreg, status,2, status,0
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6757 ;;      Params:         2       0       0       0       0       0
  6758 ;;      Locals:         0       5       0       0       0       0
  6759 ;;      Temps:          2       0       0       0       0       0
  6760 ;;      Totals:         4       5       0       0       0       0
  6761 ;;Total ram usage:        9 bytes
  6762 ;; Hardware stack levels used: 1
  6763 ;; Hardware stack levels required when called: 4
  6764 ;; This function calls:
  6765 ;;		Nothing
  6766 ;; This function is called by:
  6767 ;;		___flmul
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           
  6772                           ;psect for function __Umul8_16
  6773  0F7C                     __Umul8_16:
  6774                           
  6775                           ;incstack = 0
  6776                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6777                           ;__Umul8_16@multiplier stored from wreg
  6778  0F7C  0020               	movlb	0	; select bank0
  6779  0F7D  00A4               	movwf	__Umul8_16@multiplier
  6780  0F7E                     l2699:
  6781  0F7E  01A0               	clrf	__Umul8_16@product
  6782  0F7F  01A1               	clrf	__Umul8_16@product+1
  6783  0F80                     l2701:
  6784  0F80  0873               	movf	__Umul8_16@multiplicand,w
  6785  0F81  00F5               	movwf	??__Umul8_16
  6786  0F82  01F6               	clrf	??__Umul8_16+1
  6787  0F83  0875               	movf	??__Umul8_16,w
  6788  0F84  00A2               	movwf	__Umul8_16@word_mpld
  6789  0F85  0876               	movf	??__Umul8_16+1,w
  6790  0F86  00A3               	movwf	__Umul8_16@word_mpld+1
  6791  0F87                     l2703:
  6792  0F87  1C24               	btfss	__Umul8_16@multiplier,0
  6793  0F88  2F8A               	goto	u1981
  6794  0F89  2F8B               	goto	u1980
  6795  0F8A                     u1981:
  6796  0F8A  2F8F               	goto	l1203
  6797  0F8B                     u1980:
  6798  0F8B                     l2705:
  6799  0F8B  0822               	movf	__Umul8_16@word_mpld,w
  6800  0F8C  07A0               	addwf	__Umul8_16@product,f
  6801  0F8D  0823               	movf	__Umul8_16@word_mpld+1,w
  6802  0F8E  3DA1               	addwfc	__Umul8_16@product+1,f
  6803  0F8F                     l1203:
  6804  0F8F  3001               	movlw	1
  6805  0F90                     u1995:
  6806  0F90  35A2               	lslf	__Umul8_16@word_mpld,f
  6807  0F91  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6808  0F92  0B89               	decfsz	9,f
  6809  0F93  2F90               	goto	u1995
  6810  0F94  1003               	clrc
  6811  0F95  0CA4               	rrf	__Umul8_16@multiplier,f
  6812  0F96                     l2707:
  6813  0F96  0824               	movf	__Umul8_16@multiplier,w
  6814  0F97  1D03               	btfss	3,2
  6815  0F98  2F9A               	goto	u2001
  6816  0F99  2F9B               	goto	u2000
  6817  0F9A                     u2001:
  6818  0F9A  2F87               	goto	l2703
  6819  0F9B                     u2000:
  6820  0F9B                     l2709:
  6821  0F9B  0821               	movf	__Umul8_16@product+1,w
  6822  0F9C  00F4               	movwf	?__Umul8_16+1
  6823  0F9D  0820               	movf	__Umul8_16@product,w
  6824  0F9E  00F3               	movwf	?__Umul8_16
  6825  0F9F                     l1205:
  6826  0F9F  0008               	return
  6827  0FA0                     __end_of__Umul8_16:
  6828                           
  6829                           	psect	text32
  6830  0E71                     __ptext32:	
  6831 ;; *************** function _ADC_StartConversion *****************
  6832 ;; Defined at:
  6833 ;;		line 98 in file "mcc_generated_files/adc.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      void 
  6840 ;; Registers used:
  6841 ;;		None
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6847 ;;      Params:         0       0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0       0       0
  6849 ;;      Temps:          0       0       0       0       0       0
  6850 ;;      Totals:         0       0       0       0       0       0
  6851 ;;Total ram usage:        0 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 4
  6854 ;; This function calls:
  6855 ;;		Nothing
  6856 ;; This function is called by:
  6857 ;;		_main
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           
  6862                           ;psect for function _ADC_StartConversion
  6863  0E71                     _ADC_StartConversion:
  6864  0E71                     l3069:	
  6865                           ;incstack = 0
  6866                           ; Regs used in _ADC_StartConversion: []
  6867                           
  6868                           
  6869                           ;mcc_generated_files/adc.c: 101:     ADCON0bits.GO_nDONE = 1;
  6870  0E71  0021               	movlb	1	; select bank1
  6871  0E72  149D               	bsf	29,1	;volatile
  6872  0E73                     l193:
  6873  0E73  0008               	return
  6874  0E74                     __end_of_ADC_StartConversion:
  6875                           
  6876                           	psect	intentry
  6877  0004                     __pintentry:	
  6878 ;; *************** function _INTERRUPT_InterruptManager *****************
  6879 ;; Defined at:
  6880 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;		None
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;		None
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  1    wreg      void 
  6887 ;; Registers used:
  6888 ;;		wreg, status,2, status,0, pclath, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6894 ;;      Params:         0       0       0       0       0       0
  6895 ;;      Locals:         0       0       0       0       0       0
  6896 ;;      Temps:          0       0       0       0       0       0
  6897 ;;      Totals:         0       0       0       0       0       0
  6898 ;;Total ram usage:        0 bytes
  6899 ;; Hardware stack levels used: 1
  6900 ;; Hardware stack levels required when called: 3
  6901 ;; This function calls:
  6902 ;;		_ADC_ISR
  6903 ;;		_TMR6_ISR
  6904 ;; This function is called by:
  6905 ;;		Interrupt level 1
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909  0004                     _INTERRUPT_InterruptManager:
  6910                           
  6911                           ;incstack = 0
  6912  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6913                           
  6914                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6915  0005  3180               	pagesel	$
  6916  0006                     i1l2537:
  6917                           
  6918                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  6919  0006  1F0B               	btfss	11,6	;volatile
  6920  0007  2809               	goto	u187_21
  6921  0008  280A               	goto	u187_20
  6922  0009                     u187_21:
  6923  0009  2826               	goto	i1l277
  6924  000A                     u187_20:
  6925  000A                     i1l2539:
  6926                           
  6927                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  6928  000A  0021               	movlb	1	; select bank1
  6929  000B  1F11               	btfss	17,6	;volatile
  6930  000C  280E               	goto	u188_21
  6931  000D  280F               	goto	u188_20
  6932  000E                     u188_21:
  6933  000E  2818               	goto	i1l272
  6934  000F                     u188_20:
  6935  000F                     i1l2541:
  6936  000F  0020               	movlb	0	; select bank0
  6937  0010  1F11               	btfss	17,6	;volatile
  6938  0011  2813               	goto	u189_21
  6939  0012  2814               	goto	u189_20
  6940  0013                     u189_21:
  6941  0013  2818               	goto	i1l272
  6942  0014                     u189_20:
  6943  0014                     i1l2543:
  6944                           
  6945                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             ADC_ISR();
  6946  0014  318E  26D8  3180   	fcall	_ADC_ISR
  6947                           
  6948                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  6949  0017  2826               	goto	i1l277
  6950  0018                     i1l272:	
  6951                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.TMR6IE == 1 && PI
      +                          R3bits.TMR6IF == 1)
  6952                           
  6953  0018  0021               	movlb	1	; select bank1
  6954  0019  1D93               	btfss	19,3	;volatile
  6955  001A  281C               	goto	u190_21
  6956  001B  281D               	goto	u190_20
  6957  001C                     u190_21:
  6958  001C  2826               	goto	i1l273
  6959  001D                     u190_20:
  6960  001D                     i1l2545:
  6961  001D  0020               	movlb	0	; select bank0
  6962  001E  1D93               	btfss	19,3	;volatile
  6963  001F  2821               	goto	u191_21
  6964  0020  2822               	goto	u191_20
  6965  0021                     u191_21:
  6966  0021  2826               	goto	i1l273
  6967  0022                     u191_20:
  6968  0022                     i1l2547:
  6969                           
  6970                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR6_ISR();
  6971  0022  318E  26E7  3180   	fcall	_TMR6_ISR
  6972                           
  6973                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6974  0025  2826               	goto	i1l277
  6975  0026                     i1l273:
  6976  0026                     i1l277:	
  6977                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  6978                           
  6979  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6980  0027  0009               	retfie
  6981  0028                     __end_of_INTERRUPT_InterruptManager:
  6982                           
  6983                           	psect	text34
  6984  0EE7                     __ptext34:	
  6985 ;; *************** function _TMR6_ISR *****************
  6986 ;; Defined at:
  6987 ;;		line 119 in file "mcc_generated_files/tmr6.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;		None
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;		None
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      void 
  6994 ;; Registers used:
  6995 ;;		wreg, status,2, status,0, pclath, cstack
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7001 ;;      Params:         0       0       0       0       0       0
  7002 ;;      Locals:         0       0       0       0       0       0
  7003 ;;      Temps:          0       0       0       0       0       0
  7004 ;;      Totals:         0       0       0       0       0       0
  7005 ;;Total ram usage:        0 bytes
  7006 ;; Hardware stack levels used: 1
  7007 ;; Hardware stack levels required when called: 1
  7008 ;; This function calls:
  7009 ;;		Absolute function
  7010 ;;		_Interrupcion_timer
  7011 ;;		_TMR6_DefaultInterruptHandler
  7012 ;; This function is called by:
  7013 ;;		_INTERRUPT_InterruptManager
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           
  7018                           ;psect for function _TMR6_ISR
  7019  0EE7                     _TMR6_ISR:
  7020  0EE7                     i1l2367:	
  7021                           ;incstack = 0
  7022                           ; Regs used in _TMR6_ISR: [wreg+status,2+status,0+pclath+cstack]
  7023                           
  7024                           
  7025                           ;mcc_generated_files/tmr6.c: 123:     PIR3bits.TMR6IF = 0;
  7026  0EE7  0020               	movlb	0	; select bank0
  7027  0EE8  1193               	bcf	19,3	;volatile
  7028  0EE9                     i1l2369:
  7029                           
  7030                           ;mcc_generated_files/tmr6.c: 125:     if(TMR6_InterruptHandler)
  7031  0EE9  0021               	movlb	1	; select bank1
  7032  0EEA  0846               	movf	_TMR6_InterruptHandler^(0+128),w
  7033  0EEB  0447               	iorwf	(_TMR6_InterruptHandler+1)^(0+128),w
  7034  0EEC  1903               	btfsc	3,2
  7035  0EED  2EEF               	goto	u171_21
  7036  0EEE  2EF0               	goto	u171_20
  7037  0EEF                     u171_21:
  7038  0EEF  2EF5               	goto	i1l40
  7039  0EF0                     u171_20:
  7040  0EF0                     i1l2371:
  7041                           
  7042                           ;mcc_generated_files/tmr6.c: 126:     {;mcc_generated_files/tmr6.c: 127:         TMR6_In
      +                          terruptHandler();
  7043  0EF0  0847               	movf	(_TMR6_InterruptHandler+1)^(0+128),w
  7044  0EF1  008A               	movwf	10
  7045  0EF2  0846               	movf	_TMR6_InterruptHandler^(0+128),w
  7046  0EF3  000A               	callw
  7047  0EF4  318E               	pagesel	$
  7048  0EF5                     i1l40:
  7049  0EF5  0008               	return
  7050  0EF6                     __end_of_TMR6_ISR:
  7051                           
  7052                           	psect	text35
  7053  0E7A                     __ptext35:	
  7054 ;; *************** function _Interrupcion_timer *****************
  7055 ;; Defined at:
  7056 ;;		line 19 in file "main.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7070 ;;      Params:         0       0       0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0
  7072 ;;      Temps:          1       0       0       0       0       0
  7073 ;;      Totals:         1       0       0       0       0       0
  7074 ;;Total ram usage:        1 bytes
  7075 ;; Hardware stack levels used: 1
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		_main
  7080 ;;		_TMR6_ISR
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           
  7085                           ;psect for function _Interrupcion_timer
  7086  0E7A                     _Interrupcion_timer:
  7087  0E7A                     i1l2077:	
  7088                           ;incstack = 0
  7089                           ; Regs used in _Interrupcion_timer: [wreg]
  7090                           
  7091                           
  7092                           ;main.c: 20:  timer_flag = 1;
  7093  0E7A  3001               	movlw	1
  7094  0E7B  00F0               	movwf	??_Interrupcion_timer
  7095  0E7C  0870               	movf	??_Interrupcion_timer,w
  7096  0E7D  00F9               	movwf	_timer_flag	;volatile
  7097  0E7E                     i1l337:
  7098  0E7E  0008               	return
  7099  0E7F                     __end_of_Interrupcion_timer:
  7100                           
  7101                           	psect	text36
  7102  0003                     __ptext36:	
  7103 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  7104 ;; Defined at:
  7105 ;;		line 136 in file "mcc_generated_files/tmr6.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;		None
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  1    wreg      void 
  7112 ;; Registers used:
  7113 ;;		None
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7119 ;;      Params:         0       0       0       0       0       0
  7120 ;;      Locals:         0       0       0       0       0       0
  7121 ;;      Temps:          0       0       0       0       0       0
  7122 ;;      Totals:         0       0       0       0       0       0
  7123 ;;Total ram usage:        0 bytes
  7124 ;; Hardware stack levels used: 1
  7125 ;; This function calls:
  7126 ;;		Nothing
  7127 ;; This function is called by:
  7128 ;;		_TMR6_Initialize
  7129 ;;		_TMR6_ISR
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           
  7134                           ;psect for function _TMR6_DefaultInterruptHandler
  7135  0003                     _TMR6_DefaultInterruptHandler:
  7136  0003                     i1l46:	
  7137                           ;incstack = 0
  7138                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  7139                           
  7140  0003  0008               	return
  7141  0004                     __end_of_TMR6_DefaultInterruptHandler:
  7142                           
  7143                           	psect	text37
  7144  0ED8                     __ptext37:	
  7145 ;; *************** function _ADC_ISR *****************
  7146 ;; Defined at:
  7147 ;;		line 145 in file "mcc_generated_files/adc.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;		None
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;		None
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  1    wreg      void 
  7154 ;; Registers used:
  7155 ;;		wreg, status,2, status,0, pclath, cstack
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/0
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7161 ;;      Params:         0       0       0       0       0       0
  7162 ;;      Locals:         0       0       0       0       0       0
  7163 ;;      Temps:          0       0       0       0       0       0
  7164 ;;      Totals:         0       0       0       0       0       0
  7165 ;;Total ram usage:        0 bytes
  7166 ;; Hardware stack levels used: 1
  7167 ;; Hardware stack levels required when called: 2
  7168 ;; This function calls:
  7169 ;;		Absolute function
  7170 ;;		_ADC_DefaultInterruptHandler
  7171 ;;		_Interrupcion_ADC
  7172 ;; This function is called by:
  7173 ;;		_INTERRUPT_InterruptManager
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           
  7178                           ;psect for function _ADC_ISR
  7179  0ED8                     _ADC_ISR:
  7180  0ED8                     i1l2391:	
  7181                           ;incstack = 0
  7182                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
  7183                           
  7184                           
  7185                           ;mcc_generated_files/adc.c: 148:     PIR1bits.ADIF = 0;
  7186  0ED8  0020               	movlb	0	; select bank0
  7187  0ED9  1311               	bcf	17,6	;volatile
  7188  0EDA                     i1l2393:
  7189                           
  7190                           ;mcc_generated_files/adc.c: 150:  if(ADC_InterruptHandler)
  7191  0EDA  0021               	movlb	1	; select bank1
  7192  0EDB  083E               	movf	_ADC_InterruptHandler^(0+128),w
  7193  0EDC  043F               	iorwf	(_ADC_InterruptHandler+1)^(0+128),w
  7194  0EDD  1903               	btfsc	3,2
  7195  0EDE  2EE0               	goto	u175_21
  7196  0EDF  2EE1               	goto	u175_20
  7197  0EE0                     u175_21:
  7198  0EE0  2EE6               	goto	i1l212
  7199  0EE1                     u175_20:
  7200  0EE1                     i1l2395:
  7201                           
  7202                           ;mcc_generated_files/adc.c: 151:     {;mcc_generated_files/adc.c: 152:         ADC_Inter
      +                          ruptHandler();
  7203  0EE1  083F               	movf	(_ADC_InterruptHandler+1)^(0+128),w
  7204  0EE2  008A               	movwf	10
  7205  0EE3  083E               	movf	_ADC_InterruptHandler^(0+128),w
  7206  0EE4  000A               	callw
  7207  0EE5  318E               	pagesel	$
  7208  0EE6                     i1l212:
  7209  0EE6  0008               	return
  7210  0EE7                     __end_of_ADC_ISR:
  7211                           
  7212                           	psect	text38
  7213  0002                     __ptext38:	
  7214 ;; *************** function _ADC_DefaultInterruptHandler *****************
  7215 ;; Defined at:
  7216 ;;		line 160 in file "mcc_generated_files/adc.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		None
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7230 ;;      Params:         0       0       0       0       0       0
  7231 ;;      Locals:         0       0       0       0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0
  7233 ;;      Totals:         0       0       0       0       0       0
  7234 ;;Total ram usage:        0 bytes
  7235 ;; Hardware stack levels used: 1
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_ADC_Initialize
  7240 ;;		_ADC_ISR
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           
  7245                           ;psect for function _ADC_DefaultInterruptHandler
  7246  0002                     _ADC_DefaultInterruptHandler:
  7247  0002                     i1l218:	
  7248                           ;incstack = 0
  7249                           ; Regs used in _ADC_DefaultInterruptHandler: []
  7250                           
  7251  0002  0008               	return
  7252  0003                     __end_of_ADC_DefaultInterruptHandler:
  7253                           
  7254                           	psect	text39
  7255  0ECB                     __ptext39:	
  7256 ;; *************** function _Interrupcion_ADC *****************
  7257 ;; Defined at:
  7258 ;;		line 14 in file "main.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;		None
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;		None
  7263 ;; Return value:  Size  Location     Type
  7264 ;;                  1    wreg      void 
  7265 ;; Registers used:
  7266 ;;		wreg, pclath, cstack
  7267 ;; Tracked objects:
  7268 ;;		On entry : 0/0
  7269 ;;		On exit  : 0/0
  7270 ;;		Unchanged: 0/0
  7271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7272 ;;      Params:         0       0       0       0       0       0
  7273 ;;      Locals:         0       0       0       0       0       0
  7274 ;;      Temps:          1       0       0       0       0       0
  7275 ;;      Totals:         1       0       0       0       0       0
  7276 ;;Total ram usage:        1 bytes
  7277 ;; Hardware stack levels used: 1
  7278 ;; Hardware stack levels required when called: 1
  7279 ;; This function calls:
  7280 ;;		_ADC_GetConversionResult
  7281 ;; This function is called by:
  7282 ;;		_main
  7283 ;;		_ADC_ISR
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           
  7288                           ;psect for function _Interrupcion_ADC
  7289  0ECB                     _Interrupcion_ADC:
  7290  0ECB                     i1l2073:	
  7291                           ;incstack = 0
  7292                           ; Regs used in _Interrupcion_ADC: [wreg+pclath+cstack]
  7293                           
  7294                           
  7295                           ;main.c: 15:  num_ADC = ADC_GetConversionResult();
  7296  0ECB  318E  267F  318E   	fcall	_ADC_GetConversionResult
  7297  0ECE  0871               	movf	?_ADC_GetConversionResult+1,w
  7298  0ECF  0021               	movlb	1	; select bank1
  7299  0ED0  00BD               	movwf	(_num_ADC+1)^(0+128)	;volatile
  7300  0ED1  0870               	movf	?_ADC_GetConversionResult,w
  7301  0ED2  00BC               	movwf	_num_ADC^(0+128)	;volatile
  7302  0ED3                     i1l2075:
  7303                           
  7304                           ;main.c: 16:  ADC_flag = 1;
  7305  0ED3  3001               	movlw	1
  7306  0ED4  00F2               	movwf	??_Interrupcion_ADC
  7307  0ED5  0872               	movf	??_Interrupcion_ADC,w
  7308  0ED6  00FA               	movwf	_ADC_flag	;volatile
  7309  0ED7                     i1l334:
  7310  0ED7  0008               	return
  7311  0ED8                     __end_of_Interrupcion_ADC:
  7312                           
  7313                           	psect	text40
  7314  0E7F                     __ptext40:	
  7315 ;; *************** function _ADC_GetConversionResult *****************
  7316 ;; Defined at:
  7317 ;;		line 111 in file "mcc_generated_files/adc.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;		None
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;		None
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  2    0[COMMON] unsigned short 
  7324 ;; Registers used:
  7325 ;;		wreg
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7331 ;;      Params:         2       0       0       0       0       0
  7332 ;;      Locals:         0       0       0       0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0
  7334 ;;      Totals:         2       0       0       0       0       0
  7335 ;;Total ram usage:        2 bytes
  7336 ;; Hardware stack levels used: 1
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_Interrupcion_ADC
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           
  7345                           ;psect for function _ADC_GetConversionResult
  7346  0E7F                     _ADC_GetConversionResult:
  7347  0E7F                     i1l2003:	
  7348                           ;incstack = 0
  7349                           ; Regs used in _ADC_GetConversionResult: [wreg]
  7350                           
  7351                           
  7352                           ;mcc_generated_files/adc.c: 114:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7353  0E7F  0021               	movlb	1	; select bank1
  7354  0E80  081C               	movf	28,w	;volatile
  7355  0E81  00F1               	movwf	?_ADC_GetConversionResult+1
  7356  0E82  081B               	movf	27,w	;volatile
  7357  0E83  00F0               	movwf	?_ADC_GetConversionResult
  7358  0E84                     i1l199:
  7359  0E84  0008               	return
  7360  0E85                     __end_of_ADC_GetConversionResult:
  7361  007E                     btemp	set	126	;btemp
  7362  007E                     int$flags	set	126
  7363  007E                     wtemp0	set	126
  7364                           
  7365                           	psect	config
  7366                           
  7367                           ;Config register CONFIG1 @ 0x8007
  7368                           ;	Oscillator Selection
  7369                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7370                           ;	Watchdog Timer Enable
  7371                           ;	WDTE = ON, WDT enabled
  7372                           ;	Power-up Timer Enable
  7373                           ;	PWRTE = OFF, PWRT disabled
  7374                           ;	MCLR Pin Function Select
  7375                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7376                           ;	Flash Program Memory Code Protection
  7377                           ;	CP = OFF, Program memory code protection is disabled
  7378                           ;	Data Memory Code Protection
  7379                           ;	CPD = OFF, Data memory code protection is disabled
  7380                           ;	Brown-out Reset Enable
  7381                           ;	BOREN = ON, Brown-out Reset enabled
  7382                           ;	Clock Out Enable
  7383                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7384                           ;	Internal/External Switchover
  7385                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7386                           ;	Fail-Safe Clock Monitor Enable
  7387                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7388  8007                     	org	32775
  7389  8007  3FFC               	dw	16380
  7390                           
  7391                           ;Config register CONFIG2 @ 0x8008
  7392                           ;	Flash Memory Self-Write Protection
  7393                           ;	WRT = OFF, Write protection off
  7394                           ;	PLL Enable
  7395                           ;	PLLEN = ON, 4x PLL enabled
  7396                           ;	Stack Overflow/Underflow Reset Enable
  7397                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7398                           ;	Brown-out Reset Voltage Selection
  7399                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7400                           ;	Low-Voltage Programming Enable
  7401                           ;	LVP = ON, Low-voltage programming enabled
  7402  8008                     	org	32776
  7403  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     56      56
    BANK1            80     28      41
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    Tm_Baje_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK1[9]), 

    Tm_Hubo_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK1[9]), 

    Tm_Procese_tiempo@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK1[9]), 

    Tm_Inicie_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK1[9]), 

    Ds_Procese_displays@dsp	PTR struct Ds_Display size(1) Largest target is 8
		 -> main@seven_seg(BANK1[8]), 

    Ds_Convertir_en_uni@dsp	PTR struct Ds_Display size(1) Largest target is 8
		 -> main@seven_seg(BANK1[8]), 

    Ds_Iniciar_displays@dsp	PTR struct Ds_Display size(1) Largest target is 8
		 -> main@seven_seg(BANK1[8]), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_ADC(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_ADC(), ADC_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_timer(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_timer(), Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_Ds_Iniciar_displays
    _main->_Ds_Procese_displays
    _main->_Tm_Procese_tiempo
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _Ds_Procese_displays->_Ds_BCD
    _Ds_Convertir_en_uni->___lwdiv
    _Ds_Convertir_en_uni->___lwmod
    _Ds_Conversor_ADC->___xxtofl
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR6_ISR->_Interrupcion_timer
    _ADC_ISR->_Interrupcion_ADC
    _Interrupcion_ADC->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_Ds_Conversor_ADC
    _Ds_Convertir_en_uni->___lwdiv
    _Ds_Conversor_ADC->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   11974
                                             55 BANK0      1     1      0
                                              0 BANK1     28    28      0
                     _ADC_Initialize
            _ADC_SetInterruptHandler
                _ADC_StartConversion
                             _Ds_BCD
                   _Ds_Conversor_ADC
                _Ds_Convertir_en_uni
                   _Ds_Encienda_Disp
                _Ds_Iniciar_displays
                _Ds_Procese_displays
                       _EUSART_Write
                 _EUSART_is_tx_ready
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
                  _Tm_Baje_periodico
                  _Tm_Hubo_periodico
                _Tm_Inicie_periodico
                  _Tm_Procese_tiempo
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (1) _Tm_Procese_tiempo                                    5     5      0     315
                                              3 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Tm_Inicie_periodico                                  4     2      2     281
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Hubo_periodico                                    1     1      0      67
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Tm_Baje_periodico                                    2     2      0      67
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     785
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (1) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     211
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     211
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     211
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_ready                                   1     1      0      37
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Procese_displays                                  3     3      0    1245
                                              6 COMMON     2     2      0
                                              0 BANK0      1     1      0
                             _Ds_BCD
                   _Ds_Encienda_Disp
 ---------------------------------------------------------------------------------
 (2) _Ds_Encienda_Disp                                     1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Ds_BCD                                               3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Iniciar_displays                                  7     2      5     951
                                              3 COMMON     5     0      5
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Convertir_en_uni                                  4     2      2    1753
                                              3 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     772
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Conversor_ADC                                     8     6      2    4535
                                             47 BANK0      8     6      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     427
                                             36 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3353
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                            _ADC_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
                 _Interrupcion_timer *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Interrupcion_timer                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
                   Absolute function *
        _ADC_DefaultInterruptHandler *
                   _Interrupcion_ADC *
 ---------------------------------------------------------------------------------
 (6) _Interrupcion_ADC                                     1     1      0       0
                                              2 COMMON     1     1      0
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (7) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
     _ADC_SetInterruptHandler
   _ADC_SetInterruptHandler
   _ADC_StartConversion
   _Ds_BCD
   _Ds_Conversor_ADC
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Ds_Convertir_en_uni
     ___lwdiv
     ___lwmod
   _Ds_Encienda_Disp
   _Ds_Iniciar_displays
   _Ds_Procese_displays
     _Ds_BCD
     _Ds_Encienda_Disp
   _EUSART_Write
   _EUSART_is_tx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _TMR6_SetInterruptHandler
   _TMR6_StartTimer
   _Tm_Baje_periodico
   _Tm_Hubo_periodico
   _Tm_Inicie_periodico
   _Tm_Procese_tiempo
   _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
     _Interrupcion_ADC *
       _ADC_GetConversionResult
   _TMR6_ISR
     Absolute function(Fake) *
     _Interrupcion_timer *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     38      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1C      29       8       51.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      6C      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Sep 10 02:56:39 2021

                  __end_of_Ds_Convertir_en_uni 072B                                             l21 0F27  
                                           l24 0E79                                             l43 0EA2  
                                           l71 07F9                              ??_TMR6_StartTimer 0073  
                         ??_Interrupcion_timer 0070                            __Umul8_16@word_mpld 0022  
                                          l122 0F04                                            l141 0EAC  
                                          l117 0F7B                                            l215 0E8A  
                                          l400 0571                                            l144 0EB4  
                                          l410 0576                                            l402 0572  
                                          l162 0E90                                            l243 0F3A  
                                          l500 05AC                                            l404 0573  
                                          l156 0E96                                            l252 0E76  
                                          l421 057D                                            l413 0578  
                                          l430 0583                                            l406 0574  
                                          l246 0EC5                                            l511 05B3  
                                          l503 05AE                                            l423 057E  
                                          l415 057A                                            l159 0E9C  
                                          l520 05B9                                            l440 0588  
                                          l432 0584                                            l408 0575  
                                          l193 0E73                                            l513 05B4  
                                          l505 05B0                                            l425 057F  
                                          l417 057B                                            l249 0ECA  
                                          l362 0769                                            l530 05BE  
                                          l522 05BA                                            l434 0585  
                                          l602 0FC6                                            l515 05B5  
                                          l507 05B1                                            l451 058F  
                                          l443 058A                                            l419 057C  
                                          l371 0560                                            l187 0F14  
                                          l611 0F58                                            l524 05BB  
                                          l460 0595                                            l436 0586  
                                          l428 0581                                            l604 0FC8  
                                          l620 0EAA                                            l541 05C5  
                                          l533 05C0                                            l509 05B2  
                                          l453 0590                                            l445 058C  
                                          l373 0561                                            l550 072A  
                                          l526 05BC                                            l518 05B7  
                                          l470 059A                                            l462 0596  
                                          l438 0587                                            l606 0FC9  
                                          l543 05C6                                            l535 05C2  
                                          l455 0591                                            l447 058D  
                                          l391 056B                                            l383 0566  
                                          l375 0562                                            l367 055D  
                                          l623 0EBE                                            l528 05BD  
                                          l464 0597                                            l608 0FCA  
                                          l553 07E3                                            l545 05C7  
                                          l537 05C3                                            l481 05A1  
                                          l473 059C                                            l449 058E  
                                          l393 056C                                            l385 0568  
                                          l377 0563                                            l369 055F  
                                          l617 06CC                                            l490 05A7  
                                          l466 0598                                            l458 0593  
                                          l539 05C4                                            l483 05A2  
                                          l475 059E                                            l395 056D  
                                          l387 0569                                            l547 05F7  
                                          l379 0564                                            l492 05A8  
                                          l468 0599                                            l580 0FA8  
                                          l485 05A3                                            l477 059F  
                                          l389 056A                                            l494 05A9  
                                          l398 056F                                            l590 0FB4  
                                          l582 0FA9                                            l574 03BD  
                                          l479 05A0                                            l496 05AA  
                                          l488 05A5                                            l498 05AB  
                                          l594 0FBC                                            l586 0FB1  
                                          l578 0FA6                                            l596 0FBE  
                                          l588 0FB3                                            l598 0FBF  
                                          l981 066C                                            l991 066C  
                                          l988 0657                                            _PR6 041D  
                              __end_of_ADC_ISR 0EE7                 ?_EUSART_SetFramingErrorHandler 0073  
              __end_of_ADC_SetInterruptHandler 0E8B                                            wreg 0009  
                                 ___flmul@aexp 0038                                   ___flmul@bexp 003D  
                 ?_ADC_DefaultInterruptHandler 0070                                   ___flmul@sign 0037  
                                 ___flmul@temp 0042                                   ___flmul@prod 003E  
                                 ___fltol@exp1 004E                                           l1203 0F8F  
                                         l1205 0F9F                                           l1230 055A  
                                         l3001 027F                                           l1241 0526  
                                         l1242 0532                                           l1234 050C  
                                         l3003 0287                                           l3011 04B9  
                                         l1067 07A6                                           l1228 04D1  
                                         l3021 04E7                                           l3013 04C9  
                                         l1077 0FFF                                           l3101 067F  
                                         l1190 020B                                           l3031 0513  
                                         l3023 04F2                                           l3015 04D9  
                                         l3007 04B0                                           l3111 0292  
                                         l3103 0688                                           l1184 028F  
                                         l3041 0548                                           l3033 051C  
                                         l3025 04F9                                           l3009 04B5  
                                         l3121 02B9                                           l3113 0293  
                                         l3105 068D                                           l3201 03BE  
                                         l3043 054D                                           l3035 0520  
                                         l3027 04FD                                           l3019 04E2  
                                         l3131 02E9                                           l3123 02C2  
                                         l3115 02A2                                           l3051 0E77  
                                         l3107 0698                                           l3211 03C6  
                                         l3203 03C1                                           l1196 0283  
                                         l3045 0551                                           l3037 052A  
                                         l3029 0505                                           l3141 0319  
                                         l3133 02F8                                           l3125 02D1  
                                         l3117 02A9                                           l3061 0F03  
                                         l3053 0EF6                                           l3109 06AC  
                                         l3221 03D3                                           l3213 03C6  
                                         l3205 03C4                                           l3047 0552  
                                         l3039 0534                                           l3151 034F  
                                         l3143 0328                                           l3135 02FF  
                                         l3127 02D8                                           l3119 02B5  
                                         l3055 0EF7                                           l3071 0F28  
                                         l3231 03F0                                           l3223 03D7  
                                         l3215 03C8                                           l3207 03C5  
                                         l3161 037F                                           l3153 0356  
                                         l3145 032F                                           l3137 030B  
                                         l3129 02E4                                           l3065 0EAC  
                                         l3057 0EFC                                           l3073 0F2E  
                                         l3081 0F3C                                           l3241 0408  
                                         l3233 03F7                                           l3225 03DA  
                                         l3217 03C8                                           l3209 03C6  
                                         l3091 0751                                           l3083 072D  
                                         l3163 0384                                           l3155 0362  
                                         l3147 033B                                           l3139 030F  
                                         l3171 039E                                           l3067 0EB1  
                                         l3059 0F01                                           l3075 0F31  
                                         l3251 041C                                           l3243 040C  
                                         l3235 03FE                                           l3227 03DC  
                                         l3219 03D0                                           l3069 0E71  
                                         l2701 0F80                                           l3093 0759  
                                         l3085 0739                                           l3165 0390  
                                         l3157 0366                                           l3149 0340  
                                         l3077 0F34                                           l3261 0444  
                                         l3253 0421                                           l3245 0415  
                                         l3237 0403                                           l3229 03ED  
                                         l2703 0F87                                           l3095 0761  
                                         l3087 0741                                           l3351 03A9  
                                         l3167 0395                                           l3159 0370  
                                         l3079 0F37                                           l3183 0EB6  
                                         l3271 045C                                           l3255 0422  
                                         l3263 0447                                           l3247 0419  
                                         l3239 0404                                           l2705 0F8B  
                                         l3185 07A7                                           l3193 06CF  
                                         l3089 0749                                           l3353 05D1  
                                         l3169 0399                                           l2721 0F1D  
                                         l2713 0F15                                           l3097 066E  
                                         l3281 047B                                           l3273 0463  
                                         l3257 0427                                           l3249 041C  
                                         l2707 0F96                                           l3187 07B0  
                                         l3195 06E2                                           l2731 07EC  
                                         l2723 0F24                                           l2715 0F18  
                                         l3179 0EA4                                           l3099 0676  
                                         l3283 0480                                           l3275 046A  
                                         l3267 044E                                           l3291 0494  
                                         l3259 0439                                           l2709 0F9B  
                                         l2901 0086                                           l2813 064E  
                                         l2805 0637                                           l3189 07DF  
                                         l2821 076D                                           l3197 06F2  
                                         l2741 0F6B                                           l2733 07EF  
                                         l2725 07E4                                           l2717 0F19  
                                         l3285 0485                                           l3277 0470  
                                         l3269 0456                                           l3293 049C  
                                         l2911 00A1                                           l2903 008E  
                                         l2815 065C                                           l2807 0647  
                                         l2831 0783                                           l2823 0773  
                                         l3199 0716                                           l2751 0F09  
                                         l2743 0F72                                           l2735 07F4  
                                         l2727 07E7                                           l2719 0F1B  
                                         l3295 04A1                                           l3287 048A  
                                         l3279 0476                                           l2921 00FC  
                                         l2913 00AE                                           l2905 0093  
                                         l2817 0661                                           l2833 0792  
                                         l2825 0776                                           l2841 07A2  
                                         l2753 0F0C                                           l2745 0F79  
                                         l2737 0F59                                           l2761 0EC3  
                                         l2729 07EA                                           l3297 04A2  
                                         l3289 048F                                           l2931 0131  
                                         l2923 0109                                           l2915 00BB  
                                         l2907 0098                                           l2835 0796  
                                         l2827 077B                                           l2819 076A  
                                         l2851 0FDA                                           l2755 0F0D  
                                         l2747 0F05                                           l2691 0E91  
                                         l2739 0F64                                           l2763 0E74  
                                         l3299 04A6                                           l2941 0174  
                                         l2933 013E                                           l2925 0116  
                                         l2917 00D5                                           l2837 0797  
                                         l2829 077F                                           l2861 0FF5  
                                         l2853 0FDE                                           l2845 0FCB  
                                         l2765 055C                                           l2781 0FC1  
                                         l2749 0F08                                           l2693 0E97  
                                         l2757 0EBF                                           l2951 01C8  
                                         l2943 0181                                           l2935 0145  
                                         l2927 011D                                           l2919 00E2  
                                         l2871 0043                                           l2791 0620  
                                         l2783 05F8                                           l2839 079C  
                                         l2855 0FE2                                           l2847 0FD1  
                                         l2863 0FFB                                           l2775 0FA1  
                                         l2695 0E8B                                           l2759 0EC2  
                                         l2961 01E7                                           l2953 01D4  
                                         l2945 0195                                           l2937 0159  
                                         l2929 012A                                           l2881 005A  
                                         l2873 0047                                           l2793 0621  
                                         l2785 0604                                           l2857 0FEC  
                                         l2849 0FD5                                           l2769 05C9  
                                         l2777 0FAB                                           l2697 0E85  
                                         l2689 0E9D                                           l2699 0F7E  
                                         l2971 0208                                           l2955 01DB  
                                         l2963 01EB                                           l2947 01AA  
                                         l2939 0160                                           l2891 0071  
                                         l2883 005C                                           l2875 0048  
                                         l2867 0039                                           l2795 0629  
                                         l2859 0FF0                                           l2779 0FB6  
                                         l2981 0221                                           l2965 01EF  
                                         l2957 01DF                                           l2949 01C1  
                                         l2893 0072                                           l2885 0064  
                                         l2877 004D                                           l2869 003F  
                                         l2797 062B                                           l2789 060D  
                                         l2991 0262                                           l2983 0239  
                                         l2975 0210                                           l2967 01F0  
                                         l2959 01E0                                           l2895 0077  
                                         l2887 0069                                           l2879 0052  
                                         l2799 062F                                           l2993 026B  
                                         l2977 0215                                           l2985 023D  
                                         l2969 01F4                                           l2897 007C  
                                         l2889 006D                                           l2995 026D  
                                         l2987 024A                                           l2979 021D  
                                         l2899 0084                                           l2997 027A  
                                         l2989 0254                                           l2999 027E  
                                         u2000 0F9B                                           u2001 0F9A  
                                         u2010 0ECA                                           u2011 0EC9  
                                         u2020 0FA6                                           u2021 0FA5  
                                         u2110 0646                                           u2030 0FB1  
                                         u2111 0645                                           u2031 0FB0  
                                         u2120 064D                                           u2200 0792  
                                         u2040 0FBC                                           u2121 064C  
                                         u2105 0638                                           u2201 0791  
                                         u2041 0FBB                                           u2050 0FC6  
                                         u2051 0FC5                                           u2300 004D  
                                         u2140 065C                                           u2060 0604  
                                         u2220 07A2                                           u2301 004C  
                                         u2141 065B                                           u2061 0603  
                                         u2221 07A1                                           u2205 078E  
                                         _LATA 010C                                           u2310 0052  
                                         u2150 0661                                           u2070 061A  
                                         u2230 0FD1                                           _LATB 010D  
                                         u2311 0051                                           u2151 0660  
                                         u2135 064F                                           u2215 0798  
                                         u2231 0FD0                                           u2400 01B7  
                                         u2320 0071                                           u2080 062F  
                                         u2160 0773                                           u2321 0070  
                                         u2081 062E                                           u2161 0772  
                                         u2330 0077                                           u2090 0636  
                                         u2250 0FE2                                           u2331 0076  
                                         u2091 0635                                           u2075 0616  
                                         u2251 0FE1                                           u2500 0221  
                                         u2340 007C                                           u2180 0783  
                                         u2260 0FEC                                           u2501 0220  
                                         u2405 01B3                                           u2341 007B  
                                         u2181 0782                                           u2261 0FEB  
                                         u2245 0FD6                                           u2510 022F  
                                         u2430 01DF                                           u2350 0093  
                                         u2431 01DE                                           u2415 01C2  
                                         u2351 0092                                           u2175 0777  
                                         u2520 024A                                           u2360 0098  
                                         u2280 0FFB                                           u2521 0249  
                                         u2425 01D5                                           u2361 0097  
                                         u2281 0FFA                                           u2265 0FE8  
                                         u2530 0262                                           u2450 01EF  
                                         u2290 0047                                           u2610 0512  
                                         u2531 0261                                           u2515 022B  
                                         u2451 01EE                                           u2291 0046  
                                         u2611 0511                                           u2195 0784  
                                         u2275 0FF1                                           u2540 027E  
                                         u2460 01F4                                           u2700 0F01  
                                         u2541 027D                                           u2525 0246  
                                         u2461 01F3                                           u2445 01E1  
                                         u2605 0506                                           u2701 0F00  
                                         u2470 0208                                           u2390 01A0  
                                         u2630 0520                                           u2550 04B5  
                                         u2710 0EB1                                           u2535 025E  
                                         u2471 0207                                           u2375 0117  
                                         u2631 051F                                           u2551 04B4  
                                         u2711 0EB0                                           u2480 020F  
                                         u2640 0526                                           u2560 04B9  
                                         u2800 037F                                           u2720 0676  
                                         u2481 020E                                           u2385 0146  
                                         u2641 0525                                           u2625 0516  
                                         u2561 04B8                                           u2801 037E  
                                         u2721 0675                                           u2490 0215  
                                         u2650 052A                                           u2570 04D9  
                                         u2730 0688                                           u2810 0403  
                                         u2491 0214                                           u2395 019C  
                                         u2651 0529                                           u2571 04D8  
                                         u2731 0687                                           u2811 0402  
                                         u2660 053E                                           u2740 06AC  
                                         u2820 0415                                           u2741 06AB  
                                         u2821 0414                                           u2670 054D  
                                         u2590 04F8                                           u2750 02A2  
                                         u2830 0421                                           u2671 054C  
                                         u2591 04F7                                           u2751 02A1  
                                         u2831 0420                                           u2680 0551  
                                         u2760 02D1                                           u2840 044D  
                                         u2681 0550                                           u2665 053A  
                                         u2585 04EC                                           u2761 02D0  
                                         u2841 044C                                           u2770 02F8  
                                         u2690 0EFC                                           u2850 049C  
                                         u2771 02F7                                           u2691 0EFB  
                                         u2851 049B                                           u1980 0F8B  
                                         u2780 0328                                           u2860 04A1  
                                         u1981 0F8A                                           u2781 0327  
                                         u2861 04A0                                           u2790 034F  
                                         u2791 034E                                           i1l40 0EF5  
                                         u1995 0F90                                           i1l46 0003  
                                         _PLLR 04D6                                           _TMR6 041C  
                   Ds_Convertir_en_uni@voltaje 0023                                           _WPUA 020C  
                                         _WPUB 020D                                           _main 03BE  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                       __end_of_Ds_Conversor_ADC 07E4  
                      Ds_Encienda_Disp@dispNum 0073                                           start 0028  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 000C  
                __end_of_OSCILLATOR_Initialize 0ECB                                  ___fltol@sign1 004D  
                                        ?_main 0070                                __end_of___flmul 0290  
                              __end_of___fltol 066D                                          _T6CON 041E  
                              __end_of___lwdiv 07A7                                          i1l212 0EE6  
                                        i1l218 0002                                          i1l334 0ED7  
                                        i1l272 0018                                          i1l337 0E7E  
                                        i1l273 0026                                __end_of___lwmod 1000  
                                        i1l277 0026                                          i1l199 0E84  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
             __size_of_ADC_GetConversionResult 0006                              ?_Ds_Encienda_Disp 0070  
            __size_of_TMR6_SetInterruptHandler 0006                                 Ds_BCD@segmento 0075  
                    ?_TMR6_SetInterruptHandler 0073                               __end_of_TMR6_ISR 0EF6  
                           ??_Ds_Encienda_Disp 0073                                 _WDT_Initialize 0E74  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                   main@volt_ADC 00A2  
                  __end_of_Tm_Inicie_periodico 0F59                 ??_TMR6_DefaultInterruptHandler 0070  
                              __initialization 002A                            _Ds_Procese_displays 0290  
                                 __end_of_main 04AE                              _Tm_Baje_periodico 0EB5  
                               ??_EUSART_Write 0073                                      ??_ADC_ISR 0073  
                  ?_INTERRUPT_InterruptManager 0070                             ?_Tm_Baje_periodico 0070  
                                       ??_main 0057                   __size_of_Ds_Iniciar_displays 003F  
                       __end_of_WDT_Initialize 0E77                                _TMR6_Initialize 0F15  
                          ??_Tm_Baje_periodico 0073                           ?_Ds_Procese_displays 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 00C2  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         i1l2003 0E7F  
                                       i1l2073 0ECB                                         i1l2075 0ED3  
                                       i1l2077 0E7A                                         i1l2371 0EF0  
                                       i1l2541 000F                                         i1l2391 0ED8  
                                       i1l2367 0EE7                                         i1l2543 0014  
                                       i1l2393 0EDA                                         i1l2369 0EE9  
                                       i1l2545 001D                                         i1l2537 0006  
                                       i1l2395 0EE1                                         i1l2547 0022  
                                       i1l2539 000A                                         u171_20 0EF0  
                                       u171_21 0EEF                     __end_of_EUSART_is_tx_ready 0F05  
                                       u190_20 001D                                         u190_21 001C  
                                       u175_20 0EE1                                         u191_20 0022  
                                       u175_21 0EE0                                         u191_21 0021  
                                       u187_20 000A                                         u187_21 0009  
                                       u188_20 000F                                         u188_21 000E  
                                       u189_20 0014                                         u189_21 0013  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             __end_of___xxtofl 055B                                         _Ds_BCD 055B  
                    __end_of_Tm_Baje_periodico 0EBF           __size_of_ADC_DefaultInterruptHandler 0001  
             __size_of_ADC_SetInterruptHandler 0006                                      ??___flmul 0032  
                                    ??___fltol 0048                              _Tm_Hubo_periodico 0EA3  
                                    ??___lwdiv 0077                                      ??___lwmod 0077  
                           ?_Tm_Hubo_periodico 0070                                  main@valor_ADC 00A0  
                                main@seven_seg 00B4                                  main@timer_1ms 00AB  
                           __size_of__Umul8_16 0024                                ?_WDT_Initialize 0070  
                        ??_Ds_Procese_displays 0076                            ??_Tm_Hubo_periodico 0073  
      ADC_SetInterruptHandler@InterruptHandler 0073       TMR6_SetInterruptHandler@InterruptHandler 0073  
                                 ___xxtofl@arg 0026                                   ___xxtofl@exp 0025  
                            _SYSTEM_Initialize 0F28                                   ___xxtofl@val 0073  
                      __end_of__initialization 0035                          Ds_Iniciar_displays@d1 0073  
                        Ds_Iniciar_displays@d2 0074                          Ds_Iniciar_displays@d3 0075  
                        Ds_Iniciar_displays@tA 0077                          Ds_Iniciar_displays@tE 0076  
                           ?_SYSTEM_Initialize 0070                                _TMR6_StartTimer 0E77  
                                   ___fltol@f1 0044                      __end_of_Tm_Hubo_periodico 0EAB  
                 __size_of_ADC_StartConversion 0003                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0075                                      ?_TMR6_ISR 0070  
                      __end_of_TMR6_Initialize 0F28                      __size_of_Interrupcion_ADC 000D  
                      _ADC_GetConversionResult 0E7F                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0075                      __end_of_SYSTEM_Initialize 0F3B  
                                   __pbssBANK1 00BC                           __end_of_EUSART_Write 0EB5  
                                      ?_Ds_BCD 0070                              ?_Ds_Conversor_ADC 004F  
                            __end_of__Umul8_16 0FA0                                     __pmaintext 03BE  
                           ??_Ds_Conversor_ADC 0077                     __size_of_Tm_Baje_periodico 000A  
             __end_of_TMR6_SetInterruptHandler 0EA3                                     ??_TMR6_ISR 0071  
                                   __pintentry 0004                                        _ADC_ISR 0ED8  
                                      _BAUDCON 019F                                        _APFCON0 011D  
                                      _APFCON1 011E                    __size_of_Interrupcion_timer 0005  
                      __size_of_ADC_Initialize 0010                                      ?___xxtofl 0073  
                 __size_of_Ds_Convertir_en_uni 005E                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0075                        __end_of_TMR6_StartTimer 0E7A  
                            _Tm_Procese_tiempo 066D                             ?_Tm_Procese_tiempo 0070  
                          _Ds_Iniciar_displays 072B                                __size_of_Ds_BCD 009D  
                    __size_of_Ds_Encienda_Disp 002B                           _ADC_InterruptHandler 00BE  
                      _ADC_SetInterruptHandler 0E85                            ??_Tm_Procese_tiempo 0073  
                   __size_of_Tm_Hubo_periodico 0008                                        ___flmul 0039  
                                      ___fltol 05F8                                        ___lwdiv 076A  
                                      ___lwmod 0FCB                      ??_ADC_GetConversionResult 0072  
                             ?_TMR6_Initialize 0070                                        __ptext1 066D  
                                      __ptext2 0F3B                                        __ptext3 0EA3  
                                      __ptext4 0EB5                                        __ptext5 0E77  
                                      __ptext6 0F28                                        __ptext7 0E74  
                                      __ptext8 0F15                                        __ptext9 0E9D  
                         ?_Ds_Iniciar_displays 0073                          _OSCILLATOR_Initialize 0EBF  
                                   ??___xxtofl 0020                                        _num_ADC 00BC  
                     ??_PIN_MANAGER_Initialize 0073                      __end_of_Tm_Procese_tiempo 06CD  
                                    _T6CONbits 041E                     __size_of_SYSTEM_Initialize 0013  
                                      clrloop0 07FB                           end_of_initialization 0035  
                    Ds_Conversor_ADC@pendiente 0051          __end_of_EUSART_SetOverrunErrorHandler 0E9D  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0E97  
                       Ds_Procese_displays@dsp 0020                              _EUSART_Initialize 0F59  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                       Ds_Conversor_ADC@adcOUT 004F                                     _sleep_flag 0078  
                           _EUSART_is_tx_ready 0EF6                   __size_of_Tm_Inicie_periodico 001E  
                          ??_EUSART_Initialize 0075                               ??_WDT_Initialize 0073  
                                   _timer_flag 0079                          ??_Ds_Iniciar_displays 0020  
                             _Interrupcion_ADC 0ECB                       _TMR6_SetInterruptHandler 0E9D  
                          ?_EUSART_is_tx_ready 0070            __end_of_ADC_DefaultInterruptHandler 0003  
                  _ADC_DefaultInterruptHandler 0002                                  ___xxtofl@sign 0024  
                        __size_of_EUSART_Write 000A                            _ADC_StartConversion 0E71  
                       Ds_Iniciar_displays@dsp 0021                __size_of_EUSART_SetErrorHandler 0006  
                             ?_TMR6_StartTimer 0070                                    ___flmul@grs 0039  
                    __end_of_EUSART_Initialize 0F7C                  ??_ADC_DefaultInterruptHandler 0070  
                    ??_ADC_SetInterruptHandler 0075                           ??_EUSART_is_tx_ready 0073  
                                    _TXSTAbits 019E                                 __end_of_Ds_BCD 05F8  
                         ?_ADC_StartConversion 0070                     _EUSART_DefaultErrorHandler 0000  
                                 _EUSART_Write 0EAB                    __end_of_Ds_Procese_displays 03BE  
                               _ADC_Initialize 0F05                              __size_of_TMR6_ISR 000F  
                       ?_OSCILLATOR_Initialize 0070                           Tm_Procese_tiempo@ctp 0077  
                          start_initialization 002A                     __size_of_Tm_Procese_tiempo 0060  
              __size_of_PIN_MANAGER_Initialize 0016                         _EUSART_is_tx_ready$336 0073  
                                     ??_Ds_BCD 0073                               _Ds_Encienda_Disp 0FA0  
                          _Ds_Convertir_en_uni 06CD                 ?_EUSART_SetOverrunErrorHandler 0073  
                        ??_ADC_StartConversion 0073                         Tm_Inicie_periodico@ctp 0076  
                   _EUSART_FramingErrorHandler 00C4                         _EUSART_SetErrorHandler 0E8B  
                       __end_of_ADC_Initialize 0F15                                      __Umul8_16 0F7C  
                                     ?_ADC_ISR 0070                      __size_of_Ds_Conversor_ADC 003D  
                         ?_Ds_Convertir_en_uni 0023                                      ___flmul@a 002E  
                                    ___flmul@b 002A                                    __pbssCOMMON 0078  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                              __size_of___xxtofl 00AD  
                   __size_of_EUSART_Initialize 0023                          _TMR6_InterruptHandler 00C6  
                             ___lwdiv@dividend 0075                         _PIN_MANAGER_Initialize 07E4  
                   __end_of_Interrupcion_timer 0E7F                                       ?___flmul 002A  
                                     ?___fltol 0044                                     ?__Umul8_16 0073  
                                     ?___lwdiv 0073                                       ?___lwmod 0073  
                              ?_ADC_Initialize 0070                   ??_INTERRUPT_InterruptManager 0073  
                        ??_Ds_Convertir_en_uni 0025                                       _ADC_flag 007A  
                             ___lwdiv@quotient 0021                            _Tm_Inicie_periodico 0F3B  
                     __end_of_Interrupcion_ADC 0ED8                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0073                                       _LATBbits 010D  
                                    clear_ram0 07FA                                       _PIE1bits 0091  
                                     _PIE3bits 0093                              _eusartRxLastError 00C8  
          __size_of_INTERRUPT_InterruptManager 0024                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0075                                       _PIR3bits 0013  
                   ??_TMR6_SetInterruptHandler 0075                           ?_Tm_Inicie_periodico 0073  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR6_ISR 0EE7  
                             __size_of_ADC_ISR 000F                                     _ADCON0bits 009D  
                     __size_of_TMR6_Initialize 0013                       ?_ADC_GetConversionResult 0070  
                       Ds_Convertir_en_uni@dsp 0026                          ??_Tm_Inicie_periodico 0075  
                  __end_of_Ds_Iniciar_displays 076A                        ??_OSCILLATOR_Initialize 0073  
                                  ??__Umul8_16 0075                            _EUSART_ErrorHandler 00C0  
                             __size_of___flmul 0257                               __size_of___fltol 0075  
                             __size_of___lwdiv 003D                               __size_of___lwmod 0035  
                             _Ds_Conversor_ADC 07A7                       __end_of_Ds_Encienda_Disp 0FCB  
                   Tm_Inicie_periodico@periodo 0073                                       ___xxtofl 04AE  
                              ___lwdiv@divisor 0073                                ___lwdiv@counter 0020  
                                     __ptext10 07E4                                       __ptext11 0EBF  
                                     __ptext20 0290                                       __ptext12 0F59  
                                     __ptext21 0FA0                                       __ptext13 0E97  
                                     __ptext30 0039                                       __ptext22 055B  
                                     __ptext14 0E91                                       __ptext31 0F7C  
                                     __ptext23 072B                                       __ptext15 0E8B  
                                     __ptext40 0E7F                                       __ptext32 0E71  
                                     __ptext24 06CD                                       __ptext16 0F05  
                                     __ptext25 0FCB                                       __ptext17 0E85  
                                     __ptext34 0EE7                                       __ptext26 076A  
                                     __ptext18 0EF6                                       __ptext35 0E7A  
                                     __ptext27 07A7                                       __ptext19 0EAB  
                                     __ptext36 0003                                       __ptext28 04AE  
                                     __ptext37 0ED8                                       __ptext29 05F8  
                                     __ptext38 0002                                       __ptext39 0ECB  
                                __size_of_main 00F0                    __size_of_EUSART_is_tx_ready 000F  
                      ?_EUSART_SetErrorHandler 0073                           Tm_Baje_periodico@ctp 0074  
                     __size_of_TMR6_StartTimer 0003  EUSART_SetOverrunErrorHandler@interruptHandler 0073  
                                     int$flags 007E                                       main@Pack 00A5  
           __end_of_INTERRUPT_InterruptManager 0028                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0E97         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0E91                                     _INTCONbits 000B  
                 __size_of_Ds_Procese_displays 012E                           Tm_Hubo_periodico@ctp 0073  
         __end_of_TMR6_DefaultInterruptHandler 0004          __size_of_TMR6_DefaultInterruptHandler 0001  
                 _TMR6_DefaultInterruptHandler 0003                       ?_ADC_SetInterruptHandler 0073  
                      __size_of_WDT_Initialize 0003                                       intlevel1 0000  
                          main@EnviarPorSerial 00A4                    __end_of_ADC_StartConversion 0E74  
                             ___lwmod@dividend 0075                        ?_PIN_MANAGER_Initialize 0070  
                            ??_TMR6_Initialize 0075                __end_of_ADC_GetConversionResult 0E85  
               __end_of_EUSART_SetErrorHandler 0E91                               ??_ADC_Initialize 0075  
EUSART_SetFramingErrorHandler@interruptHandler 0073                         __Umul8_16@multiplicand 0073  
                              ___lwmod@divisor 0073                                ___lwmod@counter 0020  
                           _Interrupcion_timer 0E7A                        Ds_Conversor_ADC@voltios 0055  
                           EUSART_Write@txData 0073                 __end_of_PIN_MANAGER_Initialize 07FA  
                ?_TMR6_DefaultInterruptHandler 0070                            ?_Interrupcion_timer 0070  
                         __Umul8_16@multiplier 0024                              ?_Interrupcion_ADC 0070  
                           ??_Interrupcion_ADC 0072                              __Umul8_16@product 0020  
