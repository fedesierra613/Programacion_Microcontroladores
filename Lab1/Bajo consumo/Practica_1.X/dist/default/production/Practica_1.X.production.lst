

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Sep 10 15:45:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1827 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011D                     	;# 
   147  011E                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0199                     	;# 
   160  019A                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  019C                     	;# 
   167  019D                     	;# 
   168  019E                     	;# 
   169  019F                     	;# 
   170  020C                     	;# 
   171  020D                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0212                     	;# 
   176  0213                     	;# 
   177  0213                     	;# 
   178  0214                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0216                     	;# 
   184  0216                     	;# 
   185  0217                     	;# 
   186  0217                     	;# 
   187  0219                     	;# 
   188  021A                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0295                     	;# 
   200  0295                     	;# 
   201  0296                     	;# 
   202  0298                     	;# 
   203  0298                     	;# 
   204  0299                     	;# 
   205  029A                     	;# 
   206  029B                     	;# 
   207  029C                     	;# 
   208  029C                     	;# 
   209  029D                     	;# 
   210  029E                     	;# 
   211  029E                     	;# 
   212  0311                     	;# 
   213  0311                     	;# 
   214  0312                     	;# 
   215  0313                     	;# 
   216  0318                     	;# 
   217  0318                     	;# 
   218  0319                     	;# 
   219  031A                     	;# 
   220  0394                     	;# 
   221  0395                     	;# 
   222  0396                     	;# 
   223  039A                     	;# 
   224  039C                     	;# 
   225  039D                     	;# 
   226  039E                     	;# 
   227  039F                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  041C                     	;# 
   232  041D                     	;# 
   233  041E                     	;# 
   234  0FE4                     	;# 
   235  0FE5                     	;# 
   236  0FE6                     	;# 
   237  0FE7                     	;# 
   238  0FE8                     	;# 
   239  0FE9                     	;# 
   240  0FEA                     	;# 
   241  0FEB                     	;# 
   242  0FED                     	;# 
   243  0FEE                     	;# 
   244  0FEF                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  0111                     	;# 
   294  0112                     	;# 
   295  0113                     	;# 
   296  0114                     	;# 
   297  0115                     	;# 
   298  0116                     	;# 
   299  0117                     	;# 
   300  0118                     	;# 
   301  0119                     	;# 
   302  011A                     	;# 
   303  011B                     	;# 
   304  011D                     	;# 
   305  011E                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0191                     	;# 
   309  0191                     	;# 
   310  0192                     	;# 
   311  0193                     	;# 
   312  0193                     	;# 
   313  0193                     	;# 
   314  0194                     	;# 
   315  0195                     	;# 
   316  0196                     	;# 
   317  0199                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019C                     	;# 
   324  019C                     	;# 
   325  019D                     	;# 
   326  019E                     	;# 
   327  019F                     	;# 
   328  020C                     	;# 
   329  020D                     	;# 
   330  0211                     	;# 
   331  0211                     	;# 
   332  0212                     	;# 
   333  0212                     	;# 
   334  0213                     	;# 
   335  0213                     	;# 
   336  0214                     	;# 
   337  0214                     	;# 
   338  0215                     	;# 
   339  0215                     	;# 
   340  0215                     	;# 
   341  0216                     	;# 
   342  0216                     	;# 
   343  0217                     	;# 
   344  0217                     	;# 
   345  0219                     	;# 
   346  021A                     	;# 
   347  021B                     	;# 
   348  021C                     	;# 
   349  021D                     	;# 
   350  021E                     	;# 
   351  021F                     	;# 
   352  0291                     	;# 
   353  0291                     	;# 
   354  0292                     	;# 
   355  0293                     	;# 
   356  0294                     	;# 
   357  0295                     	;# 
   358  0295                     	;# 
   359  0296                     	;# 
   360  0298                     	;# 
   361  0298                     	;# 
   362  0299                     	;# 
   363  029A                     	;# 
   364  029B                     	;# 
   365  029C                     	;# 
   366  029C                     	;# 
   367  029D                     	;# 
   368  029E                     	;# 
   369  029E                     	;# 
   370  0311                     	;# 
   371  0311                     	;# 
   372  0312                     	;# 
   373  0313                     	;# 
   374  0318                     	;# 
   375  0318                     	;# 
   376  0319                     	;# 
   377  031A                     	;# 
   378  0394                     	;# 
   379  0395                     	;# 
   380  0396                     	;# 
   381  039A                     	;# 
   382  039C                     	;# 
   383  039D                     	;# 
   384  039E                     	;# 
   385  039F                     	;# 
   386  0415                     	;# 
   387  0416                     	;# 
   388  0417                     	;# 
   389  041C                     	;# 
   390  041D                     	;# 
   391  041E                     	;# 
   392  0FE4                     	;# 
   393  0FE5                     	;# 
   394  0FE6                     	;# 
   395  0FE7                     	;# 
   396  0FE8                     	;# 
   397  0FE9                     	;# 
   398  0FEA                     	;# 
   399  0FEB                     	;# 
   400  0FED                     	;# 
   401  0FEE                     	;# 
   402  0FEF                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  008C                     	;# 
   433  008D                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  0111                     	;# 
   452  0112                     	;# 
   453  0113                     	;# 
   454  0114                     	;# 
   455  0115                     	;# 
   456  0116                     	;# 
   457  0117                     	;# 
   458  0118                     	;# 
   459  0119                     	;# 
   460  011A                     	;# 
   461  011B                     	;# 
   462  011D                     	;# 
   463  011E                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466  0191                     	;# 
   467  0191                     	;# 
   468  0192                     	;# 
   469  0193                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0194                     	;# 
   473  0195                     	;# 
   474  0196                     	;# 
   475  0199                     	;# 
   476  019A                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019C                     	;# 
   482  019C                     	;# 
   483  019D                     	;# 
   484  019E                     	;# 
   485  019F                     	;# 
   486  020C                     	;# 
   487  020D                     	;# 
   488  0211                     	;# 
   489  0211                     	;# 
   490  0212                     	;# 
   491  0212                     	;# 
   492  0213                     	;# 
   493  0213                     	;# 
   494  0214                     	;# 
   495  0214                     	;# 
   496  0215                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0216                     	;# 
   500  0216                     	;# 
   501  0217                     	;# 
   502  0217                     	;# 
   503  0219                     	;# 
   504  021A                     	;# 
   505  021B                     	;# 
   506  021C                     	;# 
   507  021D                     	;# 
   508  021E                     	;# 
   509  021F                     	;# 
   510  0291                     	;# 
   511  0291                     	;# 
   512  0292                     	;# 
   513  0293                     	;# 
   514  0294                     	;# 
   515  0295                     	;# 
   516  0295                     	;# 
   517  0296                     	;# 
   518  0298                     	;# 
   519  0298                     	;# 
   520  0299                     	;# 
   521  029A                     	;# 
   522  029B                     	;# 
   523  029C                     	;# 
   524  029C                     	;# 
   525  029D                     	;# 
   526  029E                     	;# 
   527  029E                     	;# 
   528  0311                     	;# 
   529  0311                     	;# 
   530  0312                     	;# 
   531  0313                     	;# 
   532  0318                     	;# 
   533  0318                     	;# 
   534  0319                     	;# 
   535  031A                     	;# 
   536  0394                     	;# 
   537  0395                     	;# 
   538  0396                     	;# 
   539  039A                     	;# 
   540  039C                     	;# 
   541  039D                     	;# 
   542  039E                     	;# 
   543  039F                     	;# 
   544  0415                     	;# 
   545  0416                     	;# 
   546  0417                     	;# 
   547  041C                     	;# 
   548  041D                     	;# 
   549  041E                     	;# 
   550  0FE4                     	;# 
   551  0FE5                     	;# 
   552  0FE6                     	;# 
   553  0FE7                     	;# 
   554  0FE8                     	;# 
   555  0FE9                     	;# 
   556  0FEA                     	;# 
   557  0FEB                     	;# 
   558  0FED                     	;# 
   559  0FEE                     	;# 
   560  0FEF                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0008                     	;# 
   570  0009                     	;# 
   571  000A                     	;# 
   572  000B                     	;# 
   573  000C                     	;# 
   574  000D                     	;# 
   575  0011                     	;# 
   576  0012                     	;# 
   577  0013                     	;# 
   578  0014                     	;# 
   579  0015                     	;# 
   580  0016                     	;# 
   581  0016                     	;# 
   582  0017                     	;# 
   583  0018                     	;# 
   584  0019                     	;# 
   585  001A                     	;# 
   586  001B                     	;# 
   587  001C                     	;# 
   588  001E                     	;# 
   589  001F                     	;# 
   590  008C                     	;# 
   591  008D                     	;# 
   592  0091                     	;# 
   593  0092                     	;# 
   594  0093                     	;# 
   595  0094                     	;# 
   596  0095                     	;# 
   597  0096                     	;# 
   598  0097                     	;# 
   599  0098                     	;# 
   600  0099                     	;# 
   601  009A                     	;# 
   602  009B                     	;# 
   603  009B                     	;# 
   604  009C                     	;# 
   605  009D                     	;# 
   606  009E                     	;# 
   607  010C                     	;# 
   608  010D                     	;# 
   609  0111                     	;# 
   610  0112                     	;# 
   611  0113                     	;# 
   612  0114                     	;# 
   613  0115                     	;# 
   614  0116                     	;# 
   615  0117                     	;# 
   616  0118                     	;# 
   617  0119                     	;# 
   618  011A                     	;# 
   619  011B                     	;# 
   620  011D                     	;# 
   621  011E                     	;# 
   622  018C                     	;# 
   623  018D                     	;# 
   624  0191                     	;# 
   625  0191                     	;# 
   626  0192                     	;# 
   627  0193                     	;# 
   628  0193                     	;# 
   629  0193                     	;# 
   630  0194                     	;# 
   631  0195                     	;# 
   632  0196                     	;# 
   633  0199                     	;# 
   634  019A                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019C                     	;# 
   640  019C                     	;# 
   641  019D                     	;# 
   642  019E                     	;# 
   643  019F                     	;# 
   644  020C                     	;# 
   645  020D                     	;# 
   646  0211                     	;# 
   647  0211                     	;# 
   648  0212                     	;# 
   649  0212                     	;# 
   650  0213                     	;# 
   651  0213                     	;# 
   652  0214                     	;# 
   653  0214                     	;# 
   654  0215                     	;# 
   655  0215                     	;# 
   656  0215                     	;# 
   657  0216                     	;# 
   658  0216                     	;# 
   659  0217                     	;# 
   660  0217                     	;# 
   661  0219                     	;# 
   662  021A                     	;# 
   663  021B                     	;# 
   664  021C                     	;# 
   665  021D                     	;# 
   666  021E                     	;# 
   667  021F                     	;# 
   668  0291                     	;# 
   669  0291                     	;# 
   670  0292                     	;# 
   671  0293                     	;# 
   672  0294                     	;# 
   673  0295                     	;# 
   674  0295                     	;# 
   675  0296                     	;# 
   676  0298                     	;# 
   677  0298                     	;# 
   678  0299                     	;# 
   679  029A                     	;# 
   680  029B                     	;# 
   681  029C                     	;# 
   682  029C                     	;# 
   683  029D                     	;# 
   684  029E                     	;# 
   685  029E                     	;# 
   686  0311                     	;# 
   687  0311                     	;# 
   688  0312                     	;# 
   689  0313                     	;# 
   690  0318                     	;# 
   691  0318                     	;# 
   692  0319                     	;# 
   693  031A                     	;# 
   694  0394                     	;# 
   695  0395                     	;# 
   696  0396                     	;# 
   697  039A                     	;# 
   698  039C                     	;# 
   699  039D                     	;# 
   700  039E                     	;# 
   701  039F                     	;# 
   702  0415                     	;# 
   703  0416                     	;# 
   704  0417                     	;# 
   705  041C                     	;# 
   706  041D                     	;# 
   707  041E                     	;# 
   708  0FE4                     	;# 
   709  0FE5                     	;# 
   710  0FE6                     	;# 
   711  0FE7                     	;# 
   712  0FE8                     	;# 
   713  0FE9                     	;# 
   714  0FEA                     	;# 
   715  0FEB                     	;# 
   716  0FED                     	;# 
   717  0FEE                     	;# 
   718  0FEF                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0008                     	;# 
   728  0009                     	;# 
   729  000A                     	;# 
   730  000B                     	;# 
   731  000C                     	;# 
   732  000D                     	;# 
   733  0011                     	;# 
   734  0012                     	;# 
   735  0013                     	;# 
   736  0014                     	;# 
   737  0015                     	;# 
   738  0016                     	;# 
   739  0016                     	;# 
   740  0017                     	;# 
   741  0018                     	;# 
   742  0019                     	;# 
   743  001A                     	;# 
   744  001B                     	;# 
   745  001C                     	;# 
   746  001E                     	;# 
   747  001F                     	;# 
   748  008C                     	;# 
   749  008D                     	;# 
   750  0091                     	;# 
   751  0092                     	;# 
   752  0093                     	;# 
   753  0094                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0098                     	;# 
   758  0099                     	;# 
   759  009A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  0111                     	;# 
   768  0112                     	;# 
   769  0113                     	;# 
   770  0114                     	;# 
   771  0115                     	;# 
   772  0116                     	;# 
   773  0117                     	;# 
   774  0118                     	;# 
   775  0119                     	;# 
   776  011A                     	;# 
   777  011B                     	;# 
   778  011D                     	;# 
   779  011E                     	;# 
   780  018C                     	;# 
   781  018D                     	;# 
   782  0191                     	;# 
   783  0191                     	;# 
   784  0192                     	;# 
   785  0193                     	;# 
   786  0193                     	;# 
   787  0193                     	;# 
   788  0194                     	;# 
   789  0195                     	;# 
   790  0196                     	;# 
   791  0199                     	;# 
   792  019A                     	;# 
   793  019B                     	;# 
   794  019B                     	;# 
   795  019B                     	;# 
   796  019B                     	;# 
   797  019C                     	;# 
   798  019C                     	;# 
   799  019D                     	;# 
   800  019E                     	;# 
   801  019F                     	;# 
   802  020C                     	;# 
   803  020D                     	;# 
   804  0211                     	;# 
   805  0211                     	;# 
   806  0212                     	;# 
   807  0212                     	;# 
   808  0213                     	;# 
   809  0213                     	;# 
   810  0214                     	;# 
   811  0214                     	;# 
   812  0215                     	;# 
   813  0215                     	;# 
   814  0215                     	;# 
   815  0216                     	;# 
   816  0216                     	;# 
   817  0217                     	;# 
   818  0217                     	;# 
   819  0219                     	;# 
   820  021A                     	;# 
   821  021B                     	;# 
   822  021C                     	;# 
   823  021D                     	;# 
   824  021E                     	;# 
   825  021F                     	;# 
   826  0291                     	;# 
   827  0291                     	;# 
   828  0292                     	;# 
   829  0293                     	;# 
   830  0294                     	;# 
   831  0295                     	;# 
   832  0295                     	;# 
   833  0296                     	;# 
   834  0298                     	;# 
   835  0298                     	;# 
   836  0299                     	;# 
   837  029A                     	;# 
   838  029B                     	;# 
   839  029C                     	;# 
   840  029C                     	;# 
   841  029D                     	;# 
   842  029E                     	;# 
   843  029E                     	;# 
   844  0311                     	;# 
   845  0311                     	;# 
   846  0312                     	;# 
   847  0313                     	;# 
   848  0318                     	;# 
   849  0318                     	;# 
   850  0319                     	;# 
   851  031A                     	;# 
   852  0394                     	;# 
   853  0395                     	;# 
   854  0396                     	;# 
   855  039A                     	;# 
   856  039C                     	;# 
   857  039D                     	;# 
   858  039E                     	;# 
   859  039F                     	;# 
   860  0415                     	;# 
   861  0416                     	;# 
   862  0417                     	;# 
   863  041C                     	;# 
   864  041D                     	;# 
   865  041E                     	;# 
   866  0FE4                     	;# 
   867  0FE5                     	;# 
   868  0FE6                     	;# 
   869  0FE7                     	;# 
   870  0FE8                     	;# 
   871  0FE9                     	;# 
   872  0FEA                     	;# 
   873  0FEB                     	;# 
   874  0FED                     	;# 
   875  0FEE                     	;# 
   876  0FEF                     	;# 
   877  0000                     	;# 
   878  0001                     	;# 
   879  0002                     	;# 
   880  0003                     	;# 
   881  0004                     	;# 
   882  0005                     	;# 
   883  0006                     	;# 
   884  0007                     	;# 
   885  0008                     	;# 
   886  0009                     	;# 
   887  000A                     	;# 
   888  000B                     	;# 
   889  000C                     	;# 
   890  000D                     	;# 
   891  0011                     	;# 
   892  0012                     	;# 
   893  0013                     	;# 
   894  0014                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0016                     	;# 
   898  0017                     	;# 
   899  0018                     	;# 
   900  0019                     	;# 
   901  001A                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001E                     	;# 
   905  001F                     	;# 
   906  008C                     	;# 
   907  008D                     	;# 
   908  0091                     	;# 
   909  0092                     	;# 
   910  0093                     	;# 
   911  0094                     	;# 
   912  0095                     	;# 
   913  0096                     	;# 
   914  0097                     	;# 
   915  0098                     	;# 
   916  0099                     	;# 
   917  009A                     	;# 
   918  009B                     	;# 
   919  009B                     	;# 
   920  009C                     	;# 
   921  009D                     	;# 
   922  009E                     	;# 
   923  010C                     	;# 
   924  010D                     	;# 
   925  0111                     	;# 
   926  0112                     	;# 
   927  0113                     	;# 
   928  0114                     	;# 
   929  0115                     	;# 
   930  0116                     	;# 
   931  0117                     	;# 
   932  0118                     	;# 
   933  0119                     	;# 
   934  011A                     	;# 
   935  011B                     	;# 
   936  011D                     	;# 
   937  011E                     	;# 
   938  018C                     	;# 
   939  018D                     	;# 
   940  0191                     	;# 
   941  0191                     	;# 
   942  0192                     	;# 
   943  0193                     	;# 
   944  0193                     	;# 
   945  0193                     	;# 
   946  0194                     	;# 
   947  0195                     	;# 
   948  0196                     	;# 
   949  0199                     	;# 
   950  019A                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019B                     	;# 
   954  019B                     	;# 
   955  019C                     	;# 
   956  019C                     	;# 
   957  019D                     	;# 
   958  019E                     	;# 
   959  019F                     	;# 
   960  020C                     	;# 
   961  020D                     	;# 
   962  0211                     	;# 
   963  0211                     	;# 
   964  0212                     	;# 
   965  0212                     	;# 
   966  0213                     	;# 
   967  0213                     	;# 
   968  0214                     	;# 
   969  0214                     	;# 
   970  0215                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0216                     	;# 
   974  0216                     	;# 
   975  0217                     	;# 
   976  0217                     	;# 
   977  0219                     	;# 
   978  021A                     	;# 
   979  021B                     	;# 
   980  021C                     	;# 
   981  021D                     	;# 
   982  021E                     	;# 
   983  021F                     	;# 
   984  0291                     	;# 
   985  0291                     	;# 
   986  0292                     	;# 
   987  0293                     	;# 
   988  0294                     	;# 
   989  0295                     	;# 
   990  0295                     	;# 
   991  0296                     	;# 
   992  0298                     	;# 
   993  0298                     	;# 
   994  0299                     	;# 
   995  029A                     	;# 
   996  029B                     	;# 
   997  029C                     	;# 
   998  029C                     	;# 
   999  029D                     	;# 
  1000  029E                     	;# 
  1001  029E                     	;# 
  1002  0311                     	;# 
  1003  0311                     	;# 
  1004  0312                     	;# 
  1005  0313                     	;# 
  1006  0318                     	;# 
  1007  0318                     	;# 
  1008  0319                     	;# 
  1009  031A                     	;# 
  1010  0394                     	;# 
  1011  0395                     	;# 
  1012  0396                     	;# 
  1013  039A                     	;# 
  1014  039C                     	;# 
  1015  039D                     	;# 
  1016  039E                     	;# 
  1017  039F                     	;# 
  1018  0415                     	;# 
  1019  0416                     	;# 
  1020  0417                     	;# 
  1021  041C                     	;# 
  1022  041D                     	;# 
  1023  041E                     	;# 
  1024  0FE4                     	;# 
  1025  0FE5                     	;# 
  1026  0FE6                     	;# 
  1027  0FE7                     	;# 
  1028  0FE8                     	;# 
  1029  0FE9                     	;# 
  1030  0FEA                     	;# 
  1031  0FEB                     	;# 
  1032  0FED                     	;# 
  1033  0FEE                     	;# 
  1034  0FEF                     	;# 
  1035  0000                     	;# 
  1036  0001                     	;# 
  1037  0002                     	;# 
  1038  0003                     	;# 
  1039  0004                     	;# 
  1040  0005                     	;# 
  1041  0006                     	;# 
  1042  0007                     	;# 
  1043  0008                     	;# 
  1044  0009                     	;# 
  1045  000A                     	;# 
  1046  000B                     	;# 
  1047  000C                     	;# 
  1048  000D                     	;# 
  1049  0011                     	;# 
  1050  0012                     	;# 
  1051  0013                     	;# 
  1052  0014                     	;# 
  1053  0015                     	;# 
  1054  0016                     	;# 
  1055  0016                     	;# 
  1056  0017                     	;# 
  1057  0018                     	;# 
  1058  0019                     	;# 
  1059  001A                     	;# 
  1060  001B                     	;# 
  1061  001C                     	;# 
  1062  001E                     	;# 
  1063  001F                     	;# 
  1064  008C                     	;# 
  1065  008D                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0093                     	;# 
  1069  0094                     	;# 
  1070  0095                     	;# 
  1071  0096                     	;# 
  1072  0097                     	;# 
  1073  0098                     	;# 
  1074  0099                     	;# 
  1075  009A                     	;# 
  1076  009B                     	;# 
  1077  009B                     	;# 
  1078  009C                     	;# 
  1079  009D                     	;# 
  1080  009E                     	;# 
  1081  010C                     	;# 
  1082  010D                     	;# 
  1083  0111                     	;# 
  1084  0112                     	;# 
  1085  0113                     	;# 
  1086  0114                     	;# 
  1087  0115                     	;# 
  1088  0116                     	;# 
  1089  0117                     	;# 
  1090  0118                     	;# 
  1091  0119                     	;# 
  1092  011A                     	;# 
  1093  011B                     	;# 
  1094  011D                     	;# 
  1095  011E                     	;# 
  1096  018C                     	;# 
  1097  018D                     	;# 
  1098  0191                     	;# 
  1099  0191                     	;# 
  1100  0192                     	;# 
  1101  0193                     	;# 
  1102  0193                     	;# 
  1103  0193                     	;# 
  1104  0194                     	;# 
  1105  0195                     	;# 
  1106  0196                     	;# 
  1107  0199                     	;# 
  1108  019A                     	;# 
  1109  019B                     	;# 
  1110  019B                     	;# 
  1111  019B                     	;# 
  1112  019B                     	;# 
  1113  019C                     	;# 
  1114  019C                     	;# 
  1115  019D                     	;# 
  1116  019E                     	;# 
  1117  019F                     	;# 
  1118  020C                     	;# 
  1119  020D                     	;# 
  1120  0211                     	;# 
  1121  0211                     	;# 
  1122  0212                     	;# 
  1123  0212                     	;# 
  1124  0213                     	;# 
  1125  0213                     	;# 
  1126  0214                     	;# 
  1127  0214                     	;# 
  1128  0215                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0216                     	;# 
  1132  0216                     	;# 
  1133  0217                     	;# 
  1134  0217                     	;# 
  1135  0219                     	;# 
  1136  021A                     	;# 
  1137  021B                     	;# 
  1138  021C                     	;# 
  1139  021D                     	;# 
  1140  021E                     	;# 
  1141  021F                     	;# 
  1142  0291                     	;# 
  1143  0291                     	;# 
  1144  0292                     	;# 
  1145  0293                     	;# 
  1146  0294                     	;# 
  1147  0295                     	;# 
  1148  0295                     	;# 
  1149  0296                     	;# 
  1150  0298                     	;# 
  1151  0298                     	;# 
  1152  0299                     	;# 
  1153  029A                     	;# 
  1154  029B                     	;# 
  1155  029C                     	;# 
  1156  029C                     	;# 
  1157  029D                     	;# 
  1158  029E                     	;# 
  1159  029E                     	;# 
  1160  0311                     	;# 
  1161  0311                     	;# 
  1162  0312                     	;# 
  1163  0313                     	;# 
  1164  0318                     	;# 
  1165  0318                     	;# 
  1166  0319                     	;# 
  1167  031A                     	;# 
  1168  0394                     	;# 
  1169  0395                     	;# 
  1170  0396                     	;# 
  1171  039A                     	;# 
  1172  039C                     	;# 
  1173  039D                     	;# 
  1174  039E                     	;# 
  1175  039F                     	;# 
  1176  0415                     	;# 
  1177  0416                     	;# 
  1178  0417                     	;# 
  1179  041C                     	;# 
  1180  041D                     	;# 
  1181  041E                     	;# 
  1182  0FE4                     	;# 
  1183  0FE5                     	;# 
  1184  0FE6                     	;# 
  1185  0FE7                     	;# 
  1186  0FE8                     	;# 
  1187  0FE9                     	;# 
  1188  0FEA                     	;# 
  1189  0FEB                     	;# 
  1190  0FED                     	;# 
  1191  0FEE                     	;# 
  1192  0FEF                     	;# 
  1193  0000                     	;# 
  1194  0001                     	;# 
  1195  0002                     	;# 
  1196  0003                     	;# 
  1197  0004                     	;# 
  1198  0005                     	;# 
  1199  0006                     	;# 
  1200  0007                     	;# 
  1201  0008                     	;# 
  1202  0009                     	;# 
  1203  000A                     	;# 
  1204  000B                     	;# 
  1205  000C                     	;# 
  1206  000D                     	;# 
  1207  0011                     	;# 
  1208  0012                     	;# 
  1209  0013                     	;# 
  1210  0014                     	;# 
  1211  0015                     	;# 
  1212  0016                     	;# 
  1213  0016                     	;# 
  1214  0017                     	;# 
  1215  0018                     	;# 
  1216  0019                     	;# 
  1217  001A                     	;# 
  1218  001B                     	;# 
  1219  001C                     	;# 
  1220  001E                     	;# 
  1221  001F                     	;# 
  1222  008C                     	;# 
  1223  008D                     	;# 
  1224  0091                     	;# 
  1225  0092                     	;# 
  1226  0093                     	;# 
  1227  0094                     	;# 
  1228  0095                     	;# 
  1229  0096                     	;# 
  1230  0097                     	;# 
  1231  0098                     	;# 
  1232  0099                     	;# 
  1233  009A                     	;# 
  1234  009B                     	;# 
  1235  009B                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009E                     	;# 
  1239  010C                     	;# 
  1240  010D                     	;# 
  1241  0111                     	;# 
  1242  0112                     	;# 
  1243  0113                     	;# 
  1244  0114                     	;# 
  1245  0115                     	;# 
  1246  0116                     	;# 
  1247  0117                     	;# 
  1248  0118                     	;# 
  1249  0119                     	;# 
  1250  011A                     	;# 
  1251  011B                     	;# 
  1252  011D                     	;# 
  1253  011E                     	;# 
  1254  018C                     	;# 
  1255  018D                     	;# 
  1256  0191                     	;# 
  1257  0191                     	;# 
  1258  0192                     	;# 
  1259  0193                     	;# 
  1260  0193                     	;# 
  1261  0193                     	;# 
  1262  0194                     	;# 
  1263  0195                     	;# 
  1264  0196                     	;# 
  1265  0199                     	;# 
  1266  019A                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019B                     	;# 
  1270  019B                     	;# 
  1271  019C                     	;# 
  1272  019C                     	;# 
  1273  019D                     	;# 
  1274  019E                     	;# 
  1275  019F                     	;# 
  1276  020C                     	;# 
  1277  020D                     	;# 
  1278  0211                     	;# 
  1279  0211                     	;# 
  1280  0212                     	;# 
  1281  0212                     	;# 
  1282  0213                     	;# 
  1283  0213                     	;# 
  1284  0214                     	;# 
  1285  0214                     	;# 
  1286  0215                     	;# 
  1287  0215                     	;# 
  1288  0215                     	;# 
  1289  0216                     	;# 
  1290  0216                     	;# 
  1291  0217                     	;# 
  1292  0217                     	;# 
  1293  0219                     	;# 
  1294  021A                     	;# 
  1295  021B                     	;# 
  1296  021C                     	;# 
  1297  021D                     	;# 
  1298  021E                     	;# 
  1299  021F                     	;# 
  1300  0291                     	;# 
  1301  0291                     	;# 
  1302  0292                     	;# 
  1303  0293                     	;# 
  1304  0294                     	;# 
  1305  0295                     	;# 
  1306  0295                     	;# 
  1307  0296                     	;# 
  1308  0298                     	;# 
  1309  0298                     	;# 
  1310  0299                     	;# 
  1311  029A                     	;# 
  1312  029B                     	;# 
  1313  029C                     	;# 
  1314  029C                     	;# 
  1315  029D                     	;# 
  1316  029E                     	;# 
  1317  029E                     	;# 
  1318  0311                     	;# 
  1319  0311                     	;# 
  1320  0312                     	;# 
  1321  0313                     	;# 
  1322  0318                     	;# 
  1323  0318                     	;# 
  1324  0319                     	;# 
  1325  031A                     	;# 
  1326  0394                     	;# 
  1327  0395                     	;# 
  1328  0396                     	;# 
  1329  039A                     	;# 
  1330  039C                     	;# 
  1331  039D                     	;# 
  1332  039E                     	;# 
  1333  039F                     	;# 
  1334  0415                     	;# 
  1335  0416                     	;# 
  1336  0417                     	;# 
  1337  041C                     	;# 
  1338  041D                     	;# 
  1339  041E                     	;# 
  1340  0FE4                     	;# 
  1341  0FE5                     	;# 
  1342  0FE6                     	;# 
  1343  0FE7                     	;# 
  1344  0FE8                     	;# 
  1345  0FE9                     	;# 
  1346  0FEA                     	;# 
  1347  0FEB                     	;# 
  1348  0FED                     	;# 
  1349  0FEE                     	;# 
  1350  0FEF                     	;# 
  1351  0000                     	;# 
  1352  0001                     	;# 
  1353  0002                     	;# 
  1354  0003                     	;# 
  1355  0004                     	;# 
  1356  0005                     	;# 
  1357  0006                     	;# 
  1358  0007                     	;# 
  1359  0008                     	;# 
  1360  0009                     	;# 
  1361  000A                     	;# 
  1362  000B                     	;# 
  1363  000C                     	;# 
  1364  000D                     	;# 
  1365  0011                     	;# 
  1366  0012                     	;# 
  1367  0013                     	;# 
  1368  0014                     	;# 
  1369  0015                     	;# 
  1370  0016                     	;# 
  1371  0016                     	;# 
  1372  0017                     	;# 
  1373  0018                     	;# 
  1374  0019                     	;# 
  1375  001A                     	;# 
  1376  001B                     	;# 
  1377  001C                     	;# 
  1378  001E                     	;# 
  1379  001F                     	;# 
  1380  008C                     	;# 
  1381  008D                     	;# 
  1382  0091                     	;# 
  1383  0092                     	;# 
  1384  0093                     	;# 
  1385  0094                     	;# 
  1386  0095                     	;# 
  1387  0096                     	;# 
  1388  0097                     	;# 
  1389  0098                     	;# 
  1390  0099                     	;# 
  1391  009A                     	;# 
  1392  009B                     	;# 
  1393  009B                     	;# 
  1394  009C                     	;# 
  1395  009D                     	;# 
  1396  009E                     	;# 
  1397  010C                     	;# 
  1398  010D                     	;# 
  1399  0111                     	;# 
  1400  0112                     	;# 
  1401  0113                     	;# 
  1402  0114                     	;# 
  1403  0115                     	;# 
  1404  0116                     	;# 
  1405  0117                     	;# 
  1406  0118                     	;# 
  1407  0119                     	;# 
  1408  011A                     	;# 
  1409  011B                     	;# 
  1410  011D                     	;# 
  1411  011E                     	;# 
  1412  018C                     	;# 
  1413  018D                     	;# 
  1414  0191                     	;# 
  1415  0191                     	;# 
  1416  0192                     	;# 
  1417  0193                     	;# 
  1418  0193                     	;# 
  1419  0193                     	;# 
  1420  0194                     	;# 
  1421  0195                     	;# 
  1422  0196                     	;# 
  1423  0199                     	;# 
  1424  019A                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019B                     	;# 
  1428  019B                     	;# 
  1429  019C                     	;# 
  1430  019C                     	;# 
  1431  019D                     	;# 
  1432  019E                     	;# 
  1433  019F                     	;# 
  1434  020C                     	;# 
  1435  020D                     	;# 
  1436  0211                     	;# 
  1437  0211                     	;# 
  1438  0212                     	;# 
  1439  0212                     	;# 
  1440  0213                     	;# 
  1441  0213                     	;# 
  1442  0214                     	;# 
  1443  0214                     	;# 
  1444  0215                     	;# 
  1445  0215                     	;# 
  1446  0215                     	;# 
  1447  0216                     	;# 
  1448  0216                     	;# 
  1449  0217                     	;# 
  1450  0217                     	;# 
  1451  0219                     	;# 
  1452  021A                     	;# 
  1453  021B                     	;# 
  1454  021C                     	;# 
  1455  021D                     	;# 
  1456  021E                     	;# 
  1457  021F                     	;# 
  1458  0291                     	;# 
  1459  0291                     	;# 
  1460  0292                     	;# 
  1461  0293                     	;# 
  1462  0294                     	;# 
  1463  0295                     	;# 
  1464  0295                     	;# 
  1465  0296                     	;# 
  1466  0298                     	;# 
  1467  0298                     	;# 
  1468  0299                     	;# 
  1469  029A                     	;# 
  1470  029B                     	;# 
  1471  029C                     	;# 
  1472  029C                     	;# 
  1473  029D                     	;# 
  1474  029E                     	;# 
  1475  029E                     	;# 
  1476  0311                     	;# 
  1477  0311                     	;# 
  1478  0312                     	;# 
  1479  0313                     	;# 
  1480  0318                     	;# 
  1481  0318                     	;# 
  1482  0319                     	;# 
  1483  031A                     	;# 
  1484  0394                     	;# 
  1485  0395                     	;# 
  1486  0396                     	;# 
  1487  039A                     	;# 
  1488  039C                     	;# 
  1489  039D                     	;# 
  1490  039E                     	;# 
  1491  039F                     	;# 
  1492  0415                     	;# 
  1493  0416                     	;# 
  1494  0417                     	;# 
  1495  041C                     	;# 
  1496  041D                     	;# 
  1497  041E                     	;# 
  1498  0FE4                     	;# 
  1499  0FE5                     	;# 
  1500  0FE6                     	;# 
  1501  0FE7                     	;# 
  1502  0FE8                     	;# 
  1503  0FE9                     	;# 
  1504  0FEA                     	;# 
  1505  0FEB                     	;# 
  1506  0FED                     	;# 
  1507  0FEE                     	;# 
  1508  0FEF                     	;# 
  1509                           
  1510 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1511  0000                     
  1512 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1513  0000                     
  1514 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1515  000B                     _INTCONbits	set	11
  1516  0011                     _PIR1bits	set	17
  1517  0013                     _PIR3bits	set	19
  1518  0097                     _WDTCON	set	151
  1519  0098                     _OSCTUNE	set	152
  1520  0099                     _OSCCON	set	153
  1521  009D                     _ADCON0bits	set	157
  1522  0091                     _PIE1bits	set	145
  1523  009D                     _ADCON0	set	157
  1524  009C                     _ADRESH	set	156
  1525  009B                     _ADRESL	set	155
  1526  009E                     _ADCON1	set	158
  1527  0095                     _OPTION_REGbits	set	149
  1528  008D                     _TRISB	set	141
  1529  008C                     _TRISA	set	140
  1530  0093                     _PIE3bits	set	147
  1531  04D6                     _PLLR	set	1238
  1532  010D                     _LATBbits	set	269
  1533  010C                     _LATAbits	set	268
  1534  0116                     _BORCON	set	278
  1535  011E                     _APFCON1	set	286
  1536  011D                     _APFCON0	set	285
  1537  010D                     _LATB	set	269
  1538  010C                     _LATA	set	268
  1539  019A                     _TXREG	set	410
  1540  0199                     _RCREG	set	409
  1541  019D                     _RCSTAbits	set	413
  1542  019E                     _TXSTAbits	set	414
  1543  019C                     _SPBRGH	set	412
  1544  019B                     _SPBRGL	set	411
  1545  019E                     _TXSTA	set	414
  1546  019D                     _RCSTA	set	413
  1547  019F                     _BAUDCON	set	415
  1548  018C                     _ANSELA	set	396
  1549  018D                     _ANSELB	set	397
  1550  020C                     _WPUA	set	524
  1551  020D                     _WPUB	set	525
  1552  041E                     _T6CONbits	set	1054
  1553  041E                     _T6CON	set	1054
  1554  041C                     _TMR6	set	1052
  1555  041D                     _PR6	set	1053
  1556                           
  1557                           	psect	cinit
  1558  002A                     start_initialization:	
  1559                           ; #config settings
  1560                           
  1561  002A                     __initialization:
  1562                           
  1563                           ; Clear objects allocated to COMMON
  1564  002A  01F8               	clrf	__pbssCOMMON& (0+127)
  1565  002B  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1566  002C  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1567                           
  1568                           ; Clear objects allocated to BANK1
  1569  002D  30BC               	movlw	low __pbssBANK1
  1570  002E  0084               	movwf	4
  1571  002F  3000               	movlw	high __pbssBANK1
  1572  0030  0085               	movwf	5
  1573  0031  300D               	movlw	13
  1574  0032  3187  2793  3180   	fcall	clear_ram0
  1575  0035                     end_of_initialization:	
  1576                           ;End of C runtime variable initialization code
  1577                           
  1578  0035                     __end_of__initialization:
  1579  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1580  0036  0020               	movlb	0
  1581  0037  3182  2A90         	ljmp	_main	;jump to C main() function
  1582                           
  1583                           	psect	bssCOMMON
  1584  0078                     __pbssCOMMON:
  1585  0078                     _sleep_flag:
  1586  0078                     	ds	1
  1587  0079                     _ADC_flag:
  1588  0079                     	ds	1
  1589  007A                     _eusartRxLastError:
  1590  007A                     	ds	1
  1591                           
  1592                           	psect	bssBANK1
  1593  00BC                     __pbssBANK1:
  1594  00BC                     _num_ADC:
  1595  00BC                     	ds	2
  1596  00BE                     _ADC_InterruptHandler:
  1597  00BE                     	ds	2
  1598  00C0                     _EUSART_ErrorHandler:
  1599  00C0                     	ds	2
  1600  00C2                     _EUSART_OverrunErrorHandler:
  1601  00C2                     	ds	2
  1602  00C4                     _EUSART_FramingErrorHandler:
  1603  00C4                     	ds	2
  1604  00C6                     _TMR6_InterruptHandler:
  1605  00C6                     	ds	2
  1606  00C8                     _timer_flag:
  1607  00C8                     	ds	1
  1608                           
  1609                           	psect	clrtext
  1610  0793                     clear_ram0:	
  1611                           ;	Called with FSR0 containing the base address, and
  1612                           ;	WREG with the size to clear
  1613                           
  1614  0793  0064               	clrwdt	;clear the watchdog before getting into this loop
  1615  0794                     clrloop0:
  1616  0794  0180               	clrf	0	;clear RAM location pointed to by FSR
  1617  0795  3101               	addfsr 0,1
  1618  0796  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1619  0797  2F94               	goto	clrloop0	;have we reached the end yet?
  1620  0798  3400               	retlw	0	;all done for this memory range, return
  1621                           
  1622                           	psect	cstackBANK1
  1623  00A0                     __pcstackBANK1:
  1624  00A0                     main@valor_ADC:
  1625                           
  1626                           ; 2 bytes @ 0x0
  1627  00A0                     	ds	2
  1628  00A2                     main@volt_ADC:
  1629                           
  1630                           ; 2 bytes @ 0x2
  1631  00A2                     	ds	3
  1632  00A5                     main@Pack:
  1633                           
  1634                           ; 6 bytes @ 0x5
  1635  00A5                     	ds	6
  1636  00AB                     main@timer_1ms:
  1637                           
  1638                           ; 9 bytes @ 0xB
  1639  00AB                     	ds	9
  1640  00B4                     main@seven_seg:
  1641                           
  1642                           ; 8 bytes @ 0x14
  1643  00B4                     	ds	8
  1644                           
  1645                           	psect	cstackCOMMON
  1646  0070                     __pcstackCOMMON:
  1647  0070                     ?_TMR6_DefaultInterruptHandler:
  1648  0070                     ??_TMR6_DefaultInterruptHandler:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0070                     ?_TMR6_CallBack:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0070                     ?_ADC_DefaultInterruptHandler:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0070                     ??_ADC_DefaultInterruptHandler:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0070                     ?_OSCILLATOR_Initialize:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0070                     ?_WDT_Initialize:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0070                     ?_Tm_Baje_periodico:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0070                     ?_Ds_BCD:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0070                     ?_Ds_Encienda_Disp:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0070                     ?_TMR6_Initialize:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0070                     ?_TMR6_StartTimer:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0070                     ?_TMR6_ISR:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0070                     ?_PIN_MANAGER_Initialize:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0070                     ?_EUSART_Initialize:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0070                     ?_EUSART_is_tx_ready:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0070                     ?_EUSART_Write:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0070                     ?_ADC_Initialize:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0070                     ?_ADC_StartConversion:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0070                     ?_ADC_ISR:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0070                     ?_SYSTEM_Initialize:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0070                     ?_INTERRUPT_InterruptManager:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0070                     ?_Interrupcion_ADC:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0070                     ?_Interrupcion_timer:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0070                     ??_Interrupcion_timer:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0070                     ?_main:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0070                     ?_ADC_GetConversionResult:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726                           
  1727                           ; 2 bytes @ 0x0
  1728  0070                     	ds	1
  1729  0071                     ??_TMR6_CallBack:
  1730  0071                     ??_TMR6_ISR:	
  1731                           ; 1 bytes @ 0x1
  1732                           
  1733                           
  1734                           ; 1 bytes @ 0x1
  1735  0071                     	ds	1
  1736  0072                     ??_ADC_GetConversionResult:
  1737  0072                     ??_Interrupcion_ADC:	
  1738                           ; 1 bytes @ 0x2
  1739                           
  1740                           
  1741                           ; 1 bytes @ 0x2
  1742  0072                     	ds	1
  1743  0073                     ?_TMR6_SetInterruptHandler:
  1744  0073                     ?_EUSART_SetFramingErrorHandler:	
  1745                           ; 1 bytes @ 0x3
  1746                           
  1747  0073                     ?_EUSART_SetOverrunErrorHandler:	
  1748                           ; 1 bytes @ 0x3
  1749                           
  1750  0073                     ?_EUSART_SetErrorHandler:	
  1751                           ; 1 bytes @ 0x3
  1752                           
  1753  0073                     ?_ADC_SetInterruptHandler:	
  1754                           ; 1 bytes @ 0x3
  1755                           
  1756  0073                     ??_OSCILLATOR_Initialize:	
  1757                           ; 1 bytes @ 0x3
  1758                           
  1759  0073                     ??_WDT_Initialize:	
  1760                           ; 1 bytes @ 0x3
  1761                           
  1762  0073                     ?_Tm_Inicie_periodico:	
  1763                           ; 1 bytes @ 0x3
  1764                           
  1765  0073                     ?_Ds_Iniciar_displays:	
  1766                           ; 1 bytes @ 0x3
  1767                           
  1768  0073                     ??_Tm_Baje_periodico:	
  1769                           ; 1 bytes @ 0x3
  1770                           
  1771  0073                     ??_Ds_BCD:	
  1772                           ; 1 bytes @ 0x3
  1773                           
  1774  0073                     ??_Ds_Encienda_Disp:	
  1775                           ; 1 bytes @ 0x3
  1776                           
  1777  0073                     ??_TMR6_StartTimer:	
  1778                           ; 1 bytes @ 0x3
  1779                           
  1780  0073                     ??_PIN_MANAGER_Initialize:	
  1781                           ; 1 bytes @ 0x3
  1782                           
  1783  0073                     ??_EUSART_is_tx_ready:	
  1784                           ; 1 bytes @ 0x3
  1785                           
  1786  0073                     ??_EUSART_Write:	
  1787                           ; 1 bytes @ 0x3
  1788                           
  1789  0073                     ??_ADC_StartConversion:	
  1790                           ; 1 bytes @ 0x3
  1791                           
  1792  0073                     ??_ADC_ISR:	
  1793                           ; 1 bytes @ 0x3
  1794                           
  1795  0073                     ??_INTERRUPT_InterruptManager:	
  1796                           ; 1 bytes @ 0x3
  1797                           
  1798  0073                     ?__Umul8_16:	
  1799                           ; 1 bytes @ 0x3
  1800                           
  1801  0073                     ?___lwdiv:	
  1802                           ; 2 bytes @ 0x3
  1803                           
  1804  0073                     ?___lwmod:	
  1805                           ; 2 bytes @ 0x3
  1806                           
  1807  0073                     ?___xxtofl:	
  1808                           ; 2 bytes @ 0x3
  1809                           
  1810  0073                     _EUSART_is_tx_ready$341:	
  1811                           ; 4 bytes @ 0x3
  1812                           
  1813  0073                     EUSART_Write@txData:	
  1814                           ; 1 bytes @ 0x3
  1815                           
  1816  0073                     Ds_Iniciar_displays@d1:	
  1817                           ; 1 bytes @ 0x3
  1818                           
  1819  0073                     Ds_Encienda_Disp@dispNum:	
  1820                           ; 1 bytes @ 0x3
  1821                           
  1822  0073                     __Umul8_16@multiplicand:	
  1823                           ; 1 bytes @ 0x3
  1824                           
  1825  0073                     TMR6_SetInterruptHandler@InterruptHandler:	
  1826                           ; 1 bytes @ 0x3
  1827                           
  1828  0073                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1829                           ; 2 bytes @ 0x3
  1830                           
  1831  0073                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1832                           ; 2 bytes @ 0x3
  1833                           
  1834  0073                     EUSART_SetErrorHandler@interruptHandler:	
  1835                           ; 2 bytes @ 0x3
  1836                           
  1837  0073                     ADC_SetInterruptHandler@InterruptHandler:	
  1838                           ; 2 bytes @ 0x3
  1839                           
  1840  0073                     Tm_Inicie_periodico@periodo:	
  1841                           ; 2 bytes @ 0x3
  1842                           
  1843  0073                     ___lwdiv@divisor:	
  1844                           ; 2 bytes @ 0x3
  1845                           
  1846  0073                     ___lwmod@divisor:	
  1847                           ; 2 bytes @ 0x3
  1848                           
  1849  0073                     ___xxtofl@val:	
  1850                           ; 2 bytes @ 0x3
  1851                           
  1852                           
  1853                           ; 4 bytes @ 0x3
  1854  0073                     	ds	1
  1855  0074                     Ds_Iniciar_displays@d2:
  1856  0074                     Tm_Baje_periodico@ctp:	
  1857                           ; 1 bytes @ 0x4
  1858                           
  1859                           
  1860                           ; 1 bytes @ 0x4
  1861  0074                     	ds	1
  1862  0075                     ??_TMR6_SetInterruptHandler:
  1863  0075                     ??_EUSART_SetFramingErrorHandler:	
  1864                           ; 1 bytes @ 0x5
  1865                           
  1866  0075                     ??_EUSART_SetOverrunErrorHandler:	
  1867                           ; 1 bytes @ 0x5
  1868                           
  1869  0075                     ??_EUSART_SetErrorHandler:	
  1870                           ; 1 bytes @ 0x5
  1871                           
  1872  0075                     ??_ADC_SetInterruptHandler:	
  1873                           ; 1 bytes @ 0x5
  1874                           
  1875  0075                     ??_Tm_Inicie_periodico:	
  1876                           ; 1 bytes @ 0x5
  1877                           
  1878  0075                     ??__Umul8_16:	
  1879                           ; 1 bytes @ 0x5
  1880                           
  1881  0075                     ??_TMR6_Initialize:	
  1882                           ; 1 bytes @ 0x5
  1883                           
  1884  0075                     ??_EUSART_Initialize:	
  1885                           ; 1 bytes @ 0x5
  1886                           
  1887  0075                     ??_ADC_Initialize:	
  1888                           ; 1 bytes @ 0x5
  1889                           
  1890  0075                     ??_SYSTEM_Initialize:	
  1891                           ; 1 bytes @ 0x5
  1892                           
  1893  0075                     Ds_Iniciar_displays@d3:	
  1894                           ; 1 bytes @ 0x5
  1895                           
  1896  0075                     Ds_BCD@segmento:	
  1897                           ; 1 bytes @ 0x5
  1898                           
  1899  0075                     ___lwdiv@dividend:	
  1900                           ; 1 bytes @ 0x5
  1901                           
  1902  0075                     ___lwmod@dividend:	
  1903                           ; 2 bytes @ 0x5
  1904                           
  1905                           
  1906                           ; 2 bytes @ 0x5
  1907  0075                     	ds	1
  1908  0076                     Ds_Iniciar_displays@tE:
  1909  0076                     Tm_Inicie_periodico@ctp:	
  1910                           ; 1 bytes @ 0x6
  1911                           
  1912                           
  1913                           ; 1 bytes @ 0x6
  1914  0076                     	ds	1
  1915  0077                     ??_Ds_Conversor_ADC:
  1916  0077                     ??___lwdiv:	
  1917                           ; 1 bytes @ 0x7
  1918                           
  1919  0077                     ??___lwmod:	
  1920                           ; 1 bytes @ 0x7
  1921                           
  1922  0077                     Ds_Iniciar_displays@tA:	
  1923                           ; 1 bytes @ 0x7
  1924                           
  1925                           
  1926                           ; 1 bytes @ 0x7
  1927  0077                     	ds	1
  1928                           
  1929                           	psect	cstackBANK0
  1930  0020                     __pcstackBANK0:
  1931  0020                     ??_Ds_Iniciar_displays:
  1932  0020                     ??___xxtofl:	
  1933                           ; 1 bytes @ 0x0
  1934                           
  1935  0020                     ___lwdiv@counter:	
  1936                           ; 1 bytes @ 0x0
  1937                           
  1938  0020                     ___lwmod@counter:	
  1939                           ; 1 bytes @ 0x0
  1940                           
  1941  0020                     __Umul8_16@product:	
  1942                           ; 1 bytes @ 0x0
  1943                           
  1944                           
  1945                           ; 2 bytes @ 0x0
  1946  0020                     	ds	1
  1947  0021                     Ds_Iniciar_displays@dsp:
  1948  0021                     ___lwdiv@quotient:	
  1949                           ; 1 bytes @ 0x1
  1950                           
  1951                           
  1952                           ; 2 bytes @ 0x1
  1953  0021                     	ds	1
  1954  0022                     __Umul8_16@word_mpld:
  1955                           
  1956                           ; 2 bytes @ 0x2
  1957  0022                     	ds	1
  1958  0023                     ?_Ds_Convertir_en_uni:
  1959  0023                     Ds_Convertir_en_uni@voltaje:	
  1960                           ; 1 bytes @ 0x3
  1961                           
  1962                           
  1963                           ; 2 bytes @ 0x3
  1964  0023                     	ds	1
  1965  0024                     __Umul8_16@multiplier:
  1966  0024                     ___xxtofl@sign:	
  1967                           ; 1 bytes @ 0x4
  1968                           
  1969                           
  1970                           ; 1 bytes @ 0x4
  1971  0024                     	ds	1
  1972  0025                     ??_Ds_Convertir_en_uni:
  1973  0025                     ___xxtofl@exp:	
  1974                           ; 1 bytes @ 0x5
  1975                           
  1976                           
  1977                           ; 1 bytes @ 0x5
  1978  0025                     	ds	1
  1979  0026                     Ds_Convertir_en_uni@dsp:
  1980  0026                     ___xxtofl@arg:	
  1981                           ; 1 bytes @ 0x6
  1982                           
  1983                           
  1984                           ; 4 bytes @ 0x6
  1985  0026                     	ds	4
  1986  002A                     ?___flmul:
  1987  002A                     ___flmul@b:	
  1988                           ; 4 bytes @ 0xA
  1989                           
  1990                           
  1991                           ; 4 bytes @ 0xA
  1992  002A                     	ds	4
  1993  002E                     ___flmul@a:
  1994                           
  1995                           ; 4 bytes @ 0xE
  1996  002E                     	ds	4
  1997  0032                     ??___flmul:
  1998                           
  1999                           ; 1 bytes @ 0x12
  2000  0032                     	ds	5
  2001  0037                     ___flmul@sign:
  2002                           
  2003                           ; 1 bytes @ 0x17
  2004  0037                     	ds	1
  2005  0038                     ___flmul@aexp:
  2006                           
  2007                           ; 1 bytes @ 0x18
  2008  0038                     	ds	1
  2009  0039                     ___flmul@grs:
  2010                           
  2011                           ; 4 bytes @ 0x19
  2012  0039                     	ds	4
  2013  003D                     ___flmul@bexp:
  2014                           
  2015                           ; 1 bytes @ 0x1D
  2016  003D                     	ds	1
  2017  003E                     ___flmul@prod:
  2018                           
  2019                           ; 4 bytes @ 0x1E
  2020  003E                     	ds	4
  2021  0042                     ___flmul@temp:
  2022                           
  2023                           ; 2 bytes @ 0x22
  2024  0042                     	ds	2
  2025  0044                     ?___fltol:
  2026  0044                     ___fltol@f1:	
  2027                           ; 4 bytes @ 0x24
  2028                           
  2029                           
  2030                           ; 4 bytes @ 0x24
  2031  0044                     	ds	4
  2032  0048                     ??___fltol:
  2033                           
  2034                           ; 1 bytes @ 0x28
  2035  0048                     	ds	5
  2036  004D                     ___fltol@sign1:
  2037                           
  2038                           ; 1 bytes @ 0x2D
  2039  004D                     	ds	1
  2040  004E                     ___fltol@exp1:
  2041                           
  2042                           ; 1 bytes @ 0x2E
  2043  004E                     	ds	1
  2044  004F                     ?_Ds_Conversor_ADC:
  2045  004F                     Ds_Conversor_ADC@adcOUT:	
  2046                           ; 2 bytes @ 0x2F
  2047                           
  2048                           
  2049                           ; 2 bytes @ 0x2F
  2050  004F                     	ds	2
  2051  0051                     Ds_Conversor_ADC@pendiente:
  2052                           
  2053                           ; 4 bytes @ 0x31
  2054  0051                     	ds	4
  2055  0055                     Ds_Conversor_ADC@voltios:
  2056                           
  2057                           ; 2 bytes @ 0x35
  2058  0055                     	ds	2
  2059  0057                     ??_main:
  2060                           
  2061                           ; 1 bytes @ 0x37
  2062  0057                     	ds	1
  2063                           
  2064                           	psect	maintext
  2065  0290                     __pmaintext:	
  2066 ;;
  2067 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2068 ;;
  2069 ;; *************** function _main *****************
  2070 ;; Defined at:
  2071 ;;		line 23 in file "main.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  timer_1ms       9   11[BANK1 ] struct Tm_Periodico
  2076 ;;  seven_seg       8   20[BANK1 ] struct Ds_Display
  2077 ;;  Pack            6    5[BANK1 ] unsigned char [6]
  2078 ;;  volt_ADC        2    2[BANK1 ] unsigned short 
  2079 ;;  valor_ADC       2    0[BANK1 ] unsigned short 
  2080 ;;  EnviarPorSer    1    0        unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : B1F/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2090 ;;      Params:         0       0       0       0       0       0
  2091 ;;      Locals:         0       0      28       0       0       0
  2092 ;;      Temps:          0       1       0       0       0       0
  2093 ;;      Totals:         0       1      28       0       0       0
  2094 ;;Total ram usage:       29 bytes
  2095 ;; Hardware stack levels required when called:    7
  2096 ;; This function calls:
  2097 ;;		_ADC_Initialize
  2098 ;;		_ADC_SetInterruptHandler
  2099 ;;		_ADC_StartConversion
  2100 ;;		_Ds_BCD
  2101 ;;		_Ds_Conversor_ADC
  2102 ;;		_Ds_Convertir_en_uni
  2103 ;;		_Ds_Encienda_Disp
  2104 ;;		_Ds_Iniciar_displays
  2105 ;;		_EUSART_Write
  2106 ;;		_EUSART_is_tx_ready
  2107 ;;		_SYSTEM_Initialize
  2108 ;;		_TMR6_SetInterruptHandler
  2109 ;;		_TMR6_StartTimer
  2110 ;;		_Tm_Baje_periodico
  2111 ;;		_Tm_Inicie_periodico
  2112 ;;		_WDT_Initialize
  2113 ;; This function is called by:
  2114 ;;		Startup code after reset
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           
  2119                           ;psect for function _main
  2120  0290                     _main:
  2121  0290                     l2933:	
  2122                           ;incstack = 0
  2123                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2124                           
  2125                           
  2126                           ;main.c: 25:     SYSTEM_Initialize();
  2127  0290  3187  2705  3182   	fcall	_SYSTEM_Initialize
  2128                           
  2129                           ;main.c: 26:     WDT_Initialize();
  2130  0293  3187  27C9  3182   	fcall	_WDT_Initialize
  2131  0296                     l2935:
  2132                           
  2133                           ;main.c: 27:     (INTCONbits.GIE = 1);
  2134  0296  178B               	bsf	11,7	;volatile
  2135  0297                     l2937:
  2136                           
  2137                           ;main.c: 28:     (INTCONbits.PEIE = 1);
  2138  0297  170B               	bsf	11,6	;volatile
  2139  0298                     l2939:
  2140  0298                     l2941:
  2141  0298                     l2943:
  2142  0298                     l2945:
  2143                           
  2144                           ;main.c: 34:  Ds_Display seven_seg;;main.c: 35:  Tm_Periodico timer_1ms;;main.c: 36:  Tm
      +                          _Inicie_periodico (&timer_1ms, 1000);
  2145  0298  30E8               	movlw	232
  2146  0299  00F3               	movwf	Tm_Inicie_periodico@periodo
  2147  029A  3003               	movlw	3
  2148  029B  00F4               	movwf	Tm_Inicie_periodico@periodo+1
  2149  029C  30AB               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2150  029D  3186  26D1  3182   	fcall	_Tm_Inicie_periodico
  2151  02A0                     l2947:
  2152                           
  2153                           ;main.c: 37:  ADC_Initialize();
  2154  02A0  3187  272B  3182   	fcall	_ADC_Initialize
  2155  02A3                     l2949:
  2156                           
  2157                           ;main.c: 38:     ADCON0 = ADCON0 | 0b00011101;
  2158  02A3  0021               	movlb	1	; select bank1
  2159  02A4  081D               	movf	29,w	;volatile
  2160  02A5  381D               	iorlw	29
  2161  02A6  009D               	movwf	29	;volatile
  2162  02A7                     l2951:
  2163                           
  2164                           ;main.c: 39:     ADCON0 = ADCON0 & 0b10011111;
  2165  02A7  081D               	movf	29,w	;volatile
  2166  02A8  399F               	andlw	159
  2167  02A9  009D               	movwf	29	;volatile
  2168  02AA                     l2953:
  2169                           
  2170                           ;main.c: 40:     ADCON1 = 0b11100000;
  2171  02AA  30E0               	movlw	224
  2172  02AB  009E               	movwf	30	;volatile
  2173  02AC                     l2955:
  2174                           
  2175                           ;main.c: 41:  Ds_Iniciar_displays (&seven_seg, 1, 1, 1, 4, 1);
  2176  02AC  01F3               	clrf	Ds_Iniciar_displays@d1
  2177  02AD  0AF3               	incf	Ds_Iniciar_displays@d1,f
  2178  02AE  01F4               	clrf	Ds_Iniciar_displays@d2
  2179  02AF  0AF4               	incf	Ds_Iniciar_displays@d2,f
  2180  02B0  01F5               	clrf	Ds_Iniciar_displays@d3
  2181  02B1  0AF5               	incf	Ds_Iniciar_displays@d3,f
  2182  02B2  3004               	movlw	4
  2183  02B3  0020               	movlb	0	; select bank0
  2184  02B4  00D7               	movwf	??_main
  2185  02B5  0857               	movf	??_main,w
  2186  02B6  00F6               	movwf	Ds_Iniciar_displays@tE
  2187  02B7  01F7               	clrf	Ds_Iniciar_displays@tA
  2188  02B8  0AF7               	incf	Ds_Iniciar_displays@tA,f
  2189  02B9  30B4               	movlw	(low (main@seven_seg| 0))& (0+255)
  2190  02BA  3185  2572  3182   	fcall	_Ds_Iniciar_displays
  2191  02BD                     l2957:
  2192                           
  2193                           ;main.c: 42:     TMR6_StartTimer();
  2194  02BD  3187  27CD  3182   	fcall	_TMR6_StartTimer
  2195  02C0                     l2959:
  2196                           
  2197                           ;main.c: 43:  ADC_SetInterruptHandler(Interrupcion_ADC);
  2198  02C0  3066               	movlw	low _Interrupcion_ADC
  2199  02C1  00F3               	movwf	ADC_SetInterruptHandler@InterruptHandler
  2200  02C2  3007               	movlw	high _Interrupcion_ADC
  2201  02C3  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  2202  02C4  3187  27B1  3182   	fcall	_ADC_SetInterruptHandler
  2203  02C7                     l2961:
  2204                           
  2205                           ;main.c: 44:  TMR6_SetInterruptHandler(Interrupcion_timer);
  2206  02C7  30BD               	movlw	low _Interrupcion_timer
  2207  02C8  00F3               	movwf	TMR6_SetInterruptHandler@InterruptHandler
  2208  02C9  3007               	movlw	high _Interrupcion_timer
  2209  02CA  00F4               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
  2210  02CB  3187  2799  3182   	fcall	_TMR6_SetInterruptHandler
  2211  02CE                     l2963:
  2212                           
  2213                           ;main.c: 56:     Tm_Baje_periodico(&timer_1ms);
  2214  02CE  30AB               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2215  02CF  3187  277F  3182   	fcall	_Tm_Baje_periodico
  2216  02D2                     l2965:
  2217                           
  2218                           ;main.c: 57:                 ADC_StartConversion();
  2219  02D2  3187  27D0  3182   	fcall	_ADC_StartConversion
  2220  02D5                     l2967:
  2221                           
  2222                           ;main.c: 63:    ADC_flag = 0;
  2223  02D5  01F9               	clrf	_ADC_flag	;volatile
  2224  02D6                     l2969:
  2225                           
  2226                           ;main.c: 65:    valor_ADC = num_ADC;
  2227  02D6  0021               	movlb	1	; select bank1
  2228  02D7  083D               	movf	(_num_ADC+1)^(0+128),w	;volatile
  2229  02D8  00A1               	movwf	(main@valor_ADC+1)^(0+128)
  2230  02D9  083C               	movf	_num_ADC^(0+128),w	;volatile
  2231  02DA  00A0               	movwf	main@valor_ADC^(0+128)
  2232  02DB                     l2971:
  2233                           
  2234                           ;main.c: 66:             volt_ADC = Ds_Conversor_ADC(valor_ADC);
  2235  02DB  0821               	movf	(main@valor_ADC+1)^(0+128),w
  2236  02DC  0020               	movlb	0	; select bank0
  2237  02DD  00D0               	movwf	Ds_Conversor_ADC@adcOUT+1
  2238  02DE  0021               	movlb	1	; select bank1
  2239  02DF  0820               	movf	main@valor_ADC^(0+128),w
  2240  02E0  0020               	movlb	0	; select bank0
  2241  02E1  00CF               	movwf	Ds_Conversor_ADC@adcOUT
  2242  02E2  3185  25EE  3182   	fcall	_Ds_Conversor_ADC
  2243  02E5  0020               	movlb	0	; select bank0
  2244  02E6  0850               	movf	?_Ds_Conversor_ADC+1,w
  2245  02E7  0021               	movlb	1	; select bank1
  2246  02E8  00A3               	movwf	(main@volt_ADC+1)^(0+128)
  2247  02E9  0020               	movlb	0	; select bank0
  2248  02EA  084F               	movf	?_Ds_Conversor_ADC,w
  2249  02EB  0021               	movlb	1	; select bank1
  2250  02EC  00A2               	movwf	main@volt_ADC^(0+128)
  2251  02ED                     l2973:
  2252                           
  2253                           ;main.c: 67:             Ds_Convertir_en_uni(&seven_seg, volt_ADC);
  2254  02ED  0823               	movf	(main@volt_ADC+1)^(0+128),w
  2255  02EE  0020               	movlb	0	; select bank0
  2256  02EF  00A4               	movwf	Ds_Convertir_en_uni@voltaje+1
  2257  02F0  0021               	movlb	1	; select bank1
  2258  02F1  0822               	movf	main@volt_ADC^(0+128),w
  2259  02F2  0020               	movlb	0	; select bank0
  2260  02F3  00A3               	movwf	Ds_Convertir_en_uni@voltaje
  2261  02F4  30B4               	movlw	(low (main@seven_seg| 0))& (0+255)
  2262  02F5  3185  2514  3182   	fcall	_Ds_Convertir_en_uni
  2263  02F8                     l2975:
  2264  02F8                     l2977:
  2265  02F8                     l2981:	
  2266                           ;main.c: 73:         if (EnviarPorSerial){
  2267                           
  2268                           
  2269                           ;main.c: 74:             while(!EUSART_is_tx_ready()){
  2270  02F8  3187  273B  3182   	fcall	_EUSART_is_tx_ready
  2271  02FB  3A00               	xorlw	0
  2272  02FC  1903               	skipnz
  2273  02FD  2AFF               	goto	u2421
  2274  02FE  2B00               	goto	u2420
  2275  02FF                     u2421:
  2276  02FF  2AF8               	goto	l2981
  2277  0300                     u2420:
  2278  0300                     l2983:
  2279                           
  2280                           ;main.c: 77:                 Pack[0]=(seven_seg.D3 + '0');
  2281  0300  0021               	movlb	1	; select bank1
  2282  0301  0837               	movf	(main@seven_seg^(0+128)+3),w
  2283  0302  3E30               	addlw	48
  2284  0303  0020               	movlb	0	; select bank0
  2285  0304  00D7               	movwf	??_main
  2286  0305  0857               	movf	??_main,w
  2287  0306  0021               	movlb	1	; select bank1
  2288  0307  00A5               	movwf	main@Pack^(0+128)
  2289  0308                     l2985:
  2290                           
  2291                           ;main.c: 78:                 Pack[1]=(',');
  2292  0308  302C               	movlw	44
  2293  0309  0020               	movlb	0	; select bank0
  2294  030A  00D7               	movwf	??_main
  2295  030B  0857               	movf	??_main,w
  2296  030C  0021               	movlb	1	; select bank1
  2297  030D  00A6               	movwf	(main@Pack^(0+128)+1)
  2298  030E                     l2987:
  2299                           
  2300                           ;main.c: 79:                 Pack[2]=(seven_seg.D2 + '0');
  2301  030E  0836               	movf	(main@seven_seg^(0+128)+2),w
  2302  030F  3E30               	addlw	48
  2303  0310  0020               	movlb	0	; select bank0
  2304  0311  00D7               	movwf	??_main
  2305  0312  0857               	movf	??_main,w
  2306  0313  0021               	movlb	1	; select bank1
  2307  0314  00A7               	movwf	(main@Pack^(0+128)+2)
  2308  0315                     l2989:
  2309                           
  2310                           ;main.c: 80:                 Pack[3]=(seven_seg.D1 + '0');
  2311  0315  0835               	movf	(main@seven_seg^(0+128)+1),w
  2312  0316  3E30               	addlw	48
  2313  0317  0020               	movlb	0	; select bank0
  2314  0318  00D7               	movwf	??_main
  2315  0319  0857               	movf	??_main,w
  2316  031A  0021               	movlb	1	; select bank1
  2317  031B  00A8               	movwf	(main@Pack^(0+128)+3)
  2318  031C                     l2991:
  2319                           
  2320                           ;main.c: 81:                 Pack[5]=0x0D;
  2321  031C  300D               	movlw	13
  2322  031D  0020               	movlb	0	; select bank0
  2323  031E  00D7               	movwf	??_main
  2324  031F  0857               	movf	??_main,w
  2325  0320  0021               	movlb	1	; select bank1
  2326  0321  00AA               	movwf	(main@Pack^(0+128)+5)
  2327  0322                     l2993:
  2328                           
  2329                           ;main.c: 82:                 Pack[4]= '\n';
  2330  0322  300A               	movlw	10
  2331  0323  0020               	movlb	0	; select bank0
  2332  0324  00D7               	movwf	??_main
  2333  0325  0857               	movf	??_main,w
  2334  0326  0021               	movlb	1	; select bank1
  2335  0327  00A9               	movwf	(main@Pack^(0+128)+4)
  2336  0328                     l2995:
  2337                           
  2338                           ;main.c: 83:                 EUSART_Write(Pack[0]);
  2339  0328  0825               	movf	main@Pack^(0+128),w
  2340  0329  3187  2789  3182   	fcall	_EUSART_Write
  2341  032C  0064               	clrwdt	;# 
  2342  032D                     l2997:
  2343                           
  2344                           ;main.c: 85:                 EUSART_Write(Pack[1]);
  2345  032D  0021               	movlb	1	; select bank1
  2346  032E  0826               	movf	(main@Pack^(0+128)+1),w
  2347  032F  3187  2789  3182   	fcall	_EUSART_Write
  2348  0332                     l2999:
  2349                           
  2350                           ;main.c: 86:                 EUSART_Write(Pack[2]);
  2351  0332  0021               	movlb	1	; select bank1
  2352  0333  0827               	movf	(main@Pack^(0+128)+2),w
  2353  0334  3187  2789  3182   	fcall	_EUSART_Write
  2354  0337                     l3001:
  2355                           
  2356                           ;main.c: 87:                 EUSART_Write(Pack[3]);
  2357  0337  0021               	movlb	1	; select bank1
  2358  0338  0828               	movf	(main@Pack^(0+128)+3),w
  2359  0339  3187  2789  3182   	fcall	_EUSART_Write
  2360  033C                     l3003:
  2361                           
  2362                           ;main.c: 88:                 EUSART_Write(Pack[4]);
  2363  033C  0021               	movlb	1	; select bank1
  2364  033D  0829               	movf	(main@Pack^(0+128)+4),w
  2365  033E  3187  2789  3182   	fcall	_EUSART_Write
  2366  0341                     l3005:
  2367                           
  2368                           ;main.c: 89:                 EUSART_Write(Pack[5]);
  2369  0341  0021               	movlb	1	; select bank1
  2370  0342  082A               	movf	(main@Pack^(0+128)+5),w
  2371  0343  3187  2789  3182   	fcall	_EUSART_Write
  2372  0346                     l3007:
  2373                           
  2374                           ;main.c: 90:                 sleep_flag = 1;
  2375  0346  01F8               	clrf	_sleep_flag
  2376  0347  0AF8               	incf	_sleep_flag,f
  2377  0348                     l3009:
  2378  0348                     l3011:	
  2379                           ;main.c: 95:        if (sleep_flag){
  2380                           
  2381                           
  2382                           ;main.c: 96:             sleep_flag = 0;
  2383  0348  01F8               	clrf	_sleep_flag
  2384  0349                     l3013:
  2385                           
  2386                           ;main.c: 97:             Ds_BCD(11);
  2387  0349  300B               	movlw	11
  2388  034A  3184  2402  3182   	fcall	_Ds_BCD
  2389  034D                     l3015:
  2390                           
  2391                           ;main.c: 98:             Ds_Encienda_Disp(0);
  2392  034D  3000               	movlw	0
  2393  034E  3186  2660  3182   	fcall	_Ds_Encienda_Disp
  2394  0351  0063               	sleep	;# 
  2395  0352  2ACE               	goto	l2963
  2396  0353  3180  2828         	ljmp	start
  2397  0355                     __end_of_main:
  2398                           
  2399                           	psect	text1
  2400  06D1                     __ptext1:	
  2401 ;; *************** function _Tm_Inicie_periodico *****************
  2402 ;; Defined at:
  2403 ;;		line 11 in file "nuestrostimers.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2406 ;;		 -> main@timer_1ms(9), 
  2407 ;;  periodo         2    3[COMMON] unsigned int 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  ctp             1    6[COMMON] PTR struct Tm_Periodico
  2410 ;;		 -> main@timer_1ms(9), 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2420 ;;      Params:         2       0       0       0       0       0
  2421 ;;      Locals:         1       0       0       0       0       0
  2422 ;;      Temps:          1       0       0       0       0       0
  2423 ;;      Totals:         4       0       0       0       0       0
  2424 ;;Total ram usage:        4 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    4
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _Tm_Inicie_periodico
  2436  06D1                     _Tm_Inicie_periodico:
  2437                           
  2438                           ;incstack = 0
  2439                           ; Regs used in _Tm_Inicie_periodico: [wreg+fsr1l+fsr1h+status,2+status,0]
  2440                           ;Tm_Inicie_periodico@ctp stored from wreg
  2441  06D1  00F6               	movwf	Tm_Inicie_periodico@ctp
  2442  06D2                     l2881:
  2443                           
  2444                           ;nuestrostimers.c: 11: void Tm_Inicie_periodico (Tm_Periodico *ctp,unsigned int periodo)
      +                          ;nuestrostimers.c: 12: {;nuestrostimers.c: 13:  ctp->banderas |= 0x01U;
  2445  06D2  0876               	movf	Tm_Inicie_periodico@ctp,w
  2446  06D3  3E08               	addlw	8
  2447  06D4  0086               	movwf	6
  2448  06D5  0187               	clrf	7
  2449  06D6  1401               	bsf	1,0
  2450                           
  2451                           ;nuestrostimers.c: 14:  ctp->banderas &= ~0x02U;
  2452  06D7  30FD               	movlw	253
  2453  06D8  00F5               	movwf	??_Tm_Inicie_periodico
  2454  06D9  0876               	movf	Tm_Inicie_periodico@ctp,w
  2455  06DA  3E08               	addlw	8
  2456  06DB  0086               	movwf	6
  2457  06DC  0187               	clrf	7
  2458  06DD  0875               	movf	??_Tm_Inicie_periodico,w
  2459  06DE  0581               	andwf	1,f
  2460                           
  2461                           ;nuestrostimers.c: 15:  ctp->contador = ctp->periodo = periodo;
  2462  06DF  0876               	movf	Tm_Inicie_periodico@ctp,w
  2463  06E0  3E02               	addlw	2
  2464  06E1  0086               	movwf	6
  2465  06E2  0187               	clrf	7
  2466  06E3  0873               	movf	Tm_Inicie_periodico@periodo,w
  2467  06E4  3FC0               	movwi [0]fsr1
  2468  06E5  0874               	movf	Tm_Inicie_periodico@periodo+1,w
  2469  06E6  3FC1               	movwi [1]fsr1
  2470  06E7  0876               	movf	Tm_Inicie_periodico@ctp,w
  2471  06E8  0086               	movwf	6
  2472  06E9  0187               	clrf	7
  2473  06EA  0873               	movf	Tm_Inicie_periodico@periodo,w
  2474  06EB  3FC0               	movwi [0]fsr1
  2475  06EC  0874               	movf	Tm_Inicie_periodico@periodo+1,w
  2476  06ED  3FC1               	movwi [1]fsr1
  2477  06EE                     l609:
  2478  06EE  0008               	return
  2479  06EF                     __end_of_Tm_Inicie_periodico:
  2480                           
  2481                           	psect	text2
  2482  077F                     __ptext2:	
  2483 ;; *************** function _Tm_Baje_periodico *****************
  2484 ;; Defined at:
  2485 ;;		line 43 in file "nuestrostimers.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2488 ;;		 -> main@timer_1ms(9), 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  ctp             1    4[COMMON] PTR struct Tm_Periodico
  2491 ;;		 -> main@timer_1ms(9), 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2501 ;;      Params:         0       0       0       0       0       0
  2502 ;;      Locals:         1       0       0       0       0       0
  2503 ;;      Temps:          1       0       0       0       0       0
  2504 ;;      Totals:         2       0       0       0       0       0
  2505 ;;Total ram usage:        2 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    4
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           
  2516                           ;psect for function _Tm_Baje_periodico
  2517  077F                     _Tm_Baje_periodico:
  2518                           
  2519                           ;incstack = 0
  2520                           ; Regs used in _Tm_Baje_periodico: [wreg+fsr1l+fsr1h+status,2+status,0]
  2521                           ;Tm_Baje_periodico@ctp stored from wreg
  2522  077F  00F4               	movwf	Tm_Baje_periodico@ctp
  2523  0780                     l2897:
  2524                           
  2525                           ;nuestrostimers.c: 43: void Tm_Baje_periodico (Tm_Periodico *ctp);nuestrostimers.c: 44: 
      +                          {;nuestrostimers.c: 45:  ctp->banderas &= ~0x02U;
  2526  0780  30FD               	movlw	253
  2527  0781  00F3               	movwf	??_Tm_Baje_periodico
  2528  0782  0874               	movf	Tm_Baje_periodico@ctp,w
  2529  0783  3E08               	addlw	8
  2530  0784  0086               	movwf	6
  2531  0785  0187               	clrf	7
  2532  0786  0873               	movf	??_Tm_Baje_periodico,w
  2533  0787  0581               	andwf	1,f
  2534  0788                     l621:
  2535  0788  0008               	return
  2536  0789                     __end_of_Tm_Baje_periodico:
  2537                           
  2538                           	psect	text3
  2539  07CD                     __ptext3:	
  2540 ;; *************** function _TMR6_StartTimer *****************
  2541 ;; Defined at:
  2542 ;;		line 87 in file "mcc_generated_files/tmr6.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		None
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2556 ;;      Params:         0       0       0       0       0       0
  2557 ;;      Locals:         0       0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0
  2559 ;;      Totals:         0       0       0       0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    4
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           
  2571                           ;psect for function _TMR6_StartTimer
  2572  07CD                     _TMR6_StartTimer:
  2573  07CD                     l2859:	
  2574                           ;incstack = 0
  2575                           ; Regs used in _TMR6_StartTimer: []
  2576                           
  2577                           
  2578                           ;mcc_generated_files/tmr6.c: 90:     T6CONbits.TMR6ON = 1;
  2579  07CD  0028               	movlb	8	; select bank8
  2580  07CE  151E               	bsf	30,2	;volatile
  2581  07CF                     l26:
  2582  07CF  0008               	return
  2583  07D0                     __end_of_TMR6_StartTimer:
  2584                           
  2585                           	psect	text4
  2586  0705                     __ptext4:	
  2587 ;; *************** function _SYSTEM_Initialize *****************
  2588 ;; Defined at:
  2589 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2603 ;;      Params:         0       0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0
  2606 ;;      Totals:         0       0       0       0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    6
  2610 ;; This function calls:
  2611 ;;		_ADC_Initialize
  2612 ;;		_EUSART_Initialize
  2613 ;;		_OSCILLATOR_Initialize
  2614 ;;		_PIN_MANAGER_Initialize
  2615 ;;		_TMR6_Initialize
  2616 ;;		_WDT_Initialize
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           
  2623                           ;psect for function _SYSTEM_Initialize
  2624  0705                     _SYSTEM_Initialize:
  2625  0705                     l2879:	
  2626                           ;incstack = 0
  2627                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2628                           
  2629                           
  2630                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2631  0705  3186  26EF  3187   	fcall	_PIN_MANAGER_Initialize
  2632                           
  2633                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2634  0708  3187  2773  3187   	fcall	_OSCILLATOR_Initialize
  2635                           
  2636                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2637  070B  3187  27C9  3187   	fcall	_WDT_Initialize
  2638                           
  2639                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
  2640  070E  3187  2718  3187   	fcall	_TMR6_Initialize
  2641                           
  2642                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2643  0711  3187  272B  3187   	fcall	_ADC_Initialize
  2644                           
  2645                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2646  0714  3186  26AF  3187   	fcall	_EUSART_Initialize
  2647  0717                     l248:
  2648  0717  0008               	return
  2649  0718                     __end_of_SYSTEM_Initialize:
  2650                           
  2651                           	psect	text5
  2652  07C9                     __ptext5:	
  2653 ;; *************** function _WDT_Initialize *****************
  2654 ;; Defined at:
  2655 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2669 ;;      Params:         0       0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0
  2672 ;;      Totals:         0       0       0       0       0       0
  2673 ;;Total ram usage:        0 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    4
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_SYSTEM_Initialize
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           
  2685                           ;psect for function _WDT_Initialize
  2686  07C9                     _WDT_Initialize:
  2687  07C9                     l2589:	
  2688                           ;incstack = 0
  2689                           ; Regs used in _WDT_Initialize: [wreg]
  2690                           
  2691                           
  2692                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x14;
  2693  07C9  3014               	movlw	20
  2694  07CA  0021               	movlb	1	; select bank1
  2695  07CB  0097               	movwf	23	;volatile
  2696  07CC                     l257:
  2697  07CC  0008               	return
  2698  07CD                     __end_of_WDT_Initialize:
  2699                           
  2700                           	psect	text6
  2701  0718                     __ptext6:	
  2702 ;; *************** function _TMR6_Initialize *****************
  2703 ;; Defined at:
  2704 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, pclath, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2718 ;;      Params:         0       0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0
  2721 ;;      Totals:         0       0       0       0       0       0
  2722 ;;Total ram usage:        0 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    5
  2725 ;; This function calls:
  2726 ;;		_TMR6_SetInterruptHandler
  2727 ;; This function is called by:
  2728 ;;		_SYSTEM_Initialize
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _TMR6_Initialize
  2734  0718                     _TMR6_Initialize:
  2735  0718                     l2539:	
  2736                           ;incstack = 0
  2737                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2738                           
  2739                           
  2740                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xF9;
  2741  0718  30F9               	movlw	249
  2742  0719  0028               	movlb	8	; select bank8
  2743  071A  009D               	movwf	29	;volatile
  2744  071B                     l2541:
  2745                           
  2746                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
  2747  071B  019C               	clrf	28	;volatile
  2748  071C                     l2543:
  2749                           
  2750                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
  2751  071C  0020               	movlb	0	; select bank0
  2752  071D  1193               	bcf	19,3	;volatile
  2753  071E                     l2545:
  2754                           
  2755                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
  2756  071E  0021               	movlb	1	; select bank1
  2757  071F  1593               	bsf	19,3	;volatile
  2758  0720                     l2547:
  2759                           
  2760                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  2761  0720  30D3               	movlw	low _TMR6_DefaultInterruptHandler
  2762  0721  00F3               	movwf	TMR6_SetInterruptHandler@InterruptHandler
  2763  0722  3007               	movlw	high _TMR6_DefaultInterruptHandler
  2764  0723  00F4               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
  2765  0724  3187  2799  3187   	fcall	_TMR6_SetInterruptHandler
  2766  0727                     l2549:
  2767                           
  2768                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x3D;
  2769  0727  303D               	movlw	61
  2770  0728  0028               	movlb	8	; select bank8
  2771  0729  009E               	movwf	30	;volatile
  2772  072A                     l23:
  2773  072A  0008               	return
  2774  072B                     __end_of_TMR6_Initialize:
  2775                           
  2776                           	psect	text7
  2777  0799                     __ptext7:	
  2778 ;; *************** function _TMR6_SetInterruptHandler *****************
  2779 ;; Defined at:
  2780 ;;		line 140 in file "mcc_generated_files/tmr6.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  2783 ;;		 -> Interrupcion_timer(1), TMR6_DefaultInterruptHandler(1), 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2795 ;;      Params:         2       0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0
  2798 ;;      Totals:         2       0       0       0       0       0
  2799 ;;Total ram usage:        2 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    4
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_TMR6_Initialize
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function _TMR6_SetInterruptHandler
  2812  0799                     _TMR6_SetInterruptHandler:
  2813  0799                     l2515:	
  2814                           ;incstack = 0
  2815                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  2816                           
  2817                           
  2818                           ;mcc_generated_files/tmr6.c: 141:     TMR6_InterruptHandler = InterruptHandler;
  2819  0799  0874               	movf	TMR6_SetInterruptHandler@InterruptHandler+1,w
  2820  079A  0021               	movlb	1	; select bank1
  2821  079B  00C7               	movwf	(_TMR6_InterruptHandler+1)^(0+128)
  2822  079C  0873               	movf	TMR6_SetInterruptHandler@InterruptHandler,w
  2823  079D  00C6               	movwf	_TMR6_InterruptHandler^(0+128)
  2824  079E                     l48:
  2825  079E  0008               	return
  2826  079F                     __end_of_TMR6_SetInterruptHandler:
  2827                           
  2828                           	psect	text8
  2829  06EF                     __ptext8:	
  2830 ;; *************** function _PIN_MANAGER_Initialize *****************
  2831 ;; Defined at:
  2832 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2846 ;;      Params:         0       0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    4
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_SYSTEM_Initialize
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function _PIN_MANAGER_Initialize
  2862  06EF                     _PIN_MANAGER_Initialize:
  2863  06EF                     l2551:	
  2864                           ;incstack = 0
  2865                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2866                           
  2867                           
  2868                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2869  06EF  0022               	movlb	2	; select bank2
  2870  06F0  018C               	clrf	12	;volatile
  2871                           
  2872                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2873  06F1  018D               	clrf	13	;volatile
  2874  06F2                     l2553:
  2875                           
  2876                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x20;
  2877  06F2  3020               	movlw	32
  2878  06F3  0021               	movlb	1	; select bank1
  2879  06F4  008C               	movwf	12	;volatile
  2880  06F5                     l2555:
  2881                           
  2882                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xE6;
  2883  06F5  30E6               	movlw	230
  2884  06F6  008D               	movwf	13	;volatile
  2885  06F7                     l2557:
  2886                           
  2887                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0x38;
  2888  06F7  3038               	movlw	56
  2889  06F8  0023               	movlb	3	; select bank3
  2890  06F9  008D               	movwf	13	;volatile
  2891  06FA                     l2559:
  2892                           
  2893                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2894  06FA  301F               	movlw	31
  2895  06FB  008C               	movwf	12	;volatile
  2896                           
  2897                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2898  06FC  0024               	movlb	4	; select bank4
  2899  06FD  018D               	clrf	13	;volatile
  2900                           
  2901                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2902  06FE  018C               	clrf	12	;volatile
  2903  06FF                     l2561:
  2904                           
  2905                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2906  06FF  0021               	movlb	1	; select bank1
  2907  0700  1795               	bsf	21,7	;volatile
  2908                           
  2909                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2910  0701  0022               	movlb	2	; select bank2
  2911  0702  019D               	clrf	29	;volatile
  2912                           
  2913                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2914  0703  019E               	clrf	30	;volatile
  2915  0704                     l76:
  2916  0704  0008               	return
  2917  0705                     __end_of_PIN_MANAGER_Initialize:
  2918                           
  2919                           	psect	text9
  2920  0773                     __ptext9:	
  2921 ;; *************** function _OSCILLATOR_Initialize *****************
  2922 ;; Defined at:
  2923 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2937 ;;      Params:         0       0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0       0
  2939 ;;      Temps:          0       0       0       0       0       0
  2940 ;;      Totals:         0       0       0       0       0       0
  2941 ;;Total ram usage:        0 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    4
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_SYSTEM_Initialize
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           
  2952                           ;psect for function _OSCILLATOR_Initialize
  2953  0773                     _OSCILLATOR_Initialize:
  2954  0773                     l2583:	
  2955                           ;incstack = 0
  2956                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2957                           
  2958                           
  2959                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2960  0773  3070               	movlw	112
  2961  0774  0021               	movlb	1	; select bank1
  2962  0775  0099               	movwf	25	;volatile
  2963  0776                     l2585:
  2964                           
  2965                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2966  0776  0198               	clrf	24	;volatile
  2967  0777                     l2587:
  2968                           
  2969                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2970  0777  0022               	movlb	2	; select bank2
  2971  0778  0196               	clrf	22	;volatile
  2972  0779                     l251:	
  2973                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  2974                           
  2975                           
  2976                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  2977  0779  0021               	movlb	1	; select bank1
  2978  077A  1F1A               	btfss	26,6	;volatile
  2979  077B  2F7D               	goto	u1711
  2980  077C  2F7E               	goto	u1710
  2981  077D                     u1711:
  2982  077D  2F79               	goto	l251
  2983  077E                     u1710:
  2984  077E                     l254:
  2985  077E  0008               	return
  2986  077F                     __end_of_OSCILLATOR_Initialize:
  2987                           
  2988                           	psect	text10
  2989  06AF                     __ptext10:	
  2990 ;; *************** function _EUSART_Initialize *****************
  2991 ;; Defined at:
  2992 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, status,2, status,0, pclath, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3006 ;;      Params:         0       0       0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0       0
  3008 ;;      Temps:          0       0       0       0       0       0
  3009 ;;      Totals:         0       0       0       0       0       0
  3010 ;;Total ram usage:        0 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    5
  3013 ;; This function calls:
  3014 ;;		_EUSART_SetErrorHandler
  3015 ;;		_EUSART_SetFramingErrorHandler
  3016 ;;		_EUSART_SetOverrunErrorHandler
  3017 ;; This function is called by:
  3018 ;;		_SYSTEM_Initialize
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _EUSART_Initialize
  3024  06AF                     _EUSART_Initialize:
  3025  06AF                     l2563:	
  3026                           ;incstack = 0
  3027                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3028                           
  3029                           
  3030                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  3031  06AF  3008               	movlw	8
  3032  06B0  0023               	movlb	3	; select bank3
  3033  06B1  009F               	movwf	31	;volatile
  3034                           
  3035                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  3036  06B2  3090               	movlw	144
  3037  06B3  009D               	movwf	29	;volatile
  3038                           
  3039                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  3040  06B4  3024               	movlw	36
  3041  06B5  009E               	movwf	30	;volatile
  3042                           
  3043                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x40;
  3044  06B6  3040               	movlw	64
  3045  06B7  009B               	movwf	27	;volatile
  3046                           
  3047                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x03;
  3048  06B8  3003               	movlw	3
  3049  06B9  009C               	movwf	28	;volatile
  3050  06BA                     l2565:
  3051                           
  3052                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3053  06BA  3000               	movlw	0
  3054  06BB  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3055  06BC  3000               	movlw	0
  3056  06BD  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3057  06BE  3187  27A5  3186   	fcall	_EUSART_SetFramingErrorHandler
  3058  06C1                     l2567:
  3059                           
  3060                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3061  06C1  3000               	movlw	0
  3062  06C2  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3063  06C3  3000               	movlw	0
  3064  06C4  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3065  06C5  3187  279F  3186   	fcall	_EUSART_SetOverrunErrorHandler
  3066  06C8                     l2569:
  3067                           
  3068                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3069  06C8  3000               	movlw	0
  3070  06C9  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler
  3071  06CA  3000               	movlw	0
  3072  06CB  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3073  06CC  3187  27AB  3186   	fcall	_EUSART_SetErrorHandler
  3074  06CF                     l2571:
  3075                           
  3076                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  3077  06CF  01FA               	clrf	_eusartRxLastError	;volatile
  3078  06D0                     l122:
  3079  06D0  0008               	return
  3080  06D1                     __end_of_EUSART_Initialize:
  3081                           
  3082                           	psect	text11
  3083  079F                     __ptext11:	
  3084 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3085 ;; Defined at:
  3086 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  3089 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3101 ;;      Params:         2       0       0       0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0
  3104 ;;      Totals:         2       0       0       0       0       0
  3105 ;;Total ram usage:        2 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    4
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_EUSART_Initialize
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           
  3116                           ;psect for function _EUSART_SetOverrunErrorHandler
  3117  079F                     _EUSART_SetOverrunErrorHandler:
  3118  079F                     l2519:	
  3119                           ;incstack = 0
  3120                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3121                           
  3122                           
  3123                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  3124  079F  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3125  07A0  0021               	movlb	1	; select bank1
  3126  07A1  00C3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  3127  07A2  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3128  07A3  00C2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  3129  07A4                     l164:
  3130  07A4  0008               	return
  3131  07A5                     __end_of_EUSART_SetOverrunErrorHandler:
  3132                           
  3133                           	psect	text12
  3134  07A5                     __ptext12:	
  3135 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3136 ;; Defined at:
  3137 ;;		line 157 in file "mcc_generated_files/eusart.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  3140 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3152 ;;      Params:         2       0       0       0       0       0
  3153 ;;      Locals:         0       0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0
  3155 ;;      Totals:         2       0       0       0       0       0
  3156 ;;Total ram usage:        2 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    4
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_EUSART_Initialize
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _EUSART_SetFramingErrorHandler
  3168  07A5                     _EUSART_SetFramingErrorHandler:
  3169  07A5                     l2517:	
  3170                           ;incstack = 0
  3171                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3172                           
  3173                           
  3174                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  3175  07A5  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3176  07A6  0021               	movlb	1	; select bank1
  3177  07A7  00C5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  3178  07A8  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3179  07A9  00C4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  3180  07AA                     l161:
  3181  07AA  0008               	return
  3182  07AB                     __end_of_EUSART_SetFramingErrorHandler:
  3183                           
  3184                           	psect	text13
  3185  07AB                     __ptext13:	
  3186 ;; *************** function _EUSART_SetErrorHandler *****************
  3187 ;; Defined at:
  3188 ;;		line 165 in file "mcc_generated_files/eusart.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  3191 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3203 ;;      Params:         2       0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0
  3206 ;;      Totals:         2       0       0       0       0       0
  3207 ;;Total ram usage:        2 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    4
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_EUSART_Initialize
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _EUSART_SetErrorHandler
  3219  07AB                     _EUSART_SetErrorHandler:
  3220  07AB                     l2521:	
  3221                           ;incstack = 0
  3222                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3223                           
  3224                           
  3225                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  3226  07AB  0874               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3227  07AC  0021               	movlb	1	; select bank1
  3228  07AD  00C1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  3229  07AE  0873               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3230  07AF  00C0               	movwf	_EUSART_ErrorHandler^(0+128)
  3231  07B0                     l167:
  3232  07B0  0008               	return
  3233  07B1                     __end_of_EUSART_SetErrorHandler:
  3234                           
  3235                           	psect	text14
  3236  072B                     __ptext14:	
  3237 ;; *************** function _ADC_Initialize *****************
  3238 ;; Defined at:
  3239 ;;		line 67 in file "mcc_generated_files/adc.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;		None
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0, pclath, cstack
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3253 ;;      Params:         0       0       0       0       0       0
  3254 ;;      Locals:         0       0       0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0
  3256 ;;      Totals:         0       0       0       0       0       0
  3257 ;;Total ram usage:        0 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:    5
  3260 ;; This function calls:
  3261 ;;		_ADC_SetInterruptHandler
  3262 ;; This function is called by:
  3263 ;;		_SYSTEM_Initialize
  3264 ;;		_main
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           
  3269                           ;psect for function _ADC_Initialize
  3270  072B                     _ADC_Initialize:
  3271  072B                     l2573:	
  3272                           ;incstack = 0
  3273                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3274                           
  3275                           
  3276                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0b11100000;
  3277  072B  30E0               	movlw	224
  3278  072C  0021               	movlb	1	; select bank1
  3279  072D  009E               	movwf	30	;volatile
  3280  072E                     l2575:
  3281                           
  3282                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3283  072E  019B               	clrf	27	;volatile
  3284  072F                     l2577:
  3285                           
  3286                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3287  072F  019C               	clrf	28	;volatile
  3288                           
  3289                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0b00011101;
  3290  0730  301D               	movlw	29
  3291  0731  009D               	movwf	29	;volatile
  3292  0732                     l2579:
  3293                           
  3294                           ;mcc_generated_files/adc.c: 84:     PIE1bits.ADIE = 1;
  3295  0732  1711               	bsf	17,6	;volatile
  3296  0733                     l2581:
  3297                           
  3298                           ;mcc_generated_files/adc.c: 87:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  3299  0733  30D4               	movlw	low _ADC_DefaultInterruptHandler
  3300  0734  00F3               	movwf	ADC_SetInterruptHandler@InterruptHandler
  3301  0735  3007               	movlw	high _ADC_DefaultInterruptHandler
  3302  0736  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  3303  0737  3187  27B1  3187   	fcall	_ADC_SetInterruptHandler
  3304  073A                     l192:
  3305  073A  0008               	return
  3306  073B                     __end_of_ADC_Initialize:
  3307                           
  3308                           	psect	text15
  3309  07B1                     __ptext15:	
  3310 ;; *************** function _ADC_SetInterruptHandler *****************
  3311 ;; Defined at:
  3312 ;;		line 156 in file "mcc_generated_files/adc.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  3315 ;;		 -> Interrupcion_ADC(1), ADC_DefaultInterruptHandler(1), 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3327 ;;      Params:         2       0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0
  3330 ;;      Totals:         2       0       0       0       0       0
  3331 ;;Total ram usage:        2 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    4
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_ADC_Initialize
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _ADC_SetInterruptHandler
  3344  07B1                     _ADC_SetInterruptHandler:
  3345  07B1                     l2523:	
  3346                           ;incstack = 0
  3347                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  3348                           
  3349                           
  3350                           ;mcc_generated_files/adc.c: 157:     ADC_InterruptHandler = InterruptHandler;
  3351  07B1  0874               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  3352  07B2  0021               	movlb	1	; select bank1
  3353  07B3  00BF               	movwf	(_ADC_InterruptHandler+1)^(0+128)
  3354  07B4  0873               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  3355  07B5  00BE               	movwf	_ADC_InterruptHandler^(0+128)
  3356  07B6                     l220:
  3357  07B6  0008               	return
  3358  07B7                     __end_of_ADC_SetInterruptHandler:
  3359                           
  3360                           	psect	text16
  3361  073B                     __ptext16:	
  3362 ;; *************** function _EUSART_is_tx_ready *****************
  3363 ;; Defined at:
  3364 ;;		line 94 in file "mcc_generated_files/eusart.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      _Bool 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3378 ;;      Params:         0       0       0       0       0       0
  3379 ;;      Locals:         1       0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0
  3381 ;;      Totals:         1       0       0       0       0       0
  3382 ;;Total ram usage:        1 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    4
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function _EUSART_is_tx_ready
  3394  073B                     _EUSART_is_tx_ready:
  3395  073B                     l2861:	
  3396                           ;incstack = 0
  3397                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  3398                           
  3399                           
  3400                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  3401  073B  01F3               	clrf	_EUSART_is_tx_ready$341
  3402  073C                     l2863:
  3403  073C  0020               	movlb	0	; select bank0
  3404  073D  1E11               	btfss	17,4	;volatile
  3405  073E  2F40               	goto	u2351
  3406  073F  2F41               	goto	u2350
  3407  0740                     u2351:
  3408  0740  2F48               	goto	l2869
  3409  0741                     u2350:
  3410  0741                     l2865:
  3411  0741  0023               	movlb	3	; select bank3
  3412  0742  1E9E               	btfss	30,5	;volatile
  3413  0743  2F45               	goto	u2361
  3414  0744  2F46               	goto	u2360
  3415  0745                     u2361:
  3416  0745  2F48               	goto	l2869
  3417  0746                     u2360:
  3418  0746                     l2867:
  3419  0746  01F3               	clrf	_EUSART_is_tx_ready$341
  3420  0747  0AF3               	incf	_EUSART_is_tx_ready$341,f
  3421  0748                     l2869:
  3422  0748  0873               	movf	_EUSART_is_tx_ready$341,w
  3423  0749                     l127:
  3424  0749  0008               	return
  3425  074A                     __end_of_EUSART_is_tx_ready:
  3426                           
  3427                           	psect	text17
  3428  0789                     __ptext17:	
  3429 ;; *************** function _EUSART_Write *****************
  3430 ;; Defined at:
  3431 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  txData          1    wreg     unsigned char 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  txData          1    3[COMMON] unsigned char 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3445 ;;      Params:         0       0       0       0       0       0
  3446 ;;      Locals:         1       0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0       0
  3448 ;;      Totals:         1       0       0       0       0       0
  3449 ;;Total ram usage:        1 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    4
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function _EUSART_Write
  3461  0789                     _EUSART_Write:
  3462                           
  3463                           ;incstack = 0
  3464                           ; Regs used in _EUSART_Write: [wreg]
  3465                           ;EUSART_Write@txData stored from wreg
  3466  0789  00F3               	movwf	EUSART_Write@txData
  3467  078A                     l2873:
  3468  078A                     l146:	
  3469                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3470                           
  3471                           
  3472                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3473  078A  0020               	movlb	0	; select bank0
  3474  078B  1E11               	btfss	17,4	;volatile
  3475  078C  2F8E               	goto	u2371
  3476  078D  2F8F               	goto	u2370
  3477  078E                     u2371:
  3478  078E  2F8A               	goto	l146
  3479  078F                     u2370:
  3480  078F                     l2875:
  3481                           
  3482                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3483  078F  0873               	movf	EUSART_Write@txData,w
  3484  0790  0023               	movlb	3	; select bank3
  3485  0791  009A               	movwf	26	;volatile
  3486  0792                     l149:
  3487  0792  0008               	return
  3488  0793                     __end_of_EUSART_Write:
  3489                           
  3490                           	psect	text18
  3491  0572                     __ptext18:	
  3492 ;; *************** function _Ds_Iniciar_displays *****************
  3493 ;; Defined at:
  3494 ;;		line 9 in file "displays.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  dsp             1    wreg     PTR struct Ds_Display
  3497 ;;		 -> main@seven_seg(8), 
  3498 ;;  d1              1    3[COMMON] unsigned char 
  3499 ;;  d2              1    4[COMMON] unsigned char 
  3500 ;;  d3              1    5[COMMON] unsigned char 
  3501 ;;  tE              1    6[COMMON] unsigned char 
  3502 ;;  tA              1    7[COMMON] unsigned char 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  dsp             1    1[BANK0 ] PTR struct Ds_Display
  3505 ;;		 -> main@seven_seg(8), 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3515 ;;      Params:         5       0       0       0       0       0
  3516 ;;      Locals:         0       1       0       0       0       0
  3517 ;;      Temps:          0       1       0       0       0       0
  3518 ;;      Totals:         5       2       0       0       0       0
  3519 ;;Total ram usage:        7 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    4
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           
  3530                           ;psect for function _Ds_Iniciar_displays
  3531  0572                     _Ds_Iniciar_displays:
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _Ds_Iniciar_displays: [wreg+fsr1l+fsr1h+status,2+status,0]
  3535                           ;Ds_Iniciar_displays@dsp stored from wreg
  3536  0572  0020               	movlb	0	; select bank0
  3537  0573  00A1               	movwf	Ds_Iniciar_displays@dsp
  3538  0574                     l2883:
  3539                           
  3540                           ;displays.c: 10:     dsp->estados=1;
  3541  0574  0821               	movf	Ds_Iniciar_displays@dsp,w
  3542  0575  0086               	movwf	6
  3543  0576  0187               	clrf	7
  3544  0577  0181               	clrf	1
  3545  0578  0A81               	incf	1,f
  3546                           
  3547                           ;displays.c: 11:     dsp->D1=d1;
  3548  0579  0873               	movf	Ds_Iniciar_displays@d1,w
  3549  057A  00A0               	movwf	??_Ds_Iniciar_displays
  3550  057B  0A21               	incf	Ds_Iniciar_displays@dsp,w
  3551  057C  0086               	movwf	6
  3552  057D  0187               	clrf	7
  3553  057E  0820               	movf	??_Ds_Iniciar_displays,w
  3554  057F  0081               	movwf	1
  3555  0580                     l2885:
  3556                           
  3557                           ;displays.c: 12:     dsp->D2=d2;
  3558  0580  0874               	movf	Ds_Iniciar_displays@d2,w
  3559  0581  00A0               	movwf	??_Ds_Iniciar_displays
  3560  0582  0821               	movf	Ds_Iniciar_displays@dsp,w
  3561  0583  3E02               	addlw	2
  3562  0584  0086               	movwf	6
  3563  0585  0187               	clrf	7
  3564  0586  0820               	movf	??_Ds_Iniciar_displays,w
  3565  0587  0081               	movwf	1
  3566  0588                     l2887:
  3567                           
  3568                           ;displays.c: 13:     dsp->D3=d3;
  3569  0588  0875               	movf	Ds_Iniciar_displays@d3,w
  3570  0589  00A0               	movwf	??_Ds_Iniciar_displays
  3571  058A  0821               	movf	Ds_Iniciar_displays@dsp,w
  3572  058B  3E03               	addlw	3
  3573  058C  0086               	movwf	6
  3574  058D  0187               	clrf	7
  3575  058E  0820               	movf	??_Ds_Iniciar_displays,w
  3576  058F  0081               	movwf	1
  3577  0590                     l2889:
  3578                           
  3579                           ;displays.c: 14:     dsp->tiempoEncendido=tE;
  3580  0590  0876               	movf	Ds_Iniciar_displays@tE,w
  3581  0591  00A0               	movwf	??_Ds_Iniciar_displays
  3582  0592  0821               	movf	Ds_Iniciar_displays@dsp,w
  3583  0593  3E04               	addlw	4
  3584  0594  0086               	movwf	6
  3585  0595  0187               	clrf	7
  3586  0596  0820               	movf	??_Ds_Iniciar_displays,w
  3587  0597  0081               	movwf	1
  3588  0598                     l2891:
  3589                           
  3590                           ;displays.c: 15:     dsp->tiempoApagado=tA;
  3591  0598  0877               	movf	Ds_Iniciar_displays@tA,w
  3592  0599  00A0               	movwf	??_Ds_Iniciar_displays
  3593  059A  0821               	movf	Ds_Iniciar_displays@dsp,w
  3594  059B  3E05               	addlw	5
  3595  059C  0086               	movwf	6
  3596  059D  0187               	clrf	7
  3597  059E  0820               	movf	??_Ds_Iniciar_displays,w
  3598  059F  0081               	movwf	1
  3599  05A0                     l2893:
  3600                           
  3601                           ;displays.c: 16:     dsp->tempE=tE;
  3602  05A0  0876               	movf	Ds_Iniciar_displays@tE,w
  3603  05A1  00A0               	movwf	??_Ds_Iniciar_displays
  3604  05A2  0821               	movf	Ds_Iniciar_displays@dsp,w
  3605  05A3  3E06               	addlw	6
  3606  05A4  0086               	movwf	6
  3607  05A5  0187               	clrf	7
  3608  05A6  0820               	movf	??_Ds_Iniciar_displays,w
  3609  05A7  0081               	movwf	1
  3610  05A8                     l2895:
  3611                           
  3612                           ;displays.c: 17:     dsp->tempA=tA;
  3613  05A8  0877               	movf	Ds_Iniciar_displays@tA,w
  3614  05A9  00A0               	movwf	??_Ds_Iniciar_displays
  3615  05AA  0821               	movf	Ds_Iniciar_displays@dsp,w
  3616  05AB  3E07               	addlw	7
  3617  05AC  0086               	movwf	6
  3618  05AD  0187               	clrf	7
  3619  05AE  0820               	movf	??_Ds_Iniciar_displays,w
  3620  05AF  0081               	movwf	1
  3621  05B0                     l360:
  3622  05B0  0008               	return
  3623  05B1                     __end_of_Ds_Iniciar_displays:
  3624                           
  3625                           	psect	text19
  3626  0660                     __ptext19:	
  3627 ;; *************** function _Ds_Encienda_Disp *****************
  3628 ;; Defined at:
  3629 ;;		line 282 in file "displays.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  dispNum         1    wreg     unsigned char 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  dispNum         1    3[COMMON] unsigned char 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2, status,0
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3643 ;;      Params:         0       0       0       0       0       0
  3644 ;;      Locals:         1       0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0
  3646 ;;      Totals:         1       0       0       0       0       0
  3647 ;;Total ram usage:        1 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    4
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;;		_Ds_Procese_displays
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           
  3659                           ;psect for function _Ds_Encienda_Disp
  3660  0660                     _Ds_Encienda_Disp:
  3661                           
  3662                           ;incstack = 0
  3663                           ; Regs used in _Ds_Encienda_Disp: [wreg+status,2+status,0]
  3664                           ;Ds_Encienda_Disp@dispNum stored from wreg
  3665  0660  00F3               	movwf	Ds_Encienda_Disp@dispNum
  3666  0661                     l2925:
  3667                           
  3668                           ;displays.c: 283:     if(dispNum == 1){
  3669  0661  0373               	decf	Ds_Encienda_Disp@dispNum,w
  3670  0662  1D03               	btfss	3,2
  3671  0663  2E65               	goto	u2381
  3672  0664  2E66               	goto	u2380
  3673  0665                     u2381:
  3674  0665  2E6B               	goto	l2927
  3675  0666                     u2380:
  3676  0666                     l576:	
  3677                           ;displays.c: 284:         do { LATBbits.LATB0 = 1; } while(0);
  3678                           
  3679  0666  0022               	movlb	2	; select bank2
  3680  0667  140D               	bsf	13,0	;volatile
  3681  0668                     l578:	
  3682                           ;displays.c: 285:         do { LATBbits.LATB4 = 0; } while(0);
  3683                           
  3684  0668  120D               	bcf	13,4	;volatile
  3685  0669                     l580:	
  3686                           ;displays.c: 286:         do { LATBbits.LATB3 = 0; } while(0);
  3687                           
  3688  0669  118D               	bcf	13,3	;volatile
  3689  066A  2E8A               	goto	l606
  3690  066B                     l2927:
  3691  066B  3002               	movlw	2
  3692  066C  0673               	xorwf	Ds_Encienda_Disp@dispNum,w
  3693  066D  1D03               	btfss	3,2
  3694  066E  2E70               	goto	u2391
  3695  066F  2E71               	goto	u2390
  3696  0670                     u2391:
  3697  0670  2E76               	goto	l2929
  3698  0671                     u2390:
  3699  0671                     l584:	
  3700                           ;displays.c: 288:         do { LATBbits.LATB0 = 0; } while(0);
  3701                           
  3702  0671  0022               	movlb	2	; select bank2
  3703  0672  100D               	bcf	13,0	;volatile
  3704  0673                     l586:	
  3705                           ;displays.c: 289:         do { LATBbits.LATB3 = 1; } while(0);
  3706                           
  3707  0673  158D               	bsf	13,3	;volatile
  3708  0674                     l588:	
  3709                           ;displays.c: 290:         do { LATBbits.LATB4 = 0; } while(0);
  3710                           
  3711  0674  120D               	bcf	13,4	;volatile
  3712  0675  2E8A               	goto	l606
  3713  0676                     l2929:
  3714  0676  3003               	movlw	3
  3715  0677  0673               	xorwf	Ds_Encienda_Disp@dispNum,w
  3716  0678  1D03               	btfss	3,2
  3717  0679  2E7B               	goto	u2401
  3718  067A  2E7C               	goto	u2400
  3719  067B                     u2401:
  3720  067B  2E81               	goto	l2931
  3721  067C                     u2400:
  3722  067C                     l592:	
  3723                           ;displays.c: 292:         do { LATBbits.LATB0 = 0; } while(0);
  3724                           
  3725  067C  0022               	movlb	2	; select bank2
  3726  067D  100D               	bcf	13,0	;volatile
  3727  067E                     l594:	
  3728                           ;displays.c: 293:         do { LATBbits.LATB3 = 0; } while(0);
  3729                           
  3730  067E  118D               	bcf	13,3	;volatile
  3731  067F                     l596:	
  3732                           ;displays.c: 294:         do { LATBbits.LATB4 = 1; } while(0);
  3733                           
  3734  067F  160D               	bsf	13,4	;volatile
  3735  0680  2E8A               	goto	l606
  3736  0681                     l2931:
  3737  0681  0873               	movf	Ds_Encienda_Disp@dispNum,w
  3738  0682  1D03               	btfss	3,2
  3739  0683  2E85               	goto	u2411
  3740  0684  2E86               	goto	u2410
  3741  0685                     u2411:
  3742  0685  2E8A               	goto	l606
  3743  0686                     u2410:
  3744  0686                     l600:	
  3745                           ;displays.c: 296:         do { LATBbits.LATB0 = 0; } while(0);
  3746                           
  3747  0686  0022               	movlb	2	; select bank2
  3748  0687  100D               	bcf	13,0	;volatile
  3749  0688                     l602:	
  3750                           ;displays.c: 297:         do { LATBbits.LATB4 = 0; } while(0);
  3751                           
  3752  0688  120D               	bcf	13,4	;volatile
  3753  0689                     l604:	
  3754                           ;displays.c: 298:         do { LATBbits.LATB3 = 0; } while(0);
  3755                           
  3756  0689  118D               	bcf	13,3	;volatile
  3757  068A                     l606:
  3758  068A  0008               	return
  3759  068B                     __end_of_Ds_Encienda_Disp:
  3760                           
  3761                           	psect	text20
  3762  0514                     __ptext20:	
  3763 ;; *************** function _Ds_Convertir_en_uni *****************
  3764 ;; Defined at:
  3765 ;;		line 190 in file "displays.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  dsp             1    wreg     PTR struct Ds_Display
  3768 ;;		 -> main@seven_seg(8), 
  3769 ;;  voltaje         2    3[BANK0 ] unsigned short 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  dsp             1    6[BANK0 ] PTR struct Ds_Display
  3772 ;;		 -> main@seven_seg(8), 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3782 ;;      Params:         0       2       0       0       0       0
  3783 ;;      Locals:         0       1       0       0       0       0
  3784 ;;      Temps:          0       1       0       0       0       0
  3785 ;;      Totals:         0       4       0       0       0       0
  3786 ;;Total ram usage:        4 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    5
  3789 ;; This function calls:
  3790 ;;		___lwdiv
  3791 ;;		___lwmod
  3792 ;; This function is called by:
  3793 ;;		_main
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           
  3798                           ;psect for function _Ds_Convertir_en_uni
  3799  0514                     _Ds_Convertir_en_uni:
  3800                           
  3801                           ;incstack = 0
  3802                           ; Regs used in _Ds_Convertir_en_uni: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3803                           ;Ds_Convertir_en_uni@dsp stored from wreg
  3804  0514  0020               	movlb	0	; select bank0
  3805  0515  00A6               	movwf	Ds_Convertir_en_uni@dsp
  3806  0516                     l2907:
  3807                           
  3808                           ;displays.c: 191:  dsp->D1 = voltaje % 10;
  3809  0516  300A               	movlw	10
  3810  0517  00F3               	movwf	___lwmod@divisor
  3811  0518  3000               	movlw	0
  3812  0519  00F4               	movwf	___lwmod@divisor+1
  3813  051A  0824               	movf	Ds_Convertir_en_uni@voltaje+1,w
  3814  051B  00F6               	movwf	___lwmod@dividend+1
  3815  051C  0823               	movf	Ds_Convertir_en_uni@voltaje,w
  3816  051D  00F5               	movwf	___lwmod@dividend
  3817  051E  3186  262B  3185   	fcall	___lwmod
  3818  0521  0873               	movf	?___lwmod,w
  3819  0522  0020               	movlb	0	; select bank0
  3820  0523  00A5               	movwf	??_Ds_Convertir_en_uni
  3821  0524  0A26               	incf	Ds_Convertir_en_uni@dsp,w
  3822  0525  0086               	movwf	6
  3823  0526  0187               	clrf	7
  3824  0527  0825               	movf	??_Ds_Convertir_en_uni,w
  3825  0528  0081               	movwf	1
  3826  0529                     l2909:
  3827                           
  3828                           ;displays.c: 192:  voltaje = voltaje/10;
  3829  0529  300A               	movlw	10
  3830  052A  00F3               	movwf	___lwdiv@divisor
  3831  052B  3000               	movlw	0
  3832  052C  00F4               	movwf	___lwdiv@divisor+1
  3833  052D  0824               	movf	Ds_Convertir_en_uni@voltaje+1,w
  3834  052E  00F6               	movwf	___lwdiv@dividend+1
  3835  052F  0823               	movf	Ds_Convertir_en_uni@voltaje,w
  3836  0530  00F5               	movwf	___lwdiv@dividend
  3837  0531  3185  25B1  3185   	fcall	___lwdiv
  3838  0534  0874               	movf	?___lwdiv+1,w
  3839  0535  0020               	movlb	0	; select bank0
  3840  0536  00A4               	movwf	Ds_Convertir_en_uni@voltaje+1
  3841  0537  0873               	movf	?___lwdiv,w
  3842  0538  00A3               	movwf	Ds_Convertir_en_uni@voltaje
  3843  0539                     l2911:
  3844                           
  3845                           ;displays.c: 193:  dsp->D2 = voltaje % 10;
  3846  0539  300A               	movlw	10
  3847  053A  00F3               	movwf	___lwmod@divisor
  3848  053B  3000               	movlw	0
  3849  053C  00F4               	movwf	___lwmod@divisor+1
  3850  053D  0824               	movf	Ds_Convertir_en_uni@voltaje+1,w
  3851  053E  00F6               	movwf	___lwmod@dividend+1
  3852  053F  0823               	movf	Ds_Convertir_en_uni@voltaje,w
  3853  0540  00F5               	movwf	___lwmod@dividend
  3854  0541  3186  262B  3185   	fcall	___lwmod
  3855  0544  0873               	movf	?___lwmod,w
  3856  0545  0020               	movlb	0	; select bank0
  3857  0546  00A5               	movwf	??_Ds_Convertir_en_uni
  3858  0547  0826               	movf	Ds_Convertir_en_uni@dsp,w
  3859  0548  3E02               	addlw	2
  3860  0549  0086               	movwf	6
  3861  054A  0187               	clrf	7
  3862  054B  0825               	movf	??_Ds_Convertir_en_uni,w
  3863  054C  0081               	movwf	1
  3864                           
  3865                           ;displays.c: 194:  voltaje = voltaje/10;
  3866  054D  300A               	movlw	10
  3867  054E  00F3               	movwf	___lwdiv@divisor
  3868  054F  3000               	movlw	0
  3869  0550  00F4               	movwf	___lwdiv@divisor+1
  3870  0551  0824               	movf	Ds_Convertir_en_uni@voltaje+1,w
  3871  0552  00F6               	movwf	___lwdiv@dividend+1
  3872  0553  0823               	movf	Ds_Convertir_en_uni@voltaje,w
  3873  0554  00F5               	movwf	___lwdiv@dividend
  3874  0555  3185  25B1  3185   	fcall	___lwdiv
  3875  0558  0874               	movf	?___lwdiv+1,w
  3876  0559  0020               	movlb	0	; select bank0
  3877  055A  00A4               	movwf	Ds_Convertir_en_uni@voltaje+1
  3878  055B  0873               	movf	?___lwdiv,w
  3879  055C  00A3               	movwf	Ds_Convertir_en_uni@voltaje
  3880  055D                     l2913:
  3881                           
  3882                           ;displays.c: 195:  dsp->D3 = voltaje % 10;
  3883  055D  300A               	movlw	10
  3884  055E  00F3               	movwf	___lwmod@divisor
  3885  055F  3000               	movlw	0
  3886  0560  00F4               	movwf	___lwmod@divisor+1
  3887  0561  0824               	movf	Ds_Convertir_en_uni@voltaje+1,w
  3888  0562  00F6               	movwf	___lwmod@dividend+1
  3889  0563  0823               	movf	Ds_Convertir_en_uni@voltaje,w
  3890  0564  00F5               	movwf	___lwmod@dividend
  3891  0565  3186  262B  3185   	fcall	___lwmod
  3892  0568  0873               	movf	?___lwmod,w
  3893  0569  0020               	movlb	0	; select bank0
  3894  056A  00A5               	movwf	??_Ds_Convertir_en_uni
  3895  056B  0826               	movf	Ds_Convertir_en_uni@dsp,w
  3896  056C  3E03               	addlw	3
  3897  056D  0086               	movwf	6
  3898  056E  0187               	clrf	7
  3899  056F  0825               	movf	??_Ds_Convertir_en_uni,w
  3900  0570  0081               	movwf	1
  3901  0571                     l548:
  3902  0571  0008               	return
  3903  0572                     __end_of_Ds_Convertir_en_uni:
  3904                           
  3905                           	psect	text21
  3906  062B                     __ptext21:	
  3907 ;; *************** function ___lwmod *****************
  3908 ;; Defined at:
  3909 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwmod.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  divisor         2    3[COMMON] unsigned int 
  3912 ;;  dividend        2    5[COMMON] unsigned int 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  counter         1    0[BANK0 ] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  2    3[COMMON] unsigned int 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3924 ;;      Params:         4       0       0       0       0       0
  3925 ;;      Locals:         0       1       0       0       0       0
  3926 ;;      Temps:          1       0       0       0       0       0
  3927 ;;      Totals:         5       1       0       0       0       0
  3928 ;;Total ram usage:        6 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    4
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_Ds_Convertir_en_uni
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function ___lwmod
  3940  062B                     ___lwmod:
  3941  062B                     l2653:	
  3942                           ;incstack = 0
  3943                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3944                           
  3945  062B  0873               	movf	___lwmod@divisor,w
  3946  062C  0474               	iorwf	___lwmod@divisor+1,w
  3947  062D  1903               	btfsc	3,2
  3948  062E  2E30               	goto	u1891
  3949  062F  2E31               	goto	u1890
  3950  0630                     u1891:
  3951  0630  2E5B               	goto	l2671
  3952  0631                     u1890:
  3953  0631                     l2655:
  3954  0631  0020               	movlb	0	; select bank0
  3955  0632  01A0               	clrf	___lwmod@counter
  3956  0633  0AA0               	incf	___lwmod@counter,f
  3957  0634  2E3E               	goto	l2661
  3958  0635                     l2657:
  3959  0635  3001               	movlw	1
  3960  0636                     u1905:
  3961  0636  35F3               	lslf	___lwmod@divisor,f
  3962  0637  0DF4               	rlf	___lwmod@divisor+1,f
  3963  0638  0B89               	decfsz	9,f
  3964  0639  2E36               	goto	u1905
  3965  063A                     l2659:
  3966  063A  3001               	movlw	1
  3967  063B  00F7               	movwf	??___lwmod
  3968  063C  0877               	movf	??___lwmod,w
  3969  063D  07A0               	addwf	___lwmod@counter,f
  3970  063E                     l2661:
  3971  063E  1FF4               	btfss	___lwmod@divisor+1,7
  3972  063F  2E41               	goto	u1911
  3973  0640  2E42               	goto	u1910
  3974  0641                     u1911:
  3975  0641  2E35               	goto	l2657
  3976  0642                     u1910:
  3977  0642                     l2663:
  3978  0642  0874               	movf	___lwmod@divisor+1,w
  3979  0643  0276               	subwf	___lwmod@dividend+1,w
  3980  0644  1D03               	skipz
  3981  0645  2E48               	goto	u1925
  3982  0646  0873               	movf	___lwmod@divisor,w
  3983  0647  0275               	subwf	___lwmod@dividend,w
  3984  0648                     u1925:
  3985  0648  1C03               	skipc
  3986  0649  2E4B               	goto	u1921
  3987  064A  2E4C               	goto	u1920
  3988  064B                     u1921:
  3989  064B  2E50               	goto	l2667
  3990  064C                     u1920:
  3991  064C                     l2665:
  3992  064C  0873               	movf	___lwmod@divisor,w
  3993  064D  02F5               	subwf	___lwmod@dividend,f
  3994  064E  0874               	movf	___lwmod@divisor+1,w
  3995  064F  3BF6               	subwfb	___lwmod@dividend+1,f
  3996  0650                     l2667:
  3997  0650  3001               	movlw	1
  3998  0651                     u1935:
  3999  0651  36F4               	lsrf	___lwmod@divisor+1,f
  4000  0652  0CF3               	rrf	___lwmod@divisor,f
  4001  0653  0B89               	decfsz	9,f
  4002  0654  2E51               	goto	u1935
  4003  0655                     l2669:
  4004  0655  3001               	movlw	1
  4005  0656  02A0               	subwf	___lwmod@counter,f
  4006  0657  1D03               	btfss	3,2
  4007  0658  2E5A               	goto	u1941
  4008  0659  2E5B               	goto	u1940
  4009  065A                     u1941:
  4010  065A  2E42               	goto	l2663
  4011  065B                     u1940:
  4012  065B                     l2671:
  4013  065B  0876               	movf	___lwmod@dividend+1,w
  4014  065C  00F4               	movwf	?___lwmod+1
  4015  065D  0875               	movf	___lwmod@dividend,w
  4016  065E  00F3               	movwf	?___lwmod
  4017  065F                     l1075:
  4018  065F  0008               	return
  4019  0660                     __end_of___lwmod:
  4020                           
  4021                           	psect	text22
  4022  05B1                     __ptext22:	
  4023 ;; *************** function ___lwdiv *****************
  4024 ;; Defined at:
  4025 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  divisor         2    3[COMMON] unsigned int 
  4028 ;;  dividend        2    5[COMMON] unsigned int 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  quotient        2    1[BANK0 ] unsigned int 
  4031 ;;  counter         1    0[BANK0 ] unsigned char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  2    3[COMMON] unsigned int 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2, status,0
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4041 ;;      Params:         4       0       0       0       0       0
  4042 ;;      Locals:         0       3       0       0       0       0
  4043 ;;      Temps:          1       0       0       0       0       0
  4044 ;;      Totals:         5       3       0       0       0       0
  4045 ;;Total ram usage:        8 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    4
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_Ds_Convertir_en_uni
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           
  4056                           ;psect for function ___lwdiv
  4057  05B1                     ___lwdiv:
  4058  05B1                     l2627:	
  4059                           ;incstack = 0
  4060                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4061                           
  4062  05B1  0020               	movlb	0	; select bank0
  4063  05B2  01A1               	clrf	___lwdiv@quotient
  4064  05B3  01A2               	clrf	___lwdiv@quotient+1
  4065  05B4                     l2629:
  4066  05B4  0873               	movf	___lwdiv@divisor,w
  4067  05B5  0474               	iorwf	___lwdiv@divisor+1,w
  4068  05B6  1903               	btfsc	3,2
  4069  05B7  2DB9               	goto	u1821
  4070  05B8  2DBA               	goto	u1820
  4071  05B9                     u1821:
  4072  05B9  2DE9               	goto	l2649
  4073  05BA                     u1820:
  4074  05BA                     l2631:
  4075  05BA  01A0               	clrf	___lwdiv@counter
  4076  05BB  0AA0               	incf	___lwdiv@counter,f
  4077  05BC  2DC6               	goto	l2637
  4078  05BD                     l2633:
  4079  05BD  3001               	movlw	1
  4080  05BE                     u1835:
  4081  05BE  35F3               	lslf	___lwdiv@divisor,f
  4082  05BF  0DF4               	rlf	___lwdiv@divisor+1,f
  4083  05C0  0B89               	decfsz	9,f
  4084  05C1  2DBE               	goto	u1835
  4085  05C2                     l2635:
  4086  05C2  3001               	movlw	1
  4087  05C3  00F7               	movwf	??___lwdiv
  4088  05C4  0877               	movf	??___lwdiv,w
  4089  05C5  07A0               	addwf	___lwdiv@counter,f
  4090  05C6                     l2637:
  4091  05C6  1FF4               	btfss	___lwdiv@divisor+1,7
  4092  05C7  2DC9               	goto	u1841
  4093  05C8  2DCA               	goto	u1840
  4094  05C9                     u1841:
  4095  05C9  2DBD               	goto	l2633
  4096  05CA                     u1840:
  4097  05CA                     l2639:
  4098  05CA  3001               	movlw	1
  4099  05CB                     u1855:
  4100  05CB  35A1               	lslf	___lwdiv@quotient,f
  4101  05CC  0DA2               	rlf	___lwdiv@quotient+1,f
  4102  05CD  0B89               	decfsz	9,f
  4103  05CE  2DCB               	goto	u1855
  4104  05CF  0874               	movf	___lwdiv@divisor+1,w
  4105  05D0  0276               	subwf	___lwdiv@dividend+1,w
  4106  05D1  1D03               	skipz
  4107  05D2  2DD5               	goto	u1865
  4108  05D3  0873               	movf	___lwdiv@divisor,w
  4109  05D4  0275               	subwf	___lwdiv@dividend,w
  4110  05D5                     u1865:
  4111  05D5  1C03               	skipc
  4112  05D6  2DD8               	goto	u1861
  4113  05D7  2DD9               	goto	u1860
  4114  05D8                     u1861:
  4115  05D8  2DDE               	goto	l2645
  4116  05D9                     u1860:
  4117  05D9                     l2641:
  4118  05D9  0873               	movf	___lwdiv@divisor,w
  4119  05DA  02F5               	subwf	___lwdiv@dividend,f
  4120  05DB  0874               	movf	___lwdiv@divisor+1,w
  4121  05DC  3BF6               	subwfb	___lwdiv@dividend+1,f
  4122  05DD                     l2643:
  4123  05DD  1421               	bsf	___lwdiv@quotient,0
  4124  05DE                     l2645:
  4125  05DE  3001               	movlw	1
  4126  05DF                     u1875:
  4127  05DF  36F4               	lsrf	___lwdiv@divisor+1,f
  4128  05E0  0CF3               	rrf	___lwdiv@divisor,f
  4129  05E1  0B89               	decfsz	9,f
  4130  05E2  2DDF               	goto	u1875
  4131  05E3                     l2647:
  4132  05E3  3001               	movlw	1
  4133  05E4  02A0               	subwf	___lwdiv@counter,f
  4134  05E5  1D03               	btfss	3,2
  4135  05E6  2DE8               	goto	u1881
  4136  05E7  2DE9               	goto	u1880
  4137  05E8                     u1881:
  4138  05E8  2DCA               	goto	l2639
  4139  05E9                     u1880:
  4140  05E9                     l2649:
  4141  05E9  0822               	movf	___lwdiv@quotient+1,w
  4142  05EA  00F4               	movwf	?___lwdiv+1
  4143  05EB  0821               	movf	___lwdiv@quotient,w
  4144  05EC  00F3               	movwf	?___lwdiv
  4145  05ED                     l1065:
  4146  05ED  0008               	return
  4147  05EE                     __end_of___lwdiv:
  4148                           
  4149                           	psect	text23
  4150  05EE                     __ptext23:	
  4151 ;; *************** function _Ds_Conversor_ADC *****************
  4152 ;; Defined at:
  4153 ;;		line 198 in file "displays.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  adcOUT          2   47[BANK0 ] unsigned short 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  pendiente       4   49[BANK0 ] float 
  4158 ;;  voltios         2   53[BANK0 ] unsigned short 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  2   47[BANK0 ] unsigned short 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0, pclath, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4168 ;;      Params:         0       2       0       0       0       0
  4169 ;;      Locals:         0       6       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0       0
  4171 ;;      Totals:         0       8       0       0       0       0
  4172 ;;Total ram usage:        8 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    6
  4175 ;; This function calls:
  4176 ;;		___flmul
  4177 ;;		___fltol
  4178 ;;		___xxtofl
  4179 ;; This function is called by:
  4180 ;;		_main
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           
  4185                           ;psect for function _Ds_Conversor_ADC
  4186  05EE                     _Ds_Conversor_ADC:
  4187  05EE                     l2899:	
  4188                           ;incstack = 0
  4189                           ; Regs used in _Ds_Conversor_ADC: [wreg+status,2+status,0+pclath+cstack]
  4190                           
  4191                           
  4192                           ;displays.c: 199:     float pendiente = 0.97665;
  4193  05EE  303F               	movlw	63
  4194  05EF  0020               	movlb	0	; select bank0
  4195  05F0  00D4               	movwf	Ds_Conversor_ADC@pendiente+3
  4196  05F1  307A               	movlw	122
  4197  05F2  00D3               	movwf	Ds_Conversor_ADC@pendiente+2
  4198  05F3  3005               	movlw	5
  4199  05F4  00D2               	movwf	Ds_Conversor_ADC@pendiente+1
  4200  05F5  30BC               	movlw	188
  4201  05F6  00D1               	movwf	Ds_Conversor_ADC@pendiente
  4202  05F7                     l2901:
  4203                           
  4204                           ;displays.c: 200:     uint16_t voltios = (uint16_t)(((float)adcOUT)*pendiente);
  4205  05F7  084F               	movf	Ds_Conversor_ADC@adcOUT,w
  4206  05F8  00F3               	movwf	___xxtofl@val
  4207  05F9  0850               	movf	Ds_Conversor_ADC@adcOUT+1,w
  4208  05FA  00F4               	movwf	___xxtofl@val+1
  4209  05FB  01F5               	clrf	___xxtofl@val+2
  4210  05FC  01F6               	clrf	___xxtofl@val+3
  4211  05FD  3000               	movlw	0
  4212  05FE  3183  2355  3185   	fcall	___xxtofl
  4213  0601  0876               	movf	?___xxtofl+3,w
  4214  0602  0020               	movlb	0	; select bank0
  4215  0603  00B1               	movwf	___flmul@a+3
  4216  0604  0875               	movf	?___xxtofl+2,w
  4217  0605  00B0               	movwf	___flmul@a+2
  4218  0606  0874               	movf	?___xxtofl+1,w
  4219  0607  00AF               	movwf	___flmul@a+1
  4220  0608  0873               	movf	?___xxtofl,w
  4221  0609  00AE               	movwf	___flmul@a
  4222  060A  0854               	movf	Ds_Conversor_ADC@pendiente+3,w
  4223  060B  00AD               	movwf	___flmul@b+3
  4224  060C  0853               	movf	Ds_Conversor_ADC@pendiente+2,w
  4225  060D  00AC               	movwf	___flmul@b+2
  4226  060E  0852               	movf	Ds_Conversor_ADC@pendiente+1,w
  4227  060F  00AB               	movwf	___flmul@b+1
  4228  0610  0851               	movf	Ds_Conversor_ADC@pendiente,w
  4229  0611  00AA               	movwf	___flmul@b
  4230  0612  3180  2039  3185   	fcall	___flmul
  4231  0615  0020               	movlb	0	; select bank0
  4232  0616  082D               	movf	?___flmul+3,w
  4233  0617  00C7               	movwf	___fltol@f1+3
  4234  0618  082C               	movf	?___flmul+2,w
  4235  0619  00C6               	movwf	___fltol@f1+2
  4236  061A  082B               	movf	?___flmul+1,w
  4237  061B  00C5               	movwf	___fltol@f1+1
  4238  061C  082A               	movf	?___flmul,w
  4239  061D  00C4               	movwf	___fltol@f1
  4240  061E  3184  249F  3185   	fcall	___fltol
  4241  0621  0020               	movlb	0	; select bank0
  4242  0622  0845               	movf	?___fltol+1,w
  4243  0623  00D6               	movwf	Ds_Conversor_ADC@voltios+1
  4244  0624  0844               	movf	?___fltol,w
  4245  0625  00D5               	movwf	Ds_Conversor_ADC@voltios
  4246  0626                     l2903:
  4247                           
  4248                           ;displays.c: 201:  return(voltios);
  4249  0626  0856               	movf	Ds_Conversor_ADC@voltios+1,w
  4250  0627  00D0               	movwf	?_Ds_Conversor_ADC+1
  4251  0628  0855               	movf	Ds_Conversor_ADC@voltios,w
  4252  0629  00CF               	movwf	?_Ds_Conversor_ADC
  4253  062A                     l551:
  4254  062A  0008               	return
  4255  062B                     __end_of_Ds_Conversor_ADC:
  4256                           
  4257                           	psect	text24
  4258  0355                     __ptext24:	
  4259 ;; *************** function ___xxtofl *****************
  4260 ;; Defined at:
  4261 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  sign            1    wreg     unsigned char 
  4264 ;;  val             4    3[COMMON] long 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  sign            1    4[BANK0 ] unsigned char 
  4267 ;;  arg             4    6[BANK0 ] unsigned long 
  4268 ;;  exp             1    5[BANK0 ] unsigned char 
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  4    3[COMMON] unsigned char 
  4271 ;; Registers used:
  4272 ;;		wreg, status,2, status,0
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4278 ;;      Params:         4       0       0       0       0       0
  4279 ;;      Locals:         0       6       0       0       0       0
  4280 ;;      Temps:          0       4       0       0       0       0
  4281 ;;      Totals:         4      10       0       0       0       0
  4282 ;;Total ram usage:       14 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; Hardware stack levels required when called:    4
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_Ds_Conversor_ADC
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           
  4293                           ;psect for function ___xxtofl
  4294  0355                     ___xxtofl:
  4295                           
  4296                           ;incstack = 0
  4297                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4298                           ;___xxtofl@sign stored from wreg
  4299  0355  0020               	movlb	0	; select bank0
  4300  0356  00A4               	movwf	___xxtofl@sign
  4301  0357                     l2815:
  4302  0357  0824               	movf	___xxtofl@sign,w
  4303  0358  1903               	btfsc	3,2
  4304  0359  2B5B               	goto	u2211
  4305  035A  2B5C               	goto	u2210
  4306  035B                     u2211:
  4307  035B  2B70               	goto	l2821
  4308  035C                     u2210:
  4309  035C                     l2817:
  4310  035C  1FF6               	btfss	___xxtofl@val+3,7
  4311  035D  2B5F               	goto	u2221
  4312  035E  2B60               	goto	u2220
  4313  035F                     u2221:
  4314  035F  2B70               	goto	l2821
  4315  0360                     u2220:
  4316  0360                     l2819:
  4317  0360  0973               	comf	___xxtofl@val,w
  4318  0361  00A6               	movwf	___xxtofl@arg
  4319  0362  0974               	comf	___xxtofl@val+1,w
  4320  0363  00A7               	movwf	___xxtofl@arg+1
  4321  0364  0975               	comf	___xxtofl@val+2,w
  4322  0365  00A8               	movwf	___xxtofl@arg+2
  4323  0366  0976               	comf	___xxtofl@val+3,w
  4324  0367  00A9               	movwf	___xxtofl@arg+3
  4325  0368  0AA6               	incf	___xxtofl@arg,f
  4326  0369  1903               	skipnz
  4327  036A  0AA7               	incf	___xxtofl@arg+1,f
  4328  036B  1903               	skipnz
  4329  036C  0AA8               	incf	___xxtofl@arg+2,f
  4330  036D  1903               	skipnz
  4331  036E  0AA9               	incf	___xxtofl@arg+3,f
  4332  036F  2B78               	goto	l1226
  4333  0370                     l2821:
  4334  0370  0876               	movf	___xxtofl@val+3,w
  4335  0371  00A9               	movwf	___xxtofl@arg+3
  4336  0372  0875               	movf	___xxtofl@val+2,w
  4337  0373  00A8               	movwf	___xxtofl@arg+2
  4338  0374  0874               	movf	___xxtofl@val+1,w
  4339  0375  00A7               	movwf	___xxtofl@arg+1
  4340  0376  0873               	movf	___xxtofl@val,w
  4341  0377  00A6               	movwf	___xxtofl@arg
  4342  0378                     l1226:
  4343  0378  0876               	movf	___xxtofl@val+3,w
  4344  0379  0475               	iorwf	___xxtofl@val+2,w
  4345  037A  0474               	iorwf	___xxtofl@val+1,w
  4346  037B  0473               	iorwf	___xxtofl@val,w
  4347  037C  1D03               	skipz
  4348  037D  2B7F               	goto	u2231
  4349  037E  2B80               	goto	u2230
  4350  037F                     u2231:
  4351  037F  2B89               	goto	l2827
  4352  0380                     u2230:
  4353  0380                     l2823:
  4354  0380  3000               	movlw	0
  4355  0381  00F6               	movwf	?___xxtofl+3
  4356  0382  3000               	movlw	0
  4357  0383  00F5               	movwf	?___xxtofl+2
  4358  0384  3000               	movlw	0
  4359  0385  00F4               	movwf	?___xxtofl+1
  4360  0386  3000               	movlw	0
  4361  0387  00F3               	movwf	?___xxtofl
  4362  0388  2C01               	goto	l1228
  4363  0389                     l2827:
  4364  0389  3096               	movlw	150
  4365  038A  00A0               	movwf	??___xxtofl
  4366  038B  0820               	movf	??___xxtofl,w
  4367  038C  00A5               	movwf	___xxtofl@exp
  4368  038D  2B99               	goto	l2831
  4369  038E                     l2829:
  4370  038E  3001               	movlw	1
  4371  038F  00A0               	movwf	??___xxtofl
  4372  0390  0820               	movf	??___xxtofl,w
  4373  0391  07A5               	addwf	___xxtofl@exp,f
  4374  0392  3001               	movlw	1
  4375  0393                     u2245:
  4376  0393  36A9               	lsrf	___xxtofl@arg+3,f
  4377  0394  0CA8               	rrf	___xxtofl@arg+2,f
  4378  0395  0CA7               	rrf	___xxtofl@arg+1,f
  4379  0396  0CA6               	rrf	___xxtofl@arg,f
  4380  0397  0B89               	decfsz	9,f
  4381  0398  2B93               	goto	u2245
  4382  0399                     l2831:
  4383  0399  30FE               	movlw	254
  4384  039A  0529               	andwf	___xxtofl@arg+3,w
  4385  039B  1D03               	btfss	3,2
  4386  039C  2B9E               	goto	u2251
  4387  039D  2B9F               	goto	u2250
  4388  039E                     u2251:
  4389  039E  2B8E               	goto	l2829
  4390  039F                     u2250:
  4391  039F  2BB3               	goto	l1232
  4392  03A0                     l2833:
  4393  03A0  3001               	movlw	1
  4394  03A1  00A0               	movwf	??___xxtofl
  4395  03A2  0820               	movf	??___xxtofl,w
  4396  03A3  07A5               	addwf	___xxtofl@exp,f
  4397  03A4                     l2835:
  4398  03A4  3001               	movlw	1
  4399  03A5  07A6               	addwf	___xxtofl@arg,f
  4400  03A6  3000               	movlw	0
  4401  03A7  3DA7               	addwfc	___xxtofl@arg+1,f
  4402  03A8  3000               	movlw	0
  4403  03A9  3DA8               	addwfc	___xxtofl@arg+2,f
  4404  03AA  3000               	movlw	0
  4405  03AB  3DA9               	addwfc	___xxtofl@arg+3,f
  4406  03AC                     l2837:
  4407  03AC  3001               	movlw	1
  4408  03AD                     u2265:
  4409  03AD  36A9               	lsrf	___xxtofl@arg+3,f
  4410  03AE  0CA8               	rrf	___xxtofl@arg+2,f
  4411  03AF  0CA7               	rrf	___xxtofl@arg+1,f
  4412  03B0  0CA6               	rrf	___xxtofl@arg,f
  4413  03B1  0B89               	decfsz	9,f
  4414  03B2  2BAD               	goto	u2265
  4415  03B3                     l1232:
  4416  03B3  30FF               	movlw	255
  4417  03B4  0529               	andwf	___xxtofl@arg+3,w
  4418  03B5  1D03               	btfss	3,2
  4419  03B6  2BB8               	goto	u2271
  4420  03B7  2BB9               	goto	u2270
  4421  03B8                     u2271:
  4422  03B8  2BA0               	goto	l2833
  4423  03B9                     u2270:
  4424  03B9  2BC3               	goto	l2841
  4425  03BA                     l2839:
  4426  03BA  3001               	movlw	1
  4427  03BB  02A5               	subwf	___xxtofl@exp,f
  4428  03BC  3001               	movlw	1
  4429  03BD                     u2285:
  4430  03BD  35A6               	lslf	___xxtofl@arg,f
  4431  03BE  0DA7               	rlf	___xxtofl@arg+1,f
  4432  03BF  0DA8               	rlf	___xxtofl@arg+2,f
  4433  03C0  0DA9               	rlf	___xxtofl@arg+3,f
  4434  03C1  0B89               	decfsz	9,f
  4435  03C2  2BBD               	goto	u2285
  4436  03C3                     l2841:
  4437  03C3  1BA8               	btfsc	___xxtofl@arg+2,7
  4438  03C4  2BC6               	goto	u2291
  4439  03C5  2BC7               	goto	u2290
  4440  03C6                     u2291:
  4441  03C6  2BCD               	goto	l1239
  4442  03C7                     u2290:
  4443  03C7                     l2843:
  4444  03C7  3002               	movlw	2
  4445  03C8  0225               	subwf	___xxtofl@exp,w
  4446  03C9  1803               	skipnc
  4447  03CA  2BCC               	goto	u2301
  4448  03CB  2BCD               	goto	u2300
  4449  03CC                     u2301:
  4450  03CC  2BBA               	goto	l2839
  4451  03CD                     u2300:
  4452  03CD                     l1239:
  4453  03CD  1825               	btfsc	___xxtofl@exp,0
  4454  03CE  2BD0               	goto	u2311
  4455  03CF  2BD1               	goto	u2310
  4456  03D0                     u2311:
  4457  03D0  2BD9               	goto	l1240
  4458  03D1                     u2310:
  4459  03D1                     l2845:
  4460  03D1  30FF               	movlw	255
  4461  03D2  05A6               	andwf	___xxtofl@arg,f
  4462  03D3  30FF               	movlw	255
  4463  03D4  05A7               	andwf	___xxtofl@arg+1,f
  4464  03D5  307F               	movlw	127
  4465  03D6  05A8               	andwf	___xxtofl@arg+2,f
  4466  03D7  30FF               	movlw	255
  4467  03D8  05A9               	andwf	___xxtofl@arg+3,f
  4468  03D9                     l1240:
  4469  03D9  1003               	clrc
  4470  03DA  0CA5               	rrf	___xxtofl@exp,f
  4471  03DB                     l2847:
  4472  03DB  0825               	movf	___xxtofl@exp,w
  4473  03DC  00A0               	movwf	??___xxtofl
  4474  03DD  01A1               	clrf	??___xxtofl+1
  4475  03DE  01A2               	clrf	??___xxtofl+2
  4476  03DF  01A3               	clrf	??___xxtofl+3
  4477  03E0  3018               	movlw	24
  4478  03E1                     u2325:
  4479  03E1  35A0               	lslf	??___xxtofl,f
  4480  03E2  0DA1               	rlf	??___xxtofl+1,f
  4481  03E3  0DA2               	rlf	??___xxtofl+2,f
  4482  03E4  0DA3               	rlf	??___xxtofl+3,f
  4483  03E5                     u2320:
  4484  03E5  0B89               	decfsz	9,f
  4485  03E6  2BE1               	goto	u2325
  4486  03E7  0820               	movf	??___xxtofl,w
  4487  03E8  04A6               	iorwf	___xxtofl@arg,f
  4488  03E9  0821               	movf	??___xxtofl+1,w
  4489  03EA  04A7               	iorwf	___xxtofl@arg+1,f
  4490  03EB  0822               	movf	??___xxtofl+2,w
  4491  03EC  04A8               	iorwf	___xxtofl@arg+2,f
  4492  03ED  0823               	movf	??___xxtofl+3,w
  4493  03EE  04A9               	iorwf	___xxtofl@arg+3,f
  4494  03EF                     l2849:
  4495  03EF  0824               	movf	___xxtofl@sign,w
  4496  03F0  1903               	btfsc	3,2
  4497  03F1  2BF3               	goto	u2331
  4498  03F2  2BF4               	goto	u2330
  4499  03F3                     u2331:
  4500  03F3  2BF9               	goto	l2855
  4501  03F4                     u2330:
  4502  03F4                     l2851:
  4503  03F4  1FF6               	btfss	___xxtofl@val+3,7
  4504  03F5  2BF7               	goto	u2341
  4505  03F6  2BF8               	goto	u2340
  4506  03F7                     u2341:
  4507  03F7  2BF9               	goto	l2855
  4508  03F8                     u2340:
  4509  03F8                     l2853:
  4510  03F8  17A9               	bsf	___xxtofl@arg+3,7
  4511  03F9                     l2855:
  4512  03F9  0829               	movf	___xxtofl@arg+3,w
  4513  03FA  00F6               	movwf	?___xxtofl+3
  4514  03FB  0828               	movf	___xxtofl@arg+2,w
  4515  03FC  00F5               	movwf	?___xxtofl+2
  4516  03FD  0827               	movf	___xxtofl@arg+1,w
  4517  03FE  00F4               	movwf	?___xxtofl+1
  4518  03FF  0826               	movf	___xxtofl@arg,w
  4519  0400  00F3               	movwf	?___xxtofl
  4520  0401                     l1228:
  4521  0401  0008               	return
  4522  0402                     __end_of___xxtofl:
  4523                           
  4524                           	psect	text25
  4525  049F                     __ptext25:	
  4526 ;; *************** function ___fltol *****************
  4527 ;; Defined at:
  4528 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  f1              4   36[BANK0 ] unsigned char 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  exp1            1   46[BANK0 ] unsigned char 
  4533 ;;  sign1           1   45[BANK0 ] unsigned char 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  4   36[BANK0 ] long 
  4536 ;; Registers used:
  4537 ;;		wreg, status,2, status,0
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4543 ;;      Params:         0       4       0       0       0       0
  4544 ;;      Locals:         0       2       0       0       0       0
  4545 ;;      Temps:          0       5       0       0       0       0
  4546 ;;      Totals:         0      11       0       0       0       0
  4547 ;;Total ram usage:       11 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    4
  4550 ;; This function calls:
  4551 ;;		Nothing
  4552 ;; This function is called by:
  4553 ;;		_Ds_Conversor_ADC
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           
  4558                           ;psect for function ___fltol
  4559  049F                     ___fltol:
  4560  049F                     l2591:	
  4561                           ;incstack = 0
  4562                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4563                           
  4564  049F  1003               	clrc
  4565  04A0  0020               	movlb	0	; select bank0
  4566  04A1  0D46               	rlf	___fltol@f1+2,w
  4567  04A2  0D47               	rlf	___fltol@f1+3,w
  4568  04A3  00C8               	movwf	??___fltol
  4569  04A4  0848               	movf	??___fltol,w
  4570  04A5  00CE               	movwf	___fltol@exp1
  4571  04A6  084E               	movf	___fltol@exp1,w
  4572  04A7  1D03               	btfss	3,2
  4573  04A8  2CAA               	goto	u1721
  4574  04A9  2CAB               	goto	u1720
  4575  04AA                     u1721:
  4576  04AA  2CB4               	goto	l2597
  4577  04AB                     u1720:
  4578  04AB                     l2593:
  4579  04AB  3000               	movlw	0
  4580  04AC  00C7               	movwf	?___fltol+3
  4581  04AD  3000               	movlw	0
  4582  04AE  00C6               	movwf	?___fltol+2
  4583  04AF  3000               	movlw	0
  4584  04B0  00C5               	movwf	?___fltol+1
  4585  04B1  3000               	movlw	0
  4586  04B2  00C4               	movwf	?___fltol
  4587  04B3  2D13               	goto	l979
  4588  04B4                     l2597:
  4589  04B4  0844               	movf	___fltol@f1,w
  4590  04B5  00C8               	movwf	??___fltol
  4591  04B6  0845               	movf	___fltol@f1+1,w
  4592  04B7  00C9               	movwf	??___fltol+1
  4593  04B8  0846               	movf	___fltol@f1+2,w
  4594  04B9  00CA               	movwf	??___fltol+2
  4595  04BA  0847               	movf	___fltol@f1+3,w
  4596  04BB  00CB               	movwf	??___fltol+3
  4597  04BC  301F               	movlw	31
  4598  04BD                     u1735:
  4599  04BD  36CB               	lsrf	??___fltol+3,f
  4600  04BE  0CCA               	rrf	??___fltol+2,f
  4601  04BF  0CC9               	rrf	??___fltol+1,f
  4602  04C0  0CC8               	rrf	??___fltol,f
  4603  04C1                     u1730:
  4604  04C1  0B89               	decfsz	9,f
  4605  04C2  2CBD               	goto	u1735
  4606  04C3  0848               	movf	??___fltol,w
  4607  04C4  00CC               	movwf	??___fltol+4
  4608  04C5  084C               	movf	??___fltol+4,w
  4609  04C6  00CD               	movwf	___fltol@sign1
  4610  04C7                     l2599:
  4611  04C7  17C6               	bsf	___fltol@f1+2,7
  4612  04C8                     l2601:
  4613  04C8  30FF               	movlw	255
  4614  04C9  05C4               	andwf	___fltol@f1,f
  4615  04CA  30FF               	movlw	255
  4616  04CB  05C5               	andwf	___fltol@f1+1,f
  4617  04CC  30FF               	movlw	255
  4618  04CD  05C6               	andwf	___fltol@f1+2,f
  4619  04CE  3000               	movlw	0
  4620  04CF  05C7               	andwf	___fltol@f1+3,f
  4621  04D0                     l2603:
  4622  04D0  3096               	movlw	150
  4623  04D1  02CE               	subwf	___fltol@exp1,f
  4624  04D2                     l2605:
  4625  04D2  1FCE               	btfss	___fltol@exp1,7
  4626  04D3  2CD5               	goto	u1741
  4627  04D4  2CD6               	goto	u1740
  4628  04D5                     u1741:
  4629  04D5  2CEE               	goto	l2615
  4630  04D6                     u1740:
  4631  04D6                     l2607:
  4632  04D6  084E               	movf	___fltol@exp1,w
  4633  04D7  3A80               	xorlw	128
  4634  04D8  3E97               	addlw	151
  4635  04D9  1803               	skipnc
  4636  04DA  2CDC               	goto	u1751
  4637  04DB  2CDD               	goto	u1750
  4638  04DC                     u1751:
  4639  04DC  2CDE               	goto	l2613
  4640  04DD                     u1750:
  4641  04DD  2CAB               	goto	l2593
  4642  04DE                     l2613:
  4643  04DE  3001               	movlw	1
  4644  04DF                     u1765:
  4645  04DF  36C7               	lsrf	___fltol@f1+3,f
  4646  04E0  0CC6               	rrf	___fltol@f1+2,f
  4647  04E1  0CC5               	rrf	___fltol@f1+1,f
  4648  04E2  0CC4               	rrf	___fltol@f1,f
  4649  04E3  0B89               	decfsz	9,f
  4650  04E4  2CDF               	goto	u1765
  4651  04E5  3001               	movlw	1
  4652  04E6  00C8               	movwf	??___fltol
  4653  04E7  0848               	movf	??___fltol,w
  4654  04E8  07CE               	addwf	___fltol@exp1,f
  4655  04E9  1D03               	btfss	3,2
  4656  04EA  2CEC               	goto	u1771
  4657  04EB  2CED               	goto	u1770
  4658  04EC                     u1771:
  4659  04EC  2CDE               	goto	l2613
  4660  04ED                     u1770:
  4661  04ED  2D03               	goto	l2623
  4662  04EE                     l2615:
  4663  04EE  3020               	movlw	32
  4664  04EF  024E               	subwf	___fltol@exp1,w
  4665  04F0  1C03               	skipc
  4666  04F1  2CF3               	goto	u1781
  4667  04F2  2CF4               	goto	u1780
  4668  04F3                     u1781:
  4669  04F3  2CFE               	goto	l986
  4670  04F4                     u1780:
  4671  04F4  2CAB               	goto	l2593
  4672  04F5                     l2621:
  4673  04F5  3001               	movlw	1
  4674  04F6                     u1795:
  4675  04F6  35C4               	lslf	___fltol@f1,f
  4676  04F7  0DC5               	rlf	___fltol@f1+1,f
  4677  04F8  0DC6               	rlf	___fltol@f1+2,f
  4678  04F9  0DC7               	rlf	___fltol@f1+3,f
  4679  04FA  0B89               	decfsz	9,f
  4680  04FB  2CF6               	goto	u1795
  4681  04FC  3001               	movlw	1
  4682  04FD  02CE               	subwf	___fltol@exp1,f
  4683  04FE                     l986:
  4684  04FE  084E               	movf	___fltol@exp1,w
  4685  04FF  1D03               	btfss	3,2
  4686  0500  2D02               	goto	u1801
  4687  0501  2D03               	goto	u1800
  4688  0502                     u1801:
  4689  0502  2CF5               	goto	l2621
  4690  0503                     u1800:
  4691  0503                     l2623:
  4692  0503  084D               	movf	___fltol@sign1,w
  4693  0504  1903               	btfsc	3,2
  4694  0505  2D07               	goto	u1811
  4695  0506  2D08               	goto	u1810
  4696  0507                     u1811:
  4697  0507  2D13               	goto	l989
  4698  0508                     u1810:
  4699  0508                     l2625:
  4700  0508  09C4               	comf	___fltol@f1,f
  4701  0509  09C5               	comf	___fltol@f1+1,f
  4702  050A  09C6               	comf	___fltol@f1+2,f
  4703  050B  09C7               	comf	___fltol@f1+3,f
  4704  050C  0AC4               	incf	___fltol@f1,f
  4705  050D  1903               	skipnz
  4706  050E  0AC5               	incf	___fltol@f1+1,f
  4707  050F  1903               	skipnz
  4708  0510  0AC6               	incf	___fltol@f1+2,f
  4709  0511  1903               	skipnz
  4710  0512  0AC7               	incf	___fltol@f1+3,f
  4711  0513                     l989:
  4712  0513                     l979:
  4713  0513  0008               	return
  4714  0514                     __end_of___fltol:
  4715                           
  4716                           	psect	text26
  4717  0039                     __ptext26:	
  4718 ;; *************** function ___flmul *****************
  4719 ;; Defined at:
  4720 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  b               4   10[BANK0 ] long 
  4723 ;;  a               4   14[BANK0 ] long 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  prod            4   30[BANK0 ] struct .
  4726 ;;  grs             4   25[BANK0 ] unsigned long 
  4727 ;;  temp            2   34[BANK0 ] struct .
  4728 ;;  bexp            1   29[BANK0 ] unsigned char 
  4729 ;;  aexp            1   24[BANK0 ] unsigned char 
  4730 ;;  sign            1   23[BANK0 ] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  4   10[BANK0 ] unsigned char 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0, pclath, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4740 ;;      Params:         0       8       0       0       0       0
  4741 ;;      Locals:         0      13       0       0       0       0
  4742 ;;      Temps:          0       5       0       0       0       0
  4743 ;;      Totals:         0      26       0       0       0       0
  4744 ;;Total ram usage:       26 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    5
  4747 ;; This function calls:
  4748 ;;		__Umul8_16
  4749 ;; This function is called by:
  4750 ;;		_Ds_Conversor_ADC
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           
  4755                           ;psect for function ___flmul
  4756  0039                     ___flmul:
  4757  0039                     l2675:	
  4758                           ;incstack = 0
  4759                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  4760                           
  4761  0039  0020               	movlb	0	; select bank0
  4762  003A  082D               	movf	___flmul@b+3,w
  4763  003B  3980               	andlw	128
  4764  003C  00B2               	movwf	??___flmul
  4765  003D  0832               	movf	??___flmul,w
  4766  003E  00B7               	movwf	___flmul@sign
  4767  003F                     l2677:
  4768  003F  352D               	lslf	___flmul@b+3,w
  4769  0040  00B2               	movwf	??___flmul
  4770  0041  0832               	movf	??___flmul,w
  4771  0042  00BD               	movwf	___flmul@bexp
  4772  0043                     l2679:
  4773  0043  1FAC               	btfss	___flmul@b+2,7
  4774  0044  2846               	goto	u1951
  4775  0045  2847               	goto	u1950
  4776  0046                     u1951:
  4777  0046  2848               	goto	l2683
  4778  0047                     u1950:
  4779  0047                     l2681:
  4780  0047  143D               	bsf	___flmul@bexp,0
  4781  0048                     l2683:
  4782  0048  083D               	movf	___flmul@bexp,w
  4783  0049  1903               	btfsc	3,2
  4784  004A  284C               	goto	u1961
  4785  004B  284D               	goto	u1960
  4786  004C                     u1961:
  4787  004C  285C               	goto	l2691
  4788  004D                     u1960:
  4789  004D                     l2685:
  4790  004D  0A3D               	incf	___flmul@bexp,w
  4791  004E  1D03               	btfss	3,2
  4792  004F  2851               	goto	u1971
  4793  0050  2852               	goto	u1970
  4794  0051                     u1971:
  4795  0051  285A               	goto	l2689
  4796  0052                     u1970:
  4797  0052                     l2687:
  4798  0052  3000               	movlw	0
  4799  0053  00AD               	movwf	___flmul@b+3
  4800  0054  3000               	movlw	0
  4801  0055  00AC               	movwf	___flmul@b+2
  4802  0056  3000               	movlw	0
  4803  0057  00AB               	movwf	___flmul@b+1
  4804  0058  3000               	movlw	0
  4805  0059  00AA               	movwf	___flmul@b
  4806  005A                     l2689:
  4807  005A  17AC               	bsf	___flmul@b+2,7
  4808  005B  2864               	goto	l2693
  4809  005C                     l2691:
  4810  005C  3000               	movlw	0
  4811  005D  00AD               	movwf	___flmul@b+3
  4812  005E  3000               	movlw	0
  4813  005F  00AC               	movwf	___flmul@b+2
  4814  0060  3000               	movlw	0
  4815  0061  00AB               	movwf	___flmul@b+1
  4816  0062  3000               	movlw	0
  4817  0063  00AA               	movwf	___flmul@b
  4818  0064                     l2693:
  4819  0064  0831               	movf	___flmul@a+3,w
  4820  0065  3980               	andlw	128
  4821  0066  00B2               	movwf	??___flmul
  4822  0067  0832               	movf	??___flmul,w
  4823  0068  06B7               	xorwf	___flmul@sign,f
  4824  0069                     l2695:
  4825  0069  3531               	lslf	___flmul@a+3,w
  4826  006A  00B2               	movwf	??___flmul
  4827  006B  0832               	movf	??___flmul,w
  4828  006C  00B8               	movwf	___flmul@aexp
  4829  006D                     l2697:
  4830  006D  1FB0               	btfss	___flmul@a+2,7
  4831  006E  2870               	goto	u1981
  4832  006F  2871               	goto	u1980
  4833  0070                     u1981:
  4834  0070  2872               	goto	l2701
  4835  0071                     u1980:
  4836  0071                     l2699:
  4837  0071  1438               	bsf	___flmul@aexp,0
  4838  0072                     l2701:
  4839  0072  0838               	movf	___flmul@aexp,w
  4840  0073  1903               	btfsc	3,2
  4841  0074  2876               	goto	u1991
  4842  0075  2877               	goto	u1990
  4843  0076                     u1991:
  4844  0076  2886               	goto	l2709
  4845  0077                     u1990:
  4846  0077                     l2703:
  4847  0077  0A38               	incf	___flmul@aexp,w
  4848  0078  1D03               	btfss	3,2
  4849  0079  287B               	goto	u2001
  4850  007A  287C               	goto	u2000
  4851  007B                     u2001:
  4852  007B  2884               	goto	l2707
  4853  007C                     u2000:
  4854  007C                     l2705:
  4855  007C  3000               	movlw	0
  4856  007D  00B1               	movwf	___flmul@a+3
  4857  007E  3000               	movlw	0
  4858  007F  00B0               	movwf	___flmul@a+2
  4859  0080  3000               	movlw	0
  4860  0081  00AF               	movwf	___flmul@a+1
  4861  0082  3000               	movlw	0
  4862  0083  00AE               	movwf	___flmul@a
  4863  0084                     l2707:
  4864  0084  17B0               	bsf	___flmul@a+2,7
  4865  0085  288E               	goto	l2711
  4866  0086                     l2709:
  4867  0086  3000               	movlw	0
  4868  0087  00B1               	movwf	___flmul@a+3
  4869  0088  3000               	movlw	0
  4870  0089  00B0               	movwf	___flmul@a+2
  4871  008A  3000               	movlw	0
  4872  008B  00AF               	movwf	___flmul@a+1
  4873  008C  3000               	movlw	0
  4874  008D  00AE               	movwf	___flmul@a
  4875  008E                     l2711:
  4876  008E  0838               	movf	___flmul@aexp,w
  4877  008F  1903               	btfsc	3,2
  4878  0090  2892               	goto	u2011
  4879  0091  2893               	goto	u2010
  4880  0092                     u2011:
  4881  0092  2898               	goto	l2715
  4882  0093                     u2010:
  4883  0093                     l2713:
  4884  0093  083D               	movf	___flmul@bexp,w
  4885  0094  1D03               	btfss	3,2
  4886  0095  2897               	goto	u2021
  4887  0096  2898               	goto	u2020
  4888  0097                     u2021:
  4889  0097  28A1               	goto	l2719
  4890  0098                     u2020:
  4891  0098                     l2715:
  4892  0098  3000               	movlw	0
  4893  0099  00AD               	movwf	?___flmul+3
  4894  009A  3000               	movlw	0
  4895  009B  00AC               	movwf	?___flmul+2
  4896  009C  3000               	movlw	0
  4897  009D  00AB               	movwf	?___flmul+1
  4898  009E  3000               	movlw	0
  4899  009F  00AA               	movwf	?___flmul
  4900  00A0  2A8F               	goto	l1182
  4901  00A1                     l2719:
  4902  00A1  082A               	movf	___flmul@b,w
  4903  00A2  00B2               	movwf	??___flmul
  4904  00A3  0832               	movf	??___flmul,w
  4905  00A4  00F3               	movwf	__Umul8_16@multiplicand
  4906  00A5  0830               	movf	___flmul@a+2,w
  4907  00A6  3186  268B  3180   	fcall	__Umul8_16
  4908  00A9  0874               	movf	?__Umul8_16+1,w
  4909  00AA  0020               	movlb	0	; select bank0
  4910  00AB  00C3               	movwf	___flmul@temp+1
  4911  00AC  0873               	movf	?__Umul8_16,w
  4912  00AD  00C2               	movwf	___flmul@temp
  4913  00AE                     l2721:
  4914  00AE  0842               	movf	___flmul@temp,w
  4915  00AF  00B2               	movwf	??___flmul
  4916  00B0  01B3               	clrf	??___flmul+1
  4917  00B1  01B4               	clrf	??___flmul+2
  4918  00B2  01B5               	clrf	??___flmul+3
  4919  00B3  0835               	movf	??___flmul+3,w
  4920  00B4  00BC               	movwf	___flmul@grs+3
  4921  00B5  0834               	movf	??___flmul+2,w
  4922  00B6  00BB               	movwf	___flmul@grs+2
  4923  00B7  0833               	movf	??___flmul+1,w
  4924  00B8  00BA               	movwf	___flmul@grs+1
  4925  00B9  0832               	movf	??___flmul,w
  4926  00BA  00B9               	movwf	___flmul@grs
  4927  00BB                     l2723:
  4928  00BB  0843               	movf	___flmul@temp+1,w
  4929  00BC  00B2               	movwf	??___flmul
  4930  00BD  01B3               	clrf	??___flmul+1
  4931  00BE  01B4               	clrf	??___flmul+2
  4932  00BF  01B5               	clrf	??___flmul+3
  4933  00C0  0835               	movf	??___flmul+3,w
  4934  00C1  00C1               	movwf	___flmul@prod+3
  4935  00C2  0834               	movf	??___flmul+2,w
  4936  00C3  00C0               	movwf	___flmul@prod+2
  4937  00C4  0833               	movf	??___flmul+1,w
  4938  00C5  00BF               	movwf	___flmul@prod+1
  4939  00C6  0832               	movf	??___flmul,w
  4940  00C7  00BE               	movwf	___flmul@prod
  4941  00C8  082B               	movf	___flmul@b+1,w
  4942  00C9  00B2               	movwf	??___flmul
  4943  00CA  0832               	movf	??___flmul,w
  4944  00CB  00F3               	movwf	__Umul8_16@multiplicand
  4945  00CC  082F               	movf	___flmul@a+1,w
  4946  00CD  3186  268B  3180   	fcall	__Umul8_16
  4947  00D0  0874               	movf	?__Umul8_16+1,w
  4948  00D1  0020               	movlb	0	; select bank0
  4949  00D2  00C3               	movwf	___flmul@temp+1
  4950  00D3  0873               	movf	?__Umul8_16,w
  4951  00D4  00C2               	movwf	___flmul@temp
  4952  00D5                     l2725:
  4953  00D5  0842               	movf	___flmul@temp,w
  4954  00D6  00B2               	movwf	??___flmul
  4955  00D7  01B3               	clrf	??___flmul+1
  4956  00D8  01B4               	clrf	??___flmul+2
  4957  00D9  01B5               	clrf	??___flmul+3
  4958  00DA  0832               	movf	??___flmul,w
  4959  00DB  07B9               	addwf	___flmul@grs,f
  4960  00DC  0833               	movf	??___flmul+1,w
  4961  00DD  3DBA               	addwfc	___flmul@grs+1,f
  4962  00DE  0834               	movf	??___flmul+2,w
  4963  00DF  3DBB               	addwfc	___flmul@grs+2,f
  4964  00E0  0835               	movf	??___flmul+3,w
  4965  00E1  3DBC               	addwfc	___flmul@grs+3,f
  4966  00E2                     l2727:
  4967  00E2  0843               	movf	___flmul@temp+1,w
  4968  00E3  00B2               	movwf	??___flmul
  4969  00E4  01B3               	clrf	??___flmul+1
  4970  00E5  01B4               	clrf	??___flmul+2
  4971  00E6  01B5               	clrf	??___flmul+3
  4972  00E7  0832               	movf	??___flmul,w
  4973  00E8  07BE               	addwf	___flmul@prod,f
  4974  00E9  0833               	movf	??___flmul+1,w
  4975  00EA  3DBF               	addwfc	___flmul@prod+1,f
  4976  00EB  0834               	movf	??___flmul+2,w
  4977  00EC  3DC0               	addwfc	___flmul@prod+2,f
  4978  00ED  0835               	movf	??___flmul+3,w
  4979  00EE  3DC1               	addwfc	___flmul@prod+3,f
  4980  00EF  082C               	movf	___flmul@b+2,w
  4981  00F0  00B2               	movwf	??___flmul
  4982  00F1  0832               	movf	??___flmul,w
  4983  00F2  00F3               	movwf	__Umul8_16@multiplicand
  4984  00F3  082E               	movf	___flmul@a,w
  4985  00F4  3186  268B  3180   	fcall	__Umul8_16
  4986  00F7  0874               	movf	?__Umul8_16+1,w
  4987  00F8  0020               	movlb	0	; select bank0
  4988  00F9  00C3               	movwf	___flmul@temp+1
  4989  00FA  0873               	movf	?__Umul8_16,w
  4990  00FB  00C2               	movwf	___flmul@temp
  4991  00FC                     l2729:
  4992  00FC  0842               	movf	___flmul@temp,w
  4993  00FD  00B2               	movwf	??___flmul
  4994  00FE  01B3               	clrf	??___flmul+1
  4995  00FF  01B4               	clrf	??___flmul+2
  4996  0100  01B5               	clrf	??___flmul+3
  4997  0101  0832               	movf	??___flmul,w
  4998  0102  07B9               	addwf	___flmul@grs,f
  4999  0103  0833               	movf	??___flmul+1,w
  5000  0104  3DBA               	addwfc	___flmul@grs+1,f
  5001  0105  0834               	movf	??___flmul+2,w
  5002  0106  3DBB               	addwfc	___flmul@grs+2,f
  5003  0107  0835               	movf	??___flmul+3,w
  5004  0108  3DBC               	addwfc	___flmul@grs+3,f
  5005  0109                     l2731:
  5006  0109  0843               	movf	___flmul@temp+1,w
  5007  010A  00B2               	movwf	??___flmul
  5008  010B  01B3               	clrf	??___flmul+1
  5009  010C  01B4               	clrf	??___flmul+2
  5010  010D  01B5               	clrf	??___flmul+3
  5011  010E  0832               	movf	??___flmul,w
  5012  010F  07BE               	addwf	___flmul@prod,f
  5013  0110  0833               	movf	??___flmul+1,w
  5014  0111  3DBF               	addwfc	___flmul@prod+1,f
  5015  0112  0834               	movf	??___flmul+2,w
  5016  0113  3DC0               	addwfc	___flmul@prod+2,f
  5017  0114  0835               	movf	??___flmul+3,w
  5018  0115  3DC1               	addwfc	___flmul@prod+3,f
  5019  0116                     l2733:
  5020  0116  3008               	movlw	8
  5021  0117                     u2035:
  5022  0117  35B9               	lslf	___flmul@grs,f
  5023  0118  0DBA               	rlf	___flmul@grs+1,f
  5024  0119  0DBB               	rlf	___flmul@grs+2,f
  5025  011A  0DBC               	rlf	___flmul@grs+3,f
  5026  011B  0B89               	decfsz	9,f
  5027  011C  2917               	goto	u2035
  5028  011D                     l2735:
  5029  011D  082B               	movf	___flmul@b+1,w
  5030  011E  00B2               	movwf	??___flmul
  5031  011F  0832               	movf	??___flmul,w
  5032  0120  00F3               	movwf	__Umul8_16@multiplicand
  5033  0121  082E               	movf	___flmul@a,w
  5034  0122  3186  268B  3180   	fcall	__Umul8_16
  5035  0125  0874               	movf	?__Umul8_16+1,w
  5036  0126  0020               	movlb	0	; select bank0
  5037  0127  00C3               	movwf	___flmul@temp+1
  5038  0128  0873               	movf	?__Umul8_16,w
  5039  0129  00C2               	movwf	___flmul@temp
  5040  012A                     l2737:
  5041  012A  0842               	movf	___flmul@temp,w
  5042  012B  07B9               	addwf	___flmul@grs,f
  5043  012C  0843               	movf	___flmul@temp+1,w
  5044  012D  3DBA               	addwfc	___flmul@grs+1,f
  5045  012E  3000               	movlw	0
  5046  012F  3DBB               	addwfc	___flmul@grs+2,f
  5047  0130  3DBC               	addwfc	___flmul@grs+3,f
  5048  0131                     l2739:
  5049  0131  082A               	movf	___flmul@b,w
  5050  0132  00B2               	movwf	??___flmul
  5051  0133  0832               	movf	??___flmul,w
  5052  0134  00F3               	movwf	__Umul8_16@multiplicand
  5053  0135  082F               	movf	___flmul@a+1,w
  5054  0136  3186  268B  3180   	fcall	__Umul8_16
  5055  0139  0874               	movf	?__Umul8_16+1,w
  5056  013A  0020               	movlb	0	; select bank0
  5057  013B  00C3               	movwf	___flmul@temp+1
  5058  013C  0873               	movf	?__Umul8_16,w
  5059  013D  00C2               	movwf	___flmul@temp
  5060  013E                     l2741:
  5061  013E  0842               	movf	___flmul@temp,w
  5062  013F  07B9               	addwf	___flmul@grs,f
  5063  0140  0843               	movf	___flmul@temp+1,w
  5064  0141  3DBA               	addwfc	___flmul@grs+1,f
  5065  0142  3000               	movlw	0
  5066  0143  3DBB               	addwfc	___flmul@grs+2,f
  5067  0144  3DBC               	addwfc	___flmul@grs+3,f
  5068  0145                     l2743:
  5069  0145  3008               	movlw	8
  5070  0146                     u2045:
  5071  0146  35B9               	lslf	___flmul@grs,f
  5072  0147  0DBA               	rlf	___flmul@grs+1,f
  5073  0148  0DBB               	rlf	___flmul@grs+2,f
  5074  0149  0DBC               	rlf	___flmul@grs+3,f
  5075  014A  0B89               	decfsz	9,f
  5076  014B  2946               	goto	u2045
  5077  014C  082A               	movf	___flmul@b,w
  5078  014D  00B2               	movwf	??___flmul
  5079  014E  0832               	movf	??___flmul,w
  5080  014F  00F3               	movwf	__Umul8_16@multiplicand
  5081  0150  082E               	movf	___flmul@a,w
  5082  0151  3186  268B  3180   	fcall	__Umul8_16
  5083  0154  0874               	movf	?__Umul8_16+1,w
  5084  0155  0020               	movlb	0	; select bank0
  5085  0156  00C3               	movwf	___flmul@temp+1
  5086  0157  0873               	movf	?__Umul8_16,w
  5087  0158  00C2               	movwf	___flmul@temp
  5088  0159                     l2745:
  5089  0159  0842               	movf	___flmul@temp,w
  5090  015A  07B9               	addwf	___flmul@grs,f
  5091  015B  0843               	movf	___flmul@temp+1,w
  5092  015C  3DBA               	addwfc	___flmul@grs+1,f
  5093  015D  3000               	movlw	0
  5094  015E  3DBB               	addwfc	___flmul@grs+2,f
  5095  015F  3DBC               	addwfc	___flmul@grs+3,f
  5096  0160                     l2747:
  5097  0160  082B               	movf	___flmul@b+1,w
  5098  0161  00B2               	movwf	??___flmul
  5099  0162  0832               	movf	??___flmul,w
  5100  0163  00F3               	movwf	__Umul8_16@multiplicand
  5101  0164  0830               	movf	___flmul@a+2,w
  5102  0165  3186  268B  3180   	fcall	__Umul8_16
  5103  0168  0874               	movf	?__Umul8_16+1,w
  5104  0169  0020               	movlb	0	; select bank0
  5105  016A  00C3               	movwf	___flmul@temp+1
  5106  016B  0873               	movf	?__Umul8_16,w
  5107  016C  00C2               	movwf	___flmul@temp
  5108  016D  0842               	movf	___flmul@temp,w
  5109  016E  07BE               	addwf	___flmul@prod,f
  5110  016F  0843               	movf	___flmul@temp+1,w
  5111  0170  3DBF               	addwfc	___flmul@prod+1,f
  5112  0171  3000               	movlw	0
  5113  0172  3DC0               	addwfc	___flmul@prod+2,f
  5114  0173  3DC1               	addwfc	___flmul@prod+3,f
  5115  0174                     l2749:
  5116  0174  082C               	movf	___flmul@b+2,w
  5117  0175  00B2               	movwf	??___flmul
  5118  0176  0832               	movf	??___flmul,w
  5119  0177  00F3               	movwf	__Umul8_16@multiplicand
  5120  0178  082F               	movf	___flmul@a+1,w
  5121  0179  3186  268B  3180   	fcall	__Umul8_16
  5122  017C  0874               	movf	?__Umul8_16+1,w
  5123  017D  0020               	movlb	0	; select bank0
  5124  017E  00C3               	movwf	___flmul@temp+1
  5125  017F  0873               	movf	?__Umul8_16,w
  5126  0180  00C2               	movwf	___flmul@temp
  5127  0181                     l2751:
  5128  0181  0842               	movf	___flmul@temp,w
  5129  0182  07BE               	addwf	___flmul@prod,f
  5130  0183  0843               	movf	___flmul@temp+1,w
  5131  0184  3DBF               	addwfc	___flmul@prod+1,f
  5132  0185  3000               	movlw	0
  5133  0186  3DC0               	addwfc	___flmul@prod+2,f
  5134  0187  3DC1               	addwfc	___flmul@prod+3,f
  5135  0188  082C               	movf	___flmul@b+2,w
  5136  0189  00B2               	movwf	??___flmul
  5137  018A  0832               	movf	??___flmul,w
  5138  018B  00F3               	movwf	__Umul8_16@multiplicand
  5139  018C  0830               	movf	___flmul@a+2,w
  5140  018D  3186  268B  3180   	fcall	__Umul8_16
  5141  0190  0874               	movf	?__Umul8_16+1,w
  5142  0191  0020               	movlb	0	; select bank0
  5143  0192  00C3               	movwf	___flmul@temp+1
  5144  0193  0873               	movf	?__Umul8_16,w
  5145  0194  00C2               	movwf	___flmul@temp
  5146  0195                     l2753:
  5147  0195  0842               	movf	___flmul@temp,w
  5148  0196  00B2               	movwf	??___flmul
  5149  0197  0843               	movf	___flmul@temp+1,w
  5150  0198  00B3               	movwf	??___flmul+1
  5151  0199  01B4               	clrf	??___flmul+2
  5152  019A  01B5               	clrf	??___flmul+3
  5153  019B  3008               	movlw	8
  5154  019C                     u2055:
  5155  019C  35B2               	lslf	??___flmul,f
  5156  019D  0DB3               	rlf	??___flmul+1,f
  5157  019E  0DB4               	rlf	??___flmul+2,f
  5158  019F  0DB5               	rlf	??___flmul+3,f
  5159  01A0                     u2050:
  5160  01A0  0B89               	decfsz	9,f
  5161  01A1  299C               	goto	u2055
  5162  01A2  0832               	movf	??___flmul,w
  5163  01A3  07BE               	addwf	___flmul@prod,f
  5164  01A4  0833               	movf	??___flmul+1,w
  5165  01A5  3DBF               	addwfc	___flmul@prod+1,f
  5166  01A6  0834               	movf	??___flmul+2,w
  5167  01A7  3DC0               	addwfc	___flmul@prod+2,f
  5168  01A8  0835               	movf	??___flmul+3,w
  5169  01A9  3DC1               	addwfc	___flmul@prod+3,f
  5170  01AA                     l2755:
  5171  01AA  0839               	movf	___flmul@grs,w
  5172  01AB  00B2               	movwf	??___flmul
  5173  01AC  083A               	movf	___flmul@grs+1,w
  5174  01AD  00B3               	movwf	??___flmul+1
  5175  01AE  083B               	movf	___flmul@grs+2,w
  5176  01AF  00B4               	movwf	??___flmul+2
  5177  01B0  083C               	movf	___flmul@grs+3,w
  5178  01B1  00B5               	movwf	??___flmul+3
  5179  01B2  3018               	movlw	24
  5180  01B3                     u2065:
  5181  01B3  36B5               	lsrf	??___flmul+3,f
  5182  01B4  0CB4               	rrf	??___flmul+2,f
  5183  01B5  0CB3               	rrf	??___flmul+1,f
  5184  01B6  0CB2               	rrf	??___flmul,f
  5185  01B7                     u2060:
  5186  01B7  0B89               	decfsz	9,f
  5187  01B8  29B3               	goto	u2065
  5188  01B9  0832               	movf	??___flmul,w
  5189  01BA  07BE               	addwf	___flmul@prod,f
  5190  01BB  0833               	movf	??___flmul+1,w
  5191  01BC  3DBF               	addwfc	___flmul@prod+1,f
  5192  01BD  0834               	movf	??___flmul+2,w
  5193  01BE  3DC0               	addwfc	___flmul@prod+2,f
  5194  01BF  0835               	movf	??___flmul+3,w
  5195  01C0  3DC1               	addwfc	___flmul@prod+3,f
  5196  01C1                     l2757:
  5197  01C1  3008               	movlw	8
  5198  01C2                     u2075:
  5199  01C2  35B9               	lslf	___flmul@grs,f
  5200  01C3  0DBA               	rlf	___flmul@grs+1,f
  5201  01C4  0DBB               	rlf	___flmul@grs+2,f
  5202  01C5  0DBC               	rlf	___flmul@grs+3,f
  5203  01C6  0B89               	decfsz	9,f
  5204  01C7  29C2               	goto	u2075
  5205  01C8                     l2759:
  5206  01C8  083D               	movf	___flmul@bexp,w
  5207  01C9  0738               	addwf	___flmul@aexp,w
  5208  01CA  00B2               	movwf	??___flmul
  5209  01CB  01B3               	clrf	??___flmul+1
  5210  01CC  0DB3               	rlf	??___flmul+1,f
  5211  01CD  0832               	movf	??___flmul,w
  5212  01CE  3E82               	addlw	130
  5213  01CF  00C2               	movwf	___flmul@temp
  5214  01D0  30FF               	movlw	255
  5215  01D1  3D33               	addwfc	??___flmul+1,w
  5216  01D2  00C3               	movwf	___flmul@temp+1
  5217  01D3  29EB               	goto	l2771
  5218  01D4                     l2761:
  5219  01D4  3001               	movlw	1
  5220  01D5                     u2085:
  5221  01D5  35BE               	lslf	___flmul@prod,f
  5222  01D6  0DBF               	rlf	___flmul@prod+1,f
  5223  01D7  0DC0               	rlf	___flmul@prod+2,f
  5224  01D8  0DC1               	rlf	___flmul@prod+3,f
  5225  01D9  0B89               	decfsz	9,f
  5226  01DA  29D5               	goto	u2085
  5227  01DB                     l2763:
  5228  01DB  1FBC               	btfss	___flmul@grs+3,7
  5229  01DC  29DE               	goto	u2091
  5230  01DD  29DF               	goto	u2090
  5231  01DE                     u2091:
  5232  01DE  29E0               	goto	l2767
  5233  01DF                     u2090:
  5234  01DF                     l2765:
  5235  01DF  143E               	bsf	___flmul@prod,0
  5236  01E0                     l2767:
  5237  01E0  3001               	movlw	1
  5238  01E1                     u2105:
  5239  01E1  35B9               	lslf	___flmul@grs,f
  5240  01E2  0DBA               	rlf	___flmul@grs+1,f
  5241  01E3  0DBB               	rlf	___flmul@grs+2,f
  5242  01E4  0DBC               	rlf	___flmul@grs+3,f
  5243  01E5  0B89               	decfsz	9,f
  5244  01E6  29E1               	goto	u2105
  5245  01E7                     l2769:
  5246  01E7  30FF               	movlw	255
  5247  01E8  07C2               	addwf	___flmul@temp,f
  5248  01E9  30FF               	movlw	255
  5249  01EA  3DC3               	addwfc	___flmul@temp+1,f
  5250  01EB                     l2771:
  5251  01EB  1FC0               	btfss	___flmul@prod+2,7
  5252  01EC  29EE               	goto	u2111
  5253  01ED  29EF               	goto	u2110
  5254  01EE                     u2111:
  5255  01EE  29D4               	goto	l2761
  5256  01EF                     u2110:
  5257  01EF                     l2773:
  5258  01EF  01B8               	clrf	___flmul@aexp
  5259  01F0                     l2775:
  5260  01F0  1FBC               	btfss	___flmul@grs+3,7
  5261  01F1  29F3               	goto	u2121
  5262  01F2  29F4               	goto	u2120
  5263  01F3                     u2121:
  5264  01F3  2A10               	goto	l2783
  5265  01F4                     u2120:
  5266  01F4                     l2777:
  5267  01F4  30FF               	movlw	255
  5268  01F5  0539               	andwf	___flmul@grs,w
  5269  01F6  00B2               	movwf	??___flmul
  5270  01F7  30FF               	movlw	255
  5271  01F8  053A               	andwf	___flmul@grs+1,w
  5272  01F9  00B3               	movwf	??___flmul+1
  5273  01FA  30FF               	movlw	255
  5274  01FB  053B               	andwf	___flmul@grs+2,w
  5275  01FC  00B4               	movwf	??___flmul+2
  5276  01FD  307F               	movlw	127
  5277  01FE  053C               	andwf	___flmul@grs+3,w
  5278  01FF  00B5               	movwf	??___flmul+3
  5279  0200  0835               	movf	??___flmul+3,w
  5280  0201  0434               	iorwf	??___flmul+2,w
  5281  0202  0433               	iorwf	??___flmul+1,w
  5282  0203  0432               	iorwf	??___flmul,w
  5283  0204  1903               	skipnz
  5284  0205  2A07               	goto	u2131
  5285  0206  2A08               	goto	u2130
  5286  0207                     u2131:
  5287  0207  2A0B               	goto	l1188
  5288  0208                     u2130:
  5289  0208                     l2779:
  5290  0208  01B8               	clrf	___flmul@aexp
  5291  0209  0AB8               	incf	___flmul@aexp,f
  5292  020A  2A10               	goto	l2783
  5293  020B                     l1188:
  5294  020B  1C3E               	btfss	___flmul@prod,0
  5295  020C  2A0E               	goto	u2141
  5296  020D  2A0F               	goto	u2140
  5297  020E                     u2141:
  5298  020E  2A10               	goto	l2783
  5299  020F                     u2140:
  5300  020F  2A08               	goto	l2779
  5301  0210                     l2783:
  5302  0210  0838               	movf	___flmul@aexp,w
  5303  0211  1903               	btfsc	3,2
  5304  0212  2A14               	goto	u2151
  5305  0213  2A15               	goto	u2150
  5306  0214                     u2151:
  5307  0214  2A3D               	goto	l2793
  5308  0215                     u2150:
  5309  0215                     l2785:
  5310  0215  3001               	movlw	1
  5311  0216  07BE               	addwf	___flmul@prod,f
  5312  0217  3000               	movlw	0
  5313  0218  3DBF               	addwfc	___flmul@prod+1,f
  5314  0219  3000               	movlw	0
  5315  021A  3DC0               	addwfc	___flmul@prod+2,f
  5316  021B  3000               	movlw	0
  5317  021C  3DC1               	addwfc	___flmul@prod+3,f
  5318  021D                     l2787:
  5319  021D  1C41               	btfss	___flmul@prod+3,0
  5320  021E  2A20               	goto	u2161
  5321  021F  2A21               	goto	u2160
  5322  0220                     u2161:
  5323  0220  2A3D               	goto	l2793
  5324  0221                     u2160:
  5325  0221                     l2789:
  5326  0221  083E               	movf	___flmul@prod,w
  5327  0222  00B2               	movwf	??___flmul
  5328  0223  083F               	movf	___flmul@prod+1,w
  5329  0224  00B3               	movwf	??___flmul+1
  5330  0225  0840               	movf	___flmul@prod+2,w
  5331  0226  00B4               	movwf	??___flmul+2
  5332  0227  0841               	movf	___flmul@prod+3,w
  5333  0228  00B5               	movwf	??___flmul+3
  5334  0229  3001               	movlw	1
  5335  022A  00B6               	movwf	??___flmul+4
  5336  022B                     u2175:
  5337  022B  37B5               	asrf	??___flmul+3,f
  5338  022C  0CB4               	rrf	??___flmul+2,f
  5339  022D  0CB3               	rrf	??___flmul+1,f
  5340  022E  0CB2               	rrf	??___flmul,f
  5341  022F                     u2170:
  5342  022F  0BB6               	decfsz	??___flmul+4,f
  5343  0230  2A2B               	goto	u2175
  5344  0231  0835               	movf	??___flmul+3,w
  5345  0232  00C1               	movwf	___flmul@prod+3
  5346  0233  0834               	movf	??___flmul+2,w
  5347  0234  00C0               	movwf	___flmul@prod+2
  5348  0235  0833               	movf	??___flmul+1,w
  5349  0236  00BF               	movwf	___flmul@prod+1
  5350  0237  0832               	movf	??___flmul,w
  5351  0238  00BE               	movwf	___flmul@prod
  5352  0239                     l2791:
  5353  0239  3001               	movlw	1
  5354  023A  07C2               	addwf	___flmul@temp,f
  5355  023B  3000               	movlw	0
  5356  023C  3DC3               	addwfc	___flmul@temp+1,f
  5357  023D                     l2793:
  5358  023D  0843               	movf	___flmul@temp+1,w
  5359  023E  3A80               	xorlw	128
  5360  023F  00B2               	movwf	??___flmul
  5361  0240  3080               	movlw	128
  5362  0241  0232               	subwf	??___flmul,w
  5363  0242  1D03               	skipz
  5364  0243  2A46               	goto	u2185
  5365  0244  30FF               	movlw	255
  5366  0245  0242               	subwf	___flmul@temp,w
  5367  0246                     u2185:
  5368  0246  1C03               	skipc
  5369  0247  2A49               	goto	u2181
  5370  0248  2A4A               	goto	u2180
  5371  0249                     u2181:
  5372  0249  2A54               	goto	l2797
  5373  024A                     u2180:
  5374  024A                     l2795:
  5375  024A  307F               	movlw	127
  5376  024B  0020               	movlb	0	; select bank0
  5377  024C  00C1               	movwf	___flmul@prod+3
  5378  024D  3080               	movlw	128
  5379  024E  00C0               	movwf	___flmul@prod+2
  5380  024F  3000               	movlw	0
  5381  0250  00BF               	movwf	___flmul@prod+1
  5382  0251  3000               	movlw	0
  5383  0252  00BE               	movwf	___flmul@prod
  5384  0253  2A83               	goto	l1194
  5385  0254                     l2797:
  5386  0254  0020               	movlb	0	; select bank0
  5387  0255  0843               	movf	___flmul@temp+1,w
  5388  0256  3A80               	xorlw	128
  5389  0257  00B2               	movwf	??___flmul
  5390  0258  3080               	movlw	128
  5391  0259  0232               	subwf	??___flmul,w
  5392  025A  1D03               	skipz
  5393  025B  2A5E               	goto	u2195
  5394  025C  3001               	movlw	1
  5395  025D  0242               	subwf	___flmul@temp,w
  5396  025E                     u2195:
  5397  025E  1803               	skipnc
  5398  025F  2A61               	goto	u2191
  5399  0260  2A62               	goto	u2190
  5400  0261                     u2191:
  5401  0261  2A6D               	goto	l2803
  5402  0262                     u2190:
  5403  0262                     l2799:
  5404  0262  3000               	movlw	0
  5405  0263  0020               	movlb	0	; select bank0
  5406  0264  00C1               	movwf	___flmul@prod+3
  5407  0265  3000               	movlw	0
  5408  0266  00C0               	movwf	___flmul@prod+2
  5409  0267  3000               	movlw	0
  5410  0268  00BF               	movwf	___flmul@prod+1
  5411  0269  3000               	movlw	0
  5412  026A  00BE               	movwf	___flmul@prod
  5413  026B                     l2801:
  5414  026B  01B7               	clrf	___flmul@sign
  5415  026C  2A83               	goto	l1194
  5416  026D                     l2803:
  5417  026D  0020               	movlb	0	; select bank0
  5418  026E  0842               	movf	___flmul@temp,w
  5419  026F  00B2               	movwf	??___flmul
  5420  0270  0832               	movf	??___flmul,w
  5421  0271  00BD               	movwf	___flmul@bexp
  5422  0272  30FF               	movlw	255
  5423  0273  05BE               	andwf	___flmul@prod,f
  5424  0274  30FF               	movlw	255
  5425  0275  05BF               	andwf	___flmul@prod+1,f
  5426  0276  307F               	movlw	127
  5427  0277  05C0               	andwf	___flmul@prod+2,f
  5428  0278  3000               	movlw	0
  5429  0279  05C1               	andwf	___flmul@prod+3,f
  5430  027A                     l2805:
  5431  027A  1C3D               	btfss	___flmul@bexp,0
  5432  027B  2A7D               	goto	u2201
  5433  027C  2A7E               	goto	u2200
  5434  027D                     u2201:
  5435  027D  2A7F               	goto	l2809
  5436  027E                     u2200:
  5437  027E                     l2807:
  5438  027E  17C0               	bsf	___flmul@prod+2,7
  5439  027F                     l2809:
  5440  027F  363D               	lsrf	___flmul@bexp,w
  5441  0280  00B2               	movwf	??___flmul
  5442  0281  0832               	movf	??___flmul,w
  5443  0282  00C1               	movwf	___flmul@prod+3
  5444  0283                     l1194:
  5445  0283  0837               	movf	___flmul@sign,w
  5446  0284  00B2               	movwf	??___flmul
  5447  0285  0832               	movf	??___flmul,w
  5448  0286  04C1               	iorwf	___flmul@prod+3,f
  5449  0287                     l2811:
  5450  0287  0841               	movf	___flmul@prod+3,w
  5451  0288  00AD               	movwf	?___flmul+3
  5452  0289  0840               	movf	___flmul@prod+2,w
  5453  028A  00AC               	movwf	?___flmul+2
  5454  028B  083F               	movf	___flmul@prod+1,w
  5455  028C  00AB               	movwf	?___flmul+1
  5456  028D  083E               	movf	___flmul@prod,w
  5457  028E  00AA               	movwf	?___flmul
  5458  028F                     l1182:
  5459  028F  0008               	return
  5460  0290                     __end_of___flmul:
  5461                           
  5462                           	psect	text27
  5463  068B                     __ptext27:	
  5464 ;; *************** function __Umul8_16 *****************
  5465 ;; Defined at:
  5466 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8_16.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  multiplier      1    wreg     unsigned char 
  5469 ;;  multiplicand    1    3[COMMON] unsigned char 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5472 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5473 ;;  product         2    0[BANK0 ] unsigned int 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  2    3[COMMON] unsigned int 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5483 ;;      Params:         2       0       0       0       0       0
  5484 ;;      Locals:         0       5       0       0       0       0
  5485 ;;      Temps:          2       0       0       0       0       0
  5486 ;;      Totals:         4       5       0       0       0       0
  5487 ;;Total ram usage:        9 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    4
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		___flmul
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function __Umul8_16
  5499  068B                     __Umul8_16:
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5503                           ;__Umul8_16@multiplier stored from wreg
  5504  068B  0020               	movlb	0	; select bank0
  5505  068C  00A4               	movwf	__Umul8_16@multiplier
  5506  068D                     l2525:
  5507  068D  01A0               	clrf	__Umul8_16@product
  5508  068E  01A1               	clrf	__Umul8_16@product+1
  5509  068F                     l2527:
  5510  068F  0873               	movf	__Umul8_16@multiplicand,w
  5511  0690  00F5               	movwf	??__Umul8_16
  5512  0691  01F6               	clrf	??__Umul8_16+1
  5513  0692  0875               	movf	??__Umul8_16,w
  5514  0693  00A2               	movwf	__Umul8_16@word_mpld
  5515  0694  0876               	movf	??__Umul8_16+1,w
  5516  0695  00A3               	movwf	__Umul8_16@word_mpld+1
  5517  0696                     l2529:
  5518  0696  1C24               	btfss	__Umul8_16@multiplier,0
  5519  0697  2E99               	goto	u1681
  5520  0698  2E9A               	goto	u1680
  5521  0699                     u1681:
  5522  0699  2E9E               	goto	l1201
  5523  069A                     u1680:
  5524  069A                     l2531:
  5525  069A  0822               	movf	__Umul8_16@word_mpld,w
  5526  069B  07A0               	addwf	__Umul8_16@product,f
  5527  069C  0823               	movf	__Umul8_16@word_mpld+1,w
  5528  069D  3DA1               	addwfc	__Umul8_16@product+1,f
  5529  069E                     l1201:
  5530  069E  3001               	movlw	1
  5531  069F                     u1695:
  5532  069F  35A2               	lslf	__Umul8_16@word_mpld,f
  5533  06A0  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5534  06A1  0B89               	decfsz	9,f
  5535  06A2  2E9F               	goto	u1695
  5536  06A3  1003               	clrc
  5537  06A4  0CA4               	rrf	__Umul8_16@multiplier,f
  5538  06A5                     l2533:
  5539  06A5  0824               	movf	__Umul8_16@multiplier,w
  5540  06A6  1D03               	btfss	3,2
  5541  06A7  2EA9               	goto	u1701
  5542  06A8  2EAA               	goto	u1700
  5543  06A9                     u1701:
  5544  06A9  2E96               	goto	l2529
  5545  06AA                     u1700:
  5546  06AA                     l2535:
  5547  06AA  0821               	movf	__Umul8_16@product+1,w
  5548  06AB  00F4               	movwf	?__Umul8_16+1
  5549  06AC  0820               	movf	__Umul8_16@product,w
  5550  06AD  00F3               	movwf	?__Umul8_16
  5551  06AE                     l1203:
  5552  06AE  0008               	return
  5553  06AF                     __end_of__Umul8_16:
  5554                           
  5555                           	psect	text28
  5556  0402                     __ptext28:	
  5557 ;; *************** function _Ds_BCD *****************
  5558 ;; Defined at:
  5559 ;;		line 22 in file "displays.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  segmento        1    wreg     unsigned char 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  segmento        1    5[COMMON] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      void 
  5566 ;; Registers used:
  5567 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5573 ;;      Params:         0       0       0       0       0       0
  5574 ;;      Locals:         1       0       0       0       0       0
  5575 ;;      Temps:          2       0       0       0       0       0
  5576 ;;      Totals:         3       0       0       0       0       0
  5577 ;;Total ram usage:        3 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    4
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_main
  5584 ;;		_Ds_Procese_displays
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _Ds_BCD
  5590  0402                     _Ds_BCD:
  5591                           
  5592                           ;incstack = 0
  5593                           ; Regs used in _Ds_BCD: [wreg-fsr0h+status,2+status,0]
  5594                           ;Ds_BCD@segmento stored from wreg
  5595  0402  00F5               	movwf	Ds_BCD@segmento
  5596  0403                     l2915:
  5597                           
  5598                           ;displays.c: 24:     switch (segmento){
  5599  0403  2C70               	goto	l2919
  5600  0404                     l365:	
  5601                           ;displays.c: 28:             do { LATAbits.LATA0 = 1; } while(0);
  5602                           
  5603  0404  0022               	movlb	2	; select bank2
  5604  0405  140C               	bsf	12,0	;volatile
  5605  0406                     l367:	
  5606                           ;displays.c: 29:             do { LATAbits.LATA1 = 1; } while(0);
  5607                           
  5608  0406  148C               	bsf	12,1	;volatile
  5609  0407                     l369:	
  5610                           ;displays.c: 30:             do { LATAbits.LATA2 = 1; } while(0);
  5611                           
  5612  0407  150C               	bsf	12,2	;volatile
  5613  0408                     l371:	
  5614                           ;displays.c: 31:             do { LATAbits.LATA3 = 1; } while(0);
  5615                           
  5616  0408  158C               	bsf	12,3	;volatile
  5617  0409                     l373:	
  5618                           ;displays.c: 32:             do { LATAbits.LATA4 = 1; } while(0);
  5619                           
  5620  0409  160C               	bsf	12,4	;volatile
  5621  040A                     l375:	
  5622                           ;displays.c: 33:             do { LATAbits.LATA7 = 1; } while(0);
  5623                           
  5624  040A  178C               	bsf	12,7	;volatile
  5625  040B                     l377:	
  5626                           ;displays.c: 34:             do { LATAbits.LATA6 = 0; } while(0);
  5627                           
  5628  040B  130C               	bcf	12,6	;volatile
  5629  040C  2C9E               	goto	l545
  5630  040D                     l381:	
  5631                           ;displays.c: 41:             do { LATAbits.LATA0 = 0; } while(0);
  5632                           
  5633  040D  0022               	movlb	2	; select bank2
  5634  040E  100C               	bcf	12,0	;volatile
  5635  040F                     l383:	
  5636                           ;displays.c: 42:             do { LATAbits.LATA1 = 1; } while(0);
  5637                           
  5638  040F  148C               	bsf	12,1	;volatile
  5639  0410                     l385:	
  5640                           ;displays.c: 43:             do { LATAbits.LATA2 = 1; } while(0);
  5641                           
  5642  0410  150C               	bsf	12,2	;volatile
  5643  0411                     l387:	
  5644                           ;displays.c: 44:             do { LATAbits.LATA3 = 0; } while(0);
  5645                           
  5646  0411  118C               	bcf	12,3	;volatile
  5647  0412                     l389:	
  5648                           ;displays.c: 45:             do { LATAbits.LATA4 = 0; } while(0);
  5649                           
  5650  0412  120C               	bcf	12,4	;volatile
  5651  0413                     l391:	
  5652                           ;displays.c: 46:             do { LATAbits.LATA7 = 0; } while(0);
  5653                           
  5654  0413  138C               	bcf	12,7	;volatile
  5655  0414                     l393:	
  5656                           ;displays.c: 47:             do { LATAbits.LATA6 = 0; } while(0);
  5657                           
  5658  0414  130C               	bcf	12,6	;volatile
  5659  0415  2C9E               	goto	l545
  5660  0416                     l396:	
  5661                           ;displays.c: 55:             do { LATAbits.LATA0 = 1; } while(0);
  5662                           
  5663  0416  0022               	movlb	2	; select bank2
  5664  0417  140C               	bsf	12,0	;volatile
  5665  0418                     l398:	
  5666                           ;displays.c: 56:             do { LATAbits.LATA1 = 1; } while(0);
  5667                           
  5668  0418  148C               	bsf	12,1	;volatile
  5669  0419                     l400:	
  5670                           ;displays.c: 57:             do { LATAbits.LATA2 = 0; } while(0);
  5671                           
  5672  0419  110C               	bcf	12,2	;volatile
  5673  041A                     l402:	
  5674                           ;displays.c: 58:             do { LATAbits.LATA3 = 1; } while(0);
  5675                           
  5676  041A  158C               	bsf	12,3	;volatile
  5677  041B                     l404:	
  5678                           ;displays.c: 59:             do { LATAbits.LATA4 = 1; } while(0);
  5679                           
  5680  041B  160C               	bsf	12,4	;volatile
  5681  041C                     l406:	
  5682                           ;displays.c: 60:             do { LATAbits.LATA7 = 0; } while(0);
  5683                           
  5684  041C  138C               	bcf	12,7	;volatile
  5685  041D                     l408:	
  5686                           ;displays.c: 61:             do { LATAbits.LATA6 = 1; } while(0);
  5687                           
  5688  041D  170C               	bsf	12,6	;volatile
  5689  041E  2C9E               	goto	l545
  5690  041F                     l411:	
  5691                           ;displays.c: 69:             do { LATAbits.LATA0 = 1; } while(0);
  5692                           
  5693  041F  0022               	movlb	2	; select bank2
  5694  0420  140C               	bsf	12,0	;volatile
  5695  0421                     l413:	
  5696                           ;displays.c: 70:             do { LATAbits.LATA1 = 1; } while(0);
  5697                           
  5698  0421  148C               	bsf	12,1	;volatile
  5699  0422                     l415:	
  5700                           ;displays.c: 71:             do { LATAbits.LATA2 = 1; } while(0);
  5701                           
  5702  0422  150C               	bsf	12,2	;volatile
  5703  0423                     l417:	
  5704                           ;displays.c: 72:             do { LATAbits.LATA3 = 1; } while(0);
  5705                           
  5706  0423  158C               	bsf	12,3	;volatile
  5707  0424                     l419:	
  5708                           ;displays.c: 73:             do { LATAbits.LATA4 = 0; } while(0);
  5709                           
  5710  0424  120C               	bcf	12,4	;volatile
  5711  0425                     l421:	
  5712                           ;displays.c: 74:             do { LATAbits.LATA7 = 0; } while(0);
  5713                           
  5714  0425  138C               	bcf	12,7	;volatile
  5715  0426                     l423:	
  5716                           ;displays.c: 75:             do { LATAbits.LATA6 = 1; } while(0);
  5717                           
  5718  0426  170C               	bsf	12,6	;volatile
  5719  0427  2C9E               	goto	l545
  5720  0428                     l426:	
  5721                           ;displays.c: 84:             do { LATAbits.LATA0 = 0; } while(0);
  5722                           
  5723  0428  0022               	movlb	2	; select bank2
  5724  0429  100C               	bcf	12,0	;volatile
  5725  042A                     l428:	
  5726                           ;displays.c: 85:             do { LATAbits.LATA1 = 1; } while(0);
  5727                           
  5728  042A  148C               	bsf	12,1	;volatile
  5729  042B                     l430:	
  5730                           ;displays.c: 86:             do { LATAbits.LATA2 = 1; } while(0);
  5731                           
  5732  042B  150C               	bsf	12,2	;volatile
  5733  042C                     l432:	
  5734                           ;displays.c: 87:             do { LATAbits.LATA3 = 0; } while(0);
  5735                           
  5736  042C  118C               	bcf	12,3	;volatile
  5737  042D                     l434:	
  5738                           ;displays.c: 88:             do { LATAbits.LATA4 = 0; } while(0);
  5739                           
  5740  042D  120C               	bcf	12,4	;volatile
  5741  042E                     l436:	
  5742                           ;displays.c: 89:             do { LATAbits.LATA7 = 1; } while(0);
  5743                           
  5744  042E  178C               	bsf	12,7	;volatile
  5745  042F                     l438:	
  5746                           ;displays.c: 90:             do { LATAbits.LATA6 = 1; } while(0);
  5747                           
  5748  042F  170C               	bsf	12,6	;volatile
  5749  0430  2C9E               	goto	l545
  5750  0431                     l441:	
  5751                           ;displays.c: 97:             do { LATAbits.LATA0 = 1; } while(0);
  5752                           
  5753  0431  0022               	movlb	2	; select bank2
  5754  0432  140C               	bsf	12,0	;volatile
  5755  0433                     l443:	
  5756                           ;displays.c: 98:             do { LATAbits.LATA1 = 0; } while(0);
  5757                           
  5758  0433  108C               	bcf	12,1	;volatile
  5759  0434                     l445:	
  5760                           ;displays.c: 99:             do { LATAbits.LATA2 = 1; } while(0);
  5761                           
  5762  0434  150C               	bsf	12,2	;volatile
  5763  0435                     l447:	
  5764                           ;displays.c: 100:             do { LATAbits.LATA3 = 1; } while(0);
  5765                           
  5766  0435  158C               	bsf	12,3	;volatile
  5767  0436                     l449:	
  5768                           ;displays.c: 101:             do { LATAbits.LATA4 = 0; } while(0);
  5769                           
  5770  0436  120C               	bcf	12,4	;volatile
  5771  0437                     l451:	
  5772                           ;displays.c: 102:             do { LATAbits.LATA7 = 1; } while(0);
  5773                           
  5774  0437  178C               	bsf	12,7	;volatile
  5775  0438                     l453:	
  5776                           ;displays.c: 103:             do { LATAbits.LATA6 = 1; } while(0);
  5777                           
  5778  0438  170C               	bsf	12,6	;volatile
  5779  0439  2C9E               	goto	l545
  5780  043A                     l456:	
  5781                           ;displays.c: 111:             do { LATAbits.LATA0 = 1; } while(0);
  5782                           
  5783  043A  0022               	movlb	2	; select bank2
  5784  043B  140C               	bsf	12,0	;volatile
  5785  043C                     l458:	
  5786                           ;displays.c: 112:             do { LATAbits.LATA1 = 0; } while(0);
  5787                           
  5788  043C  108C               	bcf	12,1	;volatile
  5789  043D                     l460:	
  5790                           ;displays.c: 113:             do { LATAbits.LATA2 = 1; } while(0);
  5791                           
  5792  043D  150C               	bsf	12,2	;volatile
  5793  043E                     l462:	
  5794                           ;displays.c: 114:             do { LATAbits.LATA3 = 1; } while(0);
  5795                           
  5796  043E  158C               	bsf	12,3	;volatile
  5797  043F                     l464:	
  5798                           ;displays.c: 115:             do { LATAbits.LATA4 = 1; } while(0);
  5799                           
  5800  043F  160C               	bsf	12,4	;volatile
  5801  0440                     l466:	
  5802                           ;displays.c: 116:             do { LATAbits.LATA7 = 1; } while(0);
  5803                           
  5804  0440  178C               	bsf	12,7	;volatile
  5805  0441                     l468:	
  5806                           ;displays.c: 117:             do { LATAbits.LATA6 = 1; } while(0);
  5807                           
  5808  0441  170C               	bsf	12,6	;volatile
  5809  0442  2C9E               	goto	l545
  5810  0443                     l471:	
  5811                           ;displays.c: 125:             do { LATAbits.LATA0 = 1; } while(0);
  5812                           
  5813  0443  0022               	movlb	2	; select bank2
  5814  0444  140C               	bsf	12,0	;volatile
  5815  0445                     l473:	
  5816                           ;displays.c: 126:             do { LATAbits.LATA1 = 1; } while(0);
  5817                           
  5818  0445  148C               	bsf	12,1	;volatile
  5819  0446                     l475:	
  5820                           ;displays.c: 127:             do { LATAbits.LATA2 = 1; } while(0);
  5821                           
  5822  0446  150C               	bsf	12,2	;volatile
  5823  0447                     l477:	
  5824                           ;displays.c: 128:             do { LATAbits.LATA3 = 0; } while(0);
  5825                           
  5826  0447  118C               	bcf	12,3	;volatile
  5827  0448                     l479:	
  5828                           ;displays.c: 129:             do { LATAbits.LATA4 = 0; } while(0);
  5829                           
  5830  0448  120C               	bcf	12,4	;volatile
  5831  0449                     l481:	
  5832                           ;displays.c: 130:             do { LATAbits.LATA7 = 0; } while(0);
  5833                           
  5834  0449  138C               	bcf	12,7	;volatile
  5835  044A                     l483:	
  5836                           ;displays.c: 131:             do { LATAbits.LATA6 = 0; } while(0);
  5837                           
  5838  044A  130C               	bcf	12,6	;volatile
  5839  044B  2C9E               	goto	l545
  5840  044C                     l486:	
  5841                           ;displays.c: 139:             do { LATAbits.LATA0 = 1; } while(0);
  5842                           
  5843  044C  0022               	movlb	2	; select bank2
  5844  044D  140C               	bsf	12,0	;volatile
  5845  044E                     l488:	
  5846                           ;displays.c: 140:             do { LATAbits.LATA1 = 1; } while(0);
  5847                           
  5848  044E  148C               	bsf	12,1	;volatile
  5849  044F                     l490:	
  5850                           ;displays.c: 141:             do { LATAbits.LATA2 = 1; } while(0);
  5851                           
  5852  044F  150C               	bsf	12,2	;volatile
  5853  0450                     l492:	
  5854                           ;displays.c: 142:             do { LATAbits.LATA3 = 1; } while(0);
  5855                           
  5856  0450  158C               	bsf	12,3	;volatile
  5857  0451                     l494:	
  5858                           ;displays.c: 143:             do { LATAbits.LATA4 = 1; } while(0);
  5859                           
  5860  0451  160C               	bsf	12,4	;volatile
  5861  0452                     l496:	
  5862                           ;displays.c: 144:             do { LATAbits.LATA7 = 1; } while(0);
  5863                           
  5864  0452  178C               	bsf	12,7	;volatile
  5865  0453                     l498:	
  5866                           ;displays.c: 145:             do { LATAbits.LATA6 = 1; } while(0);
  5867                           
  5868  0453  170C               	bsf	12,6	;volatile
  5869  0454  2C9E               	goto	l545
  5870  0455                     l501:	
  5871                           ;displays.c: 153:             do { LATAbits.LATA0 = 1; } while(0);
  5872                           
  5873  0455  0022               	movlb	2	; select bank2
  5874  0456  140C               	bsf	12,0	;volatile
  5875  0457                     l503:	
  5876                           ;displays.c: 154:             do { LATAbits.LATA1 = 1; } while(0);
  5877                           
  5878  0457  148C               	bsf	12,1	;volatile
  5879  0458                     l505:	
  5880                           ;displays.c: 155:             do { LATAbits.LATA2 = 1; } while(0);
  5881                           
  5882  0458  150C               	bsf	12,2	;volatile
  5883  0459                     l507:	
  5884                           ;displays.c: 156:             do { LATAbits.LATA3 = 1; } while(0);
  5885                           
  5886  0459  158C               	bsf	12,3	;volatile
  5887  045A                     l509:	
  5888                           ;displays.c: 157:             do { LATAbits.LATA4 = 0; } while(0);
  5889                           
  5890  045A  120C               	bcf	12,4	;volatile
  5891  045B                     l511:	
  5892                           ;displays.c: 158:             do { LATAbits.LATA7 = 1; } while(0);
  5893                           
  5894  045B  178C               	bsf	12,7	;volatile
  5895  045C                     l513:	
  5896                           ;displays.c: 159:             do { LATAbits.LATA6 = 1; } while(0);
  5897                           
  5898  045C  170C               	bsf	12,6	;volatile
  5899  045D  2C9E               	goto	l545
  5900  045E                     l516:	
  5901                           ;displays.c: 165:       do { LATAbits.LATA0 = 0; } while(0);
  5902                           
  5903  045E  0022               	movlb	2	; select bank2
  5904  045F  100C               	bcf	12,0	;volatile
  5905  0460                     l518:	
  5906                           ;displays.c: 166:             do { LATAbits.LATA1 = 1; } while(0);
  5907                           
  5908  0460  148C               	bsf	12,1	;volatile
  5909  0461                     l520:	
  5910                           ;displays.c: 167:             do { LATAbits.LATA2 = 1; } while(0);
  5911                           
  5912  0461  150C               	bsf	12,2	;volatile
  5913  0462                     l522:	
  5914                           ;displays.c: 168:             do { LATAbits.LATA3 = 0; } while(0);
  5915                           
  5916  0462  118C               	bcf	12,3	;volatile
  5917  0463                     l524:	
  5918                           ;displays.c: 169:             do { LATAbits.LATA4 = 1; } while(0);
  5919                           
  5920  0463  160C               	bsf	12,4	;volatile
  5921  0464                     l526:	
  5922                           ;displays.c: 170:             do { LATAbits.LATA7 = 1; } while(0);
  5923                           
  5924  0464  178C               	bsf	12,7	;volatile
  5925  0465                     l528:	
  5926                           ;displays.c: 171:             do { LATAbits.LATA6 = 1; } while(0);
  5927                           
  5928  0465  170C               	bsf	12,6	;volatile
  5929  0466  2C9E               	goto	l545
  5930  0467                     l531:	
  5931                           ;displays.c: 177:       do { LATAbits.LATA0 = 0; } while(0);
  5932                           
  5933  0467  0022               	movlb	2	; select bank2
  5934  0468  100C               	bcf	12,0	;volatile
  5935  0469                     l533:	
  5936                           ;displays.c: 178:       do { LATAbits.LATA1 = 0; } while(0);
  5937                           
  5938  0469  108C               	bcf	12,1	;volatile
  5939  046A                     l535:	
  5940                           ;displays.c: 179:       do { LATAbits.LATA2 = 0; } while(0);
  5941                           
  5942  046A  110C               	bcf	12,2	;volatile
  5943  046B                     l537:	
  5944                           ;displays.c: 180:       do { LATAbits.LATA3 = 0; } while(0);
  5945                           
  5946  046B  118C               	bcf	12,3	;volatile
  5947  046C                     l539:	
  5948                           ;displays.c: 181:             do { LATAbits.LATA4 = 0; } while(0);
  5949                           
  5950  046C  120C               	bcf	12,4	;volatile
  5951  046D                     l541:	
  5952                           ;displays.c: 182:             do { LATAbits.LATA7 = 0; } while(0);
  5953                           
  5954  046D  138C               	bcf	12,7	;volatile
  5955  046E                     l543:	
  5956                           ;displays.c: 183:       do { LATAbits.LATA6 = 0; } while(0);
  5957                           
  5958  046E  130C               	bcf	12,6	;volatile
  5959  046F  2C9E               	goto	l545
  5960  0470                     l2919:
  5961  0470  0875               	movf	Ds_BCD@segmento,w
  5962  0471  00F3               	movwf	??_Ds_BCD
  5963  0472  01F4               	clrf	??_Ds_BCD+1
  5964                           
  5965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5966                           ; Switch size 1, requested type "simple"
  5967                           ; Number of cases is 1, Range of values is 0 to 0
  5968                           ; switch strategies available:
  5969                           ; Name         Instructions Cycles
  5970                           ; simple_byte            4     3 (average)
  5971                           ; direct_byte            8     6 (fixed)
  5972                           ; jumptable            260     6 (fixed)
  5973                           ;	Chosen strategy is simple_byte
  5974  0473  0874               	movf	??_Ds_BCD+1,w
  5975  0474  3A00               	xorlw	0	; case 0
  5976  0475  1903               	skipnz
  5977  0476  2C78               	goto	l3079
  5978  0477  2C9E               	goto	l545
  5979  0478                     l3079:
  5980                           
  5981                           ; Switch size 1, requested type "simple"
  5982                           ; Number of cases is 12, Range of values is 0 to 11
  5983                           ; switch strategies available:
  5984                           ; Name         Instructions Cycles
  5985                           ; direct_byte           30     6 (fixed)
  5986                           ; simple_byte           37    19 (average)
  5987                           ; jumptable            260     6 (fixed)
  5988                           ;	Chosen strategy is simple_byte
  5989  0478  0873               	movf	??_Ds_BCD,w
  5990  0479  3A00               	xorlw	0	; case 0
  5991  047A  1903               	skipnz
  5992  047B  2C04               	goto	l365
  5993  047C  3A01               	xorlw	1	; case 1
  5994  047D  1903               	skipnz
  5995  047E  2C0D               	goto	l381
  5996  047F  3A03               	xorlw	3	; case 2
  5997  0480  1903               	skipnz
  5998  0481  2C16               	goto	l396
  5999  0482  3A01               	xorlw	1	; case 3
  6000  0483  1903               	skipnz
  6001  0484  2C1F               	goto	l411
  6002  0485  3A07               	xorlw	7	; case 4
  6003  0486  1903               	skipnz
  6004  0487  2C28               	goto	l426
  6005  0488  3A01               	xorlw	1	; case 5
  6006  0489  1903               	skipnz
  6007  048A  2C31               	goto	l441
  6008  048B  3A03               	xorlw	3	; case 6
  6009  048C  1903               	skipnz
  6010  048D  2C3A               	goto	l456
  6011  048E  3A01               	xorlw	1	; case 7
  6012  048F  1903               	skipnz
  6013  0490  2C43               	goto	l471
  6014  0491  3A0F               	xorlw	15	; case 8
  6015  0492  1903               	skipnz
  6016  0493  2C4C               	goto	l486
  6017  0494  3A01               	xorlw	1	; case 9
  6018  0495  1903               	skipnz
  6019  0496  2C55               	goto	l501
  6020  0497  3A03               	xorlw	3	; case 10
  6021  0498  1903               	skipnz
  6022  0499  2C5E               	goto	l516
  6023  049A  3A01               	xorlw	1	; case 11
  6024  049B  1903               	skipnz
  6025  049C  2C67               	goto	l531
  6026  049D  2C9E               	goto	l545
  6027  049E                     l545:
  6028  049E  0008               	return
  6029  049F                     __end_of_Ds_BCD:
  6030                           
  6031                           	psect	text29
  6032  07D0                     __ptext29:	
  6033 ;; *************** function _ADC_StartConversion *****************
  6034 ;; Defined at:
  6035 ;;		line 98 in file "mcc_generated_files/adc.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;		None
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;		None
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  1    wreg      void 
  6042 ;; Registers used:
  6043 ;;		None
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6049 ;;      Params:         0       0       0       0       0       0
  6050 ;;      Locals:         0       0       0       0       0       0
  6051 ;;      Temps:          0       0       0       0       0       0
  6052 ;;      Totals:         0       0       0       0       0       0
  6053 ;;Total ram usage:        0 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    4
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_main
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           
  6064                           ;psect for function _ADC_StartConversion
  6065  07D0                     _ADC_StartConversion:
  6066  07D0                     l2877:	
  6067                           ;incstack = 0
  6068                           ; Regs used in _ADC_StartConversion: []
  6069                           
  6070                           
  6071                           ;mcc_generated_files/adc.c: 101:     ADCON0bits.GO_nDONE = 1;
  6072  07D0  0021               	movlb	1	; select bank1
  6073  07D1  149D               	bsf	29,1	;volatile
  6074  07D2                     l198:
  6075  07D2  0008               	return
  6076  07D3                     __end_of_ADC_StartConversion:
  6077                           
  6078                           	psect	intentry
  6079  0004                     __pintentry:	
  6080 ;; *************** function _INTERRUPT_InterruptManager *****************
  6081 ;; Defined at:
  6082 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;		None
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;		None
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  1    wreg      void 
  6089 ;; Registers used:
  6090 ;;		wreg, status,2, status,0, pclath, cstack
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6096 ;;      Params:         0       0       0       0       0       0
  6097 ;;      Locals:         0       0       0       0       0       0
  6098 ;;      Temps:          0       0       0       0       0       0
  6099 ;;      Totals:         0       0       0       0       0       0
  6100 ;;Total ram usage:        0 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; Hardware stack levels required when called:    3
  6103 ;; This function calls:
  6104 ;;		_ADC_ISR
  6105 ;;		_TMR6_ISR
  6106 ;; This function is called by:
  6107 ;;		Interrupt level 1
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111  0004                     _INTERRUPT_InterruptManager:
  6112                           
  6113                           ;incstack = 0
  6114  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6115                           
  6116                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6117  0005  3180               	pagesel	$
  6118  0006                     i1l2357:
  6119                           
  6120                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  6121  0006  1F0B               	btfss	11,6	;volatile
  6122  0007  2809               	goto	u162_21
  6123  0008  280A               	goto	u162_20
  6124  0009                     u162_21:
  6125  0009  2826               	goto	i1l282
  6126  000A                     u162_20:
  6127  000A                     i1l2359:
  6128                           
  6129                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  6130  000A  0021               	movlb	1	; select bank1
  6131  000B  1F11               	btfss	17,6	;volatile
  6132  000C  280E               	goto	u163_21
  6133  000D  280F               	goto	u163_20
  6134  000E                     u163_21:
  6135  000E  2818               	goto	i1l277
  6136  000F                     u163_20:
  6137  000F                     i1l2361:
  6138  000F  0020               	movlb	0	; select bank0
  6139  0010  1F11               	btfss	17,6	;volatile
  6140  0011  2813               	goto	u164_21
  6141  0012  2814               	goto	u164_20
  6142  0013                     u164_21:
  6143  0013  2818               	goto	i1l277
  6144  0014                     u164_20:
  6145  0014                     i1l2363:
  6146                           
  6147                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             ADC_ISR();
  6148  0014  3187  274A  3180   	fcall	_ADC_ISR
  6149                           
  6150                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  6151  0017  2826               	goto	i1l282
  6152  0018                     i1l277:	
  6153                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.TMR6IE == 1 && PI
      +                          R3bits.TMR6IF == 1)
  6154                           
  6155  0018  0021               	movlb	1	; select bank1
  6156  0019  1D93               	btfss	19,3	;volatile
  6157  001A  281C               	goto	u165_21
  6158  001B  281D               	goto	u165_20
  6159  001C                     u165_21:
  6160  001C  2826               	goto	i1l278
  6161  001D                     u165_20:
  6162  001D                     i1l2365:
  6163  001D  0020               	movlb	0	; select bank0
  6164  001E  1D93               	btfss	19,3	;volatile
  6165  001F  2821               	goto	u166_21
  6166  0020  2822               	goto	u166_20
  6167  0021                     u166_21:
  6168  0021  2826               	goto	i1l278
  6169  0022                     u166_20:
  6170  0022                     i1l2367:
  6171                           
  6172                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR6_ISR();
  6173  0022  3187  27B7  3180   	fcall	_TMR6_ISR
  6174                           
  6175                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6176  0025  2826               	goto	i1l282
  6177  0026                     i1l278:
  6178  0026                     i1l282:	
  6179                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  6180                           
  6181  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6182  0027  0009               	retfie
  6183  0028                     __end_of_INTERRUPT_InterruptManager:
  6184                           
  6185                           	psect	text31
  6186  07B7                     __ptext31:	
  6187 ;; *************** function _TMR6_ISR *****************
  6188 ;; Defined at:
  6189 ;;		line 119 in file "mcc_generated_files/tmr6.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;		None
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      void 
  6196 ;; Registers used:
  6197 ;;		wreg, status,2, status,0, pclath, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6203 ;;      Params:         0       0       0       0       0       0
  6204 ;;      Locals:         0       0       0       0       0       0
  6205 ;;      Temps:          0       0       0       0       0       0
  6206 ;;      Totals:         0       0       0       0       0       0
  6207 ;;Total ram usage:        0 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    2
  6210 ;; This function calls:
  6211 ;;		_TMR6_CallBack
  6212 ;; This function is called by:
  6213 ;;		_INTERRUPT_InterruptManager
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           
  6218                           ;psect for function _TMR6_ISR
  6219  07B7                     _TMR6_ISR:
  6220  07B7                     i1l2275:	
  6221                           ;incstack = 0
  6222                           ; Regs used in _TMR6_ISR: [wreg+status,2+status,0+pclath+cstack]
  6223                           
  6224                           
  6225                           ;mcc_generated_files/tmr6.c: 123:     PIR3bits.TMR6IF = 0;
  6226  07B7  0020               	movlb	0	; select bank0
  6227  07B8  1193               	bcf	19,3	;volatile
  6228  07B9                     i1l2277:
  6229                           
  6230                           ;mcc_generated_files/tmr6.c: 127:     TMR6_CallBack();
  6231  07B9  3187  2759  3187   	fcall	_TMR6_CallBack
  6232  07BC                     i1l41:
  6233  07BC  0008               	return
  6234  07BD                     __end_of_TMR6_ISR:
  6235                           
  6236                           	psect	text32
  6237  0759                     __ptext32:	
  6238 ;; *************** function _TMR6_CallBack *****************
  6239 ;; Defined at:
  6240 ;;		line 130 in file "mcc_generated_files/tmr6.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;		None
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;		None
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  1    wreg      void 
  6247 ;; Registers used:
  6248 ;;		wreg, status,2, status,0, pclath, cstack
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6254 ;;      Params:         0       0       0       0       0       0
  6255 ;;      Locals:         0       0       0       0       0       0
  6256 ;;      Temps:          0       0       0       0       0       0
  6257 ;;      Totals:         0       0       0       0       0       0
  6258 ;;Total ram usage:        0 bytes
  6259 ;; Hardware stack levels used:    1
  6260 ;; Hardware stack levels required when called:    1
  6261 ;; This function calls:
  6262 ;;		Absolute function
  6263 ;;		_Interrupcion_timer
  6264 ;;		_TMR6_DefaultInterruptHandler
  6265 ;; This function is called by:
  6266 ;;		_TMR6_ISR
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           
  6271                           ;psect for function _TMR6_CallBack
  6272  0759                     _TMR6_CallBack:
  6273  0759                     i1l1957:	
  6274                           ;incstack = 0
  6275                           ; Regs used in _TMR6_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6276                           
  6277                           
  6278                           ;mcc_generated_files/tmr6.c: 134:     if(TMR6_InterruptHandler)
  6279  0759  0021               	movlb	1	; select bank1
  6280  075A  0846               	movf	_TMR6_InterruptHandler^(0+128),w
  6281  075B  0447               	iorwf	(_TMR6_InterruptHandler+1)^(0+128),w
  6282  075C  1903               	btfsc	3,2
  6283  075D  2F5F               	goto	u89_21
  6284  075E  2F60               	goto	u89_20
  6285  075F                     u89_21:
  6286  075F  2F65               	goto	i1l45
  6287  0760                     u89_20:
  6288  0760                     i1l1959:
  6289                           
  6290                           ;mcc_generated_files/tmr6.c: 135:     {;mcc_generated_files/tmr6.c: 136:         TMR6_In
      +                          terruptHandler();
  6291  0760  0847               	movf	(_TMR6_InterruptHandler+1)^(0+128),w
  6292  0761  008A               	movwf	10
  6293  0762  0846               	movf	_TMR6_InterruptHandler^(0+128),w
  6294  0763  000A               	callw
  6295  0764  3187               	pagesel	$
  6296  0765                     i1l45:
  6297  0765  0008               	return
  6298  0766                     __end_of_TMR6_CallBack:
  6299                           
  6300                           	psect	text33
  6301  07BD                     __ptext33:	
  6302 ;; *************** function _Interrupcion_timer *****************
  6303 ;; Defined at:
  6304 ;;		line 18 in file "main.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;		None
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;		None
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      void 
  6311 ;; Registers used:
  6312 ;;		wreg
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6318 ;;      Params:         0       0       0       0       0       0
  6319 ;;      Locals:         0       0       0       0       0       0
  6320 ;;      Temps:          1       0       0       0       0       0
  6321 ;;      Totals:         1       0       0       0       0       0
  6322 ;;Total ram usage:        1 bytes
  6323 ;; Hardware stack levels used:    1
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_main
  6328 ;;		_TMR6_CallBack
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           
  6333                           ;psect for function _Interrupcion_timer
  6334  07BD                     _Interrupcion_timer:
  6335  07BD                     i1l1929:	
  6336                           ;incstack = 0
  6337                           ; Regs used in _Interrupcion_timer: [wreg]
  6338                           
  6339                           
  6340                           ;main.c: 19:  timer_flag = 1;
  6341  07BD  3001               	movlw	1
  6342  07BE  00F0               	movwf	??_Interrupcion_timer
  6343  07BF  0870               	movf	??_Interrupcion_timer,w
  6344  07C0  0021               	movlb	1	; select bank1
  6345  07C1  00C8               	movwf	_timer_flag^(0+128)	;volatile
  6346  07C2                     i1l336:
  6347  07C2  0008               	return
  6348  07C3                     __end_of_Interrupcion_timer:
  6349                           
  6350                           	psect	text34
  6351  07D3                     __ptext34:	
  6352 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  6353 ;; Defined at:
  6354 ;;		line 144 in file "mcc_generated_files/tmr6.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		None
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6368 ;;      Params:         0       0       0       0       0       0
  6369 ;;      Locals:         0       0       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0
  6371 ;;      Totals:         0       0       0       0       0       0
  6372 ;;Total ram usage:        0 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_TMR6_Initialize
  6378 ;;		_TMR6_CallBack
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           
  6383                           ;psect for function _TMR6_DefaultInterruptHandler
  6384  07D3                     _TMR6_DefaultInterruptHandler:
  6385  07D3                     i1l51:	
  6386                           ;incstack = 0
  6387                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  6388                           
  6389  07D3  0008               	return
  6390  07D4                     __end_of_TMR6_DefaultInterruptHandler:
  6391                           
  6392                           	psect	text35
  6393  074A                     __ptext35:	
  6394 ;; *************** function _ADC_ISR *****************
  6395 ;; Defined at:
  6396 ;;		line 145 in file "mcc_generated_files/adc.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;		None
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      void 
  6403 ;; Registers used:
  6404 ;;		wreg, status,2, status,0, pclath, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6410 ;;      Params:         0       0       0       0       0       0
  6411 ;;      Locals:         0       0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0
  6413 ;;      Totals:         0       0       0       0       0       0
  6414 ;;Total ram usage:        0 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    2
  6417 ;; This function calls:
  6418 ;;		Absolute function
  6419 ;;		_ADC_DefaultInterruptHandler
  6420 ;;		_Interrupcion_ADC
  6421 ;; This function is called by:
  6422 ;;		_INTERRUPT_InterruptManager
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           
  6427                           ;psect for function _ADC_ISR
  6428  074A                     _ADC_ISR:
  6429  074A                     i1l2297:	
  6430                           ;incstack = 0
  6431                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
  6432                           
  6433                           
  6434                           ;mcc_generated_files/adc.c: 148:     PIR1bits.ADIF = 0;
  6435  074A  0020               	movlb	0	; select bank0
  6436  074B  1311               	bcf	17,6	;volatile
  6437  074C                     i1l2299:
  6438                           
  6439                           ;mcc_generated_files/adc.c: 150:  if(ADC_InterruptHandler)
  6440  074C  0021               	movlb	1	; select bank1
  6441  074D  083E               	movf	_ADC_InterruptHandler^(0+128),w
  6442  074E  043F               	iorwf	(_ADC_InterruptHandler+1)^(0+128),w
  6443  074F  1903               	btfsc	3,2
  6444  0750  2F52               	goto	u157_21
  6445  0751  2F53               	goto	u157_20
  6446  0752                     u157_21:
  6447  0752  2F58               	goto	i1l217
  6448  0753                     u157_20:
  6449  0753                     i1l2301:
  6450                           
  6451                           ;mcc_generated_files/adc.c: 151:     {;mcc_generated_files/adc.c: 152:         ADC_Inter
      +                          ruptHandler();
  6452  0753  083F               	movf	(_ADC_InterruptHandler+1)^(0+128),w
  6453  0754  008A               	movwf	10
  6454  0755  083E               	movf	_ADC_InterruptHandler^(0+128),w
  6455  0756  000A               	callw
  6456  0757  3187               	pagesel	$
  6457  0758                     i1l217:
  6458  0758  0008               	return
  6459  0759                     __end_of_ADC_ISR:
  6460                           
  6461                           	psect	text36
  6462  07D4                     __ptext36:	
  6463 ;; *************** function _ADC_DefaultInterruptHandler *****************
  6464 ;; Defined at:
  6465 ;;		line 160 in file "mcc_generated_files/adc.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;		None
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      void 
  6472 ;; Registers used:
  6473 ;;		None
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6479 ;;      Params:         0       0       0       0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0
  6481 ;;      Temps:          0       0       0       0       0       0
  6482 ;;      Totals:         0       0       0       0       0       0
  6483 ;;Total ram usage:        0 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_ADC_Initialize
  6489 ;;		_ADC_ISR
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           
  6494                           ;psect for function _ADC_DefaultInterruptHandler
  6495  07D4                     _ADC_DefaultInterruptHandler:
  6496  07D4                     i1l223:	
  6497                           ;incstack = 0
  6498                           ; Regs used in _ADC_DefaultInterruptHandler: []
  6499                           
  6500  07D4  0008               	return
  6501  07D5                     __end_of_ADC_DefaultInterruptHandler:
  6502                           
  6503                           	psect	text37
  6504  0766                     __ptext37:	
  6505 ;; *************** function _Interrupcion_ADC *****************
  6506 ;; Defined at:
  6507 ;;		line 13 in file "main.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, pclath, cstack
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6521 ;;      Params:         0       0       0       0       0       0
  6522 ;;      Locals:         0       0       0       0       0       0
  6523 ;;      Temps:          1       0       0       0       0       0
  6524 ;;      Totals:         1       0       0       0       0       0
  6525 ;;Total ram usage:        1 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; Hardware stack levels required when called:    1
  6528 ;; This function calls:
  6529 ;;		_ADC_GetConversionResult
  6530 ;; This function is called by:
  6531 ;;		_main
  6532 ;;		_ADC_ISR
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           
  6537                           ;psect for function _Interrupcion_ADC
  6538  0766                     _Interrupcion_ADC:
  6539  0766                     i1l2001:	
  6540                           ;incstack = 0
  6541                           ; Regs used in _Interrupcion_ADC: [wreg+pclath+cstack]
  6542                           
  6543                           
  6544                           ;main.c: 14:  num_ADC = ADC_GetConversionResult();
  6545  0766  3187  27C3  3187   	fcall	_ADC_GetConversionResult
  6546  0769  0871               	movf	?_ADC_GetConversionResult+1,w
  6547  076A  0021               	movlb	1	; select bank1
  6548  076B  00BD               	movwf	(_num_ADC+1)^(0+128)	;volatile
  6549  076C  0870               	movf	?_ADC_GetConversionResult,w
  6550  076D  00BC               	movwf	_num_ADC^(0+128)	;volatile
  6551  076E                     i1l2003:
  6552                           
  6553                           ;main.c: 15:  ADC_flag = 1;
  6554  076E  3001               	movlw	1
  6555  076F  00F2               	movwf	??_Interrupcion_ADC
  6556  0770  0872               	movf	??_Interrupcion_ADC,w
  6557  0771  00F9               	movwf	_ADC_flag	;volatile
  6558  0772                     i1l333:
  6559  0772  0008               	return
  6560  0773                     __end_of_Interrupcion_ADC:
  6561                           
  6562                           	psect	text38
  6563  07C3                     __ptext38:	
  6564 ;; *************** function _ADC_GetConversionResult *****************
  6565 ;; Defined at:
  6566 ;;		line 111 in file "mcc_generated_files/adc.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;		None
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;		None
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  2    0[COMMON] unsigned short 
  6573 ;; Registers used:
  6574 ;;		wreg
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6580 ;;      Params:         2       0       0       0       0       0
  6581 ;;      Locals:         0       0       0       0       0       0
  6582 ;;      Temps:          0       0       0       0       0       0
  6583 ;;      Totals:         2       0       0       0       0       0
  6584 ;;Total ram usage:        2 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_Interrupcion_ADC
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           
  6594                           ;psect for function _ADC_GetConversionResult
  6595  07C3                     _ADC_GetConversionResult:
  6596  07C3                     i1l1925:	
  6597                           ;incstack = 0
  6598                           ; Regs used in _ADC_GetConversionResult: [wreg]
  6599                           
  6600                           
  6601                           ;mcc_generated_files/adc.c: 114:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6602  07C3  0021               	movlb	1	; select bank1
  6603  07C4  081C               	movf	28,w	;volatile
  6604  07C5  00F1               	movwf	?_ADC_GetConversionResult+1
  6605  07C6  081B               	movf	27,w	;volatile
  6606  07C7  00F0               	movwf	?_ADC_GetConversionResult
  6607  07C8                     i1l204:
  6608  07C8  0008               	return
  6609  07C9                     __end_of_ADC_GetConversionResult:
  6610  007E                     btemp	set	126	;btemp
  6611  007E                     int$flags	set	126
  6612  007E                     wtemp0	set	126
  6613                           
  6614                           	psect	config
  6615                           
  6616                           ;Config register CONFIG1 @ 0x8007
  6617                           ;	Oscillator Selection
  6618                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6619                           ;	Watchdog Timer Enable
  6620                           ;	WDTE = ON, WDT enabled
  6621                           ;	Power-up Timer Enable
  6622                           ;	PWRTE = OFF, PWRT disabled
  6623                           ;	MCLR Pin Function Select
  6624                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6625                           ;	Flash Program Memory Code Protection
  6626                           ;	CP = OFF, Program memory code protection is disabled
  6627                           ;	Data Memory Code Protection
  6628                           ;	CPD = OFF, Data memory code protection is disabled
  6629                           ;	Brown-out Reset Enable
  6630                           ;	BOREN = ON, Brown-out Reset enabled
  6631                           ;	Clock Out Enable
  6632                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6633                           ;	Internal/External Switchover
  6634                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6635                           ;	Fail-Safe Clock Monitor Enable
  6636                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6637  8007                     	org	32775
  6638  8007  3FFC               	dw	16380
  6639                           
  6640                           ;Config register CONFIG2 @ 0x8008
  6641                           ;	Flash Memory Self-Write Protection
  6642                           ;	WRT = OFF, Write protection off
  6643                           ;	PLL Enable
  6644                           ;	PLLEN = ON, 4x PLL enabled
  6645                           ;	Stack Overflow/Underflow Reset Enable
  6646                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6647                           ;	Brown-out Reset Voltage Selection
  6648                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6649                           ;	Low-Voltage Programming Enable
  6650                           ;	LVP = ON, Low-voltage programming enabled
  6651  8008                     	org	32776
  6652  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     56      56
    BANK1            80     28      41
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    Tm_Baje_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK1[9]), 

    Tm_Inicie_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK1[9]), 

    Ds_Convertir_en_uni@dsp	PTR struct Ds_Display size(1) Largest target is 8
		 -> main@seven_seg(BANK1[8]), 

    Ds_Iniciar_displays@dsp	PTR struct Ds_Display size(1) Largest target is 8
		 -> main@seven_seg(BANK1[8]), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_ADC(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_ADC(), ADC_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_timer(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_timer(), Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_Ds_Iniciar_displays
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _Ds_Convertir_en_uni->___lwdiv
    _Ds_Convertir_en_uni->___lwmod
    _Ds_Conversor_ADC->___xxtofl
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR6_CallBack->_Interrupcion_timer
    _ADC_ISR->_Interrupcion_ADC
    _Interrupcion_ADC->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_Ds_Conversor_ADC
    _Ds_Convertir_en_uni->___lwdiv
    _Ds_Conversor_ADC->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   10050
                                             55 BANK0      1     1      0
                                              0 BANK1     28    28      0
                     _ADC_Initialize
            _ADC_SetInterruptHandler
                _ADC_StartConversion
                             _Ds_BCD
                   _Ds_Conversor_ADC
                _Ds_Convertir_en_uni
                   _Ds_Encienda_Disp
                _Ds_Iniciar_displays
                       _EUSART_Write
                 _EUSART_is_tx_ready
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
                  _Tm_Baje_periodico
                _Tm_Inicie_periodico
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (1) _Tm_Inicie_periodico                                  4     2      2     281
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Baje_periodico                                    2     2      0      67
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     785
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (1) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     211
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     211
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     211
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_ready                                   1     1      0      37
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Iniciar_displays                                  7     2      5     951
                                              3 COMMON     5     0      5
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Encienda_Disp                                     1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Convertir_en_uni                                  4     2      2    1753
                                              3 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     772
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Conversor_ADC                                     8     6      2    4535
                                             47 BANK0      8     6      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     427
                                             36 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3353
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Ds_BCD                                               3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                            _ADC_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR6_CallBack                                        0     0      0       0
                   Absolute function *
                 _Interrupcion_timer *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Interrupcion_timer                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
                   Absolute function *
        _ADC_DefaultInterruptHandler *
                   _Interrupcion_ADC *
 ---------------------------------------------------------------------------------
 (6) _Interrupcion_ADC                                     1     1      0       0
                                              2 COMMON     1     1      0
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (7) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
     _ADC_SetInterruptHandler
   _ADC_SetInterruptHandler
   _ADC_StartConversion
   _Ds_BCD
   _Ds_Conversor_ADC
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Ds_Convertir_en_uni
     ___lwdiv
     ___lwmod
   _Ds_Encienda_Disp
   _Ds_Iniciar_displays
   _EUSART_Write
   _EUSART_is_tx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _TMR6_SetInterruptHandler
   _TMR6_StartTimer
   _Tm_Baje_periodico
   _Tm_Inicie_periodico
   _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
     _Interrupcion_ADC *
       _ADC_GetConversionResult
   _TMR6_ISR
     _TMR6_CallBack
       Absolute function(Fake) *
       _Interrupcion_timer *
       _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     38      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1C      29       8       51.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      6C      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Sep 10 15:45:51 2021

                  __end_of_Ds_Convertir_en_uni 0572                                             l23 072A  
                                           l26 07CF                                             l48 079E  
                                           l76 0704                              ??_TMR6_StartTimer 0073  
                         ??_Interrupcion_timer 0070                            __Umul8_16@word_mpld 0022  
                                          l122 06D0                                            l220 07B6  
                                          l127 0749                                            l400 0419  
                                          l161 07AA                                            l402 041A  
                                          l146 078A                                            l411 041F  
                                          l251 0779                                            l404 041B  
                                          l164 07A4                                            l501 0455  
                                          l421 0425                                            l413 0421  
                                          l149 0792                                            l430 042B  
                                          l406 041C                                            l254 077E  
                                          l511 045B                                            l503 0457  
                                          l423 0426                                            l415 0422  
                                          l167 07B0                                            l520 0461  
                                          l432 042C                                            l408 041D  
                                          l600 0686                                            l360 05B0  
                                          l192 073A                                            l248 0717  
                                          l513 045C                                            l505 0458  
                                          l441 0431                                            l417 0423  
                                          l257 07CC                                            l522 0462  
                                          l434 042D                                            l426 0428  
                                          l602 0688                                            l531 0467  
                                          l507 0459                                            l451 0437  
                                          l443 0433                                            l419 0424  
                                          l371 0408                                            l524 0463  
                                          l516 045E                                            l460 043D  
                                          l436 042E                                            l428 042A  
                                          l604 0689                                            l541 046D  
                                          l533 0469                                            l509 045A  
                                          l453 0438                                            l445 0434  
                                          l381 040D                                            l373 0409  
                                          l365 0404                                            l621 0788  
                                          l198 07D2                                            l526 0464  
                                          l518 0460                                            l462 043E  
                                          l438 042F                                            l606 068A  
                                          l543 046E                                            l535 046A  
                                          l471 0443                                            l447 0435  
                                          l391 0413                                            l383 040F  
                                          l375 040A                                            l367 0406  
                                          l551 062A                                            l528 0465  
                                          l464 043F                                            l456 043A  
                                          l537 046B                                            l481 0449  
                                          l473 0445                                            l449 0436  
                                          l393 0414                                            l385 0410  
                                          l545 049E                                            l377 040B  
                                          l369 0407                                            l609 06EE  
                                          l490 044F                                            l466 0440  
                                          l458 043C                                            l539 046C  
                                          l483 044A                                            l475 0446  
                                          l387 0411                                            l492 0450  
                                          l468 0441                                            l396 0416  
                                          l548 0571                                            l580 0669  
                                          l477 0447                                            l389 0412  
                                          l494 0451                                            l486 044C  
                                          l398 0418                                            l479 0448  
                                          l496 0452                                            l488 044E  
                                          l592 067C                                            l584 0671  
                                          l576 0666                                            l498 0453  
                                          l594 067E                                            l586 0673  
                                          l578 0668                                            l596 067F  
                                          l588 0674                                            l986 04FE  
                                          l979 0513                                            l989 0513  
                                          _PR6 041D                                __end_of_ADC_ISR 0759  
               ?_EUSART_SetFramingErrorHandler 0073                __end_of_ADC_SetInterruptHandler 07B7  
                                          wreg 0009                                   ___flmul@aexp 0038  
                                 ___flmul@bexp 003D                   ?_ADC_DefaultInterruptHandler 0070  
                                 ___flmul@sign 0037                                   ___flmul@temp 0042  
                                 ___flmul@prod 003E                                   ___fltol@exp1 004E  
                                         l1201 069E                                           l1203 06AE  
                                         l1240 03D9                                           l1232 03B3  
                                         l1065 05ED                                           l3001 0337  
                                         l1226 0378                                           l1075 065F  
                                         l3011 0348                                           l3003 033C  
                                         l1228 0401                                           l3013 0349  
                                         l3005 0341                                           l1182 028F  
                                         l1239 03CD                                           l3015 034D  
                                         l3007 0346                                           l3009 0348  
                                         l1194 0283                                           l1188 020B  
                                         l2601 04C8                                           l2521 07AB  
                                         l2531 069A                                           l2603 04D0  
                                         l2523 07B1                                           l2515 0799  
                                         l2533 06A5                                           l2525 068D  
                                         l2701 0072                                           l2621 04F5  
                                         l2613 04DE                                           l2605 04D2  
                                         l2517 07A5                                           l2541 071B  
                                         l3079 0478                                           l2535 06AA  
                                         l2527 068F                                           l2711 008E  
                                         l2703 0077                                           l2623 0503  
                                         l2607 04D6                                           l2615 04EE  
                                         l2631 05BA                                           l2519 079F  
                                         l2551 06EF                                           l2543 071C  
                                         l2529 0696                                           l2801 026B  
                                         l2721 00AE                                           l2713 0093  
                                         l2705 007C                                           l2625 0508  
                                         l2641 05D9                                           l2633 05BD  
                                         l2561 06FF                                           l2553 06F2  
                                         l2545 071E                                           l2811 0287  
                                         l2803 026D                                           l2731 0109  
                                         l2723 00BB                                           l2715 0098  
                                         l2707 0084                                           l2643 05DD  
                                         l2635 05C2                                           l2627 05B1  
                                         l2571 06CF                                           l2563 06AF  
                                         l2555 06F5                                           l2547 0720  
                                         l2539 0718                                           l2805 027A  
                                         l2741 013E                                           l2733 0116  
                                         l2725 00D5                                           l2709 0086  
                                         l2821 0370                                           l2901 05F7  
                                         l2645 05DE                                           l2637 05C6  
                                         l2629 05B4                                           l2661 063E  
                                         l2653 062B                                           l2581 0733  
                                         l2573 072B                                           l2565 06BA  
                                         l2557 06F7                                           l2549 0727  
                                         l2807 027E                                           l2751 0181  
                                         l2743 0145                                           l2735 011D  
                                         l2727 00E2                                           l2719 00A1  
                                         l2591 049F                                           l2831 0399  
                                         l2823 0380                                           l2815 0357  
                                         l2903 0626                                           l2647 05E3  
                                         l2639 05CA                                           l2663 0642  
                                         l2655 0631                                           l2671 065B  
                                         l2911 0539                                           l2575 072E  
                                         l2567 06C1                                           l2583 0773  
                                         l2559 06FA                                           l2809 027F  
                                         l2761 01D4                                           l2753 0195  
                                         l2745 0159                                           l2737 012A  
                                         l2729 00FC                                           l2681 0047  
                                         l2593 04AB                                           l2841 03C3  
                                         l2833 03A0                                           l2817 035C  
                                         l2649 05E9                                           l2665 064C  
                                         l2657 0635                                           l2913 055D  
                                         l2577 072F                                           l2569 06C8  
                                         l2585 0776                                           l2915 0403  
                                         l2763 01DB                                           l2771 01EB  
                                         l2755 01AA                                           l2747 0160  
                                         l2739 0131                                           l2691 005C  
                                         l2683 0048                                           l2675 0039  
                                         l2851 03F4                                           l2843 03C7  
                                         l2835 03A4                                           l2827 0389  
                                         l2819 0360                                           l2667 0650  
                                         l2659 063A                                           l2907 0516  
                                         l2931 0681                                           l2579 0732  
                                         l2587 0777                                           l2773 01EF  
                                         l2765 01DF                                           l2757 01C1  
                                         l2749 0174                                           l2693 0064  
                                         l2685 004D                                           l2677 003F  
                                         l2597 04B4                                           l2853 03F8  
                                         l2845 03D1                                           l2837 03AC  
                                         l2829 038E                                           l2669 0655  
                                         l2909 0529                                           l2925 0661  
                                         l2861 073B                                           l2589 07C9  
                                         l2941 0298                                           l2933 0290  
                                         l2919 0470                                           l2791 0239  
                                         l2783 0210                                           l2775 01F0  
                                         l2767 01E0                                           l2759 01C8  
                                         l2695 0069                                           l2687 0052  
                                         l2679 0043                                           l2599 04C7  
                                         l2855 03F9                                           l2847 03DB  
                                         l2839 03BA                                           l2927 066B  
                                         l2863 073C                                           l2951 02A7  
                                         l2943 0298                                           l2935 0296  
                                         l2785 0215                                           l2793 023D  
                                         l2777 01F4                                           l2769 01E7  
                                         l2697 006D                                           l2689 005A  
                                         l2849 03EF                                           l2929 0676  
                                         l2873 078A                                           l2865 0741  
                                         l2881 06D2                                           l2961 02C7  
                                         l2953 02AA                                           l2945 0298  
                                         l2937 0297                                           l2795 024A  
                                         l2787 021D                                           l2779 0208  
                                         l2699 0071                                           l2891 0598  
                                         l2883 0574                                           l2875 078F  
                                         l2867 0746                                           l2859 07CD  
                                         l2971 02DB                                           l2963 02CE  
                                         l2955 02AC                                           l2947 02A0  
                                         l2939 0298                                           l2877 07D0  
                                         l2797 0254                                           l2789 0221  
                                         l2893 05A0                                           l2885 0580  
                                         l2869 0748                                           l2981 02F8  
                                         l2973 02ED                                           l2965 02D2  
                                         l2957 02BD                                           l2949 02A3  
                                         l2799 0262                                           l2895 05A8  
                                         l2887 0588                                           l2879 0705  
                                         l2991 031C                                           l2983 0300  
                                         l2975 02F8                                           l2967 02D5  
                                         l2959 02C0                                           l2889 0590  
                                         l2897 0780                                           l2993 0322  
                                         l2985 0308                                           l2977 02F8  
                                         l2969 02D6                                           l2899 05EE  
                                         l2995 0328                                           l2987 030E  
                                         l2997 032D                                           l2989 0315  
                                         l2999 0332                                           u2000 007C  
                                         u2001 007B                                           u2010 0093  
                                         u2011 0092                                           u2020 0098  
                                         u2021 0097                                           u2110 01EF  
                                         u2111 01EE                                           u2200 027E  
                                         u2120 01F4                                           u2201 027D  
                                         u2121 01F3                                           u2105 01E1  
                                         u2130 0208                                           u2050 01A0  
                                         u2210 035C                                           u2131 0207  
                                         u2035 0117                                           u2211 035B  
                                         u2140 020F                                           u2060 01B7  
                                         u2300 03CD                                           u2220 0360  
                                         u2141 020E                                           u2045 0146  
                                         u2301 03CC                                           u2221 035F  
                                         _LATA 010C                                           u2150 0215  
                                         u2310 03D1                                           u2230 0380  
                                         _LATB 010D                                           u2151 0214  
                                         u2055 019C                                           u2311 03D0  
                                         u2231 037F                                           u2160 0221  
                                         u2320 03E5                                           u2400 067C  
                                         u2161 0220                                           u2065 01B3  
                                         u2401 067B                                           u2170 022F  
                                         u2090 01DF                                           u2330 03F4  
                                         u2250 039F                                           u2410 0686  
                                         u2091 01DE                                           u2075 01C2  
                                         u2331 03F3                                           u2251 039E  
                                         u2411 0685                                           u1700 06AA  
                                         u2180 024A                                           u2340 03F8  
                                         u2420 0300                                           u1701 06A9  
                                         u2181 0249                                           u2085 01D5  
                                         u2341 03F7                                           u2325 03E1  
                                         u2245 0393                                           u2421 02FF  
                                         u2190 0262                                           u2270 03B9  
                                         u2350 0741                                           u1710 077E  
                                         u2191 0261                                           u2175 022B  
                                         u2271 03B8                                           u2351 0740  
                                         u1711 077D                                           u1800 0503  
                                         u1720 04AB                                           u2360 0746  
                                         u2185 0246                                           u1801 0502  
                                         u1721 04AA                                           u2265 03AD  
                                         u2361 0745                                           u1810 0508  
                                         u1730 04C1                                           u2290 03C7  
                                         u2370 078F                                           u2195 025E  
                                         u1811 0507                                           u2291 03C6  
                                         u2371 078E                                           u1740 04D6  
                                         u1820 05BA                                           u2380 0666  
                                         u1741 04D5                                           u2285 03BD  
                                         u1821 05B9                                           u2381 0665  
                                         u1750 04DD                                           u1910 0642  
                                         u2390 0671                                           u1751 04DC  
                                         u1735 04BD                                           u1911 0641  
                                         u2391 0670                                           u1680 069A  
                                         u1840 05CA                                           u1920 064C  
                                         u1681 0699                                           u1841 05C9  
                                         u1921 064B                                           u1905 0636  
                                         u1770 04ED                                           u1771 04EC  
                                         u1835 05BE                                           u1780 04F4  
                                         u1860 05D9                                           u1940 065B  
                                         u1781 04F3                                           u1765 04DF  
                                         u1861 05D8                                           u1941 065A  
                                         u1925 0648                                           u1950 0047  
                                         u1695 069F                                           u1951 0046  
                                         u1855 05CB                                           u1935 0651  
                                         u1960 004D                                           u1880 05E9  
                                         u1961 004C                                           u1881 05E8  
                                         u1865 05D5                                           u1970 0052  
                                         u1890 0631                                           u1971 0051  
                                         u1795 04F6                                           u1875 05DF  
                                         u1891 0630                                           u1980 0071  
                                         u1981 0070                                           u1990 0077  
                                         u1991 0076                                           i1l41 07BC  
                                         i1l51 07D3                                           i1l45 0765  
                                         _PLLR 04D6                                           _TMR6 041C  
                   Ds_Convertir_en_uni@voltaje 0023                                           _WPUA 020C  
                                         _WPUB 020D                                           _main 0290  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                       __end_of_Ds_Conversor_ADC 062B  
                      Ds_Encienda_Disp@dispNum 0073                                           start 0028  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 000C  
                __end_of_OSCILLATOR_Initialize 077F                                  ___fltol@sign1 004D  
                                        ?_main 0070                                __end_of___flmul 0290  
                              __end_of___fltol 0514                                          _T6CON 041E  
                              __end_of___lwdiv 05EE                                          i1l204 07C8  
                                        i1l223 07D4                                          i1l217 0758  
                                        i1l333 0772                                          i1l336 07C2  
                              __end_of___lwmod 0660                                          i1l282 0026  
                                        i1l277 0018                                          i1l278 0026  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        u89_20 0760                                          u89_21 075F  
                                        _TXREG 019A                                          _TXSTA 019E  
             __size_of_ADC_GetConversionResult 0006                              ?_Ds_Encienda_Disp 0070  
            __size_of_TMR6_SetInterruptHandler 0006                                 Ds_BCD@segmento 0075  
                    ?_TMR6_SetInterruptHandler 0073                               __end_of_TMR6_ISR 07BD  
                           ??_Ds_Encienda_Disp 0073                                 _WDT_Initialize 07C9  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                   main@volt_ADC 00A2  
                  __end_of_Tm_Inicie_periodico 06EF                 ??_TMR6_DefaultInterruptHandler 0070  
                              __initialization 002A                                   __end_of_main 0355  
                            _Tm_Baje_periodico 077F                                 ??_EUSART_Write 0073  
                                    ??_ADC_ISR 0073                    ?_INTERRUPT_InterruptManager 0070  
                           ?_Tm_Baje_periodico 0070                                         ??_main 0057  
                 __size_of_Ds_Iniciar_displays 003F                         __end_of_WDT_Initialize 07CD  
                              _TMR6_Initialize 0718                            ??_Tm_Baje_periodico 0073  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 00C2  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         i1l2001 0766  
                                       i1l2003 076E                                         i1l2301 0753  
                                       i1l2361 000F                                         i1l2275 07B7  
                                       i1l2363 0014                                         i1l2277 07B9  
                                       i1l2365 001D                                         i1l2357 0006  
                                       i1l2367 0022                                         i1l2359 000A  
                                       i1l2297 074A                                         i1l2299 074C  
                                       i1l1925 07C3                                         i1l1929 07BD  
                                       i1l1957 0759                                         i1l1959 0760  
                                       u162_20 000A                                         u162_21 0009  
                                       u163_20 000F                                         u163_21 000E  
                                       u164_20 0014                                         u164_21 0013  
                   __end_of_EUSART_is_tx_ready 074A                                         u157_20 0753  
                                       u165_20 001D                                         u157_21 0752  
                                       u165_21 001C                                         u166_20 0022  
                                       u166_21 0021                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 0402  
                                       _Ds_BCD 0402                      __end_of_Tm_Baje_periodico 0789  
         __size_of_ADC_DefaultInterruptHandler 0001               __size_of_ADC_SetInterruptHandler 0006  
                                    ??___flmul 0032                                      ??___fltol 0048  
                                    ??___lwdiv 0077                                      ??___lwmod 0077  
                                main@valor_ADC 00A0                                  main@seven_seg 00B4  
                                main@timer_1ms 00AB                             __size_of__Umul8_16 0024  
                              ?_WDT_Initialize 0070        ADC_SetInterruptHandler@InterruptHandler 0073  
     TMR6_SetInterruptHandler@InterruptHandler 0073                                   ___xxtofl@arg 0026  
                                 ___xxtofl@exp 0025                              _SYSTEM_Initialize 0705  
                                 ___xxtofl@val 0073                        __end_of__initialization 0035  
                        Ds_Iniciar_displays@d1 0073                          Ds_Iniciar_displays@d2 0074  
                        Ds_Iniciar_displays@d3 0075                          Ds_Iniciar_displays@tA 0077  
                        Ds_Iniciar_displays@tE 0076                             ?_SYSTEM_Initialize 0070  
                              _TMR6_StartTimer 07CD                                     ___fltol@f1 0044  
                 __size_of_ADC_StartConversion 0003                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0075                                      ?_TMR6_ISR 0070  
                      __end_of_TMR6_Initialize 072B                      __size_of_Interrupcion_ADC 000D  
                        __end_of_TMR6_CallBack 0766                        _ADC_GetConversionResult 07C3  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0075  
                    __end_of_SYSTEM_Initialize 0718                                     __pbssBANK1 00BC  
                         __end_of_EUSART_Write 0793                                        ?_Ds_BCD 0070  
                            ?_Ds_Conversor_ADC 004F                              __end_of__Umul8_16 06AF  
                                   __pmaintext 0290                             ??_Ds_Conversor_ADC 0077  
                   __size_of_Tm_Baje_periodico 000A               __end_of_TMR6_SetInterruptHandler 079F  
                                   ??_TMR6_ISR 0071                                     __pintentry 0004  
                                      _ADC_ISR 074A                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                  __size_of_Interrupcion_timer 0006                        __size_of_ADC_Initialize 0010  
                                    ?___xxtofl 0073                   __size_of_Ds_Convertir_en_uni 005E  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0075  
                      __end_of_TMR6_StartTimer 07D0                            _Ds_Iniciar_displays 0572  
                              __size_of_Ds_BCD 009D                      __size_of_Ds_Encienda_Disp 002B  
                         _ADC_InterruptHandler 00BE                        _ADC_SetInterruptHandler 07B1  
                                      ___flmul 0039                                        ___fltol 049F  
                                      ___lwdiv 05B1                                        ___lwmod 062B  
                    ??_ADC_GetConversionResult 0072                               ?_TMR6_Initialize 0070  
                                      __ptext1 06D1                                        __ptext2 077F  
                                      __ptext3 07CD                                        __ptext4 0705  
                                      __ptext5 07C9                                        __ptext6 0718  
                                      __ptext7 0799                                        __ptext8 06EF  
                                      __ptext9 0773                           ?_Ds_Iniciar_displays 0073  
                        _OSCILLATOR_Initialize 0773                                     ??___xxtofl 0020  
                                      _num_ADC 00BC                       ??_PIN_MANAGER_Initialize 0073  
                                    _T6CONbits 041E                     __size_of_SYSTEM_Initialize 0013  
                                      clrloop0 0794                           end_of_initialization 0035  
                    Ds_Conversor_ADC@pendiente 0051          __end_of_EUSART_SetOverrunErrorHandler 07A5  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 079F  
                            _EUSART_Initialize 06AF                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                         Ds_Conversor_ADC@adcOUT 004F  
                                   _sleep_flag 0078                             _EUSART_is_tx_ready 073B  
                 __size_of_Tm_Inicie_periodico 001E                            ??_EUSART_Initialize 0075  
                             ??_WDT_Initialize 0073                                     _timer_flag 00C8  
                        ??_Ds_Iniciar_displays 0020                               _Interrupcion_ADC 0766  
                     _TMR6_SetInterruptHandler 0799                            ?_EUSART_is_tx_ready 0070  
          __end_of_ADC_DefaultInterruptHandler 07D5                    _ADC_DefaultInterruptHandler 07D4  
                                ___xxtofl@sign 0024                          __size_of_EUSART_Write 000A  
                          _ADC_StartConversion 07D0                         Ds_Iniciar_displays@dsp 0021  
              __size_of_EUSART_SetErrorHandler 0006                               ?_TMR6_StartTimer 0070  
                                  ___flmul@grs 0039                      __end_of_EUSART_Initialize 06D1  
                ??_ADC_DefaultInterruptHandler 0070                      ??_ADC_SetInterruptHandler 0075  
                         ??_EUSART_is_tx_ready 0073                                      _TXSTAbits 019E  
                               __end_of_Ds_BCD 049F                           ?_ADC_StartConversion 0070  
                   _EUSART_DefaultErrorHandler 0000                                   _EUSART_Write 0789  
                               _ADC_Initialize 072B                              __size_of_TMR6_ISR 0006  
                       ?_OSCILLATOR_Initialize 0070                            start_initialization 002A  
              __size_of_PIN_MANAGER_Initialize 0016                         _EUSART_is_tx_ready$341 0073  
                                     ??_Ds_BCD 0073                               _Ds_Encienda_Disp 0660  
                          _Ds_Convertir_en_uni 0514                 ?_EUSART_SetOverrunErrorHandler 0073  
                        ??_ADC_StartConversion 0073                         Tm_Inicie_periodico@ctp 0076  
                   _EUSART_FramingErrorHandler 00C4                         _EUSART_SetErrorHandler 07AB  
                       __end_of_ADC_Initialize 073B                                      __Umul8_16 068B  
                                     ?_ADC_ISR 0070                      __size_of_Ds_Conversor_ADC 003D  
                         ?_Ds_Convertir_en_uni 0023                                      ___flmul@a 002E  
                                    ___flmul@b 002A                                    __pbssCOMMON 0078  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                              __size_of___xxtofl 00AD  
                   __size_of_EUSART_Initialize 0022                          _TMR6_InterruptHandler 00C6  
                       __size_of_TMR6_CallBack 000D                               ___lwdiv@dividend 0075  
                       _PIN_MANAGER_Initialize 06EF                     __end_of_Interrupcion_timer 07C3  
                                     ?___flmul 002A                                       ?___fltol 0044  
                                   ?__Umul8_16 0073                                       ?___lwdiv 0073  
                                     ?___lwmod 0073                                ?_ADC_Initialize 0070  
                 ??_INTERRUPT_InterruptManager 0073                          ??_Ds_Convertir_en_uni 0025  
                                     _ADC_flag 0079                               ___lwdiv@quotient 0021  
                          _Tm_Inicie_periodico 06D1                       __end_of_Interrupcion_ADC 0773  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0073  
                                     _LATBbits 010D                                      clear_ram0 0793  
                                     _PIE1bits 0091                                       _PIE3bits 0093  
                            _eusartRxLastError 007A            __size_of_INTERRUPT_InterruptManager 0024  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0075  
                                     _PIR3bits 0013                     ??_TMR6_SetInterruptHandler 0075  
                         ?_Tm_Inicie_periodico 0073              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR6_ISR 07B7                               __size_of_ADC_ISR 000F  
                                   _ADCON0bits 009D                                  _TMR6_CallBack 0759  
                     __size_of_TMR6_Initialize 0013                       ?_ADC_GetConversionResult 0070  
                       Ds_Convertir_en_uni@dsp 0026                          ??_Tm_Inicie_periodico 0075  
                  __end_of_Ds_Iniciar_displays 05B1                        ??_OSCILLATOR_Initialize 0073  
                                  ??__Umul8_16 0075                            _EUSART_ErrorHandler 00C0  
                             __size_of___flmul 0257                               __size_of___fltol 0075  
                             __size_of___lwdiv 003D                               __size_of___lwmod 0035  
                               ?_TMR6_CallBack 0070                               _Ds_Conversor_ADC 05EE  
                     __end_of_Ds_Encienda_Disp 068B                     Tm_Inicie_periodico@periodo 0073  
                                     ___xxtofl 0355                                ___lwdiv@divisor 0073  
                              ___lwdiv@counter 0020                                       __ptext10 06AF  
                                     __ptext11 079F                                       __ptext20 0514  
                                     __ptext12 07A5                                       __ptext21 062B  
                                     __ptext13 07AB                                       __ptext22 05B1  
                                     __ptext14 072B                                       __ptext31 07B7  
                                     __ptext23 05EE                                       __ptext15 07B1  
                                     __ptext32 0759                                       __ptext24 0355  
                                     __ptext16 073B                                       __ptext33 07BD  
                                     __ptext25 049F                                       __ptext17 0789  
                                     __ptext34 07D3                                       __ptext26 0039  
                                     __ptext18 0572                                       __ptext35 074A  
                                     __ptext27 068B                                       __ptext19 0660  
                                     __ptext36 07D4                                       __ptext28 0402  
                                     __ptext37 0766                                       __ptext29 07D0  
                                     __ptext38 07C3                                  __size_of_main 00C5  
                  __size_of_EUSART_is_tx_ready 000F                        ?_EUSART_SetErrorHandler 0073  
                         Tm_Baje_periodico@ctp 0074                       __size_of_TMR6_StartTimer 0003  
EUSART_SetOverrunErrorHandler@interruptHandler 0073                                       int$flags 007E  
                                     main@Pack 00A5             __end_of_INTERRUPT_InterruptManager 0028  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 07AB  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 07A5  
                                   _INTCONbits 000B           __end_of_TMR6_DefaultInterruptHandler 07D4  
        __size_of_TMR6_DefaultInterruptHandler 0001                   _TMR6_DefaultInterruptHandler 07D3  
                     ?_ADC_SetInterruptHandler 0073                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                    __end_of_ADC_StartConversion 07D3  
                             ___lwmod@dividend 0075                        ?_PIN_MANAGER_Initialize 0070  
                            ??_TMR6_Initialize 0075                __end_of_ADC_GetConversionResult 07C9  
               __end_of_EUSART_SetErrorHandler 07B1                               ??_ADC_Initialize 0075  
EUSART_SetFramingErrorHandler@interruptHandler 0073                                ??_TMR6_CallBack 0071  
                       __Umul8_16@multiplicand 0073                                ___lwmod@divisor 0073  
                              ___lwmod@counter 0020                             _Interrupcion_timer 07BD  
                      Ds_Conversor_ADC@voltios 0055                             EUSART_Write@txData 0073  
               __end_of_PIN_MANAGER_Initialize 0705                  ?_TMR6_DefaultInterruptHandler 0070  
                          ?_Interrupcion_timer 0070                           __Umul8_16@multiplier 0024  
                            ?_Interrupcion_ADC 0070                             ??_Interrupcion_ADC 0072  
                            __Umul8_16@product 0020  
