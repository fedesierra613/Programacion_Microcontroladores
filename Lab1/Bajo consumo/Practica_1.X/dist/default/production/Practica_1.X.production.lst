

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 31 19:21:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text31,local,class=CODE,merge=1,delta=2
    41                           	psect	text32,local,class=CODE,merge=1,delta=2
    42                           	psect	text33,local,class=CODE,merge=1,delta=2
    43                           	psect	text34,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F1827 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0113                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0118                     	;# 
   137  0119                     	;# 
   138  011A                     	;# 
   139  011B                     	;# 
   140  011D                     	;# 
   141  011E                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0191                     	;# 
   145  0191                     	;# 
   146  0192                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0193                     	;# 
   150  0194                     	;# 
   151  0195                     	;# 
   152  0196                     	;# 
   153  0199                     	;# 
   154  019A                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0216                     	;# 
   179  0217                     	;# 
   180  0217                     	;# 
   181  0219                     	;# 
   182  021A                     	;# 
   183  021B                     	;# 
   184  021C                     	;# 
   185  021D                     	;# 
   186  021E                     	;# 
   187  021F                     	;# 
   188  0291                     	;# 
   189  0291                     	;# 
   190  0292                     	;# 
   191  0293                     	;# 
   192  0294                     	;# 
   193  0295                     	;# 
   194  0295                     	;# 
   195  0296                     	;# 
   196  0298                     	;# 
   197  0298                     	;# 
   198  0299                     	;# 
   199  029A                     	;# 
   200  029B                     	;# 
   201  029C                     	;# 
   202  029C                     	;# 
   203  029D                     	;# 
   204  029E                     	;# 
   205  029E                     	;# 
   206  0311                     	;# 
   207  0311                     	;# 
   208  0312                     	;# 
   209  0313                     	;# 
   210  0318                     	;# 
   211  0318                     	;# 
   212  0319                     	;# 
   213  031A                     	;# 
   214  0394                     	;# 
   215  0395                     	;# 
   216  0396                     	;# 
   217  039A                     	;# 
   218  039C                     	;# 
   219  039D                     	;# 
   220  039E                     	;# 
   221  039F                     	;# 
   222  0415                     	;# 
   223  0416                     	;# 
   224  0417                     	;# 
   225  041C                     	;# 
   226  041D                     	;# 
   227  041E                     	;# 
   228  0FE4                     	;# 
   229  0FE5                     	;# 
   230  0FE6                     	;# 
   231  0FE7                     	;# 
   232  0FE8                     	;# 
   233  0FE9                     	;# 
   234  0FEA                     	;# 
   235  0FEB                     	;# 
   236  0FED                     	;# 
   237  0FEE                     	;# 
   238  0FEF                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  0111                     	;# 
   288  0112                     	;# 
   289  0113                     	;# 
   290  0114                     	;# 
   291  0115                     	;# 
   292  0116                     	;# 
   293  0117                     	;# 
   294  0118                     	;# 
   295  0119                     	;# 
   296  011A                     	;# 
   297  011B                     	;# 
   298  011D                     	;# 
   299  011E                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0191                     	;# 
   303  0191                     	;# 
   304  0192                     	;# 
   305  0193                     	;# 
   306  0193                     	;# 
   307  0193                     	;# 
   308  0194                     	;# 
   309  0195                     	;# 
   310  0196                     	;# 
   311  0199                     	;# 
   312  019A                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019B                     	;# 
   316  019B                     	;# 
   317  019C                     	;# 
   318  019C                     	;# 
   319  019D                     	;# 
   320  019E                     	;# 
   321  019F                     	;# 
   322  020C                     	;# 
   323  020D                     	;# 
   324  0211                     	;# 
   325  0211                     	;# 
   326  0212                     	;# 
   327  0212                     	;# 
   328  0213                     	;# 
   329  0213                     	;# 
   330  0214                     	;# 
   331  0214                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0215                     	;# 
   335  0216                     	;# 
   336  0216                     	;# 
   337  0217                     	;# 
   338  0217                     	;# 
   339  0219                     	;# 
   340  021A                     	;# 
   341  021B                     	;# 
   342  021C                     	;# 
   343  021D                     	;# 
   344  021E                     	;# 
   345  021F                     	;# 
   346  0291                     	;# 
   347  0291                     	;# 
   348  0292                     	;# 
   349  0293                     	;# 
   350  0294                     	;# 
   351  0295                     	;# 
   352  0295                     	;# 
   353  0296                     	;# 
   354  0298                     	;# 
   355  0298                     	;# 
   356  0299                     	;# 
   357  029A                     	;# 
   358  029B                     	;# 
   359  029C                     	;# 
   360  029C                     	;# 
   361  029D                     	;# 
   362  029E                     	;# 
   363  029E                     	;# 
   364  0311                     	;# 
   365  0311                     	;# 
   366  0312                     	;# 
   367  0313                     	;# 
   368  0318                     	;# 
   369  0318                     	;# 
   370  0319                     	;# 
   371  031A                     	;# 
   372  0394                     	;# 
   373  0395                     	;# 
   374  0396                     	;# 
   375  039A                     	;# 
   376  039C                     	;# 
   377  039D                     	;# 
   378  039E                     	;# 
   379  039F                     	;# 
   380  0415                     	;# 
   381  0416                     	;# 
   382  0417                     	;# 
   383  041C                     	;# 
   384  041D                     	;# 
   385  041E                     	;# 
   386  0FE4                     	;# 
   387  0FE5                     	;# 
   388  0FE6                     	;# 
   389  0FE7                     	;# 
   390  0FE8                     	;# 
   391  0FE9                     	;# 
   392  0FEA                     	;# 
   393  0FEB                     	;# 
   394  0FED                     	;# 
   395  0FEE                     	;# 
   396  0FEF                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0014                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  0111                     	;# 
   446  0112                     	;# 
   447  0113                     	;# 
   448  0114                     	;# 
   449  0115                     	;# 
   450  0116                     	;# 
   451  0117                     	;# 
   452  0118                     	;# 
   453  0119                     	;# 
   454  011A                     	;# 
   455  011B                     	;# 
   456  011D                     	;# 
   457  011E                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  0191                     	;# 
   461  0191                     	;# 
   462  0192                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0193                     	;# 
   466  0194                     	;# 
   467  0195                     	;# 
   468  0196                     	;# 
   469  0199                     	;# 
   470  019A                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019C                     	;# 
   476  019C                     	;# 
   477  019D                     	;# 
   478  019E                     	;# 
   479  019F                     	;# 
   480  020C                     	;# 
   481  020D                     	;# 
   482  0211                     	;# 
   483  0211                     	;# 
   484  0212                     	;# 
   485  0212                     	;# 
   486  0213                     	;# 
   487  0213                     	;# 
   488  0214                     	;# 
   489  0214                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0215                     	;# 
   493  0216                     	;# 
   494  0216                     	;# 
   495  0217                     	;# 
   496  0217                     	;# 
   497  0219                     	;# 
   498  021A                     	;# 
   499  021B                     	;# 
   500  021C                     	;# 
   501  021D                     	;# 
   502  021E                     	;# 
   503  021F                     	;# 
   504  0291                     	;# 
   505  0291                     	;# 
   506  0292                     	;# 
   507  0293                     	;# 
   508  0294                     	;# 
   509  0295                     	;# 
   510  0295                     	;# 
   511  0296                     	;# 
   512  0298                     	;# 
   513  0298                     	;# 
   514  0299                     	;# 
   515  029A                     	;# 
   516  029B                     	;# 
   517  029C                     	;# 
   518  029C                     	;# 
   519  029D                     	;# 
   520  029E                     	;# 
   521  029E                     	;# 
   522  0311                     	;# 
   523  0311                     	;# 
   524  0312                     	;# 
   525  0313                     	;# 
   526  0318                     	;# 
   527  0318                     	;# 
   528  0319                     	;# 
   529  031A                     	;# 
   530  0394                     	;# 
   531  0395                     	;# 
   532  0396                     	;# 
   533  039A                     	;# 
   534  039C                     	;# 
   535  039D                     	;# 
   536  039E                     	;# 
   537  039F                     	;# 
   538  0415                     	;# 
   539  0416                     	;# 
   540  0417                     	;# 
   541  041C                     	;# 
   542  041D                     	;# 
   543  041E                     	;# 
   544  0FE4                     	;# 
   545  0FE5                     	;# 
   546  0FE6                     	;# 
   547  0FE7                     	;# 
   548  0FE8                     	;# 
   549  0FE9                     	;# 
   550  0FEA                     	;# 
   551  0FEB                     	;# 
   552  0FED                     	;# 
   553  0FEE                     	;# 
   554  0FEF                     	;# 
   555  0000                     	;# 
   556  0001                     	;# 
   557  0002                     	;# 
   558  0003                     	;# 
   559  0004                     	;# 
   560  0005                     	;# 
   561  0006                     	;# 
   562  0007                     	;# 
   563  0008                     	;# 
   564  0009                     	;# 
   565  000A                     	;# 
   566  000B                     	;# 
   567  000C                     	;# 
   568  000D                     	;# 
   569  0011                     	;# 
   570  0012                     	;# 
   571  0013                     	;# 
   572  0014                     	;# 
   573  0015                     	;# 
   574  0016                     	;# 
   575  0016                     	;# 
   576  0017                     	;# 
   577  0018                     	;# 
   578  0019                     	;# 
   579  001A                     	;# 
   580  001B                     	;# 
   581  001C                     	;# 
   582  001E                     	;# 
   583  001F                     	;# 
   584  008C                     	;# 
   585  008D                     	;# 
   586  0091                     	;# 
   587  0092                     	;# 
   588  0093                     	;# 
   589  0094                     	;# 
   590  0095                     	;# 
   591  0096                     	;# 
   592  0097                     	;# 
   593  0098                     	;# 
   594  0099                     	;# 
   595  009A                     	;# 
   596  009B                     	;# 
   597  009B                     	;# 
   598  009C                     	;# 
   599  009D                     	;# 
   600  009E                     	;# 
   601  010C                     	;# 
   602  010D                     	;# 
   603  0111                     	;# 
   604  0112                     	;# 
   605  0113                     	;# 
   606  0114                     	;# 
   607  0115                     	;# 
   608  0116                     	;# 
   609  0117                     	;# 
   610  0118                     	;# 
   611  0119                     	;# 
   612  011A                     	;# 
   613  011B                     	;# 
   614  011D                     	;# 
   615  011E                     	;# 
   616  018C                     	;# 
   617  018D                     	;# 
   618  0191                     	;# 
   619  0191                     	;# 
   620  0192                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0193                     	;# 
   624  0194                     	;# 
   625  0195                     	;# 
   626  0196                     	;# 
   627  0199                     	;# 
   628  019A                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019C                     	;# 
   634  019C                     	;# 
   635  019D                     	;# 
   636  019E                     	;# 
   637  019F                     	;# 
   638  020C                     	;# 
   639  020D                     	;# 
   640  0211                     	;# 
   641  0211                     	;# 
   642  0212                     	;# 
   643  0212                     	;# 
   644  0213                     	;# 
   645  0213                     	;# 
   646  0214                     	;# 
   647  0214                     	;# 
   648  0215                     	;# 
   649  0215                     	;# 
   650  0215                     	;# 
   651  0216                     	;# 
   652  0216                     	;# 
   653  0217                     	;# 
   654  0217                     	;# 
   655  0219                     	;# 
   656  021A                     	;# 
   657  021B                     	;# 
   658  021C                     	;# 
   659  021D                     	;# 
   660  021E                     	;# 
   661  021F                     	;# 
   662  0291                     	;# 
   663  0291                     	;# 
   664  0292                     	;# 
   665  0293                     	;# 
   666  0294                     	;# 
   667  0295                     	;# 
   668  0295                     	;# 
   669  0296                     	;# 
   670  0298                     	;# 
   671  0298                     	;# 
   672  0299                     	;# 
   673  029A                     	;# 
   674  029B                     	;# 
   675  029C                     	;# 
   676  029C                     	;# 
   677  029D                     	;# 
   678  029E                     	;# 
   679  029E                     	;# 
   680  0311                     	;# 
   681  0311                     	;# 
   682  0312                     	;# 
   683  0313                     	;# 
   684  0318                     	;# 
   685  0318                     	;# 
   686  0319                     	;# 
   687  031A                     	;# 
   688  0394                     	;# 
   689  0395                     	;# 
   690  0396                     	;# 
   691  039A                     	;# 
   692  039C                     	;# 
   693  039D                     	;# 
   694  039E                     	;# 
   695  039F                     	;# 
   696  0415                     	;# 
   697  0416                     	;# 
   698  0417                     	;# 
   699  041C                     	;# 
   700  041D                     	;# 
   701  041E                     	;# 
   702  0FE4                     	;# 
   703  0FE5                     	;# 
   704  0FE6                     	;# 
   705  0FE7                     	;# 
   706  0FE8                     	;# 
   707  0FE9                     	;# 
   708  0FEA                     	;# 
   709  0FEB                     	;# 
   710  0FED                     	;# 
   711  0FEE                     	;# 
   712  0FEF                     	;# 
   713  0000                     	;# 
   714  0001                     	;# 
   715  0002                     	;# 
   716  0003                     	;# 
   717  0004                     	;# 
   718  0005                     	;# 
   719  0006                     	;# 
   720  0007                     	;# 
   721  0008                     	;# 
   722  0009                     	;# 
   723  000A                     	;# 
   724  000B                     	;# 
   725  000C                     	;# 
   726  000D                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0013                     	;# 
   730  0014                     	;# 
   731  0015                     	;# 
   732  0016                     	;# 
   733  0016                     	;# 
   734  0017                     	;# 
   735  0018                     	;# 
   736  0019                     	;# 
   737  001A                     	;# 
   738  001B                     	;# 
   739  001C                     	;# 
   740  001E                     	;# 
   741  001F                     	;# 
   742  008C                     	;# 
   743  008D                     	;# 
   744  0091                     	;# 
   745  0092                     	;# 
   746  0093                     	;# 
   747  0094                     	;# 
   748  0095                     	;# 
   749  0096                     	;# 
   750  0097                     	;# 
   751  0098                     	;# 
   752  0099                     	;# 
   753  009A                     	;# 
   754  009B                     	;# 
   755  009B                     	;# 
   756  009C                     	;# 
   757  009D                     	;# 
   758  009E                     	;# 
   759  010C                     	;# 
   760  010D                     	;# 
   761  0111                     	;# 
   762  0112                     	;# 
   763  0113                     	;# 
   764  0114                     	;# 
   765  0115                     	;# 
   766  0116                     	;# 
   767  0117                     	;# 
   768  0118                     	;# 
   769  0119                     	;# 
   770  011A                     	;# 
   771  011B                     	;# 
   772  011D                     	;# 
   773  011E                     	;# 
   774  018C                     	;# 
   775  018D                     	;# 
   776  0191                     	;# 
   777  0191                     	;# 
   778  0192                     	;# 
   779  0193                     	;# 
   780  0193                     	;# 
   781  0193                     	;# 
   782  0194                     	;# 
   783  0195                     	;# 
   784  0196                     	;# 
   785  0199                     	;# 
   786  019A                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019C                     	;# 
   792  019C                     	;# 
   793  019D                     	;# 
   794  019E                     	;# 
   795  019F                     	;# 
   796  020C                     	;# 
   797  020D                     	;# 
   798  0211                     	;# 
   799  0211                     	;# 
   800  0212                     	;# 
   801  0212                     	;# 
   802  0213                     	;# 
   803  0213                     	;# 
   804  0214                     	;# 
   805  0214                     	;# 
   806  0215                     	;# 
   807  0215                     	;# 
   808  0215                     	;# 
   809  0216                     	;# 
   810  0216                     	;# 
   811  0217                     	;# 
   812  0217                     	;# 
   813  0219                     	;# 
   814  021A                     	;# 
   815  021B                     	;# 
   816  021C                     	;# 
   817  021D                     	;# 
   818  021E                     	;# 
   819  021F                     	;# 
   820  0291                     	;# 
   821  0291                     	;# 
   822  0292                     	;# 
   823  0293                     	;# 
   824  0294                     	;# 
   825  0295                     	;# 
   826  0295                     	;# 
   827  0296                     	;# 
   828  0298                     	;# 
   829  0298                     	;# 
   830  0299                     	;# 
   831  029A                     	;# 
   832  029B                     	;# 
   833  029C                     	;# 
   834  029C                     	;# 
   835  029D                     	;# 
   836  029E                     	;# 
   837  029E                     	;# 
   838  0311                     	;# 
   839  0311                     	;# 
   840  0312                     	;# 
   841  0313                     	;# 
   842  0318                     	;# 
   843  0318                     	;# 
   844  0319                     	;# 
   845  031A                     	;# 
   846  0394                     	;# 
   847  0395                     	;# 
   848  0396                     	;# 
   849  039A                     	;# 
   850  039C                     	;# 
   851  039D                     	;# 
   852  039E                     	;# 
   853  039F                     	;# 
   854  0415                     	;# 
   855  0416                     	;# 
   856  0417                     	;# 
   857  041C                     	;# 
   858  041D                     	;# 
   859  041E                     	;# 
   860  0FE4                     	;# 
   861  0FE5                     	;# 
   862  0FE6                     	;# 
   863  0FE7                     	;# 
   864  0FE8                     	;# 
   865  0FE9                     	;# 
   866  0FEA                     	;# 
   867  0FEB                     	;# 
   868  0FED                     	;# 
   869  0FEE                     	;# 
   870  0FEF                     	;# 
   871  0000                     	;# 
   872  0001                     	;# 
   873  0002                     	;# 
   874  0003                     	;# 
   875  0004                     	;# 
   876  0005                     	;# 
   877  0006                     	;# 
   878  0007                     	;# 
   879  0008                     	;# 
   880  0009                     	;# 
   881  000A                     	;# 
   882  000B                     	;# 
   883  000C                     	;# 
   884  000D                     	;# 
   885  0011                     	;# 
   886  0012                     	;# 
   887  0013                     	;# 
   888  0014                     	;# 
   889  0015                     	;# 
   890  0016                     	;# 
   891  0016                     	;# 
   892  0017                     	;# 
   893  0018                     	;# 
   894  0019                     	;# 
   895  001A                     	;# 
   896  001B                     	;# 
   897  001C                     	;# 
   898  001E                     	;# 
   899  001F                     	;# 
   900  008C                     	;# 
   901  008D                     	;# 
   902  0091                     	;# 
   903  0092                     	;# 
   904  0093                     	;# 
   905  0094                     	;# 
   906  0095                     	;# 
   907  0096                     	;# 
   908  0097                     	;# 
   909  0098                     	;# 
   910  0099                     	;# 
   911  009A                     	;# 
   912  009B                     	;# 
   913  009B                     	;# 
   914  009C                     	;# 
   915  009D                     	;# 
   916  009E                     	;# 
   917  010C                     	;# 
   918  010D                     	;# 
   919  0111                     	;# 
   920  0112                     	;# 
   921  0113                     	;# 
   922  0114                     	;# 
   923  0115                     	;# 
   924  0116                     	;# 
   925  0117                     	;# 
   926  0118                     	;# 
   927  0119                     	;# 
   928  011A                     	;# 
   929  011B                     	;# 
   930  011D                     	;# 
   931  011E                     	;# 
   932  018C                     	;# 
   933  018D                     	;# 
   934  0191                     	;# 
   935  0191                     	;# 
   936  0192                     	;# 
   937  0193                     	;# 
   938  0193                     	;# 
   939  0193                     	;# 
   940  0194                     	;# 
   941  0195                     	;# 
   942  0196                     	;# 
   943  0199                     	;# 
   944  019A                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019C                     	;# 
   950  019C                     	;# 
   951  019D                     	;# 
   952  019E                     	;# 
   953  019F                     	;# 
   954  020C                     	;# 
   955  020D                     	;# 
   956  0211                     	;# 
   957  0211                     	;# 
   958  0212                     	;# 
   959  0212                     	;# 
   960  0213                     	;# 
   961  0213                     	;# 
   962  0214                     	;# 
   963  0214                     	;# 
   964  0215                     	;# 
   965  0215                     	;# 
   966  0215                     	;# 
   967  0216                     	;# 
   968  0216                     	;# 
   969  0217                     	;# 
   970  0217                     	;# 
   971  0219                     	;# 
   972  021A                     	;# 
   973  021B                     	;# 
   974  021C                     	;# 
   975  021D                     	;# 
   976  021E                     	;# 
   977  021F                     	;# 
   978  0291                     	;# 
   979  0291                     	;# 
   980  0292                     	;# 
   981  0293                     	;# 
   982  0294                     	;# 
   983  0295                     	;# 
   984  0295                     	;# 
   985  0296                     	;# 
   986  0298                     	;# 
   987  0298                     	;# 
   988  0299                     	;# 
   989  029A                     	;# 
   990  029B                     	;# 
   991  029C                     	;# 
   992  029C                     	;# 
   993  029D                     	;# 
   994  029E                     	;# 
   995  029E                     	;# 
   996  0311                     	;# 
   997  0311                     	;# 
   998  0312                     	;# 
   999  0313                     	;# 
  1000  0318                     	;# 
  1001  0318                     	;# 
  1002  0319                     	;# 
  1003  031A                     	;# 
  1004  0394                     	;# 
  1005  0395                     	;# 
  1006  0396                     	;# 
  1007  039A                     	;# 
  1008  039C                     	;# 
  1009  039D                     	;# 
  1010  039E                     	;# 
  1011  039F                     	;# 
  1012  0415                     	;# 
  1013  0416                     	;# 
  1014  0417                     	;# 
  1015  041C                     	;# 
  1016  041D                     	;# 
  1017  041E                     	;# 
  1018  0FE4                     	;# 
  1019  0FE5                     	;# 
  1020  0FE6                     	;# 
  1021  0FE7                     	;# 
  1022  0FE8                     	;# 
  1023  0FE9                     	;# 
  1024  0FEA                     	;# 
  1025  0FEB                     	;# 
  1026  0FED                     	;# 
  1027  0FEE                     	;# 
  1028  0FEF                     	;# 
  1029  0000                     	;# 
  1030  0001                     	;# 
  1031  0002                     	;# 
  1032  0003                     	;# 
  1033  0004                     	;# 
  1034  0005                     	;# 
  1035  0006                     	;# 
  1036  0007                     	;# 
  1037  0008                     	;# 
  1038  0009                     	;# 
  1039  000A                     	;# 
  1040  000B                     	;# 
  1041  000C                     	;# 
  1042  000D                     	;# 
  1043  0011                     	;# 
  1044  0012                     	;# 
  1045  0013                     	;# 
  1046  0014                     	;# 
  1047  0015                     	;# 
  1048  0016                     	;# 
  1049  0016                     	;# 
  1050  0017                     	;# 
  1051  0018                     	;# 
  1052  0019                     	;# 
  1053  001A                     	;# 
  1054  001B                     	;# 
  1055  001C                     	;# 
  1056  001E                     	;# 
  1057  001F                     	;# 
  1058  008C                     	;# 
  1059  008D                     	;# 
  1060  0091                     	;# 
  1061  0092                     	;# 
  1062  0093                     	;# 
  1063  0094                     	;# 
  1064  0095                     	;# 
  1065  0096                     	;# 
  1066  0097                     	;# 
  1067  0098                     	;# 
  1068  0099                     	;# 
  1069  009A                     	;# 
  1070  009B                     	;# 
  1071  009B                     	;# 
  1072  009C                     	;# 
  1073  009D                     	;# 
  1074  009E                     	;# 
  1075  010C                     	;# 
  1076  010D                     	;# 
  1077  0111                     	;# 
  1078  0112                     	;# 
  1079  0113                     	;# 
  1080  0114                     	;# 
  1081  0115                     	;# 
  1082  0116                     	;# 
  1083  0117                     	;# 
  1084  0118                     	;# 
  1085  0119                     	;# 
  1086  011A                     	;# 
  1087  011B                     	;# 
  1088  011D                     	;# 
  1089  011E                     	;# 
  1090  018C                     	;# 
  1091  018D                     	;# 
  1092  0191                     	;# 
  1093  0191                     	;# 
  1094  0192                     	;# 
  1095  0193                     	;# 
  1096  0193                     	;# 
  1097  0193                     	;# 
  1098  0194                     	;# 
  1099  0195                     	;# 
  1100  0196                     	;# 
  1101  0199                     	;# 
  1102  019A                     	;# 
  1103  019B                     	;# 
  1104  019B                     	;# 
  1105  019B                     	;# 
  1106  019B                     	;# 
  1107  019C                     	;# 
  1108  019C                     	;# 
  1109  019D                     	;# 
  1110  019E                     	;# 
  1111  019F                     	;# 
  1112  020C                     	;# 
  1113  020D                     	;# 
  1114  0211                     	;# 
  1115  0211                     	;# 
  1116  0212                     	;# 
  1117  0212                     	;# 
  1118  0213                     	;# 
  1119  0213                     	;# 
  1120  0214                     	;# 
  1121  0214                     	;# 
  1122  0215                     	;# 
  1123  0215                     	;# 
  1124  0215                     	;# 
  1125  0216                     	;# 
  1126  0216                     	;# 
  1127  0217                     	;# 
  1128  0217                     	;# 
  1129  0219                     	;# 
  1130  021A                     	;# 
  1131  021B                     	;# 
  1132  021C                     	;# 
  1133  021D                     	;# 
  1134  021E                     	;# 
  1135  021F                     	;# 
  1136  0291                     	;# 
  1137  0291                     	;# 
  1138  0292                     	;# 
  1139  0293                     	;# 
  1140  0294                     	;# 
  1141  0295                     	;# 
  1142  0295                     	;# 
  1143  0296                     	;# 
  1144  0298                     	;# 
  1145  0298                     	;# 
  1146  0299                     	;# 
  1147  029A                     	;# 
  1148  029B                     	;# 
  1149  029C                     	;# 
  1150  029C                     	;# 
  1151  029D                     	;# 
  1152  029E                     	;# 
  1153  029E                     	;# 
  1154  0311                     	;# 
  1155  0311                     	;# 
  1156  0312                     	;# 
  1157  0313                     	;# 
  1158  0318                     	;# 
  1159  0318                     	;# 
  1160  0319                     	;# 
  1161  031A                     	;# 
  1162  0394                     	;# 
  1163  0395                     	;# 
  1164  0396                     	;# 
  1165  039A                     	;# 
  1166  039C                     	;# 
  1167  039D                     	;# 
  1168  039E                     	;# 
  1169  039F                     	;# 
  1170  0415                     	;# 
  1171  0416                     	;# 
  1172  0417                     	;# 
  1173  041C                     	;# 
  1174  041D                     	;# 
  1175  041E                     	;# 
  1176  0FE4                     	;# 
  1177  0FE5                     	;# 
  1178  0FE6                     	;# 
  1179  0FE7                     	;# 
  1180  0FE8                     	;# 
  1181  0FE9                     	;# 
  1182  0FEA                     	;# 
  1183  0FEB                     	;# 
  1184  0FED                     	;# 
  1185  0FEE                     	;# 
  1186  0FEF                     	;# 
  1187  0000                     	;# 
  1188  0001                     	;# 
  1189  0002                     	;# 
  1190  0003                     	;# 
  1191  0004                     	;# 
  1192  0005                     	;# 
  1193  0006                     	;# 
  1194  0007                     	;# 
  1195  0008                     	;# 
  1196  0009                     	;# 
  1197  000A                     	;# 
  1198  000B                     	;# 
  1199  000C                     	;# 
  1200  000D                     	;# 
  1201  0011                     	;# 
  1202  0012                     	;# 
  1203  0013                     	;# 
  1204  0014                     	;# 
  1205  0015                     	;# 
  1206  0016                     	;# 
  1207  0016                     	;# 
  1208  0017                     	;# 
  1209  0018                     	;# 
  1210  0019                     	;# 
  1211  001A                     	;# 
  1212  001B                     	;# 
  1213  001C                     	;# 
  1214  001E                     	;# 
  1215  001F                     	;# 
  1216  008C                     	;# 
  1217  008D                     	;# 
  1218  0091                     	;# 
  1219  0092                     	;# 
  1220  0093                     	;# 
  1221  0094                     	;# 
  1222  0095                     	;# 
  1223  0096                     	;# 
  1224  0097                     	;# 
  1225  0098                     	;# 
  1226  0099                     	;# 
  1227  009A                     	;# 
  1228  009B                     	;# 
  1229  009B                     	;# 
  1230  009C                     	;# 
  1231  009D                     	;# 
  1232  009E                     	;# 
  1233  010C                     	;# 
  1234  010D                     	;# 
  1235  0111                     	;# 
  1236  0112                     	;# 
  1237  0113                     	;# 
  1238  0114                     	;# 
  1239  0115                     	;# 
  1240  0116                     	;# 
  1241  0117                     	;# 
  1242  0118                     	;# 
  1243  0119                     	;# 
  1244  011A                     	;# 
  1245  011B                     	;# 
  1246  011D                     	;# 
  1247  011E                     	;# 
  1248  018C                     	;# 
  1249  018D                     	;# 
  1250  0191                     	;# 
  1251  0191                     	;# 
  1252  0192                     	;# 
  1253  0193                     	;# 
  1254  0193                     	;# 
  1255  0193                     	;# 
  1256  0194                     	;# 
  1257  0195                     	;# 
  1258  0196                     	;# 
  1259  0199                     	;# 
  1260  019A                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019C                     	;# 
  1266  019C                     	;# 
  1267  019D                     	;# 
  1268  019E                     	;# 
  1269  019F                     	;# 
  1270  020C                     	;# 
  1271  020D                     	;# 
  1272  0211                     	;# 
  1273  0211                     	;# 
  1274  0212                     	;# 
  1275  0212                     	;# 
  1276  0213                     	;# 
  1277  0213                     	;# 
  1278  0214                     	;# 
  1279  0214                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0216                     	;# 
  1284  0216                     	;# 
  1285  0217                     	;# 
  1286  0217                     	;# 
  1287  0219                     	;# 
  1288  021A                     	;# 
  1289  021B                     	;# 
  1290  021C                     	;# 
  1291  021D                     	;# 
  1292  021E                     	;# 
  1293  021F                     	;# 
  1294  0291                     	;# 
  1295  0291                     	;# 
  1296  0292                     	;# 
  1297  0293                     	;# 
  1298  0294                     	;# 
  1299  0295                     	;# 
  1300  0295                     	;# 
  1301  0296                     	;# 
  1302  0298                     	;# 
  1303  0298                     	;# 
  1304  0299                     	;# 
  1305  029A                     	;# 
  1306  029B                     	;# 
  1307  029C                     	;# 
  1308  029C                     	;# 
  1309  029D                     	;# 
  1310  029E                     	;# 
  1311  029E                     	;# 
  1312  0311                     	;# 
  1313  0311                     	;# 
  1314  0312                     	;# 
  1315  0313                     	;# 
  1316  0318                     	;# 
  1317  0318                     	;# 
  1318  0319                     	;# 
  1319  031A                     	;# 
  1320  0394                     	;# 
  1321  0395                     	;# 
  1322  0396                     	;# 
  1323  039A                     	;# 
  1324  039C                     	;# 
  1325  039D                     	;# 
  1326  039E                     	;# 
  1327  039F                     	;# 
  1328  0415                     	;# 
  1329  0416                     	;# 
  1330  0417                     	;# 
  1331  041C                     	;# 
  1332  041D                     	;# 
  1333  041E                     	;# 
  1334  0FE4                     	;# 
  1335  0FE5                     	;# 
  1336  0FE6                     	;# 
  1337  0FE7                     	;# 
  1338  0FE8                     	;# 
  1339  0FE9                     	;# 
  1340  0FEA                     	;# 
  1341  0FEB                     	;# 
  1342  0FED                     	;# 
  1343  0FEE                     	;# 
  1344  0FEF                     	;# 
  1345                           
  1346 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1347  0000                     
  1348 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1349  0000                     
  1350 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1351  0011                     _PIR1bits	set	17
  1352  0013                     _PIR3bits	set	19
  1353  0097                     _WDTCON	set	151
  1354  0098                     _OSCTUNE	set	152
  1355  0099                     _OSCCON	set	153
  1356  009D                     _ADCON0bits	set	157
  1357  009D                     _ADCON0	set	157
  1358  009C                     _ADRESH	set	156
  1359  009B                     _ADRESL	set	155
  1360  009E                     _ADCON1	set	158
  1361  0095                     _OPTION_REGbits	set	149
  1362  008D                     _TRISB	set	141
  1363  008C                     _TRISA	set	140
  1364  04D6                     _PLLR	set	1238
  1365  010C                     _LATAbits	set	268
  1366  010D                     _LATBbits	set	269
  1367  0116                     _BORCON	set	278
  1368  011E                     _APFCON1	set	286
  1369  011D                     _APFCON0	set	285
  1370  010D                     _LATB	set	269
  1371  010C                     _LATA	set	268
  1372  019A                     _TXREG	set	410
  1373  0199                     _RCREG	set	409
  1374  019D                     _RCSTAbits	set	413
  1375  019E                     _TXSTAbits	set	414
  1376  019C                     _SPBRGH	set	412
  1377  019B                     _SPBRGL	set	411
  1378  019E                     _TXSTA	set	414
  1379  019D                     _RCSTA	set	413
  1380  019F                     _BAUDCON	set	415
  1381  018C                     _ANSELA	set	396
  1382  018D                     _ANSELB	set	397
  1383  020C                     _WPUA	set	524
  1384  020D                     _WPUB	set	525
  1385  041E                     _T6CONbits	set	1054
  1386  041E                     _T6CON	set	1054
  1387  041C                     _TMR6	set	1052
  1388  041D                     _PR6	set	1053
  1389                           
  1390                           	psect	cinit
  1391  07F3                     start_initialization:	
  1392                           ; #config settings
  1393                           
  1394  07F3                     __initialization:
  1395                           
  1396                           ; Clear objects allocated to BANK0
  1397  07F3  0020               	movlb	0	; select bank0
  1398  07F4  01D0               	clrf	__pbssBANK0& (0+127)
  1399  07F5  01D1               	clrf	(__pbssBANK0+1)& (0+127)
  1400  07F6  01D2               	clrf	(__pbssBANK0+2)& (0+127)
  1401  07F7  01D3               	clrf	(__pbssBANK0+3)& (0+127)
  1402  07F8  01D4               	clrf	(__pbssBANK0+4)& (0+127)
  1403  07F9  01D5               	clrf	(__pbssBANK0+5)& (0+127)
  1404  07FA  01D6               	clrf	(__pbssBANK0+6)& (0+127)
  1405  07FB  01D7               	clrf	(__pbssBANK0+7)& (0+127)
  1406  07FC  01D8               	clrf	(__pbssBANK0+8)& (0+127)
  1407  07FD                     end_of_initialization:	
  1408                           ;End of C runtime variable initialization code
  1409                           
  1410  07FD                     __end_of__initialization:
  1411  07FD  0020               	movlb	0
  1412  07FE  3183  2BA7         	ljmp	_main	;jump to C main() function
  1413                           
  1414                           	psect	bssBANK0
  1415  0050                     __pbssBANK0:
  1416  0050                     _ADC_InterruptHandler:
  1417  0050                     	ds	2
  1418  0052                     _EUSART_ErrorHandler:
  1419  0052                     	ds	2
  1420  0054                     _EUSART_OverrunErrorHandler:
  1421  0054                     	ds	2
  1422  0056                     _EUSART_FramingErrorHandler:
  1423  0056                     	ds	2
  1424  0058                     _eusartRxLastError:
  1425  0058                     	ds	1
  1426                           
  1427                           	psect	cstackBANK1
  1428  00A0                     __pcstackBANK1:
  1429  00A0                     main@volt_ADC:
  1430                           
  1431                           ; 2 bytes @ 0x0
  1432  00A0                     	ds	2
  1433  00A2                     main@AN1_Channel:
  1434                           
  1435                           ; 1 bytes @ 0x2
  1436  00A2                     	ds	1
  1437  00A3                     main@valor_ADC:
  1438                           
  1439                           ; 2 bytes @ 0x3
  1440  00A3                     	ds	2
  1441  00A5                     main@Pack:
  1442                           
  1443                           ; 12 bytes @ 0x5
  1444  00A5                     	ds	12
  1445  00B1                     main@timer_1000ms:
  1446                           
  1447                           ; 9 bytes @ 0x11
  1448  00B1                     	ds	9
  1449  00BA                     main@timer_1ms:
  1450                           
  1451                           ; 9 bytes @ 0x1A
  1452  00BA                     	ds	9
  1453  00C3                     main@seven_seg:
  1454                           
  1455                           ; 8 bytes @ 0x23
  1456  00C3                     	ds	8
  1457                           
  1458                           	psect	cstackCOMMON
  1459  0070                     __pcstackCOMMON:
  1460  0070                     ?_EUSART_SetFramingErrorHandler:
  1461  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464  0070                     ?_EUSART_SetErrorHandler:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467  0070                     ?_OSCILLATOR_Initialize:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470  0070                     ??_OSCILLATOR_Initialize:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0070                     ?_WDT_Initialize:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0070                     ??_WDT_Initialize:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     ?_Tm_Inicie_periodico:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ?_Ds_Iniciar_displays:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ?_Tm_Procese_tiempo:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ??_Tm_Procese_tiempo:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ?_Ds_Procese_displays:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ?_Tm_Hubo_periodico:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ??_Tm_Hubo_periodico:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ?_Tm_Baje_periodico:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ??_Tm_Baje_periodico:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_TMR6_Initialize:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ??_TMR6_Initialize:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_TMR6_StartTimer:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ??_TMR6_StartTimer:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_TMR6_HasOverflowOccured:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ??_TMR6_HasOverflowOccured:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_PIN_MANAGER_Initialize:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ??_PIN_MANAGER_Initialize:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_EUSART_Initialize:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_EUSART_is_tx_ready:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ??_EUSART_is_tx_ready:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_EUSART_Write:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ??_EUSART_Write:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_ADC_Initialize:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ??_ADC_Initialize:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_ADC_SelectChannel:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ??_ADC_SelectChannel:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_ADC_StartConversion:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ??_ADC_StartConversion:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_ADC_IsConversionDone:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ??_ADC_IsConversionDone:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_SYSTEM_Initialize:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_main:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ?_Ds_Encienda_Disp:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ??_Ds_Encienda_Disp:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ?_Ds_BCD:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ??_Ds_BCD:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ?__Umul8_16:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ?_ADC_GetConversionResult:	
  1591                           ; 2 bytes @ 0x0
  1592                           
  1593  0070                     ?___lwdiv:	
  1594                           ; 2 bytes @ 0x0
  1595                           
  1596  0070                     ?___lwmod:	
  1597                           ; 2 bytes @ 0x0
  1598                           
  1599  0070                     ?___xxtofl:	
  1600                           ; 2 bytes @ 0x0
  1601                           
  1602  0070                     TMR6_HasOverflowOccured@status:	
  1603                           ; 4 bytes @ 0x0
  1604                           
  1605  0070                     _EUSART_is_tx_ready$291:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0070                     EUSART_Write@txData:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0070                     Ds_Iniciar_displays@d1:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0070                     Tm_Hubo_periodico@ctp:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0070                     __Umul8_16@multiplicand:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1624                           ; 2 bytes @ 0x0
  1625                           
  1626  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1627                           ; 2 bytes @ 0x0
  1628                           
  1629  0070                     Tm_Inicie_periodico@periodo:	
  1630                           ; 2 bytes @ 0x0
  1631                           
  1632  0070                     ___lwdiv@divisor:	
  1633                           ; 2 bytes @ 0x0
  1634                           
  1635  0070                     ___lwmod@divisor:	
  1636                           ; 2 bytes @ 0x0
  1637                           
  1638  0070                     ___xxtofl@val:	
  1639                           ; 2 bytes @ 0x0
  1640                           
  1641                           
  1642                           ; 4 bytes @ 0x0
  1643  0070                     	ds	1
  1644  0071                     ADC_SelectChannel@channel:
  1645  0071                     Ds_Iniciar_displays@d2:	
  1646                           ; 1 bytes @ 0x1
  1647                           
  1648  0071                     Tm_Baje_periodico@ctp:	
  1649                           ; 1 bytes @ 0x1
  1650                           
  1651                           
  1652                           ; 1 bytes @ 0x1
  1653  0071                     	ds	1
  1654  0072                     ??_EUSART_SetFramingErrorHandler:
  1655  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1656                           ; 1 bytes @ 0x2
  1657                           
  1658  0072                     ??_EUSART_SetErrorHandler:	
  1659                           ; 1 bytes @ 0x2
  1660                           
  1661  0072                     ??_Tm_Inicie_periodico:	
  1662                           ; 1 bytes @ 0x2
  1663                           
  1664  0072                     ??__Umul8_16:	
  1665                           ; 1 bytes @ 0x2
  1666                           
  1667  0072                     ??_EUSART_Initialize:	
  1668                           ; 1 bytes @ 0x2
  1669                           
  1670  0072                     ??_ADC_GetConversionResult:	
  1671                           ; 1 bytes @ 0x2
  1672                           
  1673  0072                     ??_SYSTEM_Initialize:	
  1674                           ; 1 bytes @ 0x2
  1675                           
  1676  0072                     Ds_Iniciar_displays@d3:	
  1677                           ; 1 bytes @ 0x2
  1678                           
  1679  0072                     Ds_Encienda_Disp@dispNum:	
  1680                           ; 1 bytes @ 0x2
  1681                           
  1682  0072                     Ds_BCD@segmento:	
  1683                           ; 1 bytes @ 0x2
  1684                           
  1685  0072                     ___lwdiv@dividend:	
  1686                           ; 1 bytes @ 0x2
  1687                           
  1688  0072                     ___lwmod@dividend:	
  1689                           ; 2 bytes @ 0x2
  1690                           
  1691                           
  1692                           ; 2 bytes @ 0x2
  1693  0072                     	ds	1
  1694  0073                     ??_Ds_Procese_displays:
  1695  0073                     Ds_Iniciar_displays@tE:	
  1696                           ; 1 bytes @ 0x3
  1697                           
  1698  0073                     Tm_Inicie_periodico@ctp:	
  1699                           ; 1 bytes @ 0x3
  1700                           
  1701                           
  1702                           ; 1 bytes @ 0x3
  1703  0073                     	ds	1
  1704  0074                     ??___lwdiv:
  1705  0074                     ??___lwmod:	
  1706                           ; 1 bytes @ 0x4
  1707                           
  1708  0074                     ??___xxtofl:	
  1709                           ; 1 bytes @ 0x4
  1710                           
  1711  0074                     Ds_Iniciar_displays@tA:	
  1712                           ; 1 bytes @ 0x4
  1713                           
  1714  0074                     Tm_Procese_tiempo@ctp:	
  1715                           ; 1 bytes @ 0x4
  1716                           
  1717  0074                     __Umul8_16@product:	
  1718                           ; 1 bytes @ 0x4
  1719                           
  1720                           
  1721                           ; 2 bytes @ 0x4
  1722  0074                     	ds	1
  1723  0075                     ??_Ds_Iniciar_displays:
  1724  0075                     Ds_Procese_displays@dsp:	
  1725                           ; 1 bytes @ 0x5
  1726                           
  1727  0075                     ___lwmod@counter:	
  1728                           ; 1 bytes @ 0x5
  1729                           
  1730  0075                     ___lwdiv@quotient:	
  1731                           ; 1 bytes @ 0x5
  1732                           
  1733                           
  1734                           ; 2 bytes @ 0x5
  1735  0075                     	ds	1
  1736  0076                     Ds_Iniciar_displays@dsp:
  1737  0076                     __Umul8_16@word_mpld:	
  1738                           ; 1 bytes @ 0x6
  1739                           
  1740                           
  1741                           ; 2 bytes @ 0x6
  1742  0076                     	ds	1
  1743  0077                     ___lwdiv@counter:
  1744                           
  1745                           ; 1 bytes @ 0x7
  1746  0077                     	ds	1
  1747  0078                     ?_Ds_Convertir_en_uni:
  1748  0078                     __Umul8_16@multiplier:	
  1749                           ; 1 bytes @ 0x8
  1750                           
  1751  0078                     ___xxtofl@sign:	
  1752                           ; 1 bytes @ 0x8
  1753                           
  1754  0078                     Ds_Convertir_en_uni@voltaje:	
  1755                           ; 1 bytes @ 0x8
  1756                           
  1757                           
  1758                           ; 2 bytes @ 0x8
  1759  0078                     	ds	1
  1760  0079                     ___xxtofl@exp:
  1761                           
  1762                           ; 1 bytes @ 0x9
  1763  0079                     	ds	1
  1764  007A                     ??_Ds_Convertir_en_uni:
  1765  007A                     ___xxtofl@arg:	
  1766                           ; 1 bytes @ 0xA
  1767                           
  1768                           
  1769                           ; 4 bytes @ 0xA
  1770  007A                     	ds	1
  1771  007B                     Ds_Convertir_en_uni@dsp:
  1772                           
  1773                           ; 1 bytes @ 0xB
  1774  007B                     	ds	3
  1775  007E                     ??_Ds_Conversor_ADC:
  1776                           
  1777                           	psect	cstackBANK0
  1778  0020                     __pcstackBANK0:	
  1779                           ; 1 bytes @ 0xE
  1780                           
  1781  0020                     ?___flmul:
  1782  0020                     ___flmul@b:	
  1783                           ; 4 bytes @ 0x0
  1784                           
  1785                           
  1786                           ; 4 bytes @ 0x0
  1787  0020                     	ds	4
  1788  0024                     ___flmul@a:
  1789                           
  1790                           ; 4 bytes @ 0x4
  1791  0024                     	ds	4
  1792  0028                     ??___flmul:
  1793                           
  1794                           ; 1 bytes @ 0x8
  1795  0028                     	ds	5
  1796  002D                     ___flmul@sign:
  1797                           
  1798                           ; 1 bytes @ 0xD
  1799  002D                     	ds	1
  1800  002E                     ___flmul@grs:
  1801                           
  1802                           ; 4 bytes @ 0xE
  1803  002E                     	ds	4
  1804  0032                     ___flmul@aexp:
  1805                           
  1806                           ; 1 bytes @ 0x12
  1807  0032                     	ds	1
  1808  0033                     ___flmul@bexp:
  1809                           
  1810                           ; 1 bytes @ 0x13
  1811  0033                     	ds	1
  1812  0034                     ___flmul@prod:
  1813                           
  1814                           ; 4 bytes @ 0x14
  1815  0034                     	ds	4
  1816  0038                     ___flmul@temp:
  1817                           
  1818                           ; 2 bytes @ 0x18
  1819  0038                     	ds	2
  1820  003A                     ?___fltol:
  1821  003A                     ___fltol@f1:	
  1822                           ; 4 bytes @ 0x1A
  1823                           
  1824                           
  1825                           ; 4 bytes @ 0x1A
  1826  003A                     	ds	4
  1827  003E                     ??___fltol:
  1828                           
  1829                           ; 1 bytes @ 0x1E
  1830  003E                     	ds	5
  1831  0043                     ___fltol@sign1:
  1832                           
  1833                           ; 1 bytes @ 0x23
  1834  0043                     	ds	1
  1835  0044                     ___fltol@exp1:
  1836                           
  1837                           ; 1 bytes @ 0x24
  1838  0044                     	ds	1
  1839  0045                     ?_Ds_Conversor_ADC:
  1840  0045                     Ds_Conversor_ADC@adcOUT:	
  1841                           ; 2 bytes @ 0x25
  1842                           
  1843                           
  1844                           ; 2 bytes @ 0x25
  1845  0045                     	ds	2
  1846  0047                     Ds_Conversor_ADC@pendiente:
  1847                           
  1848                           ; 4 bytes @ 0x27
  1849  0047                     	ds	4
  1850  004B                     Ds_Conversor_ADC@voltios:
  1851                           
  1852                           ; 2 bytes @ 0x2B
  1853  004B                     	ds	2
  1854  004D                     ??_main:
  1855                           
  1856                           ; 1 bytes @ 0x2D
  1857  004D                     	ds	3
  1858                           
  1859                           	psect	maintext
  1860  03A7                     __pmaintext:	
  1861 ;;
  1862 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1863 ;;
  1864 ;; *************** function _main *****************
  1865 ;; Defined at:
  1866 ;;		line 28 in file "main.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  Pack           12    5[BANK1 ] int [6]
  1871 ;;  timer_1ms       9   26[BANK1 ] struct Tm_Periodico
  1872 ;;  timer_1000ms    9   17[BANK1 ] struct Tm_Periodico
  1873 ;;  seven_seg       8   35[BANK1 ] struct Ds_Display
  1874 ;;  valor_ADC       2    3[BANK1 ] unsigned short 
  1875 ;;  volt_ADC        2    0[BANK1 ] unsigned short 
  1876 ;;  AN1_Channel     1    2[BANK1 ] enum E2500
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : B1F/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1886 ;;      Params:         0       0       0       0       0       0
  1887 ;;      Locals:         0       0      43       0       0       0
  1888 ;;      Temps:          0       3       0       0       0       0
  1889 ;;      Totals:         0       3      43       0       0       0
  1890 ;;Total ram usage:       46 bytes
  1891 ;; Hardware stack levels required when called:    3
  1892 ;; This function calls:
  1893 ;;		_ADC_GetConversionResult
  1894 ;;		_ADC_Initialize
  1895 ;;		_ADC_IsConversionDone
  1896 ;;		_ADC_SelectChannel
  1897 ;;		_ADC_StartConversion
  1898 ;;		_Ds_Conversor_ADC
  1899 ;;		_Ds_Convertir_en_uni
  1900 ;;		_Ds_Iniciar_displays
  1901 ;;		_Ds_Procese_displays
  1902 ;;		_EUSART_Write
  1903 ;;		_EUSART_is_tx_ready
  1904 ;;		_SYSTEM_Initialize
  1905 ;;		_TMR6_HasOverflowOccured
  1906 ;;		_TMR6_StartTimer
  1907 ;;		_Tm_Baje_periodico
  1908 ;;		_Tm_Hubo_periodico
  1909 ;;		_Tm_Inicie_periodico
  1910 ;;		_Tm_Procese_tiempo
  1911 ;; This function is called by:
  1912 ;;		Startup code after reset
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _main
  1918  03A7                     _main:
  1919  03A7                     l2366:	
  1920                           ;incstack = 0
  1921                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1922                           
  1923                           
  1924                           ;main.c: 32:     adc_channel_t AN1_Channel;;main.c: 33:     uint16_t volt_ADC = 0;
  1925  03A7  0021               	movlb	1	; select bank1
  1926  03A8  01A0               	clrf	main@volt_ADC^(0+128)
  1927  03A9  01A1               	clrf	(main@volt_ADC+1)^(0+128)
  1928  03AA                     l2368:
  1929                           
  1930                           ;main.c: 34:     int Pack[6];;main.c: 35:  SYSTEM_Initialize();
  1931  03AA  318F  2791  3183   	fcall	_SYSTEM_Initialize
  1932  03AD                     l2370:
  1933                           
  1934                           ;main.c: 36:  Ds_Display seven_seg;;main.c: 37:  Tm_Periodico timer_1ms;;main.c: 38:    
      +                           Tm_Periodico timer_1000ms;;main.c: 39:  Tm_Inicie_periodico (&timer_1ms, 1000);
  1935  03AD  30E8               	movlw	232
  1936  03AE  00F0               	movwf	Tm_Inicie_periodico@periodo
  1937  03AF  3003               	movlw	3
  1938  03B0  00F1               	movwf	Tm_Inicie_periodico@periodo+1
  1939  03B1  30BA               	movlw	(low (main@timer_1ms| 0))& (0+255)
  1940  03B2  3180  2007  3183   	fcall	_Tm_Inicie_periodico
  1941  03B5                     l2372:
  1942                           
  1943                           ;main.c: 40:  ADC_SelectChannel (AN1_Channel);
  1944  03B5  0021               	movlb	1	; select bank1
  1945  03B6  0822               	movf	main@AN1_Channel^(0+128),w
  1946  03B7  318F  2768  3183   	fcall	_ADC_SelectChannel
  1947  03BA                     l2374:
  1948                           
  1949                           ;main.c: 41:  Tm_Inicie_periodico (&timer_1000ms, 1000);
  1950  03BA  30E8               	movlw	232
  1951  03BB  00F0               	movwf	Tm_Inicie_periodico@periodo
  1952  03BC  3003               	movlw	3
  1953  03BD  00F1               	movwf	Tm_Inicie_periodico@periodo+1
  1954  03BE  30B1               	movlw	(low (main@timer_1000ms| 0))& (0+255)
  1955  03BF  3180  2007  3183   	fcall	_Tm_Inicie_periodico
  1956  03C2                     l2376:
  1957                           
  1958                           ;main.c: 42:  ADC_Initialize();
  1959  03C2  318F  272E  3183   	fcall	_ADC_Initialize
  1960  03C5                     l2378:
  1961                           
  1962                           ;main.c: 43:     TMR6_StartTimer();
  1963  03C5  3180  2004  3183   	fcall	_TMR6_StartTimer
  1964                           
  1965                           ;main.c: 44:     ADCON0 = ADCON0 | 0b00100001;
  1966  03C8  0021               	movlb	1	; select bank1
  1967  03C9  081D               	movf	29,w	;volatile
  1968  03CA  3821               	iorlw	33
  1969  03CB  009D               	movwf	29	;volatile
  1970                           
  1971                           ;main.c: 45:     ADCON0 = ADCON0 & 0b10100011;
  1972  03CC  081D               	movf	29,w	;volatile
  1973  03CD  39A3               	andlw	163
  1974  03CE  009D               	movwf	29	;volatile
  1975  03CF                     l2380:
  1976                           
  1977                           ;main.c: 46:     ADCON1 = 0b11100000;
  1978  03CF  30E0               	movlw	224
  1979  03D0  009E               	movwf	30	;volatile
  1980  03D1                     l2382:
  1981                           
  1982                           ;main.c: 47:  Ds_Iniciar_displays (&seven_seg, 1, 2, 3, 4, 1);
  1983  03D1  01F0               	clrf	Ds_Iniciar_displays@d1
  1984  03D2  0AF0               	incf	Ds_Iniciar_displays@d1,f
  1985  03D3  3002               	movlw	2
  1986  03D4  0020               	movlb	0	; select bank0
  1987  03D5  00CD               	movwf	??_main
  1988  03D6  084D               	movf	??_main,w
  1989  03D7  00F1               	movwf	Ds_Iniciar_displays@d2
  1990  03D8  3003               	movlw	3
  1991  03D9  00CE               	movwf	??_main+1
  1992  03DA  084E               	movf	??_main+1,w
  1993  03DB  00F2               	movwf	Ds_Iniciar_displays@d3
  1994  03DC  3004               	movlw	4
  1995  03DD  00CF               	movwf	??_main+2
  1996  03DE  084F               	movf	??_main+2,w
  1997  03DF  00F3               	movwf	Ds_Iniciar_displays@tE
  1998  03E0  01F4               	clrf	Ds_Iniciar_displays@tA
  1999  03E1  0AF4               	incf	Ds_Iniciar_displays@tA,f
  2000  03E2  30C3               	movlw	(low (main@seven_seg| 0))& (0+255)
  2001  03E3  3180  20FF  3183   	fcall	_Ds_Iniciar_displays
  2002  03E6                     l2384:
  2003                           
  2004                           ;main.c: 55:   if(TMR6_HasOverflowOccured()){
  2005  03E6  318F  2775  3183   	fcall	_TMR6_HasOverflowOccured
  2006  03E9  3A00               	xorlw	0
  2007  03EA  1903               	skipnz
  2008  03EB  2BED               	goto	u1701
  2009  03EC  2BEE               	goto	u1700
  2010  03ED                     u1701:
  2011  03ED  2BF6               	goto	l2388
  2012  03EE                     u1700:
  2013  03EE                     l2386:
  2014                           
  2015                           ;main.c: 56:    Tm_Procese_tiempo(&timer_1ms);
  2016  03EE  30BA               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2017  03EF  3181  2195  3183   	fcall	_Tm_Procese_tiempo
  2018                           
  2019                           ;main.c: 57:             Ds_Procese_displays(&seven_seg);
  2020  03F2  30C3               	movlw	(low (main@seven_seg| 0))& (0+255)
  2021  03F3  3184  2472  3183   	fcall	_Ds_Procese_displays
  2022  03F6                     l2388:
  2023                           
  2024                           ;main.c: 60:         if(Tm_Hubo_periodico(&timer_1ms)){
  2025  03F6  30BA               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2026  03F7  318F  2736  3183   	fcall	_Tm_Hubo_periodico
  2027  03FA  3A00               	xorlw	0
  2028  03FB  1903               	skipnz
  2029  03FC  2BFE               	goto	u1711
  2030  03FD  2BFF               	goto	u1710
  2031  03FE                     u1711:
  2032  03FE  2C4D               	goto	l2410
  2033  03FF                     u1710:
  2034  03FF                     l2390:
  2035                           
  2036                           ;main.c: 61:             Tm_Baje_periodico(&timer_1ms);
  2037  03FF  30BA               	movlw	(low (main@timer_1ms| 0))& (0+255)
  2038  0400  318F  2752  3183   	fcall	_Tm_Baje_periodico
  2039  0403                     l2392:
  2040                           
  2041                           ;main.c: 62:             ADC_StartConversion();
  2042  0403  318F  2709  3183   	fcall	_ADC_StartConversion
  2043  0406                     l2394:
  2044                           
  2045                           ;main.c: 64:              if(EUSART_is_tx_ready()){
  2046  0406  318F  2782  3183   	fcall	_EUSART_is_tx_ready
  2047  0409  3A00               	xorlw	0
  2048  040A  1903               	skipnz
  2049  040B  2C0D               	goto	u1721
  2050  040C  2C0E               	goto	u1720
  2051  040D                     u1721:
  2052  040D  2C4D               	goto	l2410
  2053  040E                     u1720:
  2054  040E                     l2396:
  2055                           
  2056                           ;main.c: 65:             Pack[0]=(seven_seg.D3 + '0');
  2057  040E  0021               	movlb	1	; select bank1
  2058  040F  0846               	movf	(main@seven_seg^(0+128)+3),w
  2059  0410  3E30               	addlw	48
  2060  0411  00A5               	movwf	main@Pack^(0+128)
  2061  0412  3000               	movlw	0
  2062  0413  1803               	skipnc
  2063  0414  3001               	movlw	1
  2064  0415  00A6               	movwf	(main@Pack^(0+128)+1)
  2065                           
  2066                           ;main.c: 66:             Pack[1]=(',');
  2067  0416  302C               	movlw	44
  2068  0417  00A7               	movwf	(main@Pack^(0+128)+2)
  2069  0418  3000               	movlw	0
  2070  0419  00A8               	movwf	(main@Pack^(0+128)+3)
  2071                           
  2072                           ;main.c: 67:             Pack[2]=(seven_seg.D2 + '0');
  2073  041A  0845               	movf	(main@seven_seg^(0+128)+2),w
  2074  041B  3E30               	addlw	48
  2075  041C  00A9               	movwf	(main@Pack^(0+128)+4)
  2076  041D  3000               	movlw	0
  2077  041E  1803               	skipnc
  2078  041F  3001               	movlw	1
  2079  0420  00AA               	movwf	(main@Pack^(0+128)+5)
  2080                           
  2081                           ;main.c: 68:             Pack[3]=(seven_seg.D1 + '0');
  2082  0421  0844               	movf	(main@seven_seg^(0+128)+1),w
  2083  0422  3E30               	addlw	48
  2084  0423  00AB               	movwf	(main@Pack^(0+128)+6)
  2085  0424  3000               	movlw	0
  2086  0425  1803               	skipnc
  2087  0426  3001               	movlw	1
  2088  0427  00AC               	movwf	(main@Pack^(0+128)+7)
  2089                           
  2090                           ;main.c: 69:             Pack[5]=0x0D;
  2091  0428  300D               	movlw	13
  2092  0429  00AF               	movwf	(main@Pack^(0+128)+10)
  2093  042A  3000               	movlw	0
  2094  042B  00B0               	movwf	(main@Pack^(0+128)+11)
  2095                           
  2096                           ;main.c: 70:             Pack[4]= '\n';
  2097  042C  300A               	movlw	10
  2098  042D  00AD               	movwf	(main@Pack^(0+128)+8)
  2099  042E  3000               	movlw	0
  2100  042F  00AE               	movwf	(main@Pack^(0+128)+9)
  2101  0430                     l2398:
  2102                           
  2103                           ;main.c: 71:             EUSART_Write(Pack[0]);
  2104  0430  0825               	movf	main@Pack^(0+128),w
  2105  0431  318F  273E  3183   	fcall	_EUSART_Write
  2106  0434                     l2400:
  2107                           
  2108                           ;main.c: 72:             EUSART_Write(Pack[1]);
  2109  0434  0021               	movlb	1	; select bank1
  2110  0435  0827               	movf	(main@Pack^(0+128)+2),w
  2111  0436  318F  273E  3183   	fcall	_EUSART_Write
  2112  0439                     l2402:
  2113                           
  2114                           ;main.c: 73:             EUSART_Write(Pack[2]);
  2115  0439  0021               	movlb	1	; select bank1
  2116  043A  0829               	movf	(main@Pack^(0+128)+4),w
  2117  043B  318F  273E  3183   	fcall	_EUSART_Write
  2118  043E                     l2404:
  2119                           
  2120                           ;main.c: 74:             EUSART_Write(Pack[3]);
  2121  043E  0021               	movlb	1	; select bank1
  2122  043F  082B               	movf	(main@Pack^(0+128)+6),w
  2123  0440  318F  273E  3183   	fcall	_EUSART_Write
  2124  0443                     l2406:
  2125                           
  2126                           ;main.c: 75:             EUSART_Write(Pack[4]);
  2127  0443  0021               	movlb	1	; select bank1
  2128  0444  082D               	movf	(main@Pack^(0+128)+8),w
  2129  0445  318F  273E  3183   	fcall	_EUSART_Write
  2130  0448                     l2408:
  2131                           
  2132                           ;main.c: 76:             EUSART_Write(Pack[5]);
  2133  0448  0021               	movlb	1	; select bank1
  2134  0449  082F               	movf	(main@Pack^(0+128)+10),w
  2135  044A  318F  273E  3183   	fcall	_EUSART_Write
  2136  044D                     l2410:
  2137                           
  2138                           ;main.c: 82:         if(ADC_IsConversionDone()){
  2139  044D  318F  2727  3183   	fcall	_ADC_IsConversionDone
  2140  0450  3A00               	xorlw	0
  2141  0451  1903               	skipnz
  2142  0452  2C54               	goto	u1731
  2143  0453  2C55               	goto	u1730
  2144  0454                     u1731:
  2145  0454  2BE6               	goto	l2384
  2146  0455                     u1730:
  2147  0455                     l2412:
  2148                           
  2149                           ;main.c: 83:             valor_ADC = ADC_GetConversionResult();
  2150  0455  318F  270F  3183   	fcall	_ADC_GetConversionResult
  2151  0458  0871               	movf	?_ADC_GetConversionResult+1,w
  2152  0459  0021               	movlb	1	; select bank1
  2153  045A  00A4               	movwf	(main@valor_ADC+1)^(0+128)
  2154  045B  0870               	movf	?_ADC_GetConversionResult,w
  2155  045C  00A3               	movwf	main@valor_ADC^(0+128)
  2156  045D                     l2414:
  2157  045D  0824               	movf	(main@valor_ADC+1)^(0+128),w
  2158  045E  0020               	movlb	0	; select bank0
  2159  045F  00C6               	movwf	Ds_Conversor_ADC@adcOUT+1
  2160  0460  0021               	movlb	1	; select bank1
  2161  0461  0823               	movf	main@valor_ADC^(0+128),w
  2162  0462  0020               	movlb	0	; select bank0
  2163  0463  00C5               	movwf	Ds_Conversor_ADC@adcOUT
  2164  0464  3180  20C2  3183   	fcall	_Ds_Conversor_ADC
  2165  0467                     l2416:
  2166                           
  2167                           ;main.c: 85:             Ds_Convertir_en_uni(&seven_seg, 132);
  2168  0467  3084               	movlw	132
  2169  0468  00F8               	movwf	Ds_Convertir_en_uni@voltaje
  2170  0469  3000               	movlw	0
  2171  046A  00F9               	movwf	Ds_Convertir_en_uni@voltaje+1
  2172  046B  30C3               	movlw	(low (main@seven_seg| 0))& (0+255)
  2173  046C  3181  213D  3183   	fcall	_Ds_Convertir_en_uni
  2174  046F  2BE6               	goto	l2384
  2175  0470  3180  2802         	ljmp	start
  2176  0472                     __end_of_main:
  2177                           
  2178                           	psect	text1
  2179  0195                     __ptext1:	
  2180 ;; *************** function _Tm_Procese_tiempo *****************
  2181 ;; Defined at:
  2182 ;;		line 17 in file "nuestrostimers.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2185 ;;		 -> main@timer_1ms(9), 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  ctp             1    4[COMMON] PTR struct Tm_Periodico
  2188 ;;		 -> main@timer_1ms(9), 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2198 ;;      Params:         0       0       0       0       0       0
  2199 ;;      Locals:         1       0       0       0       0       0
  2200 ;;      Temps:          4       0       0       0       0       0
  2201 ;;      Totals:         5       0       0       0       0       0
  2202 ;;Total ram usage:        5 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _Tm_Procese_tiempo
  2213  0195                     _Tm_Procese_tiempo:
  2214                           
  2215                           ;incstack = 0
  2216                           ; Regs used in _Tm_Procese_tiempo: [wreg-fsr1h+status,2+status,0]
  2217                           ;Tm_Procese_tiempo@ctp stored from wreg
  2218  0195  00F4               	movwf	Tm_Procese_tiempo@ctp
  2219  0196                     l2254:
  2220                           
  2221                           ;nuestrostimers.c: 17: void Tm_Procese_tiempo (Tm_Periodico *ctp);nuestrostimers.c: 18: 
      +                          {;nuestrostimers.c: 21:  if (ctp->banderas & 0x01U)
  2222  0196  0874               	movf	Tm_Procese_tiempo@ctp,w
  2223  0197  3E08               	addlw	8
  2224  0198  0086               	movwf	6
  2225  0199  0187               	clrf	7
  2226  019A  1C01               	btfss	1,0
  2227  019B  299D               	goto	u1591
  2228  019C  299E               	goto	u1590
  2229  019D                     u1591:
  2230  019D  29C0               	goto	l2264
  2231  019E                     u1590:
  2232  019E                     l2256:
  2233                           
  2234                           ;nuestrostimers.c: 22:  {;nuestrostimers.c: 23:   --(ctp->contador);
  2235  019E  0874               	movf	Tm_Procese_tiempo@ctp,w
  2236  019F  0086               	movwf	6
  2237  01A0  0187               	clrf	7
  2238  01A1  3001               	movlw	1
  2239  01A2  0281               	subwf	1,f
  2240  01A3  3141               	addfsr 1,1
  2241  01A4  3000               	movlw	0
  2242  01A5  3B81               	subwfb	1,f
  2243  01A6  317F               	addfsr 1,-1
  2244  01A7                     l2258:
  2245                           
  2246                           ;nuestrostimers.c: 24:   if ( !(ctp->contador) )
  2247  01A7  0874               	movf	Tm_Procese_tiempo@ctp,w
  2248  01A8  0086               	movwf	6
  2249  01A9  0187               	clrf	7
  2250  01AA  0016               	moviw fsr1++
  2251  01AB  0401               	iorwf	1,w
  2252  01AC  1D03               	btfss	3,2
  2253  01AD  29AF               	goto	u1601
  2254  01AE  29B0               	goto	u1600
  2255  01AF                     u1601:
  2256  01AF  29C0               	goto	l2264
  2257  01B0                     u1600:
  2258  01B0                     l2260:
  2259                           
  2260                           ;nuestrostimers.c: 25:   {;nuestrostimers.c: 26:    ctp->banderas |= 0x02U;
  2261  01B0  0874               	movf	Tm_Procese_tiempo@ctp,w
  2262  01B1  3E08               	addlw	8
  2263  01B2  0086               	movwf	6
  2264  01B3  0187               	clrf	7
  2265  01B4  1481               	bsf	1,1
  2266  01B5                     l2262:
  2267                           
  2268                           ;nuestrostimers.c: 27:    ctp->contador = ctp-> periodo;
  2269  01B5  0874               	movf	Tm_Procese_tiempo@ctp,w
  2270  01B6  3E02               	addlw	2
  2271  01B7  0086               	movwf	6
  2272  01B8  0187               	clrf	7
  2273  01B9  0874               	movf	Tm_Procese_tiempo@ctp,w
  2274  01BA  0084               	movwf	4
  2275  01BB  0185               	clrf	5
  2276  01BC  3F40               	moviw [0]fsr1
  2277  01BD  3F80               	movwi [0]fsr0
  2278  01BE  3F41               	moviw [1]fsr1
  2279  01BF  3F81               	movwi [1]fsr0
  2280  01C0                     l2264:
  2281                           
  2282                           ;nuestrostimers.c: 30:  if ((ctp->timeout))
  2283  01C0  0874               	movf	Tm_Procese_tiempo@ctp,w
  2284  01C1  3E04               	addlw	4
  2285  01C2  0086               	movwf	6
  2286  01C3  0187               	clrf	7
  2287  01C4  3F40               	moviw [0]fsr1
  2288  01C5  00F0               	movwf	??_Tm_Procese_tiempo
  2289  01C6  3F41               	moviw [1]fsr1
  2290  01C7  00F1               	movwf	??_Tm_Procese_tiempo+1
  2291  01C8  3F42               	moviw [2]fsr1
  2292  01C9  00F2               	movwf	??_Tm_Procese_tiempo+2
  2293  01CA  3F43               	moviw [3]fsr1
  2294  01CB  00F3               	movwf	??_Tm_Procese_tiempo+3
  2295  01CC  0873               	movf	??_Tm_Procese_tiempo+3,w
  2296  01CD  0472               	iorwf	??_Tm_Procese_tiempo+2,w
  2297  01CE  0471               	iorwf	??_Tm_Procese_tiempo+1,w
  2298  01CF  0470               	iorwf	??_Tm_Procese_tiempo,w
  2299  01D0  1903               	skipnz
  2300  01D1  29D3               	goto	u1611
  2301  01D2  29D4               	goto	u1610
  2302  01D3                     u1611:
  2303  01D3  29F4               	goto	l518
  2304  01D4                     u1610:
  2305  01D4                     l2266:
  2306                           
  2307                           ;nuestrostimers.c: 31:   ctp->timeout=ctp->timeout-1;
  2308  01D4  30FF               	movlw	255
  2309  01D5  00F0               	movwf	??_Tm_Procese_tiempo
  2310  01D6  30FF               	movlw	255
  2311  01D7  00F1               	movwf	??_Tm_Procese_tiempo+1
  2312  01D8  30FF               	movlw	255
  2313  01D9  00F2               	movwf	??_Tm_Procese_tiempo+2
  2314  01DA  30FF               	movlw	255
  2315  01DB  00F3               	movwf	??_Tm_Procese_tiempo+3
  2316  01DC  0874               	movf	Tm_Procese_tiempo@ctp,w
  2317  01DD  3E04               	addlw	4
  2318  01DE  0086               	movwf	6
  2319  01DF  0187               	clrf	7
  2320  01E0  3F40               	moviw [0]fsr1
  2321  01E1  07F0               	addwf	??_Tm_Procese_tiempo,f
  2322  01E2  3F41               	moviw [1]fsr1
  2323  01E3  3DF1               	addwfc	??_Tm_Procese_tiempo+1,f
  2324  01E4  3F42               	moviw [2]fsr1
  2325  01E5  3DF2               	addwfc	??_Tm_Procese_tiempo+2,f
  2326  01E6  3F43               	moviw [3]fsr1
  2327  01E7  3DF3               	addwfc	??_Tm_Procese_tiempo+3,f
  2328  01E8  0874               	movf	Tm_Procese_tiempo@ctp,w
  2329  01E9  3E04               	addlw	4
  2330  01EA  0086               	movwf	6
  2331  01EB  0187               	clrf	7
  2332  01EC  0870               	movf	??_Tm_Procese_tiempo,w
  2333  01ED  3FC0               	movwi [0]fsr1
  2334  01EE  0871               	movf	??_Tm_Procese_tiempo+1,w
  2335  01EF  3FC1               	movwi [1]fsr1
  2336  01F0  0872               	movf	??_Tm_Procese_tiempo+2,w
  2337  01F1  3FC2               	movwi [2]fsr1
  2338  01F2  0873               	movf	??_Tm_Procese_tiempo+3,w
  2339  01F3  3FC3               	movwi [3]fsr1
  2340  01F4                     l518:
  2341  01F4  0008               	return
  2342  01F5                     __end_of_Tm_Procese_tiempo:
  2343                           
  2344                           	psect	text2
  2345  0007                     __ptext2:	
  2346 ;; *************** function _Tm_Inicie_periodico *****************
  2347 ;; Defined at:
  2348 ;;		line 11 in file "nuestrostimers.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2351 ;;		 -> main@timer_1000ms(9), main@timer_1ms(9), 
  2352 ;;  periodo         2    0[COMMON] unsigned int 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  ctp             1    3[COMMON] PTR struct Tm_Periodico
  2355 ;;		 -> main@timer_1000ms(9), main@timer_1ms(9), 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2365 ;;      Params:         2       0       0       0       0       0
  2366 ;;      Locals:         1       0       0       0       0       0
  2367 ;;      Temps:          1       0       0       0       0       0
  2368 ;;      Totals:         4       0       0       0       0       0
  2369 ;;Total ram usage:        4 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_main
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _Tm_Inicie_periodico
  2380  0007                     _Tm_Inicie_periodico:
  2381                           
  2382                           ;incstack = 0
  2383                           ; Regs used in _Tm_Inicie_periodico: [wreg+fsr1l+fsr1h+status,2+status,0]
  2384                           ;Tm_Inicie_periodico@ctp stored from wreg
  2385  0007  00F3               	movwf	Tm_Inicie_periodico@ctp
  2386  0008                     l2238:
  2387                           
  2388                           ;nuestrostimers.c: 11: void Tm_Inicie_periodico (Tm_Periodico *ctp,unsigned int periodo)
      +                          ;nuestrostimers.c: 12: {;nuestrostimers.c: 13:  ctp->banderas |= 0x01U;
  2389  0008  0873               	movf	Tm_Inicie_periodico@ctp,w
  2390  0009  3E08               	addlw	8
  2391  000A  0086               	movwf	6
  2392  000B  0187               	clrf	7
  2393  000C  1401               	bsf	1,0
  2394                           
  2395                           ;nuestrostimers.c: 14:  ctp->banderas &= ~0x02U;
  2396  000D  30FD               	movlw	253
  2397  000E  00F2               	movwf	??_Tm_Inicie_periodico
  2398  000F  0873               	movf	Tm_Inicie_periodico@ctp,w
  2399  0010  3E08               	addlw	8
  2400  0011  0086               	movwf	6
  2401  0012  0187               	clrf	7
  2402  0013  0872               	movf	??_Tm_Inicie_periodico,w
  2403  0014  0581               	andwf	1,f
  2404                           
  2405                           ;nuestrostimers.c: 15:  ctp->contador = ctp->periodo = periodo;
  2406  0015  0873               	movf	Tm_Inicie_periodico@ctp,w
  2407  0016  3E02               	addlw	2
  2408  0017  0086               	movwf	6
  2409  0018  0187               	clrf	7
  2410  0019  0870               	movf	Tm_Inicie_periodico@periodo,w
  2411  001A  3FC0               	movwi [0]fsr1
  2412  001B  0871               	movf	Tm_Inicie_periodico@periodo+1,w
  2413  001C  3FC1               	movwi [1]fsr1
  2414  001D  0873               	movf	Tm_Inicie_periodico@ctp,w
  2415  001E  0086               	movwf	6
  2416  001F  0187               	clrf	7
  2417  0020  0870               	movf	Tm_Inicie_periodico@periodo,w
  2418  0021  3FC0               	movwi [0]fsr1
  2419  0022  0871               	movf	Tm_Inicie_periodico@periodo+1,w
  2420  0023  3FC1               	movwi [1]fsr1
  2421  0024                     l512:
  2422  0024  0008               	return
  2423  0025                     __end_of_Tm_Inicie_periodico:
  2424                           
  2425                           	psect	text3
  2426  0F36                     __ptext3:	
  2427 ;; *************** function _Tm_Hubo_periodico *****************
  2428 ;; Defined at:
  2429 ;;		line 36 in file "nuestrostimers.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2432 ;;		 -> main@timer_1ms(9), 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  ctp             1    0[COMMON] PTR struct Tm_Periodico
  2435 ;;		 -> main@timer_1ms(9), 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      unsigned char 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2445 ;;      Params:         0       0       0       0       0       0
  2446 ;;      Locals:         1       0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0
  2448 ;;      Totals:         1       0       0       0       0       0
  2449 ;;Total ram usage:        1 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_main
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           
  2459                           ;psect for function _Tm_Hubo_periodico
  2460  0F36                     _Tm_Hubo_periodico:
  2461                           
  2462                           ;incstack = 0
  2463                           ; Regs used in _Tm_Hubo_periodico: [wreg+fsr1l+fsr1h+status,2+status,0]
  2464                           ;Tm_Hubo_periodico@ctp stored from wreg
  2465  0F36  00F0               	movwf	Tm_Hubo_periodico@ctp
  2466  0F37                     l2332:
  2467                           
  2468                           ;nuestrostimers.c: 36: char Tm_Hubo_periodico (Tm_Periodico *ctp);nuestrostimers.c: 37: 
      +                          {;nuestrostimers.c: 38:  return (ctp->banderas & 0x02U);
  2469  0F37  0870               	movf	Tm_Hubo_periodico@ctp,w
  2470  0F38  3E08               	addlw	8
  2471  0F39  0086               	movwf	6
  2472  0F3A  0187               	clrf	7
  2473  0F3B  0801               	movf	1,w
  2474  0F3C  3902               	andlw	2
  2475  0F3D                     l521:
  2476  0F3D  0008               	return
  2477  0F3E                     __end_of_Tm_Hubo_periodico:
  2478                           
  2479                           	psect	text4
  2480  0F52                     __ptext4:	
  2481 ;; *************** function _Tm_Baje_periodico *****************
  2482 ;; Defined at:
  2483 ;;		line 43 in file "nuestrostimers.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  ctp             1    wreg     PTR struct Tm_Periodico
  2486 ;;		 -> main@timer_1ms(9), 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  ctp             1    1[COMMON] PTR struct Tm_Periodico
  2489 ;;		 -> main@timer_1ms(9), 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2499 ;;      Params:         0       0       0       0       0       0
  2500 ;;      Locals:         1       0       0       0       0       0
  2501 ;;      Temps:          1       0       0       0       0       0
  2502 ;;      Totals:         2       0       0       0       0       0
  2503 ;;Total ram usage:        2 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_main
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           
  2513                           ;psect for function _Tm_Baje_periodico
  2514  0F52                     _Tm_Baje_periodico:
  2515                           
  2516                           ;incstack = 0
  2517                           ; Regs used in _Tm_Baje_periodico: [wreg+fsr1l+fsr1h+status,2+status,0]
  2518                           ;Tm_Baje_periodico@ctp stored from wreg
  2519  0F52  00F1               	movwf	Tm_Baje_periodico@ctp
  2520  0F53                     l2336:
  2521                           
  2522                           ;nuestrostimers.c: 43: void Tm_Baje_periodico (Tm_Periodico *ctp);nuestrostimers.c: 44: 
      +                          {;nuestrostimers.c: 45:  ctp->banderas &= ~0x02U;
  2523  0F53  30FD               	movlw	253
  2524  0F54  00F0               	movwf	??_Tm_Baje_periodico
  2525  0F55  0871               	movf	Tm_Baje_periodico@ctp,w
  2526  0F56  3E08               	addlw	8
  2527  0F57  0086               	movwf	6
  2528  0F58  0187               	clrf	7
  2529  0F59  0870               	movf	??_Tm_Baje_periodico,w
  2530  0F5A  0581               	andwf	1,f
  2531  0F5B                     l524:
  2532  0F5B  0008               	return
  2533  0F5C                     __end_of_Tm_Baje_periodico:
  2534                           
  2535                           	psect	text5
  2536  0004                     __ptext5:	
  2537 ;; *************** function _TMR6_StartTimer *****************
  2538 ;; Defined at:
  2539 ;;		line 79 in file "mcc_generated_files/tmr6.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		None
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2553 ;;      Params:         0       0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _TMR6_StartTimer
  2568  0004                     _TMR6_StartTimer:
  2569  0004                     l2186:	
  2570                           ;incstack = 0
  2571                           ; Regs used in _TMR6_StartTimer: []
  2572                           
  2573                           
  2574                           ;mcc_generated_files/tmr6.c: 82:     T6CONbits.TMR6ON = 1;
  2575  0004  0028               	movlb	8	; select bank8
  2576  0005  151E               	bsf	30,2	;volatile
  2577  0006                     l16:
  2578  0006  0008               	return
  2579  0007                     __end_of_TMR6_StartTimer:
  2580                           
  2581                           	psect	text6
  2582  0F75                     __ptext6:	
  2583 ;; *************** function _TMR6_HasOverflowOccured *****************
  2584 ;; Defined at:
  2585 ;;		line 111 in file "mcc_generated_files/tmr6.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  status          1    0[COMMON] _Bool 
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      _Bool 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2599 ;;      Params:         0       0       0       0       0       0
  2600 ;;      Locals:         1       0       0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0
  2602 ;;      Totals:         1       0       0       0       0       0
  2603 ;;Total ram usage:        1 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _TMR6_HasOverflowOccured
  2614  0F75                     _TMR6_HasOverflowOccured:
  2615  0F75                     l2188:	
  2616                           ;incstack = 0
  2617                           ; Regs used in _TMR6_HasOverflowOccured: [wreg+status,2+status,0]
  2618                           
  2619                           
  2620                           ;mcc_generated_files/tmr6.c: 114:     _Bool status = PIR3bits.TMR6IF;
  2621  0F75  3000               	movlw	0
  2622  0F76  0020               	movlb	0	; select bank0
  2623  0F77  1993               	btfsc	19,3	;volatile
  2624  0F78  3001               	movlw	1
  2625  0F79  00F0               	movwf	TMR6_HasOverflowOccured@status
  2626  0F7A                     l2190:
  2627                           
  2628                           ;mcc_generated_files/tmr6.c: 115:     if(status)
  2629  0F7A  0870               	movf	TMR6_HasOverflowOccured@status,w
  2630  0F7B  1903               	btfsc	3,2
  2631  0F7C  2F7E               	goto	u1551
  2632  0F7D  2F7F               	goto	u1550
  2633  0F7E                     u1551:
  2634  0F7E  2F80               	goto	l2194
  2635  0F7F                     u1550:
  2636  0F7F                     l2192:
  2637                           
  2638                           ;mcc_generated_files/tmr6.c: 116:     {;mcc_generated_files/tmr6.c: 118:         PIR3bit
      +                          s.TMR6IF = 0;
  2639  0F7F  1193               	bcf	19,3	;volatile
  2640  0F80                     l2194:
  2641                           
  2642                           ;mcc_generated_files/tmr6.c: 120:     return status;
  2643  0F80  0870               	movf	TMR6_HasOverflowOccured@status,w
  2644  0F81                     l32:
  2645  0F81  0008               	return
  2646  0F82                     __end_of_TMR6_HasOverflowOccured:
  2647                           
  2648                           	psect	text7
  2649  0F91                     __ptext7:	
  2650 ;; *************** function _SYSTEM_Initialize *****************
  2651 ;; Defined at:
  2652 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0, pclath, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2666 ;;      Params:         0       0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0
  2669 ;;      Totals:         0       0       0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    2
  2673 ;; This function calls:
  2674 ;;		_ADC_Initialize
  2675 ;;		_EUSART_Initialize
  2676 ;;		_OSCILLATOR_Initialize
  2677 ;;		_PIN_MANAGER_Initialize
  2678 ;;		_TMR6_Initialize
  2679 ;;		_WDT_Initialize
  2680 ;; This function is called by:
  2681 ;;		_main
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _SYSTEM_Initialize
  2687  0F91                     _SYSTEM_Initialize:
  2688  0F91                     l2228:	
  2689                           ;incstack = 0
  2690                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2691                           
  2692                           
  2693                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2694  0F91  318F  27A4  318F   	fcall	_PIN_MANAGER_Initialize
  2695                           
  2696                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2697  0F94  318F  275C  318F   	fcall	_OSCILLATOR_Initialize
  2698  0F97                     l2230:
  2699                           
  2700                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2701  0F97  318F  270C  318F   	fcall	_WDT_Initialize
  2702  0F9A                     l2232:
  2703                           
  2704                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
  2705  0F9A  318F  2748  318F   	fcall	_TMR6_Initialize
  2706  0F9D                     l2234:
  2707                           
  2708                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2709  0F9D  318F  272E  318F   	fcall	_ADC_Initialize
  2710  0FA0                     l2236:
  2711                           
  2712                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2713  0FA0  318F  27DD  318F   	fcall	_EUSART_Initialize
  2714  0FA3                     l211:
  2715  0FA3  0008               	return
  2716  0FA4                     __end_of_SYSTEM_Initialize:
  2717                           
  2718                           	psect	text8
  2719  0F0C                     __ptext8:	
  2720 ;; *************** function _WDT_Initialize *****************
  2721 ;; Defined at:
  2722 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;		None
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		status,2
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2736 ;;      Params:         0       0       0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0       0
  2739 ;;      Totals:         0       0       0       0       0       0
  2740 ;;Total ram usage:        0 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_SYSTEM_Initialize
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _WDT_Initialize
  2751  0F0C                     _WDT_Initialize:
  2752  0F0C                     l1896:	
  2753                           ;incstack = 0
  2754                           ; Regs used in _WDT_Initialize: [status,2]
  2755                           
  2756                           
  2757                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x00;
  2758  0F0C  0021               	movlb	1	; select bank1
  2759  0F0D  0197               	clrf	23	;volatile
  2760  0F0E                     l220:
  2761  0F0E  0008               	return
  2762  0F0F                     __end_of_WDT_Initialize:
  2763                           
  2764                           	psect	text9
  2765  0F48                     __ptext9:	
  2766 ;; *************** function _TMR6_Initialize *****************
  2767 ;; Defined at:
  2768 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2782 ;;      Params:         0       0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0
  2785 ;;      Totals:         0       0       0       0       0       0
  2786 ;;Total ram usage:        0 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_SYSTEM_Initialize
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           
  2796                           ;psect for function _TMR6_Initialize
  2797  0F48                     _TMR6_Initialize:
  2798  0F48                     l1854:	
  2799                           ;incstack = 0
  2800                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  2801                           
  2802                           
  2803                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0xF9;
  2804  0F48  30F9               	movlw	249
  2805  0F49  0028               	movlb	8	; select bank8
  2806  0F4A  009D               	movwf	29	;volatile
  2807  0F4B                     l1856:
  2808                           
  2809                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
  2810  0F4B  019C               	clrf	28	;volatile
  2811  0F4C                     l1858:
  2812                           
  2813                           ;mcc_generated_files/tmr6.c: 73:     PIR3bits.TMR6IF = 0;
  2814  0F4C  0020               	movlb	0	; select bank0
  2815  0F4D  1193               	bcf	19,3	;volatile
  2816  0F4E                     l1860:
  2817                           
  2818                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x3D;
  2819  0F4E  303D               	movlw	61
  2820  0F4F  0028               	movlb	8	; select bank8
  2821  0F50  009E               	movwf	30	;volatile
  2822  0F51                     l13:
  2823  0F51  0008               	return
  2824  0F52                     __end_of_TMR6_Initialize:
  2825                           
  2826                           	psect	text10
  2827  0FA4                     __ptext10:	
  2828 ;; *************** function _PIN_MANAGER_Initialize *****************
  2829 ;; Defined at:
  2830 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;		None
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2844 ;;      Params:         0       0       0       0       0       0
  2845 ;;      Locals:         0       0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0
  2847 ;;      Totals:         0       0       0       0       0       0
  2848 ;;Total ram usage:        0 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_SYSTEM_Initialize
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function _PIN_MANAGER_Initialize
  2859  0FA4                     _PIN_MANAGER_Initialize:
  2860  0FA4                     l1862:	
  2861                           ;incstack = 0
  2862                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2863                           
  2864                           
  2865                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2866  0FA4  0022               	movlb	2	; select bank2
  2867  0FA5  018C               	clrf	12	;volatile
  2868                           
  2869                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2870  0FA6  018D               	clrf	13	;volatile
  2871  0FA7                     l1864:
  2872                           
  2873                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x20;
  2874  0FA7  3020               	movlw	32
  2875  0FA8  0021               	movlb	1	; select bank1
  2876  0FA9  008C               	movwf	12	;volatile
  2877  0FAA                     l1866:
  2878                           
  2879                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xE6;
  2880  0FAA  30E6               	movlw	230
  2881  0FAB  008D               	movwf	13	;volatile
  2882  0FAC                     l1868:
  2883                           
  2884                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0x38;
  2885  0FAC  3038               	movlw	56
  2886  0FAD  0023               	movlb	3	; select bank3
  2887  0FAE  008D               	movwf	13	;volatile
  2888  0FAF                     l1870:
  2889                           
  2890                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2891  0FAF  301F               	movlw	31
  2892  0FB0  008C               	movwf	12	;volatile
  2893                           
  2894                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2895  0FB1  0024               	movlb	4	; select bank4
  2896  0FB2  018D               	clrf	13	;volatile
  2897                           
  2898                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2899  0FB3  018C               	clrf	12	;volatile
  2900  0FB4                     l1872:
  2901                           
  2902                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2903  0FB4  0021               	movlb	1	; select bank1
  2904  0FB5  1795               	bsf	21,7	;volatile
  2905                           
  2906                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2907  0FB6  0022               	movlb	2	; select bank2
  2908  0FB7  019D               	clrf	29	;volatile
  2909                           
  2910                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2911  0FB8  019E               	clrf	30	;volatile
  2912  0FB9                     l57:
  2913  0FB9  0008               	return
  2914  0FBA                     __end_of_PIN_MANAGER_Initialize:
  2915                           
  2916                           	psect	text11
  2917  0F5C                     __ptext11:	
  2918 ;; *************** function _OSCILLATOR_Initialize *****************
  2919 ;; Defined at:
  2920 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2934 ;;      Params:         0       0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_SYSTEM_Initialize
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           
  2948                           ;psect for function _OSCILLATOR_Initialize
  2949  0F5C                     _OSCILLATOR_Initialize:
  2950  0F5C                     l1890:	
  2951                           ;incstack = 0
  2952                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2953                           
  2954                           
  2955                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2956  0F5C  3070               	movlw	112
  2957  0F5D  0021               	movlb	1	; select bank1
  2958  0F5E  0099               	movwf	25	;volatile
  2959  0F5F                     l1892:
  2960                           
  2961                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2962  0F5F  0198               	clrf	24	;volatile
  2963  0F60                     l1894:
  2964                           
  2965                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2966  0F60  0022               	movlb	2	; select bank2
  2967  0F61  0196               	clrf	22	;volatile
  2968  0F62                     l214:	
  2969                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  2970                           
  2971                           
  2972                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  2973  0F62  0021               	movlb	1	; select bank1
  2974  0F63  1F1A               	btfss	26,6	;volatile
  2975  0F64  2F66               	goto	u911
  2976  0F65  2F67               	goto	u910
  2977  0F66                     u911:
  2978  0F66  2F62               	goto	l214
  2979  0F67                     u910:
  2980  0F67                     l217:
  2981  0F67  0008               	return
  2982  0F68                     __end_of_OSCILLATOR_Initialize:
  2983                           
  2984                           	psect	text12
  2985  0FDD                     __ptext12:	
  2986 ;; *************** function _EUSART_Initialize *****************
  2987 ;; Defined at:
  2988 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0, pclath, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3002 ;;      Params:         0       0       0       0       0       0
  3003 ;;      Locals:         0       0       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0
  3005 ;;      Totals:         0       0       0       0       0       0
  3006 ;;Total ram usage:        0 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    1
  3009 ;; This function calls:
  3010 ;;		_EUSART_SetErrorHandler
  3011 ;;		_EUSART_SetFramingErrorHandler
  3012 ;;		_EUSART_SetOverrunErrorHandler
  3013 ;; This function is called by:
  3014 ;;		_SYSTEM_Initialize
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _EUSART_Initialize
  3020  0FDD                     _EUSART_Initialize:
  3021  0FDD                     l1874:	
  3022                           ;incstack = 0
  3023                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3024                           
  3025                           
  3026                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  3027  0FDD  3008               	movlw	8
  3028  0FDE  0023               	movlb	3	; select bank3
  3029  0FDF  009F               	movwf	31	;volatile
  3030                           
  3031                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  3032  0FE0  3090               	movlw	144
  3033  0FE1  009D               	movwf	29	;volatile
  3034                           
  3035                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  3036  0FE2  3024               	movlw	36
  3037  0FE3  009E               	movwf	30	;volatile
  3038                           
  3039                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x40;
  3040  0FE4  3040               	movlw	64
  3041  0FE5  009B               	movwf	27	;volatile
  3042                           
  3043                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x03;
  3044  0FE6  3003               	movlw	3
  3045  0FE7  009C               	movwf	28	;volatile
  3046  0FE8                     l1876:
  3047                           
  3048                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3049  0FE8  3000               	movlw	0
  3050  0FE9  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3051  0FEA  3000               	movlw	0
  3052  0FEB  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3053  0FEC  318F  271B  318F   	fcall	_EUSART_SetFramingErrorHandler
  3054  0FEF                     l1878:
  3055                           
  3056                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3057  0FEF  3000               	movlw	0
  3058  0FF0  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3059  0FF1  3000               	movlw	0
  3060  0FF2  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3061  0FF3  318F  2721  318F   	fcall	_EUSART_SetOverrunErrorHandler
  3062  0FF6                     l1880:
  3063                           
  3064                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3065  0FF6  3000               	movlw	0
  3066  0FF7  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  3067  0FF8  3000               	movlw	0
  3068  0FF9  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3069  0FFA  318F  2715  318F   	fcall	_EUSART_SetErrorHandler
  3070  0FFD                     l1882:
  3071                           
  3072                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  3073  0FFD  0020               	movlb	0	; select bank0
  3074  0FFE  01D8               	clrf	_eusartRxLastError	;volatile
  3075  0FFF                     l103:
  3076  0FFF  0008               	return
  3077  1000                     __end_of_EUSART_Initialize:
  3078                           
  3079                           	psect	text13
  3080  0F21                     __ptext13:	
  3081 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3082 ;; Defined at:
  3083 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3086 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3098 ;;      Params:         2       0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0
  3101 ;;      Totals:         2       0       0       0       0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_EUSART_Initialize
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _EUSART_SetOverrunErrorHandler
  3113  0F21                     _EUSART_SetOverrunErrorHandler:
  3114  0F21                     l1836:	
  3115                           ;incstack = 0
  3116                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3117                           
  3118                           
  3119                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  3120  0F21  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3121  0F22  0020               	movlb	0	; select bank0
  3122  0F23  00D5               	movwf	_EUSART_OverrunErrorHandler+1
  3123  0F24  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3124  0F25  00D4               	movwf	_EUSART_OverrunErrorHandler
  3125  0F26                     l145:
  3126  0F26  0008               	return
  3127  0F27                     __end_of_EUSART_SetOverrunErrorHandler:
  3128                           
  3129                           	psect	text14
  3130  0F1B                     __ptext14:	
  3131 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3132 ;; Defined at:
  3133 ;;		line 157 in file "mcc_generated_files/eusart.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3136 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3148 ;;      Params:         2       0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0
  3151 ;;      Totals:         2       0       0       0       0       0
  3152 ;;Total ram usage:        2 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_EUSART_Initialize
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           
  3162                           ;psect for function _EUSART_SetFramingErrorHandler
  3163  0F1B                     _EUSART_SetFramingErrorHandler:
  3164  0F1B                     l1834:	
  3165                           ;incstack = 0
  3166                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3167                           
  3168                           
  3169                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  3170  0F1B  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3171  0F1C  0020               	movlb	0	; select bank0
  3172  0F1D  00D7               	movwf	_EUSART_FramingErrorHandler+1
  3173  0F1E  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3174  0F1F  00D6               	movwf	_EUSART_FramingErrorHandler
  3175  0F20                     l142:
  3176  0F20  0008               	return
  3177  0F21                     __end_of_EUSART_SetFramingErrorHandler:
  3178                           
  3179                           	psect	text15
  3180  0F15                     __ptext15:	
  3181 ;; *************** function _EUSART_SetErrorHandler *****************
  3182 ;; Defined at:
  3183 ;;		line 165 in file "mcc_generated_files/eusart.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3186 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3198 ;;      Params:         2       0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0
  3201 ;;      Totals:         2       0       0       0       0       0
  3202 ;;Total ram usage:        2 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_EUSART_Initialize
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           
  3212                           ;psect for function _EUSART_SetErrorHandler
  3213  0F15                     _EUSART_SetErrorHandler:
  3214  0F15                     l1838:	
  3215                           ;incstack = 0
  3216                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3217                           
  3218                           
  3219                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  3220  0F15  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3221  0F16  0020               	movlb	0	; select bank0
  3222  0F17  00D3               	movwf	_EUSART_ErrorHandler+1
  3223  0F18  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3224  0F19  00D2               	movwf	_EUSART_ErrorHandler
  3225  0F1A                     l148:
  3226  0F1A  0008               	return
  3227  0F1B                     __end_of_EUSART_SetErrorHandler:
  3228                           
  3229                           	psect	text16
  3230  0F2E                     __ptext16:	
  3231 ;; *************** function _ADC_Initialize *****************
  3232 ;; Defined at:
  3233 ;;		line 67 in file "mcc_generated_files/adc.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;		None
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3247 ;;      Params:         0       0       0       0       0       0
  3248 ;;      Locals:         0       0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0
  3250 ;;      Totals:         0       0       0       0       0       0
  3251 ;;Total ram usage:        0 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_SYSTEM_Initialize
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           
  3262                           ;psect for function _ADC_Initialize
  3263  0F2E                     _ADC_Initialize:
  3264  0F2E                     l1884:	
  3265                           ;incstack = 0
  3266                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3267                           
  3268                           
  3269                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xE0;
  3270  0F2E  30E0               	movlw	224
  3271  0F2F  0021               	movlb	1	; select bank1
  3272  0F30  009E               	movwf	30	;volatile
  3273  0F31                     l1886:
  3274                           
  3275                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3276  0F31  019B               	clrf	27	;volatile
  3277  0F32                     l1888:
  3278                           
  3279                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3280  0F32  019C               	clrf	28	;volatile
  3281                           
  3282                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x1D;
  3283  0F33  301D               	movlw	29
  3284  0F34  009D               	movwf	29	;volatile
  3285  0F35                     l165:
  3286  0F35  0008               	return
  3287  0F36                     __end_of_ADC_Initialize:
  3288                           
  3289                           	psect	text17
  3290  0F82                     __ptext17:	
  3291 ;; *************** function _EUSART_is_tx_ready *****************
  3292 ;; Defined at:
  3293 ;;		line 94 in file "mcc_generated_files/eusart.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      _Bool 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3307 ;;      Params:         0       0       0       0       0       0
  3308 ;;      Locals:         1       0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0
  3310 ;;      Totals:         1       0       0       0       0       0
  3311 ;;Total ram usage:        1 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           
  3321                           ;psect for function _EUSART_is_tx_ready
  3322  0F82                     _EUSART_is_tx_ready:
  3323  0F82                     l2198:	
  3324                           ;incstack = 0
  3325                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  3326                           
  3327                           
  3328                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  3329  0F82  01F0               	clrf	_EUSART_is_tx_ready$291
  3330  0F83                     l2200:
  3331  0F83  0020               	movlb	0	; select bank0
  3332  0F84  1E11               	btfss	17,4	;volatile
  3333  0F85  2F87               	goto	u1561
  3334  0F86  2F88               	goto	u1560
  3335  0F87                     u1561:
  3336  0F87  2F8F               	goto	l2206
  3337  0F88                     u1560:
  3338  0F88                     l2202:
  3339  0F88  0023               	movlb	3	; select bank3
  3340  0F89  1E9E               	btfss	30,5	;volatile
  3341  0F8A  2F8C               	goto	u1571
  3342  0F8B  2F8D               	goto	u1570
  3343  0F8C                     u1571:
  3344  0F8C  2F8F               	goto	l2206
  3345  0F8D                     u1570:
  3346  0F8D                     l2204:
  3347  0F8D  01F0               	clrf	_EUSART_is_tx_ready$291
  3348  0F8E  0AF0               	incf	_EUSART_is_tx_ready$291,f
  3349  0F8F                     l2206:
  3350  0F8F  0870               	movf	_EUSART_is_tx_ready$291,w
  3351  0F90                     l108:
  3352  0F90  0008               	return
  3353  0F91                     __end_of_EUSART_is_tx_ready:
  3354                           
  3355                           	psect	text18
  3356  0F3E                     __ptext18:	
  3357 ;; *************** function _EUSART_Write *****************
  3358 ;; Defined at:
  3359 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  txData          1    wreg     unsigned char 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  txData          1    0[COMMON] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3373 ;;      Params:         0       0       0       0       0       0
  3374 ;;      Locals:         1       0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0
  3376 ;;      Totals:         1       0       0       0       0       0
  3377 ;;Total ram usage:        1 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_main
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           
  3387                           ;psect for function _EUSART_Write
  3388  0F3E                     _EUSART_Write:
  3389                           
  3390                           ;incstack = 0
  3391                           ; Regs used in _EUSART_Write: [wreg]
  3392                           ;EUSART_Write@txData stored from wreg
  3393  0F3E  00F0               	movwf	EUSART_Write@txData
  3394  0F3F                     l2210:
  3395  0F3F                     l127:	
  3396                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3397                           
  3398                           
  3399                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3400  0F3F  0020               	movlb	0	; select bank0
  3401  0F40  1E11               	btfss	17,4	;volatile
  3402  0F41  2F43               	goto	u1581
  3403  0F42  2F44               	goto	u1580
  3404  0F43                     u1581:
  3405  0F43  2F3F               	goto	l127
  3406  0F44                     u1580:
  3407  0F44                     l2212:
  3408                           
  3409                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3410  0F44  0870               	movf	EUSART_Write@txData,w
  3411  0F45  0023               	movlb	3	; select bank3
  3412  0F46  009A               	movwf	26	;volatile
  3413  0F47                     l130:
  3414  0F47  0008               	return
  3415  0F48                     __end_of_EUSART_Write:
  3416                           
  3417                           	psect	text19
  3418  0472                     __ptext19:	
  3419 ;; *************** function _Ds_Procese_displays *****************
  3420 ;; Defined at:
  3421 ;;		line 231 in file "displays.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  dsp             1    wreg     PTR struct Ds_Display
  3424 ;;		 -> main@seven_seg(8), 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  dsp             1    5[COMMON] PTR struct Ds_Display
  3427 ;;		 -> main@seven_seg(8), 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      void 
  3430 ;; Registers used:
  3431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3437 ;;      Params:         0       0       0       0       0       0
  3438 ;;      Locals:         1       0       0       0       0       0
  3439 ;;      Temps:          2       0       0       0       0       0
  3440 ;;      Totals:         3       0       0       0       0       0
  3441 ;;Total ram usage:        3 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    1
  3444 ;; This function calls:
  3445 ;;		_Ds_BCD
  3446 ;;		_Ds_Encienda_Disp
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           
  3453                           ;psect for function _Ds_Procese_displays
  3454  0472                     _Ds_Procese_displays:
  3455                           
  3456                           ;incstack = 0
  3457                           ; Regs used in _Ds_Procese_displays: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3458                           ;Ds_Procese_displays@dsp stored from wreg
  3459  0472  00F5               	movwf	Ds_Procese_displays@dsp
  3460  0473                     l2268:
  3461                           
  3462                           ;displays.c: 233:     switch ( dsp->estados ){
  3463  0473  2D7C               	goto	l2326
  3464  0474                     l2270:
  3465                           
  3466                           ;displays.c: 236:             --(dsp->tempE);
  3467  0474  0875               	movf	Ds_Procese_displays@dsp,w
  3468  0475  3E06               	addlw	6
  3469  0476  0086               	movwf	6
  3470  0477  0187               	clrf	7
  3471  0478  3001               	movlw	1
  3472  0479  0281               	subwf	1,f
  3473                           
  3474                           ;displays.c: 237:             if(!(dsp->tempE)){
  3475  047A  0875               	movf	Ds_Procese_displays@dsp,w
  3476  047B  3E06               	addlw	6
  3477  047C  0086               	movwf	6
  3478  047D  0187               	clrf	7
  3479  047E  0801               	movf	1,w
  3480  047F  1D03               	btfss	3,2
  3481  0480  2C82               	goto	u1621
  3482  0481  2C83               	goto	u1620
  3483  0482                     u1621:
  3484  0482  2C96               	goto	l2276
  3485  0483                     u1620:
  3486  0483                     l2272:
  3487                           
  3488                           ;displays.c: 238:                 dsp->estados =2;
  3489  0483  3002               	movlw	2
  3490  0484  00F3               	movwf	??_Ds_Procese_displays
  3491  0485  0875               	movf	Ds_Procese_displays@dsp,w
  3492  0486  0086               	movwf	6
  3493  0487  0187               	clrf	7
  3494  0488  0873               	movf	??_Ds_Procese_displays,w
  3495  0489  0081               	movwf	1
  3496  048A                     l2274:
  3497                           
  3498                           ;displays.c: 239:                 dsp->tempA=dsp->tiempoApagado;
  3499  048A  0875               	movf	Ds_Procese_displays@dsp,w
  3500  048B  3E05               	addlw	5
  3501  048C  0086               	movwf	6
  3502  048D  0187               	clrf	7
  3503  048E  0801               	movf	1,w
  3504  048F  00F3               	movwf	??_Ds_Procese_displays
  3505  0490  0875               	movf	Ds_Procese_displays@dsp,w
  3506  0491  3E07               	addlw	7
  3507  0492  0086               	movwf	6
  3508  0493  0187               	clrf	7
  3509  0494  0873               	movf	??_Ds_Procese_displays,w
  3510  0495  0081               	movwf	1
  3511  0496                     l2276:
  3512                           
  3513                           ;displays.c: 243:             Ds_Encienda_Disp(1);
  3514  0496  3001               	movlw	1
  3515  0497  3180  2025  3184   	fcall	_Ds_Encienda_Disp
  3516  049A                     l2278:
  3517                           
  3518                           ;displays.c: 244:             Ds_BCD(dsp->D1);
  3519  049A  0A75               	incf	Ds_Procese_displays@dsp,w
  3520  049B  0086               	movwf	6
  3521  049C  0187               	clrf	7
  3522  049D  0801               	movf	1,w
  3523  049E  3182  226A  3184   	fcall	_Ds_BCD
  3524                           
  3525                           ;displays.c: 246:         break;
  3526  04A1  2D9B               	goto	l509
  3527  04A2                     l2280:
  3528                           
  3529                           ;displays.c: 249:             --(dsp->tempA);
  3530  04A2  0875               	movf	Ds_Procese_displays@dsp,w
  3531  04A3  3E07               	addlw	7
  3532  04A4  0086               	movwf	6
  3533  04A5  0187               	clrf	7
  3534  04A6  3001               	movlw	1
  3535  04A7  0281               	subwf	1,f
  3536                           
  3537                           ;displays.c: 250:             if(!(dsp->tempA)){
  3538  04A8  0875               	movf	Ds_Procese_displays@dsp,w
  3539  04A9  3E07               	addlw	7
  3540  04AA  0086               	movwf	6
  3541  04AB  0187               	clrf	7
  3542  04AC  0801               	movf	1,w
  3543  04AD  1D03               	btfss	3,2
  3544  04AE  2CB0               	goto	u1631
  3545  04AF  2CB1               	goto	u1630
  3546  04B0                     u1631:
  3547  04B0  2CC4               	goto	l2286
  3548  04B1                     u1630:
  3549  04B1                     l2282:
  3550                           
  3551                           ;displays.c: 251:                 dsp->estados =3;
  3552  04B1  3003               	movlw	3
  3553  04B2  00F3               	movwf	??_Ds_Procese_displays
  3554  04B3  0875               	movf	Ds_Procese_displays@dsp,w
  3555  04B4  0086               	movwf	6
  3556  04B5  0187               	clrf	7
  3557  04B6  0873               	movf	??_Ds_Procese_displays,w
  3558  04B7  0081               	movwf	1
  3559  04B8                     l2284:
  3560                           
  3561                           ;displays.c: 252:                 dsp->tempE=dsp->tiempoEncendido;
  3562  04B8  0875               	movf	Ds_Procese_displays@dsp,w
  3563  04B9  3E04               	addlw	4
  3564  04BA  0086               	movwf	6
  3565  04BB  0187               	clrf	7
  3566  04BC  0801               	movf	1,w
  3567  04BD  00F3               	movwf	??_Ds_Procese_displays
  3568  04BE  0875               	movf	Ds_Procese_displays@dsp,w
  3569  04BF  3E06               	addlw	6
  3570  04C0  0086               	movwf	6
  3571  04C1  0187               	clrf	7
  3572  04C2  0873               	movf	??_Ds_Procese_displays,w
  3573  04C3  0081               	movwf	1
  3574  04C4                     l2286:
  3575                           
  3576                           ;displays.c: 255:             Ds_Encienda_Disp(0);
  3577  04C4  3000               	movlw	0
  3578  04C5  3180  2025  3184   	fcall	_Ds_Encienda_Disp
  3579                           
  3580                           ;displays.c: 256:         break;
  3581  04C8  2D9B               	goto	l509
  3582  04C9                     l2288:
  3583                           
  3584                           ;displays.c: 259:             --(dsp->tempE);
  3585  04C9  0875               	movf	Ds_Procese_displays@dsp,w
  3586  04CA  3E06               	addlw	6
  3587  04CB  0086               	movwf	6
  3588  04CC  0187               	clrf	7
  3589  04CD  3001               	movlw	1
  3590  04CE  0281               	subwf	1,f
  3591                           
  3592                           ;displays.c: 260:             if(!(dsp->tempE)){
  3593  04CF  0875               	movf	Ds_Procese_displays@dsp,w
  3594  04D0  3E06               	addlw	6
  3595  04D1  0086               	movwf	6
  3596  04D2  0187               	clrf	7
  3597  04D3  0801               	movf	1,w
  3598  04D4  1D03               	btfss	3,2
  3599  04D5  2CD7               	goto	u1641
  3600  04D6  2CD8               	goto	u1640
  3601  04D7                     u1641:
  3602  04D7  2CEB               	goto	l2294
  3603  04D8                     u1640:
  3604  04D8                     l2290:
  3605                           
  3606                           ;displays.c: 261:                 dsp->estados =4;
  3607  04D8  3004               	movlw	4
  3608  04D9  00F3               	movwf	??_Ds_Procese_displays
  3609  04DA  0875               	movf	Ds_Procese_displays@dsp,w
  3610  04DB  0086               	movwf	6
  3611  04DC  0187               	clrf	7
  3612  04DD  0873               	movf	??_Ds_Procese_displays,w
  3613  04DE  0081               	movwf	1
  3614  04DF                     l2292:
  3615                           
  3616                           ;displays.c: 262:                 dsp->tempA=dsp->tiempoApagado;
  3617  04DF  0875               	movf	Ds_Procese_displays@dsp,w
  3618  04E0  3E05               	addlw	5
  3619  04E1  0086               	movwf	6
  3620  04E2  0187               	clrf	7
  3621  04E3  0801               	movf	1,w
  3622  04E4  00F3               	movwf	??_Ds_Procese_displays
  3623  04E5  0875               	movf	Ds_Procese_displays@dsp,w
  3624  04E6  3E07               	addlw	7
  3625  04E7  0086               	movwf	6
  3626  04E8  0187               	clrf	7
  3627  04E9  0873               	movf	??_Ds_Procese_displays,w
  3628  04EA  0081               	movwf	1
  3629  04EB                     l2294:
  3630                           
  3631                           ;displays.c: 265:             Ds_Encienda_Disp(2);
  3632  04EB  3002               	movlw	2
  3633  04EC  3180  2025  3184   	fcall	_Ds_Encienda_Disp
  3634  04EF                     l2296:
  3635                           
  3636                           ;displays.c: 266:             Ds_BCD(dsp->D2);
  3637  04EF  0875               	movf	Ds_Procese_displays@dsp,w
  3638  04F0  3E02               	addlw	2
  3639  04F1  0086               	movwf	6
  3640  04F2  0187               	clrf	7
  3641  04F3  0801               	movf	1,w
  3642  04F4  3182  226A  3184   	fcall	_Ds_BCD
  3643                           
  3644                           ;displays.c: 267:         break;
  3645  04F7  2D9B               	goto	l509
  3646  04F8                     l2298:
  3647                           
  3648                           ;displays.c: 270:             --(dsp->tempA);
  3649  04F8  0875               	movf	Ds_Procese_displays@dsp,w
  3650  04F9  3E07               	addlw	7
  3651  04FA  0086               	movwf	6
  3652  04FB  0187               	clrf	7
  3653  04FC  3001               	movlw	1
  3654  04FD  0281               	subwf	1,f
  3655                           
  3656                           ;displays.c: 271:             if(!(dsp->tempA)){
  3657  04FE  0875               	movf	Ds_Procese_displays@dsp,w
  3658  04FF  3E07               	addlw	7
  3659  0500  0086               	movwf	6
  3660  0501  0187               	clrf	7
  3661  0502  0801               	movf	1,w
  3662  0503  1D03               	btfss	3,2
  3663  0504  2D06               	goto	u1651
  3664  0505  2D07               	goto	u1650
  3665  0506                     u1651:
  3666  0506  2D1A               	goto	l2304
  3667  0507                     u1650:
  3668  0507                     l2300:
  3669                           
  3670                           ;displays.c: 272:                 dsp->estados =5;
  3671  0507  3005               	movlw	5
  3672  0508  00F3               	movwf	??_Ds_Procese_displays
  3673  0509  0875               	movf	Ds_Procese_displays@dsp,w
  3674  050A  0086               	movwf	6
  3675  050B  0187               	clrf	7
  3676  050C  0873               	movf	??_Ds_Procese_displays,w
  3677  050D  0081               	movwf	1
  3678  050E                     l2302:
  3679                           
  3680                           ;displays.c: 273:                 dsp->tempE=dsp->tiempoEncendido;
  3681  050E  0875               	movf	Ds_Procese_displays@dsp,w
  3682  050F  3E04               	addlw	4
  3683  0510  0086               	movwf	6
  3684  0511  0187               	clrf	7
  3685  0512  0801               	movf	1,w
  3686  0513  00F3               	movwf	??_Ds_Procese_displays
  3687  0514  0875               	movf	Ds_Procese_displays@dsp,w
  3688  0515  3E06               	addlw	6
  3689  0516  0086               	movwf	6
  3690  0517  0187               	clrf	7
  3691  0518  0873               	movf	??_Ds_Procese_displays,w
  3692  0519  0081               	movwf	1
  3693  051A                     l2304:
  3694                           
  3695                           ;displays.c: 276:             Ds_Encienda_Disp(0);
  3696  051A  3000               	movlw	0
  3697  051B  3180  2025  3184   	fcall	_Ds_Encienda_Disp
  3698                           
  3699                           ;displays.c: 277:         break;
  3700  051E  2D9B               	goto	l509
  3701  051F                     l2306:
  3702                           
  3703                           ;displays.c: 280:             --(dsp->tempE);
  3704  051F  0875               	movf	Ds_Procese_displays@dsp,w
  3705  0520  3E06               	addlw	6
  3706  0521  0086               	movwf	6
  3707  0522  0187               	clrf	7
  3708  0523  3001               	movlw	1
  3709  0524  0281               	subwf	1,f
  3710                           
  3711                           ;displays.c: 281:             if(!(dsp->tempE)){
  3712  0525  0875               	movf	Ds_Procese_displays@dsp,w
  3713  0526  3E06               	addlw	6
  3714  0527  0086               	movwf	6
  3715  0528  0187               	clrf	7
  3716  0529  0801               	movf	1,w
  3717  052A  1D03               	btfss	3,2
  3718  052B  2D2D               	goto	u1661
  3719  052C  2D2E               	goto	u1660
  3720  052D                     u1661:
  3721  052D  2D41               	goto	l2312
  3722  052E                     u1660:
  3723  052E                     l2308:
  3724                           
  3725                           ;displays.c: 282:                 dsp->estados =6;
  3726  052E  3006               	movlw	6
  3727  052F  00F3               	movwf	??_Ds_Procese_displays
  3728  0530  0875               	movf	Ds_Procese_displays@dsp,w
  3729  0531  0086               	movwf	6
  3730  0532  0187               	clrf	7
  3731  0533  0873               	movf	??_Ds_Procese_displays,w
  3732  0534  0081               	movwf	1
  3733  0535                     l2310:
  3734                           
  3735                           ;displays.c: 283:                 dsp->tempA=dsp->tiempoApagado;
  3736  0535  0875               	movf	Ds_Procese_displays@dsp,w
  3737  0536  3E05               	addlw	5
  3738  0537  0086               	movwf	6
  3739  0538  0187               	clrf	7
  3740  0539  0801               	movf	1,w
  3741  053A  00F3               	movwf	??_Ds_Procese_displays
  3742  053B  0875               	movf	Ds_Procese_displays@dsp,w
  3743  053C  3E07               	addlw	7
  3744  053D  0086               	movwf	6
  3745  053E  0187               	clrf	7
  3746  053F  0873               	movf	??_Ds_Procese_displays,w
  3747  0540  0081               	movwf	1
  3748  0541                     l2312:
  3749                           
  3750                           ;displays.c: 286:             Ds_Encienda_Disp(3);
  3751  0541  3003               	movlw	3
  3752  0542  3180  2025  3184   	fcall	_Ds_Encienda_Disp
  3753  0545                     l2314:
  3754                           
  3755                           ;displays.c: 287:             Ds_BCD(dsp->D3);
  3756  0545  0875               	movf	Ds_Procese_displays@dsp,w
  3757  0546  3E03               	addlw	3
  3758  0547  0086               	movwf	6
  3759  0548  0187               	clrf	7
  3760  0549  0801               	movf	1,w
  3761  054A  3182  226A  3184   	fcall	_Ds_BCD
  3762                           
  3763                           ;displays.c: 288:         break;
  3764  054D  2D9B               	goto	l509
  3765  054E                     l2316:
  3766                           
  3767                           ;displays.c: 291:             --(dsp->tempA);
  3768  054E  0875               	movf	Ds_Procese_displays@dsp,w
  3769  054F  3E07               	addlw	7
  3770  0550  0086               	movwf	6
  3771  0551  0187               	clrf	7
  3772  0552  3001               	movlw	1
  3773  0553  0281               	subwf	1,f
  3774                           
  3775                           ;displays.c: 292:             if(!(dsp->tempA)){
  3776  0554  0875               	movf	Ds_Procese_displays@dsp,w
  3777  0555  3E07               	addlw	7
  3778  0556  0086               	movwf	6
  3779  0557  0187               	clrf	7
  3780  0558  0801               	movf	1,w
  3781  0559  1D03               	btfss	3,2
  3782  055A  2D5C               	goto	u1671
  3783  055B  2D5D               	goto	u1670
  3784  055C                     u1671:
  3785  055C  2D6E               	goto	l2322
  3786  055D                     u1670:
  3787  055D                     l2318:
  3788                           
  3789                           ;displays.c: 293:                 dsp->estados = 1;
  3790  055D  0875               	movf	Ds_Procese_displays@dsp,w
  3791  055E  0086               	movwf	6
  3792  055F  0187               	clrf	7
  3793  0560  0181               	clrf	1
  3794  0561  0A81               	incf	1,f
  3795  0562                     l2320:
  3796                           
  3797                           ;displays.c: 294:                 dsp->tempE=dsp->tiempoEncendido;
  3798  0562  0875               	movf	Ds_Procese_displays@dsp,w
  3799  0563  3E04               	addlw	4
  3800  0564  0086               	movwf	6
  3801  0565  0187               	clrf	7
  3802  0566  0801               	movf	1,w
  3803  0567  00F3               	movwf	??_Ds_Procese_displays
  3804  0568  0875               	movf	Ds_Procese_displays@dsp,w
  3805  0569  3E06               	addlw	6
  3806  056A  0086               	movwf	6
  3807  056B  0187               	clrf	7
  3808  056C  0873               	movf	??_Ds_Procese_displays,w
  3809  056D  0081               	movwf	1
  3810  056E                     l2322:
  3811                           
  3812                           ;displays.c: 297:             Ds_Encienda_Disp(0);
  3813  056E  3000               	movlw	0
  3814  056F  3180  2025  3184   	fcall	_Ds_Encienda_Disp
  3815                           
  3816                           ;displays.c: 298:         break;
  3817  0572  2D9B               	goto	l509
  3818  0573                     l2324:
  3819                           
  3820                           ;displays.c: 303:             Ds_BCD(10);
  3821  0573  300A               	movlw	10
  3822  0574  3182  226A  3184   	fcall	_Ds_BCD
  3823                           
  3824                           ;displays.c: 304:    Ds_Encienda_Disp(2);
  3825  0577  3002               	movlw	2
  3826  0578  3180  2025  3184   	fcall	_Ds_Encienda_Disp
  3827  057B  2D73               	goto	l2324
  3828  057C                     l2326:
  3829  057C  0875               	movf	Ds_Procese_displays@dsp,w
  3830  057D  0086               	movwf	6
  3831  057E  0187               	clrf	7
  3832  057F  0801               	movf	1,w
  3833  0580  00F3               	movwf	??_Ds_Procese_displays
  3834  0581  01F4               	clrf	??_Ds_Procese_displays+1
  3835                           
  3836                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3837                           ; Switch size 1, requested type "simple"
  3838                           ; Number of cases is 1, Range of values is 0 to 0
  3839                           ; switch strategies available:
  3840                           ; Name         Instructions Cycles
  3841                           ; simple_byte            4     3 (average)
  3842                           ; direct_byte            8     6 (fixed)
  3843                           ; jumptable            260     6 (fixed)
  3844                           ;	Chosen strategy is simple_byte
  3845  0582  0874               	movf	??_Ds_Procese_displays+1,w
  3846  0583  3A00               	xorlw	0	; case 0
  3847  0584  1903               	skipnz
  3848  0585  2D87               	goto	l2478
  3849  0586  2D73               	goto	l2324
  3850  0587                     l2478:
  3851                           
  3852                           ; Switch size 1, requested type "simple"
  3853                           ; Number of cases is 6, Range of values is 1 to 6
  3854                           ; switch strategies available:
  3855                           ; Name         Instructions Cycles
  3856                           ; simple_byte           19    10 (average)
  3857                           ; direct_byte           21     9 (fixed)
  3858                           ; jumptable            263     9 (fixed)
  3859                           ;	Chosen strategy is simple_byte
  3860  0587  0873               	movf	??_Ds_Procese_displays,w
  3861  0588  3A01               	xorlw	1	; case 1
  3862  0589  1903               	skipnz
  3863  058A  2C74               	goto	l2270
  3864  058B  3A03               	xorlw	3	; case 2
  3865  058C  1903               	skipnz
  3866  058D  2CA2               	goto	l2280
  3867  058E  3A01               	xorlw	1	; case 3
  3868  058F  1903               	skipnz
  3869  0590  2CC9               	goto	l2288
  3870  0591  3A07               	xorlw	7	; case 4
  3871  0592  1903               	skipnz
  3872  0593  2CF8               	goto	l2298
  3873  0594  3A01               	xorlw	1	; case 5
  3874  0595  1903               	skipnz
  3875  0596  2D1F               	goto	l2306
  3876  0597  3A03               	xorlw	3	; case 6
  3877  0598  1903               	skipnz
  3878  0599  2D4E               	goto	l2316
  3879  059A  2D73               	goto	l2324
  3880  059B                     l509:
  3881  059B  0008               	return
  3882  059C                     __end_of_Ds_Procese_displays:
  3883                           
  3884                           	psect	text20
  3885  0025                     __ptext20:	
  3886 ;; *************** function _Ds_Encienda_Disp *****************
  3887 ;; Defined at:
  3888 ;;		line 20 in file "displays.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  dispNum         1    wreg     unsigned char 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  dispNum         1    2[COMMON] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3902 ;;      Params:         0       0       0       0       0       0
  3903 ;;      Locals:         1       0       0       0       0       0
  3904 ;;      Temps:          2       0       0       0       0       0
  3905 ;;      Totals:         3       0       0       0       0       0
  3906 ;;Total ram usage:        3 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_Ds_Procese_displays
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           
  3916                           ;psect for function _Ds_Encienda_Disp
  3917  0025                     _Ds_Encienda_Disp:
  3918                           
  3919                           ;incstack = 0
  3920                           ; Regs used in _Ds_Encienda_Disp: [wreg-fsr0h+status,2+status,0]
  3921                           ;Ds_Encienda_Disp@dispNum stored from wreg
  3922  0025  00F2               	movwf	Ds_Encienda_Disp@dispNum
  3923  0026                     l1898:
  3924                           
  3925                           ;displays.c: 22:     switch (dispNum){
  3926  0026  283B               	goto	l1902
  3927  0027                     l284:	
  3928                           ;displays.c: 26:             do { LATBbits.LATB0 = 0; } while(0);
  3929                           
  3930  0027  0022               	movlb	2	; select bank2
  3931  0028  100D               	bcf	13,0	;volatile
  3932  0029                     l286:	
  3933                           ;displays.c: 27:             do { LATBbits.LATB3 = 0; } while(0);
  3934                           
  3935  0029  118D               	bcf	13,3	;volatile
  3936  002A                     l288:	
  3937                           ;displays.c: 28:             do { LATBbits.LATB4 = 0; } while(0);
  3938                           
  3939  002A  120D               	bcf	13,4	;volatile
  3940  002B  2851               	goto	l312
  3941  002C                     l292:	
  3942                           ;displays.c: 35:             do { LATBbits.LATB0 = 1; } while(0);
  3943                           
  3944  002C  0022               	movlb	2	; select bank2
  3945  002D  140D               	bsf	13,0	;volatile
  3946  002E                     l294:	
  3947                           ;displays.c: 36:             do { LATBbits.LATB3 = 0; } while(0);
  3948                           
  3949  002E  118D               	bcf	13,3	;volatile
  3950  002F                     l296:	
  3951                           ;displays.c: 37:             do { LATBbits.LATB4 = 0; } while(0);
  3952                           
  3953  002F  120D               	bcf	13,4	;volatile
  3954  0030  2851               	goto	l312
  3955  0031                     l299:	
  3956                           ;displays.c: 42:             do { LATBbits.LATB3 = 1; } while(0);
  3957                           
  3958  0031  0022               	movlb	2	; select bank2
  3959  0032  158D               	bsf	13,3	;volatile
  3960  0033                     l301:	
  3961                           ;displays.c: 43:             do { LATBbits.LATB0 = 0; } while(0);
  3962                           
  3963  0033  100D               	bcf	13,0	;volatile
  3964  0034                     l303:	
  3965                           ;displays.c: 44:             do { LATBbits.LATB4 = 0; } while(0);
  3966                           
  3967  0034  120D               	bcf	13,4	;volatile
  3968  0035  2851               	goto	l312
  3969  0036                     l306:	
  3970                           ;displays.c: 51:             do { LATBbits.LATB4 = 1; } while(0);
  3971                           
  3972  0036  0022               	movlb	2	; select bank2
  3973  0037  160D               	bsf	13,4	;volatile
  3974  0038                     l308:	
  3975                           ;displays.c: 52:             do { LATBbits.LATB0 = 0; } while(0);
  3976                           
  3977  0038  100D               	bcf	13,0	;volatile
  3978  0039                     l310:	
  3979                           ;displays.c: 53:             do { LATBbits.LATB3 = 0; } while(0);
  3980                           
  3981  0039  118D               	bcf	13,3	;volatile
  3982  003A  2851               	goto	l312
  3983  003B                     l1902:
  3984  003B  0872               	movf	Ds_Encienda_Disp@dispNum,w
  3985  003C  00F0               	movwf	??_Ds_Encienda_Disp
  3986  003D  01F1               	clrf	??_Ds_Encienda_Disp+1
  3987                           
  3988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3989                           ; Switch size 1, requested type "simple"
  3990                           ; Number of cases is 1, Range of values is 0 to 0
  3991                           ; switch strategies available:
  3992                           ; Name         Instructions Cycles
  3993                           ; simple_byte            4     3 (average)
  3994                           ; direct_byte            8     6 (fixed)
  3995                           ; jumptable            260     6 (fixed)
  3996                           ;	Chosen strategy is simple_byte
  3997  003E  0871               	movf	??_Ds_Encienda_Disp+1,w
  3998  003F  3A00               	xorlw	0	; case 0
  3999  0040  1903               	skipnz
  4000  0041  2843               	goto	l2480
  4001  0042  2851               	goto	l312
  4002  0043                     l2480:
  4003                           
  4004                           ; Switch size 1, requested type "simple"
  4005                           ; Number of cases is 4, Range of values is 0 to 3
  4006                           ; switch strategies available:
  4007                           ; Name         Instructions Cycles
  4008                           ; simple_byte           13     7 (average)
  4009                           ; direct_byte           14     6 (fixed)
  4010                           ; jumptable            260     6 (fixed)
  4011                           ;	Chosen strategy is simple_byte
  4012  0043  0870               	movf	??_Ds_Encienda_Disp,w
  4013  0044  3A00               	xorlw	0	; case 0
  4014  0045  1903               	skipnz
  4015  0046  2827               	goto	l284
  4016  0047  3A01               	xorlw	1	; case 1
  4017  0048  1903               	skipnz
  4018  0049  282C               	goto	l292
  4019  004A  3A03               	xorlw	3	; case 2
  4020  004B  1903               	skipnz
  4021  004C  2831               	goto	l299
  4022  004D  3A01               	xorlw	1	; case 3
  4023  004E  1903               	skipnz
  4024  004F  2836               	goto	l306
  4025  0050  2851               	goto	l312
  4026  0051                     l312:
  4027  0051  0008               	return
  4028  0052                     __end_of_Ds_Encienda_Disp:
  4029                           
  4030                           	psect	text21
  4031  026A                     __ptext21:	
  4032 ;; *************** function _Ds_BCD *****************
  4033 ;; Defined at:
  4034 ;;		line 60 in file "displays.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  segmento        1    wreg     unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  segmento        1    2[COMMON] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4048 ;;      Params:         0       0       0       0       0       0
  4049 ;;      Locals:         1       0       0       0       0       0
  4050 ;;      Temps:          2       0       0       0       0       0
  4051 ;;      Totals:         3       0       0       0       0       0
  4052 ;;Total ram usage:        3 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_Ds_Procese_displays
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           
  4062                           ;psect for function _Ds_BCD
  4063  026A                     _Ds_BCD:
  4064                           
  4065                           ;incstack = 0
  4066                           ; Regs used in _Ds_BCD: [wreg-fsr0h+status,2+status,0]
  4067                           ;Ds_BCD@segmento stored from wreg
  4068  026A  00F2               	movwf	Ds_BCD@segmento
  4069  026B                     l1908:
  4070                           
  4071                           ;displays.c: 62:     switch (segmento){
  4072  026B  2ACF               	goto	l1912
  4073  026C                     l317:	
  4074                           ;displays.c: 66:             do { LATAbits.LATA0 = 1; } while(0);
  4075                           
  4076  026C  0022               	movlb	2	; select bank2
  4077  026D  140C               	bsf	12,0	;volatile
  4078  026E                     l319:	
  4079                           ;displays.c: 67:             do { LATAbits.LATA1 = 1; } while(0);
  4080                           
  4081  026E  148C               	bsf	12,1	;volatile
  4082  026F                     l321:	
  4083                           ;displays.c: 68:             do { LATAbits.LATA2 = 1; } while(0);
  4084                           
  4085  026F  150C               	bsf	12,2	;volatile
  4086  0270                     l323:	
  4087                           ;displays.c: 69:             do { LATAbits.LATA3 = 1; } while(0);
  4088                           
  4089  0270  158C               	bsf	12,3	;volatile
  4090  0271                     l325:	
  4091                           ;displays.c: 70:             do { LATAbits.LATA4 = 1; } while(0);
  4092                           
  4093  0271  160C               	bsf	12,4	;volatile
  4094  0272                     l327:	
  4095                           ;displays.c: 71:             do { LATAbits.LATA7 = 1; } while(0);
  4096                           
  4097  0272  178C               	bsf	12,7	;volatile
  4098  0273                     l329:	
  4099                           ;displays.c: 72:             do { LATAbits.LATA6 = 0; } while(0);
  4100                           
  4101  0273  130C               	bcf	12,6	;volatile
  4102  0274  2AFA               	goto	l482
  4103  0275                     l333:	
  4104                           ;displays.c: 79:             do { LATAbits.LATA0 = 0; } while(0);
  4105                           
  4106  0275  0022               	movlb	2	; select bank2
  4107  0276  100C               	bcf	12,0	;volatile
  4108  0277                     l335:	
  4109                           ;displays.c: 80:             do { LATAbits.LATA1 = 1; } while(0);
  4110                           
  4111  0277  148C               	bsf	12,1	;volatile
  4112  0278                     l337:	
  4113                           ;displays.c: 81:             do { LATAbits.LATA2 = 1; } while(0);
  4114                           
  4115  0278  150C               	bsf	12,2	;volatile
  4116  0279                     l339:	
  4117                           ;displays.c: 82:             do { LATAbits.LATA3 = 0; } while(0);
  4118                           
  4119  0279  118C               	bcf	12,3	;volatile
  4120  027A                     l341:	
  4121                           ;displays.c: 83:             do { LATAbits.LATA4 = 0; } while(0);
  4122                           
  4123  027A  120C               	bcf	12,4	;volatile
  4124  027B                     l343:	
  4125                           ;displays.c: 84:             do { LATAbits.LATA7 = 0; } while(0);
  4126                           
  4127  027B  138C               	bcf	12,7	;volatile
  4128  027C                     l345:	
  4129                           ;displays.c: 85:             do { LATAbits.LATA6 = 0; } while(0);
  4130                           
  4131  027C  130C               	bcf	12,6	;volatile
  4132  027D  2AFA               	goto	l482
  4133  027E                     l348:	
  4134                           ;displays.c: 93:             do { LATAbits.LATA0 = 1; } while(0);
  4135                           
  4136  027E  0022               	movlb	2	; select bank2
  4137  027F  140C               	bsf	12,0	;volatile
  4138  0280                     l350:	
  4139                           ;displays.c: 94:             do { LATAbits.LATA1 = 1; } while(0);
  4140                           
  4141  0280  148C               	bsf	12,1	;volatile
  4142  0281                     l352:	
  4143                           ;displays.c: 95:             do { LATAbits.LATA2 = 0; } while(0);
  4144                           
  4145  0281  110C               	bcf	12,2	;volatile
  4146  0282                     l354:	
  4147                           ;displays.c: 96:             do { LATAbits.LATA3 = 1; } while(0);
  4148                           
  4149  0282  158C               	bsf	12,3	;volatile
  4150  0283                     l356:	
  4151                           ;displays.c: 97:             do { LATAbits.LATA4 = 1; } while(0);
  4152                           
  4153  0283  160C               	bsf	12,4	;volatile
  4154  0284                     l358:	
  4155                           ;displays.c: 98:             do { LATAbits.LATA7 = 0; } while(0);
  4156                           
  4157  0284  138C               	bcf	12,7	;volatile
  4158  0285                     l360:	
  4159                           ;displays.c: 99:             do { LATAbits.LATA6 = 1; } while(0);
  4160                           
  4161  0285  170C               	bsf	12,6	;volatile
  4162  0286  2AFA               	goto	l482
  4163  0287                     l363:	
  4164                           ;displays.c: 107:             do { LATAbits.LATA0 = 1; } while(0);
  4165                           
  4166  0287  0022               	movlb	2	; select bank2
  4167  0288  140C               	bsf	12,0	;volatile
  4168  0289                     l365:	
  4169                           ;displays.c: 108:             do { LATAbits.LATA1 = 1; } while(0);
  4170                           
  4171  0289  148C               	bsf	12,1	;volatile
  4172  028A                     l367:	
  4173                           ;displays.c: 109:             do { LATAbits.LATA2 = 1; } while(0);
  4174                           
  4175  028A  150C               	bsf	12,2	;volatile
  4176  028B                     l369:	
  4177                           ;displays.c: 110:             do { LATAbits.LATA3 = 1; } while(0);
  4178                           
  4179  028B  158C               	bsf	12,3	;volatile
  4180  028C                     l371:	
  4181                           ;displays.c: 111:             do { LATAbits.LATA4 = 0; } while(0);
  4182                           
  4183  028C  120C               	bcf	12,4	;volatile
  4184  028D                     l373:	
  4185                           ;displays.c: 112:             do { LATAbits.LATA7 = 0; } while(0);
  4186                           
  4187  028D  138C               	bcf	12,7	;volatile
  4188  028E                     l375:	
  4189                           ;displays.c: 113:             do { LATAbits.LATA6 = 1; } while(0);
  4190                           
  4191  028E  170C               	bsf	12,6	;volatile
  4192  028F  2AFA               	goto	l482
  4193  0290                     l378:	
  4194                           ;displays.c: 122:             do { LATAbits.LATA0 = 0; } while(0);
  4195                           
  4196  0290  0022               	movlb	2	; select bank2
  4197  0291  100C               	bcf	12,0	;volatile
  4198  0292                     l380:	
  4199                           ;displays.c: 123:             do { LATAbits.LATA1 = 1; } while(0);
  4200                           
  4201  0292  148C               	bsf	12,1	;volatile
  4202  0293                     l382:	
  4203                           ;displays.c: 124:             do { LATAbits.LATA2 = 1; } while(0);
  4204                           
  4205  0293  150C               	bsf	12,2	;volatile
  4206  0294                     l384:	
  4207                           ;displays.c: 125:             do { LATAbits.LATA3 = 0; } while(0);
  4208                           
  4209  0294  118C               	bcf	12,3	;volatile
  4210  0295                     l386:	
  4211                           ;displays.c: 126:             do { LATAbits.LATA4 = 0; } while(0);
  4212                           
  4213  0295  120C               	bcf	12,4	;volatile
  4214  0296                     l388:	
  4215                           ;displays.c: 127:             do { LATAbits.LATA7 = 1; } while(0);
  4216                           
  4217  0296  178C               	bsf	12,7	;volatile
  4218  0297                     l390:	
  4219                           ;displays.c: 128:             do { LATAbits.LATA6 = 1; } while(0);
  4220                           
  4221  0297  170C               	bsf	12,6	;volatile
  4222  0298  2AFA               	goto	l482
  4223  0299                     l393:	
  4224                           ;displays.c: 135:             do { LATAbits.LATA0 = 1; } while(0);
  4225                           
  4226  0299  0022               	movlb	2	; select bank2
  4227  029A  140C               	bsf	12,0	;volatile
  4228  029B                     l395:	
  4229                           ;displays.c: 136:             do { LATAbits.LATA1 = 0; } while(0);
  4230                           
  4231  029B  108C               	bcf	12,1	;volatile
  4232  029C                     l397:	
  4233                           ;displays.c: 137:             do { LATAbits.LATA2 = 1; } while(0);
  4234                           
  4235  029C  150C               	bsf	12,2	;volatile
  4236  029D                     l399:	
  4237                           ;displays.c: 138:             do { LATAbits.LATA3 = 1; } while(0);
  4238                           
  4239  029D  158C               	bsf	12,3	;volatile
  4240  029E                     l401:	
  4241                           ;displays.c: 139:             do { LATAbits.LATA4 = 0; } while(0);
  4242                           
  4243  029E  120C               	bcf	12,4	;volatile
  4244  029F                     l403:	
  4245                           ;displays.c: 140:             do { LATAbits.LATA7 = 1; } while(0);
  4246                           
  4247  029F  178C               	bsf	12,7	;volatile
  4248  02A0                     l405:	
  4249                           ;displays.c: 141:             do { LATAbits.LATA6 = 1; } while(0);
  4250                           
  4251  02A0  170C               	bsf	12,6	;volatile
  4252  02A1  2AFA               	goto	l482
  4253  02A2                     l408:	
  4254                           ;displays.c: 149:             do { LATAbits.LATA0 = 1; } while(0);
  4255                           
  4256  02A2  0022               	movlb	2	; select bank2
  4257  02A3  140C               	bsf	12,0	;volatile
  4258  02A4                     l410:	
  4259                           ;displays.c: 150:             do { LATAbits.LATA1 = 0; } while(0);
  4260                           
  4261  02A4  108C               	bcf	12,1	;volatile
  4262  02A5                     l412:	
  4263                           ;displays.c: 151:             do { LATAbits.LATA2 = 1; } while(0);
  4264                           
  4265  02A5  150C               	bsf	12,2	;volatile
  4266  02A6                     l414:	
  4267                           ;displays.c: 152:             do { LATAbits.LATA3 = 1; } while(0);
  4268                           
  4269  02A6  158C               	bsf	12,3	;volatile
  4270  02A7                     l416:	
  4271                           ;displays.c: 153:             do { LATAbits.LATA4 = 1; } while(0);
  4272                           
  4273  02A7  160C               	bsf	12,4	;volatile
  4274  02A8                     l418:	
  4275                           ;displays.c: 154:             do { LATAbits.LATA7 = 1; } while(0);
  4276                           
  4277  02A8  178C               	bsf	12,7	;volatile
  4278  02A9                     l420:	
  4279                           ;displays.c: 155:             do { LATAbits.LATA6 = 1; } while(0);
  4280                           
  4281  02A9  170C               	bsf	12,6	;volatile
  4282  02AA  2AFA               	goto	l482
  4283  02AB                     l423:	
  4284                           ;displays.c: 163:             do { LATAbits.LATA0 = 1; } while(0);
  4285                           
  4286  02AB  0022               	movlb	2	; select bank2
  4287  02AC  140C               	bsf	12,0	;volatile
  4288  02AD                     l425:	
  4289                           ;displays.c: 164:             do { LATAbits.LATA1 = 1; } while(0);
  4290                           
  4291  02AD  148C               	bsf	12,1	;volatile
  4292  02AE                     l427:	
  4293                           ;displays.c: 165:             do { LATAbits.LATA2 = 1; } while(0);
  4294                           
  4295  02AE  150C               	bsf	12,2	;volatile
  4296  02AF                     l429:	
  4297                           ;displays.c: 166:             do { LATAbits.LATA3 = 0; } while(0);
  4298                           
  4299  02AF  118C               	bcf	12,3	;volatile
  4300  02B0                     l431:	
  4301                           ;displays.c: 167:             do { LATAbits.LATA4 = 0; } while(0);
  4302                           
  4303  02B0  120C               	bcf	12,4	;volatile
  4304  02B1                     l433:	
  4305                           ;displays.c: 168:             do { LATAbits.LATA7 = 0; } while(0);
  4306                           
  4307  02B1  138C               	bcf	12,7	;volatile
  4308  02B2                     l435:	
  4309                           ;displays.c: 169:             do { LATAbits.LATA6 = 0; } while(0);
  4310                           
  4311  02B2  130C               	bcf	12,6	;volatile
  4312  02B3  2AFA               	goto	l482
  4313  02B4                     l438:	
  4314                           ;displays.c: 177:             do { LATAbits.LATA0 = 1; } while(0);
  4315                           
  4316  02B4  0022               	movlb	2	; select bank2
  4317  02B5  140C               	bsf	12,0	;volatile
  4318  02B6                     l440:	
  4319                           ;displays.c: 178:             do { LATAbits.LATA1 = 1; } while(0);
  4320                           
  4321  02B6  148C               	bsf	12,1	;volatile
  4322  02B7                     l442:	
  4323                           ;displays.c: 179:             do { LATAbits.LATA2 = 1; } while(0);
  4324                           
  4325  02B7  150C               	bsf	12,2	;volatile
  4326  02B8                     l444:	
  4327                           ;displays.c: 180:             do { LATAbits.LATA3 = 1; } while(0);
  4328                           
  4329  02B8  158C               	bsf	12,3	;volatile
  4330  02B9                     l446:	
  4331                           ;displays.c: 181:             do { LATAbits.LATA4 = 1; } while(0);
  4332                           
  4333  02B9  160C               	bsf	12,4	;volatile
  4334  02BA                     l448:	
  4335                           ;displays.c: 182:             do { LATAbits.LATA7 = 1; } while(0);
  4336                           
  4337  02BA  178C               	bsf	12,7	;volatile
  4338  02BB                     l450:	
  4339                           ;displays.c: 183:             do { LATAbits.LATA6 = 1; } while(0);
  4340                           
  4341  02BB  170C               	bsf	12,6	;volatile
  4342  02BC  2AFA               	goto	l482
  4343  02BD                     l453:	
  4344                           ;displays.c: 191:             do { LATAbits.LATA0 = 1; } while(0);
  4345                           
  4346  02BD  0022               	movlb	2	; select bank2
  4347  02BE  140C               	bsf	12,0	;volatile
  4348  02BF                     l455:	
  4349                           ;displays.c: 192:             do { LATAbits.LATA1 = 1; } while(0);
  4350                           
  4351  02BF  148C               	bsf	12,1	;volatile
  4352  02C0                     l457:	
  4353                           ;displays.c: 193:             do { LATAbits.LATA2 = 1; } while(0);
  4354                           
  4355  02C0  150C               	bsf	12,2	;volatile
  4356  02C1                     l459:	
  4357                           ;displays.c: 194:             do { LATAbits.LATA3 = 1; } while(0);
  4358                           
  4359  02C1  158C               	bsf	12,3	;volatile
  4360  02C2                     l461:	
  4361                           ;displays.c: 195:             do { LATAbits.LATA4 = 0; } while(0);
  4362                           
  4363  02C2  120C               	bcf	12,4	;volatile
  4364  02C3                     l463:	
  4365                           ;displays.c: 196:             do { LATAbits.LATA7 = 1; } while(0);
  4366                           
  4367  02C3  178C               	bsf	12,7	;volatile
  4368  02C4                     l465:	
  4369                           ;displays.c: 197:             do { LATAbits.LATA6 = 1; } while(0);
  4370                           
  4371  02C4  170C               	bsf	12,6	;volatile
  4372  02C5  2AFA               	goto	l482
  4373  02C6                     l468:	
  4374                           ;displays.c: 203:       do { LATAbits.LATA0 = 1; } while(0);
  4375                           
  4376  02C6  0022               	movlb	2	; select bank2
  4377  02C7  140C               	bsf	12,0	;volatile
  4378  02C8                     l470:	
  4379                           ;displays.c: 204:       do { LATAbits.LATA1 = 1; } while(0);
  4380                           
  4381  02C8  148C               	bsf	12,1	;volatile
  4382  02C9                     l472:	
  4383                           ;displays.c: 205:       do { LATAbits.LATA2 = 1; } while(0);
  4384                           
  4385  02C9  150C               	bsf	12,2	;volatile
  4386  02CA                     l474:	
  4387                           ;displays.c: 206:       do { LATAbits.LATA3 = 1; } while(0);
  4388                           
  4389  02CA  158C               	bsf	12,3	;volatile
  4390  02CB                     l476:	
  4391                           ;displays.c: 207:             do { LATAbits.LATA4 = 1; } while(0);
  4392                           
  4393  02CB  160C               	bsf	12,4	;volatile
  4394  02CC                     l478:	
  4395                           ;displays.c: 208:             do { LATAbits.LATA7 = 1; } while(0);
  4396                           
  4397  02CC  178C               	bsf	12,7	;volatile
  4398  02CD                     l480:	
  4399                           ;displays.c: 209:       do { LATAbits.LATA7 = 1; } while(0);
  4400                           
  4401  02CD  178C               	bsf	12,7	;volatile
  4402  02CE  2AFA               	goto	l482
  4403  02CF                     l1912:
  4404  02CF  0872               	movf	Ds_BCD@segmento,w
  4405  02D0  00F0               	movwf	??_Ds_BCD
  4406  02D1  01F1               	clrf	??_Ds_BCD+1
  4407                           
  4408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4409                           ; Switch size 1, requested type "simple"
  4410                           ; Number of cases is 1, Range of values is 0 to 0
  4411                           ; switch strategies available:
  4412                           ; Name         Instructions Cycles
  4413                           ; simple_byte            4     3 (average)
  4414                           ; direct_byte            8     6 (fixed)
  4415                           ; jumptable            260     6 (fixed)
  4416                           ;	Chosen strategy is simple_byte
  4417  02D2  0871               	movf	??_Ds_BCD+1,w
  4418  02D3  3A00               	xorlw	0	; case 0
  4419  02D4  1903               	skipnz
  4420  02D5  2AD7               	goto	l2482
  4421  02D6  2AFA               	goto	l482
  4422  02D7                     l2482:
  4423                           
  4424                           ; Switch size 1, requested type "simple"
  4425                           ; Number of cases is 11, Range of values is 0 to 10
  4426                           ; switch strategies available:
  4427                           ; Name         Instructions Cycles
  4428                           ; direct_byte           28     6 (fixed)
  4429                           ; simple_byte           34    18 (average)
  4430                           ; jumptable            260     6 (fixed)
  4431                           ;	Chosen strategy is simple_byte
  4432  02D7  0870               	movf	??_Ds_BCD,w
  4433  02D8  3A00               	xorlw	0	; case 0
  4434  02D9  1903               	skipnz
  4435  02DA  2A6C               	goto	l317
  4436  02DB  3A01               	xorlw	1	; case 1
  4437  02DC  1903               	skipnz
  4438  02DD  2A75               	goto	l333
  4439  02DE  3A03               	xorlw	3	; case 2
  4440  02DF  1903               	skipnz
  4441  02E0  2A7E               	goto	l348
  4442  02E1  3A01               	xorlw	1	; case 3
  4443  02E2  1903               	skipnz
  4444  02E3  2A87               	goto	l363
  4445  02E4  3A07               	xorlw	7	; case 4
  4446  02E5  1903               	skipnz
  4447  02E6  2A90               	goto	l378
  4448  02E7  3A01               	xorlw	1	; case 5
  4449  02E8  1903               	skipnz
  4450  02E9  2A99               	goto	l393
  4451  02EA  3A03               	xorlw	3	; case 6
  4452  02EB  1903               	skipnz
  4453  02EC  2AA2               	goto	l408
  4454  02ED  3A01               	xorlw	1	; case 7
  4455  02EE  1903               	skipnz
  4456  02EF  2AAB               	goto	l423
  4457  02F0  3A0F               	xorlw	15	; case 8
  4458  02F1  1903               	skipnz
  4459  02F2  2AB4               	goto	l438
  4460  02F3  3A01               	xorlw	1	; case 9
  4461  02F4  1903               	skipnz
  4462  02F5  2ABD               	goto	l453
  4463  02F6  3A03               	xorlw	3	; case 10
  4464  02F7  1903               	skipnz
  4465  02F8  2AC6               	goto	l468
  4466  02F9  2AFA               	goto	l482
  4467  02FA                     l482:
  4468  02FA  0008               	return
  4469  02FB                     __end_of_Ds_BCD:
  4470                           
  4471                           	psect	text22
  4472  00FF                     __ptext22:	
  4473 ;; *************** function _Ds_Iniciar_displays *****************
  4474 ;; Defined at:
  4475 ;;		line 9 in file "displays.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  dsp             1    wreg     PTR struct Ds_Display
  4478 ;;		 -> main@seven_seg(8), 
  4479 ;;  d1              1    0[COMMON] unsigned char 
  4480 ;;  d2              1    1[COMMON] unsigned char 
  4481 ;;  d3              1    2[COMMON] unsigned char 
  4482 ;;  tE              1    3[COMMON] unsigned char 
  4483 ;;  tA              1    4[COMMON] unsigned char 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  dsp             1    6[COMMON] PTR struct Ds_Display
  4486 ;;		 -> main@seven_seg(8), 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      void 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4496 ;;      Params:         5       0       0       0       0       0
  4497 ;;      Locals:         1       0       0       0       0       0
  4498 ;;      Temps:          1       0       0       0       0       0
  4499 ;;      Totals:         7       0       0       0       0       0
  4500 ;;Total ram usage:        7 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_main
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           
  4510                           ;psect for function _Ds_Iniciar_displays
  4511  00FF                     _Ds_Iniciar_displays:
  4512                           
  4513                           ;incstack = 0
  4514                           ; Regs used in _Ds_Iniciar_displays: [wreg+fsr1l+fsr1h+status,2+status,0]
  4515                           ;Ds_Iniciar_displays@dsp stored from wreg
  4516  00FF  00F6               	movwf	Ds_Iniciar_displays@dsp
  4517  0100                     l2240:
  4518                           
  4519                           ;displays.c: 10:     dsp->estados=1;
  4520  0100  0876               	movf	Ds_Iniciar_displays@dsp,w
  4521  0101  0086               	movwf	6
  4522  0102  0187               	clrf	7
  4523  0103  0181               	clrf	1
  4524  0104  0A81               	incf	1,f
  4525                           
  4526                           ;displays.c: 11:     dsp->D1=d1;
  4527  0105  0870               	movf	Ds_Iniciar_displays@d1,w
  4528  0106  00F5               	movwf	??_Ds_Iniciar_displays
  4529  0107  0A76               	incf	Ds_Iniciar_displays@dsp,w
  4530  0108  0086               	movwf	6
  4531  0109  0187               	clrf	7
  4532  010A  0875               	movf	??_Ds_Iniciar_displays,w
  4533  010B  0081               	movwf	1
  4534  010C                     l2242:
  4535                           
  4536                           ;displays.c: 12:     dsp->D2=d2;
  4537  010C  0871               	movf	Ds_Iniciar_displays@d2,w
  4538  010D  00F5               	movwf	??_Ds_Iniciar_displays
  4539  010E  0876               	movf	Ds_Iniciar_displays@dsp,w
  4540  010F  3E02               	addlw	2
  4541  0110  0086               	movwf	6
  4542  0111  0187               	clrf	7
  4543  0112  0875               	movf	??_Ds_Iniciar_displays,w
  4544  0113  0081               	movwf	1
  4545  0114                     l2244:
  4546                           
  4547                           ;displays.c: 13:     dsp->D3=d3;
  4548  0114  0872               	movf	Ds_Iniciar_displays@d3,w
  4549  0115  00F5               	movwf	??_Ds_Iniciar_displays
  4550  0116  0876               	movf	Ds_Iniciar_displays@dsp,w
  4551  0117  3E03               	addlw	3
  4552  0118  0086               	movwf	6
  4553  0119  0187               	clrf	7
  4554  011A  0875               	movf	??_Ds_Iniciar_displays,w
  4555  011B  0081               	movwf	1
  4556  011C                     l2246:
  4557                           
  4558                           ;displays.c: 14:     dsp->tiempoEncendido=tE;
  4559  011C  0873               	movf	Ds_Iniciar_displays@tE,w
  4560  011D  00F5               	movwf	??_Ds_Iniciar_displays
  4561  011E  0876               	movf	Ds_Iniciar_displays@dsp,w
  4562  011F  3E04               	addlw	4
  4563  0120  0086               	movwf	6
  4564  0121  0187               	clrf	7
  4565  0122  0875               	movf	??_Ds_Iniciar_displays,w
  4566  0123  0081               	movwf	1
  4567  0124                     l2248:
  4568                           
  4569                           ;displays.c: 15:     dsp->tiempoApagado=tA;
  4570  0124  0874               	movf	Ds_Iniciar_displays@tA,w
  4571  0125  00F5               	movwf	??_Ds_Iniciar_displays
  4572  0126  0876               	movf	Ds_Iniciar_displays@dsp,w
  4573  0127  3E05               	addlw	5
  4574  0128  0086               	movwf	6
  4575  0129  0187               	clrf	7
  4576  012A  0875               	movf	??_Ds_Iniciar_displays,w
  4577  012B  0081               	movwf	1
  4578  012C                     l2250:
  4579                           
  4580                           ;displays.c: 16:     dsp->tempE=tE;
  4581  012C  0873               	movf	Ds_Iniciar_displays@tE,w
  4582  012D  00F5               	movwf	??_Ds_Iniciar_displays
  4583  012E  0876               	movf	Ds_Iniciar_displays@dsp,w
  4584  012F  3E06               	addlw	6
  4585  0130  0086               	movwf	6
  4586  0131  0187               	clrf	7
  4587  0132  0875               	movf	??_Ds_Iniciar_displays,w
  4588  0133  0081               	movwf	1
  4589  0134                     l2252:
  4590                           
  4591                           ;displays.c: 17:     dsp->tempA=tA;
  4592  0134  0874               	movf	Ds_Iniciar_displays@tA,w
  4593  0135  00F5               	movwf	??_Ds_Iniciar_displays
  4594  0136  0876               	movf	Ds_Iniciar_displays@dsp,w
  4595  0137  3E07               	addlw	7
  4596  0138  0086               	movwf	6
  4597  0139  0187               	clrf	7
  4598  013A  0875               	movf	??_Ds_Iniciar_displays,w
  4599  013B  0081               	movwf	1
  4600  013C                     l279:
  4601  013C  0008               	return
  4602  013D                     __end_of_Ds_Iniciar_displays:
  4603                           
  4604                           	psect	text23
  4605  013D                     __ptext23:	
  4606 ;; *************** function _Ds_Convertir_en_uni *****************
  4607 ;; Defined at:
  4608 ;;		line 216 in file "displays.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  dsp             1    wreg     PTR struct Ds_Display
  4611 ;;		 -> main@seven_seg(8), 
  4612 ;;  voltaje         2    8[COMMON] unsigned short 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  dsp             1   11[COMMON] PTR struct Ds_Display
  4615 ;;		 -> main@seven_seg(8), 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4625 ;;      Params:         2       0       0       0       0       0
  4626 ;;      Locals:         1       0       0       0       0       0
  4627 ;;      Temps:          1       0       0       0       0       0
  4628 ;;      Totals:         4       0       0       0       0       0
  4629 ;;Total ram usage:        4 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; Hardware stack levels required when called:    1
  4632 ;; This function calls:
  4633 ;;		___lwdiv
  4634 ;;		___lwmod
  4635 ;; This function is called by:
  4636 ;;		_main
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function _Ds_Convertir_en_uni
  4642  013D                     _Ds_Convertir_en_uni:
  4643                           
  4644                           ;incstack = 0
  4645                           ; Regs used in _Ds_Convertir_en_uni: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4646                           ;Ds_Convertir_en_uni@dsp stored from wreg
  4647  013D  00FB               	movwf	Ds_Convertir_en_uni@dsp
  4648  013E                     l2346:
  4649                           
  4650                           ;displays.c: 217:  dsp->D1 = voltaje % 10;
  4651  013E  300A               	movlw	10
  4652  013F  00F0               	movwf	___lwmod@divisor
  4653  0140  3000               	movlw	0
  4654  0141  00F1               	movwf	___lwmod@divisor+1
  4655  0142  0879               	movf	Ds_Convertir_en_uni@voltaje+1,w
  4656  0143  00F3               	movwf	___lwmod@dividend+1
  4657  0144  0878               	movf	Ds_Convertir_en_uni@voltaje,w
  4658  0145  00F2               	movwf	___lwmod@dividend
  4659  0146  3180  2052  3181   	fcall	___lwmod
  4660  0149  0870               	movf	?___lwmod,w
  4661  014A  00FA               	movwf	??_Ds_Convertir_en_uni
  4662  014B  0A7B               	incf	Ds_Convertir_en_uni@dsp,w
  4663  014C  0086               	movwf	6
  4664  014D  0187               	clrf	7
  4665  014E  087A               	movf	??_Ds_Convertir_en_uni,w
  4666  014F  0081               	movwf	1
  4667  0150                     l2348:
  4668                           
  4669                           ;displays.c: 218:  voltaje = voltaje/10;
  4670  0150  300A               	movlw	10
  4671  0151  00F0               	movwf	___lwdiv@divisor
  4672  0152  3000               	movlw	0
  4673  0153  00F1               	movwf	___lwdiv@divisor+1
  4674  0154  0879               	movf	Ds_Convertir_en_uni@voltaje+1,w
  4675  0155  00F3               	movwf	___lwdiv@dividend+1
  4676  0156  0878               	movf	Ds_Convertir_en_uni@voltaje,w
  4677  0157  00F2               	movwf	___lwdiv@dividend
  4678  0158  3180  2086  3181   	fcall	___lwdiv
  4679  015B  0871               	movf	?___lwdiv+1,w
  4680  015C  00F9               	movwf	Ds_Convertir_en_uni@voltaje+1
  4681  015D  0870               	movf	?___lwdiv,w
  4682  015E  00F8               	movwf	Ds_Convertir_en_uni@voltaje
  4683  015F                     l2350:
  4684                           
  4685                           ;displays.c: 219:  dsp->D2 = voltaje % 10;
  4686  015F  300A               	movlw	10
  4687  0160  00F0               	movwf	___lwmod@divisor
  4688  0161  3000               	movlw	0
  4689  0162  00F1               	movwf	___lwmod@divisor+1
  4690  0163  0879               	movf	Ds_Convertir_en_uni@voltaje+1,w
  4691  0164  00F3               	movwf	___lwmod@dividend+1
  4692  0165  0878               	movf	Ds_Convertir_en_uni@voltaje,w
  4693  0166  00F2               	movwf	___lwmod@dividend
  4694  0167  3180  2052  3181   	fcall	___lwmod
  4695  016A  0870               	movf	?___lwmod,w
  4696  016B  00FA               	movwf	??_Ds_Convertir_en_uni
  4697  016C  087B               	movf	Ds_Convertir_en_uni@dsp,w
  4698  016D  3E02               	addlw	2
  4699  016E  0086               	movwf	6
  4700  016F  0187               	clrf	7
  4701  0170  087A               	movf	??_Ds_Convertir_en_uni,w
  4702  0171  0081               	movwf	1
  4703                           
  4704                           ;displays.c: 220:  voltaje = voltaje/10;
  4705  0172  300A               	movlw	10
  4706  0173  00F0               	movwf	___lwdiv@divisor
  4707  0174  3000               	movlw	0
  4708  0175  00F1               	movwf	___lwdiv@divisor+1
  4709  0176  0879               	movf	Ds_Convertir_en_uni@voltaje+1,w
  4710  0177  00F3               	movwf	___lwdiv@dividend+1
  4711  0178  0878               	movf	Ds_Convertir_en_uni@voltaje,w
  4712  0179  00F2               	movwf	___lwdiv@dividend
  4713  017A  3180  2086  3181   	fcall	___lwdiv
  4714  017D  0871               	movf	?___lwdiv+1,w
  4715  017E  00F9               	movwf	Ds_Convertir_en_uni@voltaje+1
  4716  017F  0870               	movf	?___lwdiv,w
  4717  0180  00F8               	movwf	Ds_Convertir_en_uni@voltaje
  4718  0181                     l2352:
  4719                           
  4720                           ;displays.c: 221:  dsp->D3 = voltaje % 10;
  4721  0181  300A               	movlw	10
  4722  0182  00F0               	movwf	___lwmod@divisor
  4723  0183  3000               	movlw	0
  4724  0184  00F1               	movwf	___lwmod@divisor+1
  4725  0185  0879               	movf	Ds_Convertir_en_uni@voltaje+1,w
  4726  0186  00F3               	movwf	___lwmod@dividend+1
  4727  0187  0878               	movf	Ds_Convertir_en_uni@voltaje,w
  4728  0188  00F2               	movwf	___lwmod@dividend
  4729  0189  3180  2052  3181   	fcall	___lwmod
  4730  018C  0870               	movf	?___lwmod,w
  4731  018D  00FA               	movwf	??_Ds_Convertir_en_uni
  4732  018E  087B               	movf	Ds_Convertir_en_uni@dsp,w
  4733  018F  3E03               	addlw	3
  4734  0190  0086               	movwf	6
  4735  0191  0187               	clrf	7
  4736  0192  087A               	movf	??_Ds_Convertir_en_uni,w
  4737  0193  0081               	movwf	1
  4738  0194                     l485:
  4739  0194  0008               	return
  4740  0195                     __end_of_Ds_Convertir_en_uni:
  4741                           
  4742                           	psect	text24
  4743  0052                     __ptext24:	
  4744 ;; *************** function ___lwmod *****************
  4745 ;; Defined at:
  4746 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwmod.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  divisor         2    0[COMMON] unsigned int 
  4749 ;;  dividend        2    2[COMMON] unsigned int 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  counter         1    5[COMMON] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  2    0[COMMON] unsigned int 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4761 ;;      Params:         4       0       0       0       0       0
  4762 ;;      Locals:         1       0       0       0       0       0
  4763 ;;      Temps:          1       0       0       0       0       0
  4764 ;;      Totals:         6       0       0       0       0       0
  4765 ;;Total ram usage:        6 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_Ds_Convertir_en_uni
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           
  4775                           ;psect for function ___lwmod
  4776  0052                     ___lwmod:
  4777  0052                     l1980:	
  4778                           ;incstack = 0
  4779                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4780                           
  4781  0052  0870               	movf	___lwmod@divisor,w
  4782  0053  0471               	iorwf	___lwmod@divisor+1,w
  4783  0054  1903               	btfsc	3,2
  4784  0055  2857               	goto	u1091
  4785  0056  2858               	goto	u1090
  4786  0057                     u1091:
  4787  0057  2881               	goto	l1998
  4788  0058                     u1090:
  4789  0058                     l1982:
  4790  0058  01F5               	clrf	___lwmod@counter
  4791  0059  0AF5               	incf	___lwmod@counter,f
  4792  005A  2864               	goto	l1988
  4793  005B                     l1984:
  4794  005B  3001               	movlw	1
  4795  005C                     u1105:
  4796  005C  35F0               	lslf	___lwmod@divisor,f
  4797  005D  0DF1               	rlf	___lwmod@divisor+1,f
  4798  005E  0B89               	decfsz	9,f
  4799  005F  285C               	goto	u1105
  4800  0060                     l1986:
  4801  0060  3001               	movlw	1
  4802  0061  00F4               	movwf	??___lwmod
  4803  0062  0874               	movf	??___lwmod,w
  4804  0063  07F5               	addwf	___lwmod@counter,f
  4805  0064                     l1988:
  4806  0064  1FF1               	btfss	___lwmod@divisor+1,7
  4807  0065  2867               	goto	u1111
  4808  0066  2868               	goto	u1110
  4809  0067                     u1111:
  4810  0067  285B               	goto	l1984
  4811  0068                     u1110:
  4812  0068                     l1990:
  4813  0068  0871               	movf	___lwmod@divisor+1,w
  4814  0069  0273               	subwf	___lwmod@dividend+1,w
  4815  006A  1D03               	skipz
  4816  006B  286E               	goto	u1125
  4817  006C  0870               	movf	___lwmod@divisor,w
  4818  006D  0272               	subwf	___lwmod@dividend,w
  4819  006E                     u1125:
  4820  006E  1C03               	skipc
  4821  006F  2871               	goto	u1121
  4822  0070  2872               	goto	u1120
  4823  0071                     u1121:
  4824  0071  2876               	goto	l1994
  4825  0072                     u1120:
  4826  0072                     l1992:
  4827  0072  0870               	movf	___lwmod@divisor,w
  4828  0073  02F2               	subwf	___lwmod@dividend,f
  4829  0074  0871               	movf	___lwmod@divisor+1,w
  4830  0075  3BF3               	subwfb	___lwmod@dividend+1,f
  4831  0076                     l1994:
  4832  0076  3001               	movlw	1
  4833  0077                     u1135:
  4834  0077  36F1               	lsrf	___lwmod@divisor+1,f
  4835  0078  0CF0               	rrf	___lwmod@divisor,f
  4836  0079  0B89               	decfsz	9,f
  4837  007A  2877               	goto	u1135
  4838  007B                     l1996:
  4839  007B  3001               	movlw	1
  4840  007C  02F5               	subwf	___lwmod@counter,f
  4841  007D  1D03               	btfss	3,2
  4842  007E  2880               	goto	u1141
  4843  007F  2881               	goto	u1140
  4844  0080                     u1141:
  4845  0080  2868               	goto	l1990
  4846  0081                     u1140:
  4847  0081                     l1998:
  4848  0081  0873               	movf	___lwmod@dividend+1,w
  4849  0082  00F1               	movwf	?___lwmod+1
  4850  0083  0872               	movf	___lwmod@dividend,w
  4851  0084  00F0               	movwf	?___lwmod
  4852  0085                     l978:
  4853  0085  0008               	return
  4854  0086                     __end_of___lwmod:
  4855                           
  4856                           	psect	text25
  4857  0086                     __ptext25:	
  4858 ;; *************** function ___lwdiv *****************
  4859 ;; Defined at:
  4860 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  divisor         2    0[COMMON] unsigned int 
  4863 ;;  dividend        2    2[COMMON] unsigned int 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  quotient        2    5[COMMON] unsigned int 
  4866 ;;  counter         1    7[COMMON] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  2    0[COMMON] unsigned int 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4876 ;;      Params:         4       0       0       0       0       0
  4877 ;;      Locals:         3       0       0       0       0       0
  4878 ;;      Temps:          1       0       0       0       0       0
  4879 ;;      Totals:         8       0       0       0       0       0
  4880 ;;Total ram usage:        8 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_Ds_Convertir_en_uni
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           
  4890                           ;psect for function ___lwdiv
  4891  0086                     ___lwdiv:
  4892  0086                     l1954:	
  4893                           ;incstack = 0
  4894                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4895                           
  4896  0086  01F5               	clrf	___lwdiv@quotient
  4897  0087  01F6               	clrf	___lwdiv@quotient+1
  4898  0088                     l1956:
  4899  0088  0870               	movf	___lwdiv@divisor,w
  4900  0089  0471               	iorwf	___lwdiv@divisor+1,w
  4901  008A  1903               	btfsc	3,2
  4902  008B  288D               	goto	u1021
  4903  008C  288E               	goto	u1020
  4904  008D                     u1021:
  4905  008D  28BD               	goto	l1976
  4906  008E                     u1020:
  4907  008E                     l1958:
  4908  008E  01F7               	clrf	___lwdiv@counter
  4909  008F  0AF7               	incf	___lwdiv@counter,f
  4910  0090  289A               	goto	l1964
  4911  0091                     l1960:
  4912  0091  3001               	movlw	1
  4913  0092                     u1035:
  4914  0092  35F0               	lslf	___lwdiv@divisor,f
  4915  0093  0DF1               	rlf	___lwdiv@divisor+1,f
  4916  0094  0B89               	decfsz	9,f
  4917  0095  2892               	goto	u1035
  4918  0096                     l1962:
  4919  0096  3001               	movlw	1
  4920  0097  00F4               	movwf	??___lwdiv
  4921  0098  0874               	movf	??___lwdiv,w
  4922  0099  07F7               	addwf	___lwdiv@counter,f
  4923  009A                     l1964:
  4924  009A  1FF1               	btfss	___lwdiv@divisor+1,7
  4925  009B  289D               	goto	u1041
  4926  009C  289E               	goto	u1040
  4927  009D                     u1041:
  4928  009D  2891               	goto	l1960
  4929  009E                     u1040:
  4930  009E                     l1966:
  4931  009E  3001               	movlw	1
  4932  009F                     u1055:
  4933  009F  35F5               	lslf	___lwdiv@quotient,f
  4934  00A0  0DF6               	rlf	___lwdiv@quotient+1,f
  4935  00A1  0B89               	decfsz	9,f
  4936  00A2  289F               	goto	u1055
  4937  00A3  0871               	movf	___lwdiv@divisor+1,w
  4938  00A4  0273               	subwf	___lwdiv@dividend+1,w
  4939  00A5  1D03               	skipz
  4940  00A6  28A9               	goto	u1065
  4941  00A7  0870               	movf	___lwdiv@divisor,w
  4942  00A8  0272               	subwf	___lwdiv@dividend,w
  4943  00A9                     u1065:
  4944  00A9  1C03               	skipc
  4945  00AA  28AC               	goto	u1061
  4946  00AB  28AD               	goto	u1060
  4947  00AC                     u1061:
  4948  00AC  28B2               	goto	l1972
  4949  00AD                     u1060:
  4950  00AD                     l1968:
  4951  00AD  0870               	movf	___lwdiv@divisor,w
  4952  00AE  02F2               	subwf	___lwdiv@dividend,f
  4953  00AF  0871               	movf	___lwdiv@divisor+1,w
  4954  00B0  3BF3               	subwfb	___lwdiv@dividend+1,f
  4955  00B1                     l1970:
  4956  00B1  1475               	bsf	___lwdiv@quotient,0
  4957  00B2                     l1972:
  4958  00B2  3001               	movlw	1
  4959  00B3                     u1075:
  4960  00B3  36F1               	lsrf	___lwdiv@divisor+1,f
  4961  00B4  0CF0               	rrf	___lwdiv@divisor,f
  4962  00B5  0B89               	decfsz	9,f
  4963  00B6  28B3               	goto	u1075
  4964  00B7                     l1974:
  4965  00B7  3001               	movlw	1
  4966  00B8  02F7               	subwf	___lwdiv@counter,f
  4967  00B9  1D03               	btfss	3,2
  4968  00BA  28BC               	goto	u1081
  4969  00BB  28BD               	goto	u1080
  4970  00BC                     u1081:
  4971  00BC  289E               	goto	l1966
  4972  00BD                     u1080:
  4973  00BD                     l1976:
  4974  00BD  0876               	movf	___lwdiv@quotient+1,w
  4975  00BE  00F1               	movwf	?___lwdiv+1
  4976  00BF  0875               	movf	___lwdiv@quotient,w
  4977  00C0  00F0               	movwf	?___lwdiv
  4978  00C1                     l968:
  4979  00C1  0008               	return
  4980  00C2                     __end_of___lwdiv:
  4981                           
  4982                           	psect	text26
  4983  00C2                     __ptext26:	
  4984 ;; *************** function _Ds_Conversor_ADC *****************
  4985 ;; Defined at:
  4986 ;;		line 224 in file "displays.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  adcOUT          2   37[BANK0 ] unsigned short 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;  pendiente       4   39[BANK0 ] float 
  4991 ;;  voltios         2   43[BANK0 ] unsigned short 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  2   37[BANK0 ] unsigned short 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0, pclath, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5001 ;;      Params:         0       2       0       0       0       0
  5002 ;;      Locals:         0       6       0       0       0       0
  5003 ;;      Temps:          0       0       0       0       0       0
  5004 ;;      Totals:         0       8       0       0       0       0
  5005 ;;Total ram usage:        8 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    2
  5008 ;; This function calls:
  5009 ;;		___flmul
  5010 ;;		___fltol
  5011 ;;		___xxtofl
  5012 ;; This function is called by:
  5013 ;;		_main
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           
  5018                           ;psect for function _Ds_Conversor_ADC
  5019  00C2                     _Ds_Conversor_ADC:
  5020  00C2                     l2338:	
  5021                           ;incstack = 0
  5022                           ; Regs used in _Ds_Conversor_ADC: [wreg+status,2+status,0+pclath+cstack]
  5023                           
  5024                           
  5025                           ;displays.c: 225:     float pendiente = 0.97665;
  5026  00C2  303F               	movlw	63
  5027  00C3  0020               	movlb	0	; select bank0
  5028  00C4  00CA               	movwf	Ds_Conversor_ADC@pendiente+3
  5029  00C5  307A               	movlw	122
  5030  00C6  00C9               	movwf	Ds_Conversor_ADC@pendiente+2
  5031  00C7  3005               	movlw	5
  5032  00C8  00C8               	movwf	Ds_Conversor_ADC@pendiente+1
  5033  00C9  30BC               	movlw	188
  5034  00CA  00C7               	movwf	Ds_Conversor_ADC@pendiente
  5035  00CB                     l2340:
  5036                           
  5037                           ;displays.c: 226:     uint16_t voltios = (uint16_t) adcOUT*pendiente;
  5038  00CB  0845               	movf	Ds_Conversor_ADC@adcOUT,w
  5039  00CC  00F0               	movwf	___xxtofl@val
  5040  00CD  0846               	movf	Ds_Conversor_ADC@adcOUT+1,w
  5041  00CE  00F1               	movwf	___xxtofl@val+1
  5042  00CF  01F2               	clrf	___xxtofl@val+2
  5043  00D0  01F3               	clrf	___xxtofl@val+3
  5044  00D1  3000               	movlw	0
  5045  00D2  3182  22FB  3180   	fcall	___xxtofl
  5046  00D5  0873               	movf	?___xxtofl+3,w
  5047  00D6  0020               	movlb	0	; select bank0
  5048  00D7  00A7               	movwf	___flmul@a+3
  5049  00D8  0872               	movf	?___xxtofl+2,w
  5050  00D9  00A6               	movwf	___flmul@a+2
  5051  00DA  0871               	movf	?___xxtofl+1,w
  5052  00DB  00A5               	movwf	___flmul@a+1
  5053  00DC  0870               	movf	?___xxtofl,w
  5054  00DD  00A4               	movwf	___flmul@a
  5055  00DE  084A               	movf	Ds_Conversor_ADC@pendiente+3,w
  5056  00DF  00A3               	movwf	___flmul@b+3
  5057  00E0  0849               	movf	Ds_Conversor_ADC@pendiente+2,w
  5058  00E1  00A2               	movwf	___flmul@b+2
  5059  00E2  0848               	movf	Ds_Conversor_ADC@pendiente+1,w
  5060  00E3  00A1               	movwf	___flmul@b+1
  5061  00E4  0847               	movf	Ds_Conversor_ADC@pendiente,w
  5062  00E5  00A0               	movwf	___flmul@b
  5063  00E6  3185  259C  3180   	fcall	___flmul
  5064  00E9  0020               	movlb	0	; select bank0
  5065  00EA  0823               	movf	?___flmul+3,w
  5066  00EB  00BD               	movwf	___fltol@f1+3
  5067  00EC  0822               	movf	?___flmul+2,w
  5068  00ED  00BC               	movwf	___fltol@f1+2
  5069  00EE  0821               	movf	?___flmul+1,w
  5070  00EF  00BB               	movwf	___fltol@f1+1
  5071  00F0  0820               	movf	?___flmul,w
  5072  00F1  00BA               	movwf	___fltol@f1
  5073  00F2  3181  21F5  3180   	fcall	___fltol
  5074  00F5  0020               	movlb	0	; select bank0
  5075  00F6  083B               	movf	?___fltol+1,w
  5076  00F7  00CC               	movwf	Ds_Conversor_ADC@voltios+1
  5077  00F8  083A               	movf	?___fltol,w
  5078  00F9  00CB               	movwf	Ds_Conversor_ADC@voltios
  5079  00FA                     l2342:
  5080                           
  5081                           ;displays.c: 227:  return(voltios);
  5082  00FA  084C               	movf	Ds_Conversor_ADC@voltios+1,w
  5083  00FB  00C6               	movwf	?_Ds_Conversor_ADC+1
  5084  00FC  084B               	movf	Ds_Conversor_ADC@voltios,w
  5085  00FD  00C5               	movwf	?_Ds_Conversor_ADC
  5086  00FE                     l488:
  5087  00FE  0008               	return
  5088  00FF                     __end_of_Ds_Conversor_ADC:
  5089                           
  5090                           	psect	text27
  5091  02FB                     __ptext27:	
  5092 ;; *************** function ___xxtofl *****************
  5093 ;; Defined at:
  5094 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  sign            1    wreg     unsigned char 
  5097 ;;  val             4    0[COMMON] long 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  sign            1    8[COMMON] unsigned char 
  5100 ;;  arg             4   10[COMMON] unsigned long 
  5101 ;;  exp             1    9[COMMON] unsigned char 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  4    0[COMMON] unsigned char 
  5104 ;; Registers used:
  5105 ;;		wreg, status,2, status,0
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5111 ;;      Params:         4       0       0       0       0       0
  5112 ;;      Locals:         6       0       0       0       0       0
  5113 ;;      Temps:          4       0       0       0       0       0
  5114 ;;      Totals:        14       0       0       0       0       0
  5115 ;;Total ram usage:       14 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_Ds_Conversor_ADC
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           
  5125                           ;psect for function ___xxtofl
  5126  02FB                     ___xxtofl:
  5127                           
  5128                           ;incstack = 0
  5129                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5130                           ;___xxtofl@sign stored from wreg
  5131  02FB  00F8               	movwf	___xxtofl@sign
  5132  02FC                     l2142:
  5133  02FC  0878               	movf	___xxtofl@sign,w
  5134  02FD  1903               	btfsc	3,2
  5135  02FE  2B00               	goto	u1411
  5136  02FF  2B01               	goto	u1410
  5137  0300                     u1411:
  5138  0300  2B15               	goto	l2148
  5139  0301                     u1410:
  5140  0301                     l2144:
  5141  0301  1FF3               	btfss	___xxtofl@val+3,7
  5142  0302  2B04               	goto	u1421
  5143  0303  2B05               	goto	u1420
  5144  0304                     u1421:
  5145  0304  2B15               	goto	l2148
  5146  0305                     u1420:
  5147  0305                     l2146:
  5148  0305  0970               	comf	___xxtofl@val,w
  5149  0306  00FA               	movwf	___xxtofl@arg
  5150  0307  0971               	comf	___xxtofl@val+1,w
  5151  0308  00FB               	movwf	___xxtofl@arg+1
  5152  0309  0972               	comf	___xxtofl@val+2,w
  5153  030A  00FC               	movwf	___xxtofl@arg+2
  5154  030B  0973               	comf	___xxtofl@val+3,w
  5155  030C  00FD               	movwf	___xxtofl@arg+3
  5156  030D  0AFA               	incf	___xxtofl@arg,f
  5157  030E  1903               	skipnz
  5158  030F  0AFB               	incf	___xxtofl@arg+1,f
  5159  0310  1903               	skipnz
  5160  0311  0AFC               	incf	___xxtofl@arg+2,f
  5161  0312  1903               	skipnz
  5162  0313  0AFD               	incf	___xxtofl@arg+3,f
  5163  0314  2B1D               	goto	l1129
  5164  0315                     l2148:
  5165  0315  0873               	movf	___xxtofl@val+3,w
  5166  0316  00FD               	movwf	___xxtofl@arg+3
  5167  0317  0872               	movf	___xxtofl@val+2,w
  5168  0318  00FC               	movwf	___xxtofl@arg+2
  5169  0319  0871               	movf	___xxtofl@val+1,w
  5170  031A  00FB               	movwf	___xxtofl@arg+1
  5171  031B  0870               	movf	___xxtofl@val,w
  5172  031C  00FA               	movwf	___xxtofl@arg
  5173  031D                     l1129:
  5174  031D  0873               	movf	___xxtofl@val+3,w
  5175  031E  0472               	iorwf	___xxtofl@val+2,w
  5176  031F  0471               	iorwf	___xxtofl@val+1,w
  5177  0320  0470               	iorwf	___xxtofl@val,w
  5178  0321  1D03               	skipz
  5179  0322  2B24               	goto	u1431
  5180  0323  2B25               	goto	u1430
  5181  0324                     u1431:
  5182  0324  2B2E               	goto	l2154
  5183  0325                     u1430:
  5184  0325                     l2150:
  5185  0325  3000               	movlw	0
  5186  0326  00F3               	movwf	?___xxtofl+3
  5187  0327  3000               	movlw	0
  5188  0328  00F2               	movwf	?___xxtofl+2
  5189  0329  3000               	movlw	0
  5190  032A  00F1               	movwf	?___xxtofl+1
  5191  032B  3000               	movlw	0
  5192  032C  00F0               	movwf	?___xxtofl
  5193  032D  2BA6               	goto	l1131
  5194  032E                     l2154:
  5195  032E  3096               	movlw	150
  5196  032F  00F4               	movwf	??___xxtofl
  5197  0330  0874               	movf	??___xxtofl,w
  5198  0331  00F9               	movwf	___xxtofl@exp
  5199  0332  2B3E               	goto	l2158
  5200  0333                     l2156:
  5201  0333  3001               	movlw	1
  5202  0334  00F4               	movwf	??___xxtofl
  5203  0335  0874               	movf	??___xxtofl,w
  5204  0336  07F9               	addwf	___xxtofl@exp,f
  5205  0337  3001               	movlw	1
  5206  0338                     u1445:
  5207  0338  36FD               	lsrf	___xxtofl@arg+3,f
  5208  0339  0CFC               	rrf	___xxtofl@arg+2,f
  5209  033A  0CFB               	rrf	___xxtofl@arg+1,f
  5210  033B  0CFA               	rrf	___xxtofl@arg,f
  5211  033C  0B89               	decfsz	9,f
  5212  033D  2B38               	goto	u1445
  5213  033E                     l2158:
  5214  033E  30FE               	movlw	254
  5215  033F  057D               	andwf	___xxtofl@arg+3,w
  5216  0340  1D03               	btfss	3,2
  5217  0341  2B43               	goto	u1451
  5218  0342  2B44               	goto	u1450
  5219  0343                     u1451:
  5220  0343  2B33               	goto	l2156
  5221  0344                     u1450:
  5222  0344  2B58               	goto	l1135
  5223  0345                     l2160:
  5224  0345  3001               	movlw	1
  5225  0346  00F4               	movwf	??___xxtofl
  5226  0347  0874               	movf	??___xxtofl,w
  5227  0348  07F9               	addwf	___xxtofl@exp,f
  5228  0349                     l2162:
  5229  0349  3001               	movlw	1
  5230  034A  07FA               	addwf	___xxtofl@arg,f
  5231  034B  3000               	movlw	0
  5232  034C  3DFB               	addwfc	___xxtofl@arg+1,f
  5233  034D  3000               	movlw	0
  5234  034E  3DFC               	addwfc	___xxtofl@arg+2,f
  5235  034F  3000               	movlw	0
  5236  0350  3DFD               	addwfc	___xxtofl@arg+3,f
  5237  0351                     l2164:
  5238  0351  3001               	movlw	1
  5239  0352                     u1465:
  5240  0352  36FD               	lsrf	___xxtofl@arg+3,f
  5241  0353  0CFC               	rrf	___xxtofl@arg+2,f
  5242  0354  0CFB               	rrf	___xxtofl@arg+1,f
  5243  0355  0CFA               	rrf	___xxtofl@arg,f
  5244  0356  0B89               	decfsz	9,f
  5245  0357  2B52               	goto	u1465
  5246  0358                     l1135:
  5247  0358  30FF               	movlw	255
  5248  0359  057D               	andwf	___xxtofl@arg+3,w
  5249  035A  1D03               	btfss	3,2
  5250  035B  2B5D               	goto	u1471
  5251  035C  2B5E               	goto	u1470
  5252  035D                     u1471:
  5253  035D  2B45               	goto	l2160
  5254  035E                     u1470:
  5255  035E  2B68               	goto	l2168
  5256  035F                     l2166:
  5257  035F  3001               	movlw	1
  5258  0360  02F9               	subwf	___xxtofl@exp,f
  5259  0361  3001               	movlw	1
  5260  0362                     u1485:
  5261  0362  35FA               	lslf	___xxtofl@arg,f
  5262  0363  0DFB               	rlf	___xxtofl@arg+1,f
  5263  0364  0DFC               	rlf	___xxtofl@arg+2,f
  5264  0365  0DFD               	rlf	___xxtofl@arg+3,f
  5265  0366  0B89               	decfsz	9,f
  5266  0367  2B62               	goto	u1485
  5267  0368                     l2168:
  5268  0368  1BFC               	btfsc	___xxtofl@arg+2,7
  5269  0369  2B6B               	goto	u1491
  5270  036A  2B6C               	goto	u1490
  5271  036B                     u1491:
  5272  036B  2B72               	goto	l1142
  5273  036C                     u1490:
  5274  036C                     l2170:
  5275  036C  3002               	movlw	2
  5276  036D  0279               	subwf	___xxtofl@exp,w
  5277  036E  1803               	skipnc
  5278  036F  2B71               	goto	u1501
  5279  0370  2B72               	goto	u1500
  5280  0371                     u1501:
  5281  0371  2B5F               	goto	l2166
  5282  0372                     u1500:
  5283  0372                     l1142:
  5284  0372  1879               	btfsc	___xxtofl@exp,0
  5285  0373  2B75               	goto	u1511
  5286  0374  2B76               	goto	u1510
  5287  0375                     u1511:
  5288  0375  2B7E               	goto	l1143
  5289  0376                     u1510:
  5290  0376                     l2172:
  5291  0376  30FF               	movlw	255
  5292  0377  05FA               	andwf	___xxtofl@arg,f
  5293  0378  30FF               	movlw	255
  5294  0379  05FB               	andwf	___xxtofl@arg+1,f
  5295  037A  307F               	movlw	127
  5296  037B  05FC               	andwf	___xxtofl@arg+2,f
  5297  037C  30FF               	movlw	255
  5298  037D  05FD               	andwf	___xxtofl@arg+3,f
  5299  037E                     l1143:
  5300  037E  1003               	clrc
  5301  037F  0CF9               	rrf	___xxtofl@exp,f
  5302  0380                     l2174:
  5303  0380  0879               	movf	___xxtofl@exp,w
  5304  0381  00F4               	movwf	??___xxtofl
  5305  0382  01F5               	clrf	??___xxtofl+1
  5306  0383  01F6               	clrf	??___xxtofl+2
  5307  0384  01F7               	clrf	??___xxtofl+3
  5308  0385  3018               	movlw	24
  5309  0386                     u1525:
  5310  0386  35F4               	lslf	??___xxtofl,f
  5311  0387  0DF5               	rlf	??___xxtofl+1,f
  5312  0388  0DF6               	rlf	??___xxtofl+2,f
  5313  0389  0DF7               	rlf	??___xxtofl+3,f
  5314  038A                     u1520:
  5315  038A  0B89               	decfsz	9,f
  5316  038B  2B86               	goto	u1525
  5317  038C  0874               	movf	??___xxtofl,w
  5318  038D  04FA               	iorwf	___xxtofl@arg,f
  5319  038E  0875               	movf	??___xxtofl+1,w
  5320  038F  04FB               	iorwf	___xxtofl@arg+1,f
  5321  0390  0876               	movf	??___xxtofl+2,w
  5322  0391  04FC               	iorwf	___xxtofl@arg+2,f
  5323  0392  0877               	movf	??___xxtofl+3,w
  5324  0393  04FD               	iorwf	___xxtofl@arg+3,f
  5325  0394                     l2176:
  5326  0394  0878               	movf	___xxtofl@sign,w
  5327  0395  1903               	btfsc	3,2
  5328  0396  2B98               	goto	u1531
  5329  0397  2B99               	goto	u1530
  5330  0398                     u1531:
  5331  0398  2B9E               	goto	l2182
  5332  0399                     u1530:
  5333  0399                     l2178:
  5334  0399  1FF3               	btfss	___xxtofl@val+3,7
  5335  039A  2B9C               	goto	u1541
  5336  039B  2B9D               	goto	u1540
  5337  039C                     u1541:
  5338  039C  2B9E               	goto	l2182
  5339  039D                     u1540:
  5340  039D                     l2180:
  5341  039D  17FD               	bsf	___xxtofl@arg+3,7
  5342  039E                     l2182:
  5343  039E  087D               	movf	___xxtofl@arg+3,w
  5344  039F  00F3               	movwf	?___xxtofl+3
  5345  03A0  087C               	movf	___xxtofl@arg+2,w
  5346  03A1  00F2               	movwf	?___xxtofl+2
  5347  03A2  087B               	movf	___xxtofl@arg+1,w
  5348  03A3  00F1               	movwf	?___xxtofl+1
  5349  03A4  087A               	movf	___xxtofl@arg,w
  5350  03A5  00F0               	movwf	?___xxtofl
  5351  03A6                     l1131:
  5352  03A6  0008               	return
  5353  03A7                     __end_of___xxtofl:
  5354                           
  5355                           	psect	text28
  5356  01F5                     __ptext28:	
  5357 ;; *************** function ___fltol *****************
  5358 ;; Defined at:
  5359 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  f1              4   26[BANK0 ] unsigned char 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  exp1            1   36[BANK0 ] unsigned char 
  5364 ;;  sign1           1   35[BANK0 ] unsigned char 
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  4   26[BANK0 ] long 
  5367 ;; Registers used:
  5368 ;;		wreg, status,2, status,0
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5374 ;;      Params:         0       4       0       0       0       0
  5375 ;;      Locals:         0       2       0       0       0       0
  5376 ;;      Temps:          0       5       0       0       0       0
  5377 ;;      Totals:         0      11       0       0       0       0
  5378 ;;Total ram usage:       11 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_Ds_Conversor_ADC
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function ___fltol
  5389  01F5                     ___fltol:
  5390  01F5                     l1918:	
  5391                           ;incstack = 0
  5392                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5393                           
  5394  01F5  1003               	clrc
  5395  01F6  0020               	movlb	0	; select bank0
  5396  01F7  0D3C               	rlf	___fltol@f1+2,w
  5397  01F8  0D3D               	rlf	___fltol@f1+3,w
  5398  01F9  00BE               	movwf	??___fltol
  5399  01FA  083E               	movf	??___fltol,w
  5400  01FB  00C4               	movwf	___fltol@exp1
  5401  01FC  0844               	movf	___fltol@exp1,w
  5402  01FD  1D03               	btfss	3,2
  5403  01FE  2A00               	goto	u921
  5404  01FF  2A01               	goto	u920
  5405  0200                     u921:
  5406  0200  2A0A               	goto	l1924
  5407  0201                     u920:
  5408  0201                     l1920:
  5409  0201  3000               	movlw	0
  5410  0202  00BD               	movwf	?___fltol+3
  5411  0203  3000               	movlw	0
  5412  0204  00BC               	movwf	?___fltol+2
  5413  0205  3000               	movlw	0
  5414  0206  00BB               	movwf	?___fltol+1
  5415  0207  3000               	movlw	0
  5416  0208  00BA               	movwf	?___fltol
  5417  0209  2A69               	goto	l882
  5418  020A                     l1924:
  5419  020A  083A               	movf	___fltol@f1,w
  5420  020B  00BE               	movwf	??___fltol
  5421  020C  083B               	movf	___fltol@f1+1,w
  5422  020D  00BF               	movwf	??___fltol+1
  5423  020E  083C               	movf	___fltol@f1+2,w
  5424  020F  00C0               	movwf	??___fltol+2
  5425  0210  083D               	movf	___fltol@f1+3,w
  5426  0211  00C1               	movwf	??___fltol+3
  5427  0212  301F               	movlw	31
  5428  0213                     u935:
  5429  0213  36C1               	lsrf	??___fltol+3,f
  5430  0214  0CC0               	rrf	??___fltol+2,f
  5431  0215  0CBF               	rrf	??___fltol+1,f
  5432  0216  0CBE               	rrf	??___fltol,f
  5433  0217                     u930:
  5434  0217  0B89               	decfsz	9,f
  5435  0218  2A13               	goto	u935
  5436  0219  083E               	movf	??___fltol,w
  5437  021A  00C2               	movwf	??___fltol+4
  5438  021B  0842               	movf	??___fltol+4,w
  5439  021C  00C3               	movwf	___fltol@sign1
  5440  021D                     l1926:
  5441  021D  17BC               	bsf	___fltol@f1+2,7
  5442  021E                     l1928:
  5443  021E  30FF               	movlw	255
  5444  021F  05BA               	andwf	___fltol@f1,f
  5445  0220  30FF               	movlw	255
  5446  0221  05BB               	andwf	___fltol@f1+1,f
  5447  0222  30FF               	movlw	255
  5448  0223  05BC               	andwf	___fltol@f1+2,f
  5449  0224  3000               	movlw	0
  5450  0225  05BD               	andwf	___fltol@f1+3,f
  5451  0226                     l1930:
  5452  0226  3096               	movlw	150
  5453  0227  02C4               	subwf	___fltol@exp1,f
  5454  0228                     l1932:
  5455  0228  1FC4               	btfss	___fltol@exp1,7
  5456  0229  2A2B               	goto	u941
  5457  022A  2A2C               	goto	u940
  5458  022B                     u941:
  5459  022B  2A44               	goto	l1942
  5460  022C                     u940:
  5461  022C                     l1934:
  5462  022C  0844               	movf	___fltol@exp1,w
  5463  022D  3A80               	xorlw	128
  5464  022E  3E97               	addlw	151
  5465  022F  1803               	skipnc
  5466  0230  2A32               	goto	u951
  5467  0231  2A33               	goto	u950
  5468  0232                     u951:
  5469  0232  2A34               	goto	l1940
  5470  0233                     u950:
  5471  0233  2A01               	goto	l1920
  5472  0234                     l1940:
  5473  0234  3001               	movlw	1
  5474  0235                     u965:
  5475  0235  36BD               	lsrf	___fltol@f1+3,f
  5476  0236  0CBC               	rrf	___fltol@f1+2,f
  5477  0237  0CBB               	rrf	___fltol@f1+1,f
  5478  0238  0CBA               	rrf	___fltol@f1,f
  5479  0239  0B89               	decfsz	9,f
  5480  023A  2A35               	goto	u965
  5481  023B  3001               	movlw	1
  5482  023C  00BE               	movwf	??___fltol
  5483  023D  083E               	movf	??___fltol,w
  5484  023E  07C4               	addwf	___fltol@exp1,f
  5485  023F  1D03               	btfss	3,2
  5486  0240  2A42               	goto	u971
  5487  0241  2A43               	goto	u970
  5488  0242                     u971:
  5489  0242  2A34               	goto	l1940
  5490  0243                     u970:
  5491  0243  2A59               	goto	l1950
  5492  0244                     l1942:
  5493  0244  3020               	movlw	32
  5494  0245  0244               	subwf	___fltol@exp1,w
  5495  0246  1C03               	skipc
  5496  0247  2A49               	goto	u981
  5497  0248  2A4A               	goto	u980
  5498  0249                     u981:
  5499  0249  2A54               	goto	l889
  5500  024A                     u980:
  5501  024A  2A01               	goto	l1920
  5502  024B                     l1948:
  5503  024B  3001               	movlw	1
  5504  024C                     u995:
  5505  024C  35BA               	lslf	___fltol@f1,f
  5506  024D  0DBB               	rlf	___fltol@f1+1,f
  5507  024E  0DBC               	rlf	___fltol@f1+2,f
  5508  024F  0DBD               	rlf	___fltol@f1+3,f
  5509  0250  0B89               	decfsz	9,f
  5510  0251  2A4C               	goto	u995
  5511  0252  3001               	movlw	1
  5512  0253  02C4               	subwf	___fltol@exp1,f
  5513  0254                     l889:
  5514  0254  0844               	movf	___fltol@exp1,w
  5515  0255  1D03               	btfss	3,2
  5516  0256  2A58               	goto	u1001
  5517  0257  2A59               	goto	u1000
  5518  0258                     u1001:
  5519  0258  2A4B               	goto	l1948
  5520  0259                     u1000:
  5521  0259                     l1950:
  5522  0259  0843               	movf	___fltol@sign1,w
  5523  025A  1903               	btfsc	3,2
  5524  025B  2A5D               	goto	u1011
  5525  025C  2A5E               	goto	u1010
  5526  025D                     u1011:
  5527  025D  2A69               	goto	l892
  5528  025E                     u1010:
  5529  025E                     l1952:
  5530  025E  09BA               	comf	___fltol@f1,f
  5531  025F  09BB               	comf	___fltol@f1+1,f
  5532  0260  09BC               	comf	___fltol@f1+2,f
  5533  0261  09BD               	comf	___fltol@f1+3,f
  5534  0262  0ABA               	incf	___fltol@f1,f
  5535  0263  1903               	skipnz
  5536  0264  0ABB               	incf	___fltol@f1+1,f
  5537  0265  1903               	skipnz
  5538  0266  0ABC               	incf	___fltol@f1+2,f
  5539  0267  1903               	skipnz
  5540  0268  0ABD               	incf	___fltol@f1+3,f
  5541  0269                     l892:
  5542  0269                     l882:
  5543  0269  0008               	return
  5544  026A                     __end_of___fltol:
  5545                           
  5546                           	psect	text29
  5547  059C                     __ptext29:	
  5548 ;; *************** function ___flmul *****************
  5549 ;; Defined at:
  5550 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  b               4    0[BANK0 ] long 
  5553 ;;  a               4    4[BANK0 ] long 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;  prod            4   20[BANK0 ] struct .
  5556 ;;  grs             4   14[BANK0 ] unsigned long 
  5557 ;;  temp            2   24[BANK0 ] struct .
  5558 ;;  bexp            1   19[BANK0 ] unsigned char 
  5559 ;;  aexp            1   18[BANK0 ] unsigned char 
  5560 ;;  sign            1   13[BANK0 ] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  4    0[BANK0 ] unsigned char 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0, pclath, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5570 ;;      Params:         0       8       0       0       0       0
  5571 ;;      Locals:         0      13       0       0       0       0
  5572 ;;      Temps:          0       5       0       0       0       0
  5573 ;;      Totals:         0      26       0       0       0       0
  5574 ;;Total ram usage:       26 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    1
  5577 ;; This function calls:
  5578 ;;		__Umul8_16
  5579 ;; This function is called by:
  5580 ;;		_Ds_Conversor_ADC
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           
  5585                           ;psect for function ___flmul
  5586  059C                     ___flmul:
  5587  059C                     l2002:	
  5588                           ;incstack = 0
  5589                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5590                           
  5591  059C  0020               	movlb	0	; select bank0
  5592  059D  0823               	movf	___flmul@b+3,w
  5593  059E  3980               	andlw	128
  5594  059F  00A8               	movwf	??___flmul
  5595  05A0  0828               	movf	??___flmul,w
  5596  05A1  00AD               	movwf	___flmul@sign
  5597  05A2                     l2004:
  5598  05A2  3523               	lslf	___flmul@b+3,w
  5599  05A3  00A8               	movwf	??___flmul
  5600  05A4  0828               	movf	??___flmul,w
  5601  05A5  00B3               	movwf	___flmul@bexp
  5602  05A6                     l2006:
  5603  05A6  1FA2               	btfss	___flmul@b+2,7
  5604  05A7  2DA9               	goto	u1151
  5605  05A8  2DAA               	goto	u1150
  5606  05A9                     u1151:
  5607  05A9  2DAB               	goto	l2010
  5608  05AA                     u1150:
  5609  05AA                     l2008:
  5610  05AA  1433               	bsf	___flmul@bexp,0
  5611  05AB                     l2010:
  5612  05AB  0833               	movf	___flmul@bexp,w
  5613  05AC  1903               	btfsc	3,2
  5614  05AD  2DAF               	goto	u1161
  5615  05AE  2DB0               	goto	u1160
  5616  05AF                     u1161:
  5617  05AF  2DBF               	goto	l2018
  5618  05B0                     u1160:
  5619  05B0                     l2012:
  5620  05B0  0A33               	incf	___flmul@bexp,w
  5621  05B1  1D03               	btfss	3,2
  5622  05B2  2DB4               	goto	u1171
  5623  05B3  2DB5               	goto	u1170
  5624  05B4                     u1171:
  5625  05B4  2DBD               	goto	l2016
  5626  05B5                     u1170:
  5627  05B5                     l2014:
  5628  05B5  3000               	movlw	0
  5629  05B6  00A3               	movwf	___flmul@b+3
  5630  05B7  3000               	movlw	0
  5631  05B8  00A2               	movwf	___flmul@b+2
  5632  05B9  3000               	movlw	0
  5633  05BA  00A1               	movwf	___flmul@b+1
  5634  05BB  3000               	movlw	0
  5635  05BC  00A0               	movwf	___flmul@b
  5636  05BD                     l2016:
  5637  05BD  17A2               	bsf	___flmul@b+2,7
  5638  05BE  2DC7               	goto	l2020
  5639  05BF                     l2018:
  5640  05BF  3000               	movlw	0
  5641  05C0  00A3               	movwf	___flmul@b+3
  5642  05C1  3000               	movlw	0
  5643  05C2  00A2               	movwf	___flmul@b+2
  5644  05C3  3000               	movlw	0
  5645  05C4  00A1               	movwf	___flmul@b+1
  5646  05C5  3000               	movlw	0
  5647  05C6  00A0               	movwf	___flmul@b
  5648  05C7                     l2020:
  5649  05C7  0827               	movf	___flmul@a+3,w
  5650  05C8  3980               	andlw	128
  5651  05C9  00A8               	movwf	??___flmul
  5652  05CA  0828               	movf	??___flmul,w
  5653  05CB  06AD               	xorwf	___flmul@sign,f
  5654  05CC                     l2022:
  5655  05CC  3527               	lslf	___flmul@a+3,w
  5656  05CD  00A8               	movwf	??___flmul
  5657  05CE  0828               	movf	??___flmul,w
  5658  05CF  00B2               	movwf	___flmul@aexp
  5659  05D0                     l2024:
  5660  05D0  1FA6               	btfss	___flmul@a+2,7
  5661  05D1  2DD3               	goto	u1181
  5662  05D2  2DD4               	goto	u1180
  5663  05D3                     u1181:
  5664  05D3  2DD5               	goto	l2028
  5665  05D4                     u1180:
  5666  05D4                     l2026:
  5667  05D4  1432               	bsf	___flmul@aexp,0
  5668  05D5                     l2028:
  5669  05D5  0832               	movf	___flmul@aexp,w
  5670  05D6  1903               	btfsc	3,2
  5671  05D7  2DD9               	goto	u1191
  5672  05D8  2DDA               	goto	u1190
  5673  05D9                     u1191:
  5674  05D9  2DE9               	goto	l2036
  5675  05DA                     u1190:
  5676  05DA                     l2030:
  5677  05DA  0A32               	incf	___flmul@aexp,w
  5678  05DB  1D03               	btfss	3,2
  5679  05DC  2DDE               	goto	u1201
  5680  05DD  2DDF               	goto	u1200
  5681  05DE                     u1201:
  5682  05DE  2DE7               	goto	l2034
  5683  05DF                     u1200:
  5684  05DF                     l2032:
  5685  05DF  3000               	movlw	0
  5686  05E0  00A7               	movwf	___flmul@a+3
  5687  05E1  3000               	movlw	0
  5688  05E2  00A6               	movwf	___flmul@a+2
  5689  05E3  3000               	movlw	0
  5690  05E4  00A5               	movwf	___flmul@a+1
  5691  05E5  3000               	movlw	0
  5692  05E6  00A4               	movwf	___flmul@a
  5693  05E7                     l2034:
  5694  05E7  17A6               	bsf	___flmul@a+2,7
  5695  05E8  2DF1               	goto	l2038
  5696  05E9                     l2036:
  5697  05E9  3000               	movlw	0
  5698  05EA  00A7               	movwf	___flmul@a+3
  5699  05EB  3000               	movlw	0
  5700  05EC  00A6               	movwf	___flmul@a+2
  5701  05ED  3000               	movlw	0
  5702  05EE  00A5               	movwf	___flmul@a+1
  5703  05EF  3000               	movlw	0
  5704  05F0  00A4               	movwf	___flmul@a
  5705  05F1                     l2038:
  5706  05F1  0832               	movf	___flmul@aexp,w
  5707  05F2  1903               	btfsc	3,2
  5708  05F3  2DF5               	goto	u1211
  5709  05F4  2DF6               	goto	u1210
  5710  05F5                     u1211:
  5711  05F5  2DFB               	goto	l2042
  5712  05F6                     u1210:
  5713  05F6                     l2040:
  5714  05F6  0833               	movf	___flmul@bexp,w
  5715  05F7  1D03               	btfss	3,2
  5716  05F8  2DFA               	goto	u1221
  5717  05F9  2DFB               	goto	u1220
  5718  05FA                     u1221:
  5719  05FA  2E04               	goto	l2046
  5720  05FB                     u1220:
  5721  05FB                     l2042:
  5722  05FB  3000               	movlw	0
  5723  05FC  00A3               	movwf	?___flmul+3
  5724  05FD  3000               	movlw	0
  5725  05FE  00A2               	movwf	?___flmul+2
  5726  05FF  3000               	movlw	0
  5727  0600  00A1               	movwf	?___flmul+1
  5728  0601  3000               	movlw	0
  5729  0602  00A0               	movwf	?___flmul
  5730  0603  2FF2               	goto	l1085
  5731  0604                     l2046:
  5732  0604  0820               	movf	___flmul@b,w
  5733  0605  00A8               	movwf	??___flmul
  5734  0606  0828               	movf	??___flmul,w
  5735  0607  00F0               	movwf	__Umul8_16@multiplicand
  5736  0608  0826               	movf	___flmul@a+2,w
  5737  0609  318F  27BA  3185   	fcall	__Umul8_16
  5738  060C  0871               	movf	?__Umul8_16+1,w
  5739  060D  0020               	movlb	0	; select bank0
  5740  060E  00B9               	movwf	___flmul@temp+1
  5741  060F  0870               	movf	?__Umul8_16,w
  5742  0610  00B8               	movwf	___flmul@temp
  5743  0611                     l2048:
  5744  0611  0838               	movf	___flmul@temp,w
  5745  0612  00A8               	movwf	??___flmul
  5746  0613  01A9               	clrf	??___flmul+1
  5747  0614  01AA               	clrf	??___flmul+2
  5748  0615  01AB               	clrf	??___flmul+3
  5749  0616  082B               	movf	??___flmul+3,w
  5750  0617  00B1               	movwf	___flmul@grs+3
  5751  0618  082A               	movf	??___flmul+2,w
  5752  0619  00B0               	movwf	___flmul@grs+2
  5753  061A  0829               	movf	??___flmul+1,w
  5754  061B  00AF               	movwf	___flmul@grs+1
  5755  061C  0828               	movf	??___flmul,w
  5756  061D  00AE               	movwf	___flmul@grs
  5757  061E                     l2050:
  5758  061E  0839               	movf	___flmul@temp+1,w
  5759  061F  00A8               	movwf	??___flmul
  5760  0620  01A9               	clrf	??___flmul+1
  5761  0621  01AA               	clrf	??___flmul+2
  5762  0622  01AB               	clrf	??___flmul+3
  5763  0623  082B               	movf	??___flmul+3,w
  5764  0624  00B7               	movwf	___flmul@prod+3
  5765  0625  082A               	movf	??___flmul+2,w
  5766  0626  00B6               	movwf	___flmul@prod+2
  5767  0627  0829               	movf	??___flmul+1,w
  5768  0628  00B5               	movwf	___flmul@prod+1
  5769  0629  0828               	movf	??___flmul,w
  5770  062A  00B4               	movwf	___flmul@prod
  5771  062B  0821               	movf	___flmul@b+1,w
  5772  062C  00A8               	movwf	??___flmul
  5773  062D  0828               	movf	??___flmul,w
  5774  062E  00F0               	movwf	__Umul8_16@multiplicand
  5775  062F  0825               	movf	___flmul@a+1,w
  5776  0630  318F  27BA  3185   	fcall	__Umul8_16
  5777  0633  0871               	movf	?__Umul8_16+1,w
  5778  0634  0020               	movlb	0	; select bank0
  5779  0635  00B9               	movwf	___flmul@temp+1
  5780  0636  0870               	movf	?__Umul8_16,w
  5781  0637  00B8               	movwf	___flmul@temp
  5782  0638                     l2052:
  5783  0638  0838               	movf	___flmul@temp,w
  5784  0639  00A8               	movwf	??___flmul
  5785  063A  01A9               	clrf	??___flmul+1
  5786  063B  01AA               	clrf	??___flmul+2
  5787  063C  01AB               	clrf	??___flmul+3
  5788  063D  0828               	movf	??___flmul,w
  5789  063E  07AE               	addwf	___flmul@grs,f
  5790  063F  0829               	movf	??___flmul+1,w
  5791  0640  3DAF               	addwfc	___flmul@grs+1,f
  5792  0641  082A               	movf	??___flmul+2,w
  5793  0642  3DB0               	addwfc	___flmul@grs+2,f
  5794  0643  082B               	movf	??___flmul+3,w
  5795  0644  3DB1               	addwfc	___flmul@grs+3,f
  5796  0645                     l2054:
  5797  0645  0839               	movf	___flmul@temp+1,w
  5798  0646  00A8               	movwf	??___flmul
  5799  0647  01A9               	clrf	??___flmul+1
  5800  0648  01AA               	clrf	??___flmul+2
  5801  0649  01AB               	clrf	??___flmul+3
  5802  064A  0828               	movf	??___flmul,w
  5803  064B  07B4               	addwf	___flmul@prod,f
  5804  064C  0829               	movf	??___flmul+1,w
  5805  064D  3DB5               	addwfc	___flmul@prod+1,f
  5806  064E  082A               	movf	??___flmul+2,w
  5807  064F  3DB6               	addwfc	___flmul@prod+2,f
  5808  0650  082B               	movf	??___flmul+3,w
  5809  0651  3DB7               	addwfc	___flmul@prod+3,f
  5810  0652  0822               	movf	___flmul@b+2,w
  5811  0653  00A8               	movwf	??___flmul
  5812  0654  0828               	movf	??___flmul,w
  5813  0655  00F0               	movwf	__Umul8_16@multiplicand
  5814  0656  0824               	movf	___flmul@a,w
  5815  0657  318F  27BA  3185   	fcall	__Umul8_16
  5816  065A  0871               	movf	?__Umul8_16+1,w
  5817  065B  0020               	movlb	0	; select bank0
  5818  065C  00B9               	movwf	___flmul@temp+1
  5819  065D  0870               	movf	?__Umul8_16,w
  5820  065E  00B8               	movwf	___flmul@temp
  5821  065F                     l2056:
  5822  065F  0838               	movf	___flmul@temp,w
  5823  0660  00A8               	movwf	??___flmul
  5824  0661  01A9               	clrf	??___flmul+1
  5825  0662  01AA               	clrf	??___flmul+2
  5826  0663  01AB               	clrf	??___flmul+3
  5827  0664  0828               	movf	??___flmul,w
  5828  0665  07AE               	addwf	___flmul@grs,f
  5829  0666  0829               	movf	??___flmul+1,w
  5830  0667  3DAF               	addwfc	___flmul@grs+1,f
  5831  0668  082A               	movf	??___flmul+2,w
  5832  0669  3DB0               	addwfc	___flmul@grs+2,f
  5833  066A  082B               	movf	??___flmul+3,w
  5834  066B  3DB1               	addwfc	___flmul@grs+3,f
  5835  066C                     l2058:
  5836  066C  0839               	movf	___flmul@temp+1,w
  5837  066D  00A8               	movwf	??___flmul
  5838  066E  01A9               	clrf	??___flmul+1
  5839  066F  01AA               	clrf	??___flmul+2
  5840  0670  01AB               	clrf	??___flmul+3
  5841  0671  0828               	movf	??___flmul,w
  5842  0672  07B4               	addwf	___flmul@prod,f
  5843  0673  0829               	movf	??___flmul+1,w
  5844  0674  3DB5               	addwfc	___flmul@prod+1,f
  5845  0675  082A               	movf	??___flmul+2,w
  5846  0676  3DB6               	addwfc	___flmul@prod+2,f
  5847  0677  082B               	movf	??___flmul+3,w
  5848  0678  3DB7               	addwfc	___flmul@prod+3,f
  5849  0679                     l2060:
  5850  0679  3008               	movlw	8
  5851  067A                     u1235:
  5852  067A  35AE               	lslf	___flmul@grs,f
  5853  067B  0DAF               	rlf	___flmul@grs+1,f
  5854  067C  0DB0               	rlf	___flmul@grs+2,f
  5855  067D  0DB1               	rlf	___flmul@grs+3,f
  5856  067E  0B89               	decfsz	9,f
  5857  067F  2E7A               	goto	u1235
  5858  0680                     l2062:
  5859  0680  0821               	movf	___flmul@b+1,w
  5860  0681  00A8               	movwf	??___flmul
  5861  0682  0828               	movf	??___flmul,w
  5862  0683  00F0               	movwf	__Umul8_16@multiplicand
  5863  0684  0824               	movf	___flmul@a,w
  5864  0685  318F  27BA  3185   	fcall	__Umul8_16
  5865  0688  0871               	movf	?__Umul8_16+1,w
  5866  0689  0020               	movlb	0	; select bank0
  5867  068A  00B9               	movwf	___flmul@temp+1
  5868  068B  0870               	movf	?__Umul8_16,w
  5869  068C  00B8               	movwf	___flmul@temp
  5870  068D                     l2064:
  5871  068D  0838               	movf	___flmul@temp,w
  5872  068E  07AE               	addwf	___flmul@grs,f
  5873  068F  0839               	movf	___flmul@temp+1,w
  5874  0690  3DAF               	addwfc	___flmul@grs+1,f
  5875  0691  3000               	movlw	0
  5876  0692  3DB0               	addwfc	___flmul@grs+2,f
  5877  0693  3DB1               	addwfc	___flmul@grs+3,f
  5878  0694                     l2066:
  5879  0694  0820               	movf	___flmul@b,w
  5880  0695  00A8               	movwf	??___flmul
  5881  0696  0828               	movf	??___flmul,w
  5882  0697  00F0               	movwf	__Umul8_16@multiplicand
  5883  0698  0825               	movf	___flmul@a+1,w
  5884  0699  318F  27BA  3185   	fcall	__Umul8_16
  5885  069C  0871               	movf	?__Umul8_16+1,w
  5886  069D  0020               	movlb	0	; select bank0
  5887  069E  00B9               	movwf	___flmul@temp+1
  5888  069F  0870               	movf	?__Umul8_16,w
  5889  06A0  00B8               	movwf	___flmul@temp
  5890  06A1                     l2068:
  5891  06A1  0838               	movf	___flmul@temp,w
  5892  06A2  07AE               	addwf	___flmul@grs,f
  5893  06A3  0839               	movf	___flmul@temp+1,w
  5894  06A4  3DAF               	addwfc	___flmul@grs+1,f
  5895  06A5  3000               	movlw	0
  5896  06A6  3DB0               	addwfc	___flmul@grs+2,f
  5897  06A7  3DB1               	addwfc	___flmul@grs+3,f
  5898  06A8                     l2070:
  5899  06A8  3008               	movlw	8
  5900  06A9                     u1245:
  5901  06A9  35AE               	lslf	___flmul@grs,f
  5902  06AA  0DAF               	rlf	___flmul@grs+1,f
  5903  06AB  0DB0               	rlf	___flmul@grs+2,f
  5904  06AC  0DB1               	rlf	___flmul@grs+3,f
  5905  06AD  0B89               	decfsz	9,f
  5906  06AE  2EA9               	goto	u1245
  5907  06AF  0820               	movf	___flmul@b,w
  5908  06B0  00A8               	movwf	??___flmul
  5909  06B1  0828               	movf	??___flmul,w
  5910  06B2  00F0               	movwf	__Umul8_16@multiplicand
  5911  06B3  0824               	movf	___flmul@a,w
  5912  06B4  318F  27BA  3185   	fcall	__Umul8_16
  5913  06B7  0871               	movf	?__Umul8_16+1,w
  5914  06B8  0020               	movlb	0	; select bank0
  5915  06B9  00B9               	movwf	___flmul@temp+1
  5916  06BA  0870               	movf	?__Umul8_16,w
  5917  06BB  00B8               	movwf	___flmul@temp
  5918  06BC                     l2072:
  5919  06BC  0838               	movf	___flmul@temp,w
  5920  06BD  07AE               	addwf	___flmul@grs,f
  5921  06BE  0839               	movf	___flmul@temp+1,w
  5922  06BF  3DAF               	addwfc	___flmul@grs+1,f
  5923  06C0  3000               	movlw	0
  5924  06C1  3DB0               	addwfc	___flmul@grs+2,f
  5925  06C2  3DB1               	addwfc	___flmul@grs+3,f
  5926  06C3                     l2074:
  5927  06C3  0821               	movf	___flmul@b+1,w
  5928  06C4  00A8               	movwf	??___flmul
  5929  06C5  0828               	movf	??___flmul,w
  5930  06C6  00F0               	movwf	__Umul8_16@multiplicand
  5931  06C7  0826               	movf	___flmul@a+2,w
  5932  06C8  318F  27BA  3185   	fcall	__Umul8_16
  5933  06CB  0871               	movf	?__Umul8_16+1,w
  5934  06CC  0020               	movlb	0	; select bank0
  5935  06CD  00B9               	movwf	___flmul@temp+1
  5936  06CE  0870               	movf	?__Umul8_16,w
  5937  06CF  00B8               	movwf	___flmul@temp
  5938  06D0  0838               	movf	___flmul@temp,w
  5939  06D1  07B4               	addwf	___flmul@prod,f
  5940  06D2  0839               	movf	___flmul@temp+1,w
  5941  06D3  3DB5               	addwfc	___flmul@prod+1,f
  5942  06D4  3000               	movlw	0
  5943  06D5  3DB6               	addwfc	___flmul@prod+2,f
  5944  06D6  3DB7               	addwfc	___flmul@prod+3,f
  5945  06D7                     l2076:
  5946  06D7  0822               	movf	___flmul@b+2,w
  5947  06D8  00A8               	movwf	??___flmul
  5948  06D9  0828               	movf	??___flmul,w
  5949  06DA  00F0               	movwf	__Umul8_16@multiplicand
  5950  06DB  0825               	movf	___flmul@a+1,w
  5951  06DC  318F  27BA  3185   	fcall	__Umul8_16
  5952  06DF  0871               	movf	?__Umul8_16+1,w
  5953  06E0  0020               	movlb	0	; select bank0
  5954  06E1  00B9               	movwf	___flmul@temp+1
  5955  06E2  0870               	movf	?__Umul8_16,w
  5956  06E3  00B8               	movwf	___flmul@temp
  5957  06E4                     l2078:
  5958  06E4  0838               	movf	___flmul@temp,w
  5959  06E5  07B4               	addwf	___flmul@prod,f
  5960  06E6  0839               	movf	___flmul@temp+1,w
  5961  06E7  3DB5               	addwfc	___flmul@prod+1,f
  5962  06E8  3000               	movlw	0
  5963  06E9  3DB6               	addwfc	___flmul@prod+2,f
  5964  06EA  3DB7               	addwfc	___flmul@prod+3,f
  5965  06EB  0822               	movf	___flmul@b+2,w
  5966  06EC  00A8               	movwf	??___flmul
  5967  06ED  0828               	movf	??___flmul,w
  5968  06EE  00F0               	movwf	__Umul8_16@multiplicand
  5969  06EF  0826               	movf	___flmul@a+2,w
  5970  06F0  318F  27BA  3185   	fcall	__Umul8_16
  5971  06F3  0871               	movf	?__Umul8_16+1,w
  5972  06F4  0020               	movlb	0	; select bank0
  5973  06F5  00B9               	movwf	___flmul@temp+1
  5974  06F6  0870               	movf	?__Umul8_16,w
  5975  06F7  00B8               	movwf	___flmul@temp
  5976  06F8                     l2080:
  5977  06F8  0838               	movf	___flmul@temp,w
  5978  06F9  00A8               	movwf	??___flmul
  5979  06FA  0839               	movf	___flmul@temp+1,w
  5980  06FB  00A9               	movwf	??___flmul+1
  5981  06FC  01AA               	clrf	??___flmul+2
  5982  06FD  01AB               	clrf	??___flmul+3
  5983  06FE  3008               	movlw	8
  5984  06FF                     u1255:
  5985  06FF  35A8               	lslf	??___flmul,f
  5986  0700  0DA9               	rlf	??___flmul+1,f
  5987  0701  0DAA               	rlf	??___flmul+2,f
  5988  0702  0DAB               	rlf	??___flmul+3,f
  5989  0703                     u1250:
  5990  0703  0B89               	decfsz	9,f
  5991  0704  2EFF               	goto	u1255
  5992  0705  0828               	movf	??___flmul,w
  5993  0706  07B4               	addwf	___flmul@prod,f
  5994  0707  0829               	movf	??___flmul+1,w
  5995  0708  3DB5               	addwfc	___flmul@prod+1,f
  5996  0709  082A               	movf	??___flmul+2,w
  5997  070A  3DB6               	addwfc	___flmul@prod+2,f
  5998  070B  082B               	movf	??___flmul+3,w
  5999  070C  3DB7               	addwfc	___flmul@prod+3,f
  6000  070D                     l2082:
  6001  070D  082E               	movf	___flmul@grs,w
  6002  070E  00A8               	movwf	??___flmul
  6003  070F  082F               	movf	___flmul@grs+1,w
  6004  0710  00A9               	movwf	??___flmul+1
  6005  0711  0830               	movf	___flmul@grs+2,w
  6006  0712  00AA               	movwf	??___flmul+2
  6007  0713  0831               	movf	___flmul@grs+3,w
  6008  0714  00AB               	movwf	??___flmul+3
  6009  0715  3018               	movlw	24
  6010  0716                     u1265:
  6011  0716  36AB               	lsrf	??___flmul+3,f
  6012  0717  0CAA               	rrf	??___flmul+2,f
  6013  0718  0CA9               	rrf	??___flmul+1,f
  6014  0719  0CA8               	rrf	??___flmul,f
  6015  071A                     u1260:
  6016  071A  0B89               	decfsz	9,f
  6017  071B  2F16               	goto	u1265
  6018  071C  0828               	movf	??___flmul,w
  6019  071D  07B4               	addwf	___flmul@prod,f
  6020  071E  0829               	movf	??___flmul+1,w
  6021  071F  3DB5               	addwfc	___flmul@prod+1,f
  6022  0720  082A               	movf	??___flmul+2,w
  6023  0721  3DB6               	addwfc	___flmul@prod+2,f
  6024  0722  082B               	movf	??___flmul+3,w
  6025  0723  3DB7               	addwfc	___flmul@prod+3,f
  6026  0724                     l2084:
  6027  0724  3008               	movlw	8
  6028  0725                     u1275:
  6029  0725  35AE               	lslf	___flmul@grs,f
  6030  0726  0DAF               	rlf	___flmul@grs+1,f
  6031  0727  0DB0               	rlf	___flmul@grs+2,f
  6032  0728  0DB1               	rlf	___flmul@grs+3,f
  6033  0729  0B89               	decfsz	9,f
  6034  072A  2F25               	goto	u1275
  6035  072B                     l2086:
  6036  072B  0833               	movf	___flmul@bexp,w
  6037  072C  0732               	addwf	___flmul@aexp,w
  6038  072D  00A8               	movwf	??___flmul
  6039  072E  01A9               	clrf	??___flmul+1
  6040  072F  0DA9               	rlf	??___flmul+1,f
  6041  0730  0828               	movf	??___flmul,w
  6042  0731  3E82               	addlw	130
  6043  0732  00B8               	movwf	___flmul@temp
  6044  0733  30FF               	movlw	255
  6045  0734  3D29               	addwfc	??___flmul+1,w
  6046  0735  00B9               	movwf	___flmul@temp+1
  6047  0736  2F4E               	goto	l2098
  6048  0737                     l2088:
  6049  0737  3001               	movlw	1
  6050  0738                     u1285:
  6051  0738  35B4               	lslf	___flmul@prod,f
  6052  0739  0DB5               	rlf	___flmul@prod+1,f
  6053  073A  0DB6               	rlf	___flmul@prod+2,f
  6054  073B  0DB7               	rlf	___flmul@prod+3,f
  6055  073C  0B89               	decfsz	9,f
  6056  073D  2F38               	goto	u1285
  6057  073E                     l2090:
  6058  073E  1FB1               	btfss	___flmul@grs+3,7
  6059  073F  2F41               	goto	u1291
  6060  0740  2F42               	goto	u1290
  6061  0741                     u1291:
  6062  0741  2F43               	goto	l2094
  6063  0742                     u1290:
  6064  0742                     l2092:
  6065  0742  1434               	bsf	___flmul@prod,0
  6066  0743                     l2094:
  6067  0743  3001               	movlw	1
  6068  0744                     u1305:
  6069  0744  35AE               	lslf	___flmul@grs,f
  6070  0745  0DAF               	rlf	___flmul@grs+1,f
  6071  0746  0DB0               	rlf	___flmul@grs+2,f
  6072  0747  0DB1               	rlf	___flmul@grs+3,f
  6073  0748  0B89               	decfsz	9,f
  6074  0749  2F44               	goto	u1305
  6075  074A                     l2096:
  6076  074A  30FF               	movlw	255
  6077  074B  07B8               	addwf	___flmul@temp,f
  6078  074C  30FF               	movlw	255
  6079  074D  3DB9               	addwfc	___flmul@temp+1,f
  6080  074E                     l2098:
  6081  074E  1FB6               	btfss	___flmul@prod+2,7
  6082  074F  2F51               	goto	u1311
  6083  0750  2F52               	goto	u1310
  6084  0751                     u1311:
  6085  0751  2F37               	goto	l2088
  6086  0752                     u1310:
  6087  0752                     l2100:
  6088  0752  01B2               	clrf	___flmul@aexp
  6089  0753                     l2102:
  6090  0753  1FB1               	btfss	___flmul@grs+3,7
  6091  0754  2F56               	goto	u1321
  6092  0755  2F57               	goto	u1320
  6093  0756                     u1321:
  6094  0756  2F73               	goto	l2110
  6095  0757                     u1320:
  6096  0757                     l2104:
  6097  0757  30FF               	movlw	255
  6098  0758  052E               	andwf	___flmul@grs,w
  6099  0759  00A8               	movwf	??___flmul
  6100  075A  30FF               	movlw	255
  6101  075B  052F               	andwf	___flmul@grs+1,w
  6102  075C  00A9               	movwf	??___flmul+1
  6103  075D  30FF               	movlw	255
  6104  075E  0530               	andwf	___flmul@grs+2,w
  6105  075F  00AA               	movwf	??___flmul+2
  6106  0760  307F               	movlw	127
  6107  0761  0531               	andwf	___flmul@grs+3,w
  6108  0762  00AB               	movwf	??___flmul+3
  6109  0763  082B               	movf	??___flmul+3,w
  6110  0764  042A               	iorwf	??___flmul+2,w
  6111  0765  0429               	iorwf	??___flmul+1,w
  6112  0766  0428               	iorwf	??___flmul,w
  6113  0767  1903               	skipnz
  6114  0768  2F6A               	goto	u1331
  6115  0769  2F6B               	goto	u1330
  6116  076A                     u1331:
  6117  076A  2F6E               	goto	l1091
  6118  076B                     u1330:
  6119  076B                     l2106:
  6120  076B  01B2               	clrf	___flmul@aexp
  6121  076C  0AB2               	incf	___flmul@aexp,f
  6122  076D  2F73               	goto	l2110
  6123  076E                     l1091:
  6124  076E  1C34               	btfss	___flmul@prod,0
  6125  076F  2F71               	goto	u1341
  6126  0770  2F72               	goto	u1340
  6127  0771                     u1341:
  6128  0771  2F73               	goto	l2110
  6129  0772                     u1340:
  6130  0772  2F6B               	goto	l2106
  6131  0773                     l2110:
  6132  0773  0832               	movf	___flmul@aexp,w
  6133  0774  1903               	btfsc	3,2
  6134  0775  2F77               	goto	u1351
  6135  0776  2F78               	goto	u1350
  6136  0777                     u1351:
  6137  0777  2FA0               	goto	l2120
  6138  0778                     u1350:
  6139  0778                     l2112:
  6140  0778  3001               	movlw	1
  6141  0779  07B4               	addwf	___flmul@prod,f
  6142  077A  3000               	movlw	0
  6143  077B  3DB5               	addwfc	___flmul@prod+1,f
  6144  077C  3000               	movlw	0
  6145  077D  3DB6               	addwfc	___flmul@prod+2,f
  6146  077E  3000               	movlw	0
  6147  077F  3DB7               	addwfc	___flmul@prod+3,f
  6148  0780                     l2114:
  6149  0780  1C37               	btfss	___flmul@prod+3,0
  6150  0781  2F83               	goto	u1361
  6151  0782  2F84               	goto	u1360
  6152  0783                     u1361:
  6153  0783  2FA0               	goto	l2120
  6154  0784                     u1360:
  6155  0784                     l2116:
  6156  0784  0834               	movf	___flmul@prod,w
  6157  0785  00A8               	movwf	??___flmul
  6158  0786  0835               	movf	___flmul@prod+1,w
  6159  0787  00A9               	movwf	??___flmul+1
  6160  0788  0836               	movf	___flmul@prod+2,w
  6161  0789  00AA               	movwf	??___flmul+2
  6162  078A  0837               	movf	___flmul@prod+3,w
  6163  078B  00AB               	movwf	??___flmul+3
  6164  078C  3001               	movlw	1
  6165  078D  00AC               	movwf	??___flmul+4
  6166  078E                     u1375:
  6167  078E  37AB               	asrf	??___flmul+3,f
  6168  078F  0CAA               	rrf	??___flmul+2,f
  6169  0790  0CA9               	rrf	??___flmul+1,f
  6170  0791  0CA8               	rrf	??___flmul,f
  6171  0792                     u1370:
  6172  0792  0BAC               	decfsz	??___flmul+4,f
  6173  0793  2F8E               	goto	u1375
  6174  0794  082B               	movf	??___flmul+3,w
  6175  0795  00B7               	movwf	___flmul@prod+3
  6176  0796  082A               	movf	??___flmul+2,w
  6177  0797  00B6               	movwf	___flmul@prod+2
  6178  0798  0829               	movf	??___flmul+1,w
  6179  0799  00B5               	movwf	___flmul@prod+1
  6180  079A  0828               	movf	??___flmul,w
  6181  079B  00B4               	movwf	___flmul@prod
  6182  079C                     l2118:
  6183  079C  3001               	movlw	1
  6184  079D  07B8               	addwf	___flmul@temp,f
  6185  079E  3000               	movlw	0
  6186  079F  3DB9               	addwfc	___flmul@temp+1,f
  6187  07A0                     l2120:
  6188  07A0  0839               	movf	___flmul@temp+1,w
  6189  07A1  3A80               	xorlw	128
  6190  07A2  00A8               	movwf	??___flmul
  6191  07A3  3080               	movlw	128
  6192  07A4  0228               	subwf	??___flmul,w
  6193  07A5  1D03               	skipz
  6194  07A6  2FA9               	goto	u1385
  6195  07A7  30FF               	movlw	255
  6196  07A8  0238               	subwf	___flmul@temp,w
  6197  07A9                     u1385:
  6198  07A9  1C03               	skipc
  6199  07AA  2FAC               	goto	u1381
  6200  07AB  2FAD               	goto	u1380
  6201  07AC                     u1381:
  6202  07AC  2FB7               	goto	l2124
  6203  07AD                     u1380:
  6204  07AD                     l2122:
  6205  07AD  307F               	movlw	127
  6206  07AE  0020               	movlb	0	; select bank0
  6207  07AF  00B7               	movwf	___flmul@prod+3
  6208  07B0  3080               	movlw	128
  6209  07B1  00B6               	movwf	___flmul@prod+2
  6210  07B2  3000               	movlw	0
  6211  07B3  00B5               	movwf	___flmul@prod+1
  6212  07B4  3000               	movlw	0
  6213  07B5  00B4               	movwf	___flmul@prod
  6214  07B6  2FE6               	goto	l1097
  6215  07B7                     l2124:
  6216  07B7  0020               	movlb	0	; select bank0
  6217  07B8  0839               	movf	___flmul@temp+1,w
  6218  07B9  3A80               	xorlw	128
  6219  07BA  00A8               	movwf	??___flmul
  6220  07BB  3080               	movlw	128
  6221  07BC  0228               	subwf	??___flmul,w
  6222  07BD  1D03               	skipz
  6223  07BE  2FC1               	goto	u1395
  6224  07BF  3001               	movlw	1
  6225  07C0  0238               	subwf	___flmul@temp,w
  6226  07C1                     u1395:
  6227  07C1  1803               	skipnc
  6228  07C2  2FC4               	goto	u1391
  6229  07C3  2FC5               	goto	u1390
  6230  07C4                     u1391:
  6231  07C4  2FD0               	goto	l2130
  6232  07C5                     u1390:
  6233  07C5                     l2126:
  6234  07C5  3000               	movlw	0
  6235  07C6  0020               	movlb	0	; select bank0
  6236  07C7  00B7               	movwf	___flmul@prod+3
  6237  07C8  3000               	movlw	0
  6238  07C9  00B6               	movwf	___flmul@prod+2
  6239  07CA  3000               	movlw	0
  6240  07CB  00B5               	movwf	___flmul@prod+1
  6241  07CC  3000               	movlw	0
  6242  07CD  00B4               	movwf	___flmul@prod
  6243  07CE                     l2128:
  6244  07CE  01AD               	clrf	___flmul@sign
  6245  07CF  2FE6               	goto	l1097
  6246  07D0                     l2130:
  6247  07D0  0020               	movlb	0	; select bank0
  6248  07D1  0838               	movf	___flmul@temp,w
  6249  07D2  00A8               	movwf	??___flmul
  6250  07D3  0828               	movf	??___flmul,w
  6251  07D4  00B3               	movwf	___flmul@bexp
  6252  07D5  30FF               	movlw	255
  6253  07D6  05B4               	andwf	___flmul@prod,f
  6254  07D7  30FF               	movlw	255
  6255  07D8  05B5               	andwf	___flmul@prod+1,f
  6256  07D9  307F               	movlw	127
  6257  07DA  05B6               	andwf	___flmul@prod+2,f
  6258  07DB  3000               	movlw	0
  6259  07DC  05B7               	andwf	___flmul@prod+3,f
  6260  07DD                     l2132:
  6261  07DD  1C33               	btfss	___flmul@bexp,0
  6262  07DE  2FE0               	goto	u1401
  6263  07DF  2FE1               	goto	u1400
  6264  07E0                     u1401:
  6265  07E0  2FE2               	goto	l2136
  6266  07E1                     u1400:
  6267  07E1                     l2134:
  6268  07E1  17B6               	bsf	___flmul@prod+2,7
  6269  07E2                     l2136:
  6270  07E2  3633               	lsrf	___flmul@bexp,w
  6271  07E3  00A8               	movwf	??___flmul
  6272  07E4  0828               	movf	??___flmul,w
  6273  07E5  00B7               	movwf	___flmul@prod+3
  6274  07E6                     l1097:
  6275  07E6  082D               	movf	___flmul@sign,w
  6276  07E7  00A8               	movwf	??___flmul
  6277  07E8  0828               	movf	??___flmul,w
  6278  07E9  04B7               	iorwf	___flmul@prod+3,f
  6279  07EA                     l2138:
  6280  07EA  0837               	movf	___flmul@prod+3,w
  6281  07EB  00A3               	movwf	?___flmul+3
  6282  07EC  0836               	movf	___flmul@prod+2,w
  6283  07ED  00A2               	movwf	?___flmul+2
  6284  07EE  0835               	movf	___flmul@prod+1,w
  6285  07EF  00A1               	movwf	?___flmul+1
  6286  07F0  0834               	movf	___flmul@prod,w
  6287  07F1  00A0               	movwf	?___flmul
  6288  07F2                     l1085:
  6289  07F2  0008               	return
  6290  07F3                     __end_of___flmul:
  6291                           
  6292                           	psect	text30
  6293  0FBA                     __ptext30:	
  6294 ;; *************** function __Umul8_16 *****************
  6295 ;; Defined at:
  6296 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8_16.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  multiplier      1    wreg     unsigned char 
  6299 ;;  multiplicand    1    0[COMMON] unsigned char 
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  multiplier      1    8[COMMON] unsigned char 
  6302 ;;  word_mpld       2    6[COMMON] unsigned int 
  6303 ;;  product         2    4[COMMON] unsigned int 
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  2    0[COMMON] unsigned int 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6313 ;;      Params:         2       0       0       0       0       0
  6314 ;;      Locals:         5       0       0       0       0       0
  6315 ;;      Temps:          2       0       0       0       0       0
  6316 ;;      Totals:         9       0       0       0       0       0
  6317 ;;Total ram usage:        9 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		___flmul
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           
  6327                           ;psect for function __Umul8_16
  6328  0FBA                     __Umul8_16:
  6329                           
  6330                           ;incstack = 0
  6331                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6332                           ;__Umul8_16@multiplier stored from wreg
  6333  0FBA  00F8               	movwf	__Umul8_16@multiplier
  6334  0FBB                     l1840:
  6335  0FBB  01F4               	clrf	__Umul8_16@product
  6336  0FBC  01F5               	clrf	__Umul8_16@product+1
  6337  0FBD                     l1842:
  6338  0FBD  0870               	movf	__Umul8_16@multiplicand,w
  6339  0FBE  00F2               	movwf	??__Umul8_16
  6340  0FBF  01F3               	clrf	??__Umul8_16+1
  6341  0FC0  0872               	movf	??__Umul8_16,w
  6342  0FC1  00F6               	movwf	__Umul8_16@word_mpld
  6343  0FC2  0873               	movf	??__Umul8_16+1,w
  6344  0FC3  00F7               	movwf	__Umul8_16@word_mpld+1
  6345  0FC4                     l1844:
  6346  0FC4  1C78               	btfss	__Umul8_16@multiplier,0
  6347  0FC5  2FC7               	goto	u881
  6348  0FC6  2FC8               	goto	u880
  6349  0FC7                     u881:
  6350  0FC7  2FCC               	goto	l1104
  6351  0FC8                     u880:
  6352  0FC8                     l1846:
  6353  0FC8  0876               	movf	__Umul8_16@word_mpld,w
  6354  0FC9  07F4               	addwf	__Umul8_16@product,f
  6355  0FCA  0877               	movf	__Umul8_16@word_mpld+1,w
  6356  0FCB  3DF5               	addwfc	__Umul8_16@product+1,f
  6357  0FCC                     l1104:
  6358  0FCC  3001               	movlw	1
  6359  0FCD                     u895:
  6360  0FCD  35F6               	lslf	__Umul8_16@word_mpld,f
  6361  0FCE  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6362  0FCF  0B89               	decfsz	9,f
  6363  0FD0  2FCD               	goto	u895
  6364  0FD1  1003               	clrc
  6365  0FD2  0CF8               	rrf	__Umul8_16@multiplier,f
  6366  0FD3                     l1848:
  6367  0FD3  0878               	movf	__Umul8_16@multiplier,w
  6368  0FD4  1D03               	btfss	3,2
  6369  0FD5  2FD7               	goto	u901
  6370  0FD6  2FD8               	goto	u900
  6371  0FD7                     u901:
  6372  0FD7  2FC4               	goto	l1844
  6373  0FD8                     u900:
  6374  0FD8                     l1850:
  6375  0FD8  0875               	movf	__Umul8_16@product+1,w
  6376  0FD9  00F1               	movwf	?__Umul8_16+1
  6377  0FDA  0874               	movf	__Umul8_16@product,w
  6378  0FDB  00F0               	movwf	?__Umul8_16
  6379  0FDC                     l1106:
  6380  0FDC  0008               	return
  6381  0FDD                     __end_of__Umul8_16:
  6382                           
  6383                           	psect	text31
  6384  0F09                     __ptext31:	
  6385 ;; *************** function _ADC_StartConversion *****************
  6386 ;; Defined at:
  6387 ;;		line 93 in file "mcc_generated_files/adc.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		None
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6401 ;;      Params:         0       0       0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0
  6404 ;;      Totals:         0       0       0       0       0       0
  6405 ;;Total ram usage:        0 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_main
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           
  6415                           ;psect for function _ADC_StartConversion
  6416  0F09                     _ADC_StartConversion:
  6417  0F09                     l2218:	
  6418                           ;incstack = 0
  6419                           ; Regs used in _ADC_StartConversion: []
  6420                           
  6421                           
  6422                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
  6423  0F09  0021               	movlb	1	; select bank1
  6424  0F0A  149D               	bsf	29,1	;volatile
  6425  0F0B                     l171:
  6426  0F0B  0008               	return
  6427  0F0C                     __end_of_ADC_StartConversion:
  6428                           
  6429                           	psect	text32
  6430  0F68                     __ptext32:	
  6431 ;; *************** function _ADC_SelectChannel *****************
  6432 ;; Defined at:
  6433 ;;		line 85 in file "mcc_generated_files/adc.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;  channel         1    wreg     enum E2476
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;  channel         1    1[COMMON] enum E2476
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1    wreg      void 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2, status,0
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6447 ;;      Params:         0       0       0       0       0       0
  6448 ;;      Locals:         1       0       0       0       0       0
  6449 ;;      Temps:          1       0       0       0       0       0
  6450 ;;      Totals:         2       0       0       0       0       0
  6451 ;;Total ram usage:        2 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_main
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           
  6461                           ;psect for function _ADC_SelectChannel
  6462  0F68                     _ADC_SelectChannel:
  6463                           
  6464                           ;incstack = 0
  6465                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  6466                           ;ADC_SelectChannel@channel stored from wreg
  6467  0F68  00F1               	movwf	ADC_SelectChannel@channel
  6468  0F69                     l2214:
  6469                           
  6470                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
  6471  0F69  0871               	movf	ADC_SelectChannel@channel,w
  6472  0F6A  00F0               	movwf	??_ADC_SelectChannel
  6473  0F6B  0DF0               	rlf	??_ADC_SelectChannel,f
  6474  0F6C  0DF0               	rlf	??_ADC_SelectChannel,f
  6475  0F6D  0021               	movlb	1	; select bank1
  6476  0F6E  081D               	movf	29,w	;volatile
  6477  0F6F  0670               	xorwf	??_ADC_SelectChannel,w
  6478  0F70  3983               	andlw	-125
  6479  0F71  0670               	xorwf	??_ADC_SelectChannel,w
  6480  0F72  009D               	movwf	29	;volatile
  6481  0F73                     l2216:
  6482                           
  6483                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
  6484  0F73  141D               	bsf	29,0	;volatile
  6485  0F74                     l168:
  6486  0F74  0008               	return
  6487  0F75                     __end_of_ADC_SelectChannel:
  6488                           
  6489                           	psect	text33
  6490  0F27                     __ptext33:	
  6491 ;; *************** function _ADC_IsConversionDone *****************
  6492 ;; Defined at:
  6493 ;;		line 100 in file "mcc_generated_files/adc.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      _Bool 
  6500 ;; Registers used:
  6501 ;;		wreg, status,0
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6507 ;;      Params:         0       0       0       0       0       0
  6508 ;;      Locals:         0       0       0       0       0       0
  6509 ;;      Temps:          0       0       0       0       0       0
  6510 ;;      Totals:         0       0       0       0       0       0
  6511 ;;Total ram usage:        0 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		_main
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           
  6521                           ;psect for function _ADC_IsConversionDone
  6522  0F27                     _ADC_IsConversionDone:
  6523  0F27                     l2220:	
  6524                           ;incstack = 0
  6525                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  6526                           
  6527                           
  6528                           ;mcc_generated_files/adc.c: 103:    return ((_Bool)(!ADCON0bits.GO_nDONE));
  6529  0F27  1003               	clrc
  6530  0F28  0021               	movlb	1	; select bank1
  6531  0F29  1C9D               	btfss	29,1	;volatile
  6532  0F2A  1403               	setc
  6533  0F2B  3000               	movlw	0
  6534  0F2C  3D09               	addwfc	9,w
  6535  0F2D                     l174:
  6536  0F2D  0008               	return
  6537  0F2E                     __end_of_ADC_IsConversionDone:
  6538                           
  6539                           	psect	text34
  6540  0F0F                     __ptext34:	
  6541 ;; *************** function _ADC_GetConversionResult *****************
  6542 ;; Defined at:
  6543 ;;		line 106 in file "mcc_generated_files/adc.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;		None
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;		None
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  2    0[COMMON] unsigned short 
  6550 ;; Registers used:
  6551 ;;		wreg
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6557 ;;      Params:         2       0       0       0       0       0
  6558 ;;      Locals:         0       0       0       0       0       0
  6559 ;;      Temps:          0       0       0       0       0       0
  6560 ;;      Totals:         2       0       0       0       0       0
  6561 ;;Total ram usage:        2 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_main
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           
  6571                           ;psect for function _ADC_GetConversionResult
  6572  0F0F                     _ADC_GetConversionResult:
  6573  0F0F                     l2224:	
  6574                           ;incstack = 0
  6575                           ; Regs used in _ADC_GetConversionResult: [wreg]
  6576                           
  6577                           
  6578                           ;mcc_generated_files/adc.c: 109:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6579  0F0F  0021               	movlb	1	; select bank1
  6580  0F10  081C               	movf	28,w	;volatile
  6581  0F11  00F1               	movwf	?_ADC_GetConversionResult+1
  6582  0F12  081B               	movf	27,w	;volatile
  6583  0F13  00F0               	movwf	?_ADC_GetConversionResult
  6584  0F14                     l177:
  6585  0F14  0008               	return
  6586  0F15                     __end_of_ADC_GetConversionResult:
  6587  007E                     btemp	set	126	;btemp
  6588  007E                     wtemp0	set	126
  6589                           
  6590                           	psect	config
  6591                           
  6592                           ;Config register CONFIG1 @ 0x8007
  6593                           ;	Oscillator Selection
  6594                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6595                           ;	Watchdog Timer Enable
  6596                           ;	WDTE = OFF, WDT disabled
  6597                           ;	Power-up Timer Enable
  6598                           ;	PWRTE = OFF, PWRT disabled
  6599                           ;	MCLR Pin Function Select
  6600                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6601                           ;	Flash Program Memory Code Protection
  6602                           ;	CP = OFF, Program memory code protection is disabled
  6603                           ;	Data Memory Code Protection
  6604                           ;	CPD = OFF, Data memory code protection is disabled
  6605                           ;	Brown-out Reset Enable
  6606                           ;	BOREN = ON, Brown-out Reset enabled
  6607                           ;	Clock Out Enable
  6608                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6609                           ;	Internal/External Switchover
  6610                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6611                           ;	Fail-Safe Clock Monitor Enable
  6612                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6613  8007                     	org	32775
  6614  8007  3FE4               	dw	16356
  6615                           
  6616                           ;Config register CONFIG2 @ 0x8008
  6617                           ;	Flash Memory Self-Write Protection
  6618                           ;	WRT = OFF, Write protection off
  6619                           ;	PLL Enable
  6620                           ;	PLLEN = ON, 4x PLL enabled
  6621                           ;	Stack Overflow/Underflow Reset Enable
  6622                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6623                           ;	Brown-out Reset Voltage Selection
  6624                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6625                           ;	Low-Voltage Programming Enable
  6626                           ;	LVP = ON, Low-voltage programming enabled
  6627  8008                     	org	32776
  6628  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      57
    BANK1            80     43      43
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tm_Baje_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK1[9]), 

    Tm_Hubo_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK1[9]), 

    Tm_Procese_tiempo@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1ms(BANK1[9]), 

    Tm_Inicie_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 9
		 -> main@timer_1000ms(BANK1[9]), main@timer_1ms(BANK1[9]), 

    Ds_Procese_displays@dsp	PTR struct Ds_Display size(1) Largest target is 8
		 -> main@seven_seg(BANK1[8]), 

    Ds_Convertir_en_uni@dsp	PTR struct Ds_Display size(1) Largest target is 8
		 -> main@seven_seg(BANK1[8]), 

    Ds_Iniciar_displays@dsp	PTR struct Ds_Display size(1) Largest target is 8
		 -> main@seven_seg(BANK1[8]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _Ds_Procese_displays->_Ds_BCD
    _Ds_Procese_displays->_Ds_Encienda_Disp
    _Ds_Convertir_en_uni->___lwdiv
    _Ds_Conversor_ADC->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _main->_Ds_Conversor_ADC
    _Ds_Conversor_ADC->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0    7933
                                             45 BANK0      3     3      0
                                              0 BANK1     43    43      0
            _ADC_GetConversionResult
                     _ADC_Initialize
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                   _Ds_Conversor_ADC
                _Ds_Convertir_en_uni
                _Ds_Iniciar_displays
                _Ds_Procese_displays
                       _EUSART_Write
                 _EUSART_is_tx_ready
                  _SYSTEM_Initialize
            _TMR6_HasOverflowOccured
                    _TMR6_StartTimer
                  _Tm_Baje_periodico
                  _Tm_Hubo_periodico
                _Tm_Inicie_periodico
                  _Tm_Procese_tiempo
 ---------------------------------------------------------------------------------
 (1) _Tm_Procese_tiempo                                    5     5      0     231
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Tm_Inicie_periodico                                  4     2      2     328
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Hubo_periodico                                    1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Tm_Baje_periodico                                    2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR6_HasOverflowOccured                              1     1      0      45
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Procese_displays                                  3     3      0     825
                                              3 COMMON     3     3      0
                             _Ds_BCD
                   _Ds_Encienda_Disp
 ---------------------------------------------------------------------------------
 (2) _Ds_Encienda_Disp                                     3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ds_BCD                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Ds_Iniciar_displays                                  7     2      5     743
                                              0 COMMON     7     2      5
 ---------------------------------------------------------------------------------
 (1) _Ds_Convertir_en_uni                                  4     2      2    1368
                                              8 COMMON     4     2      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Ds_Conversor_ADC                                     8     6      2    3264
                                             37 BANK0      8     6      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     305
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_Initialize
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _Ds_Conversor_ADC
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Ds_Convertir_en_uni
     ___lwdiv
     ___lwmod
   _Ds_Iniciar_displays
   _Ds_Procese_displays
     _Ds_BCD
     _Ds_Encienda_Disp
   _EUSART_Write
   _EUSART_is_tx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR6_HasOverflowOccured
   _TMR6_StartTimer
   _Tm_Baje_periodico
   _Tm_Hubo_periodico
   _Tm_Inicie_periodico
   _Tm_Procese_tiempo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      72       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     30      39       6       71.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2B      2B       8       53.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      72      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 31 19:21:44 2021

                  __end_of_Ds_Convertir_en_uni 0195                                             l13 0F51  
                                           l32 0F81                                             l16 0006  
                                           l57 0FB9                __end_of_TMR6_HasOverflowOccured 0F82  
                            ??_TMR6_StartTimer 0070                            __Umul8_16@word_mpld 0076  
                                          l103 0FFF                                            l130 0F47  
                                          l211 0FA3                                            l108 0F90  
                                          l220 0F0E                                            l301 0033  
                                          l310 0039                                            l142 0F20  
                                          l214 0F62                                            l303 0034  
                                          l127 0F3F                                            l312 0051  
                                          l401 029E                                            l321 026F  
                                          l145 0F26                                            l217 0F67  
                                          l410 02A4                                            l306 0036  
                                          l171 0F0B                                            l403 029F  
                                          l323 0270                                            l420 02A9  
                                          l412 02A5                                            l308 0038  
                                          l148 0F1A                                            l405 02A0  
                                          l341 027A                                            l333 0275  
                                          l325 0271                                            l317 026C  
                                          l165 0F35                                            l174 0F2D  
                                          l414 02A6                                            l350 0280  
                                          l431 02B0                                            l423 02AB  
                                          l343 027B                                            l335 0277  
                                          l327 0272                                            l319 026E  
                                          l168 0F74                                            l440 02B6  
                                          l416 02A7                                            l408 02A2  
                                          l360 0285                                            l352 0281  
                                          l512 0024                                            l177 0F14  
                                          l433 02B1                                            l425 02AD  
                                          l345 027C                                            l337 0278  
                                          l329 0273                                            l521 0F3D  
                                          l450 02BB                                            l442 02B7  
                                          l418 02A8                                            l354 0282  
                                          l435 02B2                                            l427 02AE  
                                          l371 028C                                            l363 0287  
                                          l339 0279                                            l444 02B8  
                                          l380 0292                                            l356 0283  
                                          l348 027E                                            l292 002C  
                                          l284 0027                                            l524 0F5B  
                                          l461 02C2                                            l453 02BD  
                                          l429 02AF                                            l373 028D  
                                          l365 0289                                            l509 059B  
                                          l470 02C8                                            l446 02B9  
                                          l438 02B4                                            l390 0297  
                                          l382 0293                                            l358 0284  
                                          l294 002E                                            l286 0029  
                                          l518 01F4                                            l279 013C  
                                          l463 02C3                                            l455 02BF  
                                          l375 028E                                            l367 028A  
                                          l480 02CD                                            l472 02C9  
                                          l448 02BA                                            l384 0294  
                                          l296 002F                                            l288 002A  
                                          l465 02C4                                            l457 02C0  
                                          l393 0299                                            l369 028B  
                                          l474 02CA                                            l386 0295  
                                          l378 0290                                            l482 02FA  
                                          l459 02C1                                            l395 029B  
                                          l299 0031                                            l476 02CB  
                                          l468 02C6                                            l388 0296  
                                          l485 0194                                            l397 029C  
                                          l478 02CC                                            l399 029D  
                                          l488 00FE                                            l882 0269  
                                          l892 0269                                            l968 00C1  
                                          l889 0254                                            l978 0085  
                                          _PR6 041D                                            u900 0FD8  
                                          u901 0FD7                                            u910 0F67  
                                          u911 0F66                                            u920 0201  
                                          u921 0200                                            u930 0217  
                                          u940 022C                                            u941 022B  
                                          u950 0233                                            u951 0232  
                                          u935 0213                                            u880 0FC8  
                                          u881 0FC7                                            u970 0243  
                                          u971 0242                                            u980 024A  
                                          u981 0249                                            u965 0235  
                                          u895 0FCD                                            u995 024C  
               ?_EUSART_SetFramingErrorHandler 0070                                            wreg 0009  
                                 ___flmul@aexp 0032                                   ___flmul@bexp 0033  
                                 ___flmul@sign 002D                                   ___flmul@temp 0038  
                                 ___flmul@prod 0034                                   ___fltol@exp1 0044  
                                         l1104 0FCC                                           l1106 0FDC  
                                         l2010 05AB                                           l2002 059C  
                                         l1131 03A6                                           l2100 0752  
                                         l2020 05C7                                           l2012 05B0  
                                         l2004 05A2                                           l2110 0773  
                                         l2102 0753                                           l2030 05DA  
                                         l2022 05CC                                           l2014 05B5  
                                         l2006 05A6                                           l1142 0372  
                                         l1143 037E                                           l1135 0358  
                                         l2112 0778                                           l2120 07A0  
                                         l2104 0757                                           l2040 05F6  
                                         l2032 05DF                                           l2024 05D0  
                                         l2016 05BD                                           l2008 05AA  
                                         l2200 0F83                                           l1129 031D  
                                         l2130 07D0                                           l2122 07AD  
                                         l2114 0780                                           l2106 076B  
                                         l2050 061E                                           l2042 05FB  
                                         l2034 05E7                                           l2026 05D4  
                                         l2018 05BF                                           l2210 0F3F  
                                         l2202 0F88                                           l1091 076E  
                                         l2220 0F27                                           l2132 07DD  
                                         l2124 07B7                                           l2116 0784  
                                         l2060 0679                                           l2052 0638  
                                         l2036 05E9                                           l2028 05D5  
                                         l2300 0507                                           l2212 0F44  
                                         l2204 0F8D                                           l1085 07F2  
                                         l2214 0F69                                           l2134 07E1  
                                         l2126 07C5                                           l2118 079C  
                                         l2070 06A8                                           l2062 0680  
                                         l2054 0645                                           l2046 0604  
                                         l2038 05F1                                           l2150 0325  
                                         l2142 02FC                                           l2310 0535  
                                         l2302 050E                                           l2206 0F8F  
                                         l2230 0F97                                           l2224 0F0F  
                                         l2216 0F73                                           l2136 07E2  
                                         l2128 07CE                                           l2080 06F8  
                                         l2072 06BC                                           l2064 068D  
                                         l2056 065F                                           l2048 0611  
                                         l2160 0345                                           l2144 0301  
                                         l2240 0100                                           l2320 0562  
                                         l2312 0541                                           l2304 051A  
                                         l2232 0F9A                                           l2400 0434  
                                         l1097 07E6                                           l2218 0F09  
                                         l2138 07EA                                           l2090 073E  
                                         l2082 070D                                           l2074 06C3  
                                         l2066 0694                                           l2058 066C  
                                         l2170 036C                                           l2162 0349  
                                         l2154 032E                                           l2146 0305  
                                         l2250 012C                                           l2242 010C  
                                         l2322 056E                                           l2314 0545  
                                         l2306 051F                                           l2234 0F9D  
                                         l2402 0439                                           l2410 044D  
                                         l2092 0742                                           l2084 0724  
                                         l2076 06D7                                           l2068 06A1  
                                         l2180 039D                                           l2172 0376  
                                         l2164 0351                                           l2156 0333  
                                         l2148 0315                                           l2340 00CB  
                                         l2252 0134                                           l2244 0114  
                                         l2324 0573                                           l2316 054E  
                                         l2308 052E                                           l2236 0FA0  
                                         l2228 0F91                                           l2332 0F37  
                                         l2260 01B0                                           l2412 0455  
                                         l2404 043E                                           l2094 0743  
                                         l2086 072B                                           l2078 06E4  
                                         l2182 039E                                           l2174 0380  
                                         l2166 035F                                           l2158 033E  
                                         l2342 00FA                                           l2350 015F  
                                         l2246 011C                                           l2318 055D  
                                         l2270 0474                                           l2326 057C  
                                         l2190 0F7A                                           l2238 0008  
                                         l2262 01B5                                           l2254 0196  
                                         l2414 045D                                           l2406 0443  
                                         l2096 074A                                           l2088 0737  
                                         l2176 0394                                           l2168 0368  
                                         l2352 0181                                           l2248 0124  
                                         l2280 04A2                                           l2272 0483  
                                         l2192 0F7F                                           l2336 0F53  
                                         l2256 019E                                           l2264 01C0  
                                         l2416 0467                                           l2408 0448  
                                         l2098 074E                                           l2178 0399  
                                         l2338 00C2                                           l2346 013E  
                                         l2290 04D8                                           l2282 04B1  
                                         l2274 048A                                           l2194 0F80  
                                         l2186 0004                                           l2266 01D4  
                                         l2258 01A7                                           l2370 03AD  
                                         l2348 0150                                           l2292 04DF  
                                         l2284 04B8                                           l2276 0496  
                                         l2268 0473                                           l2188 0F75  
                                         l2380 03CF                                           l2372 03B5  
                                         l1902 003B                                           l2294 04EB  
                                         l2286 04C4                                           l2278 049A  
                                         l2198 0F82                                           l2390 03FF  
                                         l2382 03D1                                           l2374 03BA  
                                         l2366 03A7                                           l1840 0FBB  
                                         l1920 0201                                           l1912 02CF  
                                         l2480 0043                                           l2296 04EF  
                                         l2288 04C9                                           l2392 0403  
                                         l2384 03E6                                           l2376 03C2  
                                         l2368 03AA                                           l1850 0FD8  
                                         l1842 0FBD                                           l1930 0226  
                                         l2482 02D7                                           l2298 04F8  
                                         l1834 0F1B                                           l2394 0406  
                                         l2386 03EE                                           l2378 03C5  
                                         l1844 0FC4                                           l1940 0234  
                                         l1932 0228                                           l1924 020A  
                                         l1908 026B                                           l1836 0F21  
                                         l1860 0F4E                                           l2396 040E  
                                         l2388 03F6                                           l1846 0FC8  
                                         l1950 0259                                           l1934 022C  
                                         l1942 0244                                           l1926 021D  
                                         l1918 01F5                                           l2478 0587  
                                         l1838 0F15                                           l1870 0FAF  
                                         l1862 0FA4                                           l1854 0F48  
                                         l2398 0430                                           l1848 0FD3  
                                         l1952 025E                                           l1928 021E  
                                         l1960 0091                                           l1880 0FF6  
                                         l1872 0FB4                                           l1864 0FA7  
                                         l1856 0F4B                                           l1970 00B1  
                                         l1962 0096                                           l1954 0086  
                                         l1882 0FFD                                           l1874 0FDD  
                                         l1890 0F5C                                           l1866 0FAA  
                                         l1858 0F4C                                           l1948 024B  
                                         l1972 00B2                                           l1964 009A  
                                         l1956 0088                                           l1980 0052  
                                         l1884 0F2E                                           l1876 0FE8  
                                         l1892 0F5F                                           l1868 0FAC  
                                         l1974 00B7                                           l1966 009E  
                                         l1958 008E                                           l1990 0068  
                                         l1982 0058                                           l1886 0F31  
                                         l1878 0FEF                                           l1894 0F60  
                                         l1968 00AD                                           l1976 00BD  
                                         l1992 0072                                           l1984 005B  
                                         l1888 0F32                                           l1896 0F0C  
                                         l1994 0076                                           l1986 0060  
                                         l1898 0026                                           l1996 007B  
                                         l1988 0064                                           l1998 0081  
                                         u1000 0259                                           u1001 0258  
                                         u1010 025E                                           u1011 025D  
                                         u1020 008E                                           u1021 008D  
                                         u1110 0068                                           u1111 0067  
                                         u1200 05DF                                           u1040 009E  
                                         u1120 0072                                           u1201 05DE  
                                         u1041 009D                                           u1121 0071  
                                         u1105 005C                                           u1210 05F6  
                                         u1211 05F5                                           u1035 0092  
                                         u1220 05FB                                           u1060 00AD  
                                         u1140 0081                                           u1221 05FA  
                                         u1061 00AC                                           u1141 0080  
                                         u1125 006E                                           u1310 0752  
                                         u1150 05AA                                           u1311 0751  
                                         u1151 05A9                                           u1055 009F  
                                         u1135 0077                                           u1400 07E1  
                                         u1320 0757                                           u1160 05B0  
                                         u1080 00BD                                           u1401 07E0  
                                         u1321 0756                                           u1305 0744  
                                         u1161 05AF                                           u1081 00BC  
                                         u1065 00A9                                           u1330 076B  
                                         u1250 0703                                           u1170 05B5  
                                         u1410 0301                                           u1090 0058  
                                         u1331 076A                                           u1235 067A  
                                         u1171 05B4                                           u1411 0300  
                                         u1075 00B3                                           u1091 0057  
                                         u1340 0772                                           u1260 071A  
                                         u1180 05D4                                           u1500 0372  
                                         u1420 0305                                           u1341 0771  
                                         u1245 06A9                                           u1181 05D3  
                                         u1501 0371                                           u1421 0304  
                                         _LATA 010C                                           u1350 0778  
                                         u1190 05DA                                           u1510 0376  
                                         u1430 0325                                           _LATB 010D  
                                         u1351 0777                                           u1255 06FF  
                                         u1191 05D9                                           u1511 0375  
                                         u1431 0324                                           u1360 0784  
                                         u1520 038A                                           u1600 01B0  
                                         u1361 0783                                           u1265 0716  
                                         u1601 01AF                                           u1370 0792  
                                         u1290 0742                                           u1530 0399  
                                         u1450 0344                                           u1610 01D4  
                                         u1291 0741                                           u1275 0725  
                                         u1531 0398                                           u1451 0343  
                                         u1611 01D3                                           u1380 07AD  
                                         u1540 039D                                           u1620 0483  
                                         u1700 03EE                                           u1381 07AC  
                                         u1285 0738                                           u1541 039C  
                                         u1525 0386                                           u1445 0338  
                                         u1621 0482                                           u1701 03ED  
                                         u1390 07C5                                           u1470 035E  
                                         u1630 04B1                                           u1550 0F7F  
                                         u1710 03FF                                           u1391 07C4  
                                         u1375 078E                                           u1471 035D  
                                         u1631 04B0                                           u1551 0F7E  
                                         u1711 03FE                                           u1640 04D8  
                                         u1560 0F88                                           u1720 040E  
                                         u1385 07A9                                           u1465 0352  
                                         u1641 04D7                                           u1561 0F87  
                                         u1721 040D                                           u1490 036C  
                                         u1650 0507                                           u1570 0F8D  
                                         u1730 0455                                           u1395 07C1  
                                         u1491 036B                                           u1651 0506  
                                         u1571 0F8C                                           u1731 0454  
                                         u1660 052E                                           u1580 0F44  
                                         u1485 0362                                           u1661 052D  
                                         u1581 0F43                                           u1670 055D  
                                         u1590 019E                                           u1671 055C  
                                         u1591 019D                                           _PLLR 04D6  
                                         _TMR6 041C                     Ds_Convertir_en_uni@voltaje 0078  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _main 03A7                                           fsr0h 0005  
                                         fsr1h 0007                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                       __end_of_Ds_Conversor_ADC 00FF  
                      Ds_Encienda_Disp@dispNum 0072                                           start 0002  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 000C  
                __end_of_OSCILLATOR_Initialize 0F68                                  ___fltol@sign1 0043  
                                        ?_main 0070                                __end_of___flmul 07F3  
                              __end_of___fltol 026A                                          _T6CON 041E  
                              __end_of___lwdiv 00C2                                __end_of___lwmod 0086  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
             __size_of_ADC_GetConversionResult 0006                              ?_Ds_Encienda_Disp 0070  
                               Ds_BCD@segmento 0072                             ??_Ds_Encienda_Disp 0070  
                               _WDT_Initialize 0F0C                                          status 0003  
                                        wtemp0 007E                                   main@volt_ADC 00A0  
                  __end_of_Tm_Inicie_periodico 0025                                __initialization 07F3  
                          _Ds_Procese_displays 0472                                   __end_of_main 0472  
                            _Tm_Baje_periodico 0F52                                 ??_EUSART_Write 0070  
                           ?_Tm_Baje_periodico 0070                                         ??_main 004D  
                 __size_of_Ds_Iniciar_displays 003E                         __end_of_WDT_Initialize 0F0F  
                              _TMR6_Initialize 0F48                  __size_of_ADC_IsConversionDone 0007  
                          ??_Tm_Baje_periodico 0070                           ?_Ds_Procese_displays 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0054  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                     __end_of_EUSART_is_tx_ready 0F91  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
             __size_of_TMR6_HasOverflowOccured 000D                               __end_of___xxtofl 03A7  
                                       _Ds_BCD 026A                      __end_of_Tm_Baje_periodico 0F5C  
                                    ??___flmul 0028                                      ??___fltol 003E  
                            _Tm_Hubo_periodico 0F36                                      ??___lwdiv 0074  
                                    ??___lwmod 0074                             ?_Tm_Hubo_periodico 0070  
                                main@valor_ADC 00A3                                  main@seven_seg 00C3  
                                main@timer_1ms 00BA                             __size_of__Umul8_16 0023  
                              ?_WDT_Initialize 0070                          ??_Ds_Procese_displays 0073  
                          ??_Tm_Hubo_periodico 0070                                   ___xxtofl@arg 007A  
                                 ___xxtofl@exp 0079                              _SYSTEM_Initialize 0F91  
                                 ___xxtofl@val 0070                        __end_of__initialization 07FD  
                        Ds_Iniciar_displays@d1 0070                          Ds_Iniciar_displays@d2 0071  
                        Ds_Iniciar_displays@d3 0072                          Ds_Iniciar_displays@tA 0074  
                        Ds_Iniciar_displays@tE 0073                             ?_SYSTEM_Initialize 0070  
                              _TMR6_StartTimer 0004                                     ___fltol@f1 003A  
                    __end_of_Tm_Hubo_periodico 0F3E                   __size_of_ADC_StartConversion 0003  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0072  
                      __end_of_TMR6_Initialize 0F52                        _ADC_GetConversionResult 0F0F  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                    __end_of_SYSTEM_Initialize 0FA4                                     __pbssBANK0 0050  
                         __end_of_EUSART_Write 0F48                                        ?_Ds_BCD 0070  
                            ?_Ds_Conversor_ADC 0045                              __end_of__Umul8_16 0FDD  
                                   __pmaintext 03A7                             ??_Ds_Conversor_ADC 007E  
                   __size_of_Tm_Baje_periodico 000A                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                      __size_of_ADC_Initialize 0008                                      ?___xxtofl 0070  
                 __size_of_Ds_Convertir_en_uni 0058                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0072                        __end_of_TMR6_StartTimer 0007  
                            _Tm_Procese_tiempo 0195                        _TMR6_HasOverflowOccured 0F75  
                           ?_Tm_Procese_tiempo 0070                            _Ds_Iniciar_displays 00FF  
                              __size_of_Ds_BCD 0091                      __size_of_Ds_Encienda_Disp 002D  
                         _ADC_InterruptHandler 0050                            ??_Tm_Procese_tiempo 0070  
                   __size_of_Tm_Hubo_periodico 0008                                        ___flmul 059C  
                                      ___fltol 01F5                                        ___lwdiv 0086  
                                      ___lwmod 0052                      ??_ADC_GetConversionResult 0072  
                             ?_TMR6_Initialize 0070                                        __ptext1 0195  
                                      __ptext2 0007                                        __ptext3 0F36  
                                      __ptext4 0F52                                        __ptext5 0004  
                                      __ptext6 0F75                                        __ptext7 0F91  
                                      __ptext8 0F0C                                        __ptext9 0F48  
                         ?_Ds_Iniciar_displays 0070                          _OSCILLATOR_Initialize 0F5C  
                                   ??___xxtofl 0074                       ??_PIN_MANAGER_Initialize 0070  
                    __end_of_Tm_Procese_tiempo 01F5                                      _T6CONbits 041E  
                   __size_of_SYSTEM_Initialize 0013                           end_of_initialization 07FD  
                    Ds_Conversor_ADC@pendiente 0047          __end_of_EUSART_SetOverrunErrorHandler 0F27  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0F21  
                       Ds_Procese_displays@dsp 0075                              _EUSART_Initialize 0FDD  
                 __end_of_ADC_IsConversionDone 0F2E                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                         Ds_Conversor_ADC@adcOUT 0045  
                           _EUSART_is_tx_ready 0F82                   __size_of_Tm_Inicie_periodico 001E  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                        ??_Ds_Iniciar_displays 0075                            ?_EUSART_is_tx_ready 0070  
                TMR6_HasOverflowOccured@status 0070                                  ___xxtofl@sign 0078  
                              main@AN1_Channel 00A2                          __size_of_EUSART_Write 000A  
                          _ADC_StartConversion 0F09                      ??_TMR6_HasOverflowOccured 0070  
                       Ds_Iniciar_displays@dsp 0076                __size_of_EUSART_SetErrorHandler 0006  
                             ?_TMR6_StartTimer 0070                                    ___flmul@grs 002E  
                    __end_of_EUSART_Initialize 1000                           ??_EUSART_is_tx_ready 0070  
                                    _TXSTAbits 019E                                 __end_of_Ds_BCD 02FB  
                         ?_ADC_StartConversion 0070                     _EUSART_DefaultErrorHandler 0000  
                                 _EUSART_Write 0F3E                    __end_of_Ds_Procese_displays 059C  
                               _ADC_Initialize 0F2E                         ?_OSCILLATOR_Initialize 0070  
                         Tm_Procese_tiempo@ctp 0074                            start_initialization 07F3  
                   __size_of_Tm_Procese_tiempo 0060                __size_of_PIN_MANAGER_Initialize 0016  
                       _EUSART_is_tx_ready$291 0070                                       ??_Ds_BCD 0070  
                             _Ds_Encienda_Disp 0025                            _Ds_Convertir_en_uni 013D  
               ?_EUSART_SetOverrunErrorHandler 0070                          ??_ADC_StartConversion 0070  
                       Tm_Inicie_periodico@ctp 0073                     _EUSART_FramingErrorHandler 0056  
                       _EUSART_SetErrorHandler 0F15                         __end_of_ADC_Initialize 0F36  
                                    __Umul8_16 0FBA                      __size_of_Ds_Conversor_ADC 003D  
                         ?_Ds_Convertir_en_uni 0078                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                         _ADC_IsConversionDone 0F27                              __size_of___xxtofl 00AC  
                   __size_of_EUSART_Initialize 0023                               ___lwdiv@dividend 0072  
                       _PIN_MANAGER_Initialize 0FA4                              _ADC_SelectChannel 0F68  
                                     ?___flmul 0020                                       ?___fltol 003A  
                                   ?__Umul8_16 0070                                       ?___lwdiv 0070  
                                     ?___lwmod 0070                                ?_ADC_Initialize 0070  
                           ?_ADC_SelectChannel 0070                          ??_Ds_Convertir_en_uni 007A  
                          ??_ADC_SelectChannel 0070                          ?_ADC_IsConversionDone 0070  
                             ___lwdiv@quotient 0075                            _Tm_Inicie_periodico 0007  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                              _eusartRxLastError 0058  
                    __end_of_ADC_SelectChannel 0F75                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                                       _PIR3bits 0013  
                         ?_Tm_Inicie_periodico 0070              _EUSART_DefaultOverrunErrorHandler 0000  
                             main@timer_1000ms 00B1                                     _ADCON0bits 009D  
                     ADC_SelectChannel@channel 0071                       __size_of_TMR6_Initialize 000A  
                     ?_ADC_GetConversionResult 0070                         Ds_Convertir_en_uni@dsp 007B  
                        ??_Tm_Inicie_periodico 0072                    __end_of_Ds_Iniciar_displays 013D  
                      ??_OSCILLATOR_Initialize 0070                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 0052                               __size_of___flmul 0257  
                             __size_of___fltol 0075                               __size_of___lwdiv 003C  
                             __size_of___lwmod 0034                               _Ds_Conversor_ADC 00C2  
                       ??_ADC_IsConversionDone 0070                       __end_of_Ds_Encienda_Disp 0052  
                   Tm_Inicie_periodico@periodo 0070                                       ___xxtofl 02FB  
                              ___lwdiv@divisor 0070                                ___lwdiv@counter 0077  
                                     __ptext10 0FA4                                       __ptext11 0F5C  
                                     __ptext20 0025                                       __ptext12 0FDD  
                                     __ptext21 026A                                       __ptext13 0F21  
                                     __ptext30 0FBA                                       __ptext22 00FF  
                                     __ptext14 0F1B                                       __ptext31 0F09  
                                     __ptext23 013D                                       __ptext15 0F15  
                                     __ptext32 0F68                                       __ptext24 0052  
                                     __ptext16 0F2E                                       __ptext33 0F27  
                                     __ptext25 0086                                       __ptext17 0F82  
                                     __ptext34 0F0F                                       __ptext26 00C2  
                                     __ptext18 0F3E                                       __ptext27 02FB  
                                     __ptext19 0472                                       __ptext28 01F5  
                                     __ptext29 059C                                  __size_of_main 00CB  
                  __size_of_EUSART_is_tx_ready 000F                        ?_EUSART_SetErrorHandler 0070  
                         Tm_Baje_periodico@ctp 0071                     __size_of_ADC_SelectChannel 000D  
                     __size_of_TMR6_StartTimer 0003  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                     main@Pack 00A5          __end_of_EUSART_SetFramingErrorHandler 0F21  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0F1B  
                     ?_TMR6_HasOverflowOccured 0070                   __size_of_Ds_Procese_displays 012A  
                         Tm_Hubo_periodico@ctp 0070                        __size_of_WDT_Initialize 0003  
                  __end_of_ADC_StartConversion 0F0C                               ___lwmod@dividend 0072  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 0070  
              __end_of_ADC_GetConversionResult 0F15                 __end_of_EUSART_SetErrorHandler 0F1B  
                             ??_ADC_Initialize 0070  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                       __Umul8_16@multiplicand 0070                                ___lwmod@divisor 0070  
                              ___lwmod@counter 0075                        Ds_Conversor_ADC@voltios 004B  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 0FBA  
                         __Umul8_16@multiplier 0078                              __Umul8_16@product 0074  
