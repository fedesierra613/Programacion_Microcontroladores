

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 11 15:29:09 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.20
    75                           ; Generated 05/05/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F46K40 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataCOMRAM
   110  002FD0                     __pidataCOMRAM:
   111                           	callstack 0
   112                           
   113                           ;initializer for main@F10654
   114  002FD0  0000               	dw	0
   115  002FD2  3F80               	dw	16256
   116  002FD4  0000               	dw	0
   117  002FD6  4000               	dw	16384
   118  002FD8  0000               	dw	0
   119  002FDA  3F80               	dw	16256
   120                           
   121                           	psect	idataBANK0
   122  002F66                     __pidataBANK0:
   123                           	callstack 0
   124                           
   125                           ;initializer for main@F10660
   126  002F66  B0BC               	dw	45244
   127  002F68  3E81               	dw	16001
   128  002F6A  5111               	dw	20753
   129  002F6C  3E3C               	dw	15932
   130  002F6E  0000               	dw	0
   131  002F70  0000               	dw	0
   132                           
   133                           ;initializer for main@F10656
   134  002F72  0000               	dw	0
   135  002F74  3F80               	dw	16256
   136  002F76  6F80               	dw	28544
   137  002F78  BEA8               	dw	48808
   138  002F7A  4688               	dw	18056
   139  002F7C  3D84               	dw	15748
   140                           
   141                           	psect	idataBANK1
   142  002F7E                     __pidataBANK1:
   143                           	callstack 0
   144                           
   145                           ;initializer for main@F10650
   146  002F7E  0000               	dw	0
   147  002F80  3F80               	dw	16256
   148  002F82  FF48               	dw	65352
   149  002F84  BEE7               	dw	48871
   150  002F86  C23A               	dw	49722
   151  002F88  3EEE               	dw	16110
   152                           
   153                           ;initializer for main@F10648
   154  002F8A  0000               	dw	0
   155  002F8C  3F80               	dw	16256
   156  002F8E  0000               	dw	0
   157  002F90  4000               	dw	16384
   158  002F92  0000               	dw	0
   159  002F94  3F80               	dw	16256
   160                           
   161                           	psect	smallconst
   162  000F00                     __psmallconst:
   163                           	callstack 0
   164  000F00  00                 	db	0
   165  000F01                     _spi1_configuration:
   166                           	callstack 0
   167  000F01  22                 	db	34
   168  000F02  40                 	db	64
   169  000F03  01                 	db	1
   170  000F04  00                 	db	0
   171  000F05                     __end_of_spi1_configuration:
   172                           	callstack 0
   173  000F05                     _B:
   174                           	callstack 0
   175  000F05  FFFC               	dw	65532
   176  000F07  0005               	dw	5
   177  000F09  0010               	dw	16
   178  000F0B  001C               	dw	28
   179  000F0D  0026               	dw	38
   180  000F0F  002C               	dw	44
   181  000F11  002C               	dw	44
   182  000F13  0026               	dw	38
   183  000F15  001C               	dw	28
   184  000F17  0010               	dw	16
   185  000F19  0005               	dw	5
   186  000F1B  FFFC               	dw	65532
   187  000F1D                     __end_of_B:
   188                           	callstack 0
   189  000F1D  00                 	db	0	; dummy byte at the end
   190  0000                     
   191                           	psect	nvCOMRAM
   192  000033                     __pnvCOMRAM:
   193                           	callstack 0
   194  000033                     _ADCC_ADI_InterruptHandler:
   195                           	callstack 0
   196  000033                     	ds	2
   197  000035                     _EUSART1_ErrorHandler:
   198                           	callstack 0
   199  000035                     	ds	2
   200  000037                     _EUSART1_OverrunErrorHandler:
   201                           	callstack 0
   202  000037                     	ds	2
   203  000039                     _EUSART1_FramingErrorHandler:
   204                           	callstack 0
   205  000039                     	ds	2
   206  00003B                     _EUSART1_RxDefaultInterruptHandler:
   207                           	callstack 0
   208  00003B                     	ds	2
   209  00003D                     _EUSART1_TxDefaultInterruptHandler:
   210                           	callstack 0
   211  00003D                     	ds	2
   212  00003F                     _eusart1TxBufferRemaining:
   213                           	callstack 0
   214  00003F                     	ds	1
   215  0000                     _PIR4bits	set	3790
   216  0000                     _SSP1DATPPS	set	3768
   217  0000                     _RC6PPS	set	3837
   218  0000                     _RC5PPS	set	3836
   219  0000                     _RC3PPS	set	3834
   220  0000                     _RX1PPS	set	3765
   221  0000                     _SSP1CLKPPS	set	3767
   222  0000                     _PMD5	set	3814
   223  0000                     _PMD4	set	3813
   224  0000                     _PMD3	set	3812
   225  0000                     _PMD2	set	3811
   226  0000                     _PMD1	set	3810
   227  0000                     _PMD0	set	3809
   228  0000                     _OSCTUNE	set	3805
   229  0000                     _OSCFRQ	set	3806
   230  0000                     _OSCEN	set	3804
   231  0000                     _OSCCON3	set	3802
   232  0000                     _OSCCON1	set	3800
   233  0000                     _PIR1bits	set	3787
   234  0000                     _PIE1bits	set	3779
   235  0000                     _PIR3bits	set	3789
   236  0000                     _PIE3bits	set	3781
   237  0000                     _ADACQ	set	3932
   238  0000                     _ADCLK	set	3927
   239  0000                     _ADACT	set	3926
   240  0000                     _ADREF	set	3928
   241  0000                     _ADCON3	set	3931
   242  0000                     _ADCON2	set	3930
   243  0000                     _ADCON1	set	3929
   244  0000                     _ADPRE	set	3934
   245  0000                     _ADCAP	set	3933
   246  0000                     _ADPCH	set	3935
   247  0000                     _INLVLE	set	3882
   248  0000                     _INLVLD	set	3874
   249  0000                     _INLVLC	set	3869
   250  0000                     _INLVLB	set	3861
   251  0000                     _INLVLA	set	3853
   252  0000                     _SLRCONE	set	3883
   253  0000                     _SLRCOND	set	3875
   254  0000                     _SLRCONC	set	3870
   255  0000                     _SLRCONB	set	3862
   256  0000                     _SLRCONA	set	3854
   257  0000                     _ODCOND	set	3876
   258  0000                     _ODCONC	set	3871
   259  0000                     _ODCONB	set	3863
   260  0000                     _ODCONA	set	3855
   261  0000                     _ODCONE	set	3884
   262  0000                     _WPUC	set	3872
   263  0000                     _WPUA	set	3856
   264  0000                     _WPUB	set	3864
   265  0000                     _WPUE	set	3885
   266  0000                     _WPUD	set	3877
   267  0000                     _ANSELA	set	3857
   268  0000                     _ANSELE	set	3886
   269  0000                     _ANSELB	set	3865
   270  0000                     _ANSELC	set	3873
   271  0000                     _ANSELD	set	3878
   272  0000                     _LATEbits	set	3975
   273  0000                     _LATBbits	set	3972
   274  0000                     _T2CON	set	4029
   275  0000                     _T2TMR	set	4027
   276  0000                     _T2PR	set	4028
   277  0000                     _T2RST	set	4032
   278  0000                     _T2HLT	set	4030
   279  0000                     _T2CLKCON	set	4031
   280  0000                     _SSP1BUF	set	3986
   281  0000                     _SSP1CON2	set	3991
   282  0000                     _SSP1CON1bits	set	3990
   283  0000                     _TRISCbits	set	3978
   284  0000                     _SSP1ADD	set	3987
   285  0000                     _SSP1CON1	set	3990
   286  0000                     _SSP1STAT	set	3989
   287  0000                     _ADRESL	set	3939
   288  0000                     _ADRESH	set	3940
   289  0000                     _ADCON0	set	3936
   290  0000                     _ADSTAT	set	3941
   291  0000                     _ADRPT	set	3942
   292  0000                     _ADSTPTH	set	3945
   293  0000                     _ADSTPTL	set	3944
   294  0000                     _ADUTHH	set	3949
   295  0000                     _ADUTHL	set	3948
   296  0000                     _ADLTHH	set	3947
   297  0000                     _ADLTHL	set	3946
   298  0000                     _TRISD	set	3979
   299  0000                     _TRISC	set	3978
   300  0000                     _TRISB	set	3977
   301  0000                     _TRISA	set	3976
   302  0000                     _TRISE	set	3980
   303  0000                     _LATC	set	3973
   304  0000                     _LATB	set	3972
   305  0000                     _LATA	set	3971
   306  0000                     _LATD	set	3974
   307  0000                     _LATE	set	3975
   308  0000                     _RC1REG	set	3993
   309  0000                     _RC1STAbits	set	3997
   310  0000                     _TX1REG	set	3994
   311  0000                     _SP1BRGH	set	3996
   312  0000                     _SP1BRGL	set	3995
   313  0000                     _TX1STA	set	3998
   314  0000                     _RC1STA	set	3997
   315  0000                     _BAUD1CON	set	3999
   316  0000                     _INTCONbits	set	4082
   317                           
   318                           ; #config settings
   319                           
   320                           	psect	cinit
   321  0029DA                     __pcinit:
   322                           	callstack 0
   323  0029DA                     start_initialization:
   324                           	callstack 0
   325  0029DA                     __initialization:
   326                           	callstack 0
   327                           
   328                           ; Initialize objects allocated to BANK1 (24 bytes)
   329                           ; load TBLPTR registers with __pidataBANK1
   330  0029DA  0E7E               	movlw	low __pidataBANK1
   331  0029DC  6EF6               	movwf	tblptrl,c
   332  0029DE  0E2F               	movlw	high __pidataBANK1
   333  0029E0  6EF7               	movwf	tblptrh,c
   334  0029E2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   335  0029E4  6EF8               	movwf	tblptru,c
   336  0029E6  EE01  F0D7         	lfsr	0,__pdataBANK1
   337  0029EA  EE10 F018          	lfsr	1,24
   338  0029EE                     copy_data0:
   339  0029EE  0009               	tblrd		*+
   340  0029F0  CFF5 FFEE          	movff	tablat,postinc0
   341  0029F4  50E5               	movf	postdec1,w,c
   342  0029F6  50E1               	movf	fsr1l,w,c
   343  0029F8  E1FA               	bnz	copy_data0
   344                           
   345                           ; Initialize objects allocated to BANK0 (24 bytes)
   346                           ; load TBLPTR registers with __pidataBANK0
   347  0029FA  0E66               	movlw	low __pidataBANK0
   348  0029FC  6EF6               	movwf	tblptrl,c
   349  0029FE  0E2F               	movlw	high __pidataBANK0
   350  002A00  6EF7               	movwf	tblptrh,c
   351  002A02  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   352  002A04  6EF8               	movwf	tblptru,c
   353  002A06  EE00  F0D0         	lfsr	0,__pdataBANK0
   354  002A0A  EE10 F018          	lfsr	1,24
   355  002A0E                     copy_data1:
   356  002A0E  0009               	tblrd		*+
   357  002A10  CFF5 FFEE          	movff	tablat,postinc0
   358  002A14  50E5               	movf	postdec1,w,c
   359  002A16  50E1               	movf	fsr1l,w,c
   360  002A18  E1FA               	bnz	copy_data1
   361                           
   362                           ; Initialize objects allocated to COMRAM (12 bytes)
   363                           ; load TBLPTR registers with __pidataCOMRAM
   364  002A1A  0ED0               	movlw	low __pidataCOMRAM
   365  002A1C  6EF6               	movwf	tblptrl,c
   366  002A1E  0E2F               	movlw	high __pidataCOMRAM
   367  002A20  6EF7               	movwf	tblptrh,c
   368  002A22  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   369  002A24  6EF8               	movwf	tblptru,c
   370  002A26  EE00  F040         	lfsr	0,__pdataCOMRAM
   371  002A2A  EE10 F00C          	lfsr	1,12
   372  002A2E                     copy_data2:
   373  002A2E  0009               	tblrd		*+
   374  002A30  CFF5 FFEE          	movff	tablat,postinc0
   375  002A34  50E5               	movf	postdec1,w,c
   376  002A36  50E1               	movf	fsr1l,w,c
   377  002A38  E1FA               	bnz	copy_data2
   378                           
   379                           ; Clear objects allocated to BANK2 (32 bytes)
   380  002A3A  EE02  F000         	lfsr	0,__pbssBANK2
   381  002A3E  0E20               	movlw	32
   382  002A40                     clear_0:
   383  002A40  6AEE               	clrf	postinc0,c
   384  002A42  06E8               	decf	wreg,f,c
   385  002A44  E1FD               	bnz	clear_0
   386                           
   387                           ; Clear objects allocated to BANK1 (9 bytes)
   388  002A46  EE01  F0EF         	lfsr	0,__pbssBANK1
   389  002A4A  0E09               	movlw	9
   390  002A4C                     clear_1:
   391  002A4C  6AEE               	clrf	postinc0,c
   392  002A4E  06E8               	decf	wreg,f,c
   393  002A50  E1FD               	bnz	clear_1
   394                           
   395                           ; Clear objects allocated to BANK0 (112 bytes)
   396  002A52  EE00  F060         	lfsr	0,__pbssBANK0
   397  002A56  0E70               	movlw	112
   398  002A58                     clear_2:
   399  002A58  6AEE               	clrf	postinc0,c
   400  002A5A  06E8               	decf	wreg,f,c
   401  002A5C  E1FD               	bnz	clear_2
   402                           
   403                           ; Clear objects allocated to COMRAM (8 bytes)
   404  002A5E  EE00  F04C         	lfsr	0,__pbssCOMRAM
   405  002A62  0E08               	movlw	8
   406  002A64                     clear_3:
   407  002A64  6AEE               	clrf	postinc0,c
   408  002A66  06E8               	decf	wreg,f,c
   409  002A68  E1FD               	bnz	clear_3
   410  002A6A                     end_of_initialization:
   411                           	callstack 0
   412  002A6A                     __end_of__initialization:
   413                           	callstack 0
   414  002A6A  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   415  002A6C  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   416  002A6E  0100               	movlb	0
   417  002A70  EF8F  F007         	goto	_main	;jump to C main() function
   418                           
   419                           	psect	bssCOMRAM
   420  00004C                     __pbssCOMRAM:
   421                           	callstack 0
   422  00004C                     _k:
   423                           	callstack 0
   424  00004C                     	ds	2
   425  00004E                     _eusart1RxLastError:
   426                           	callstack 0
   427  00004E                     	ds	1
   428  00004F                     _eusart1RxCount:
   429                           	callstack 0
   430  00004F                     	ds	1
   431  000050                     _eusart1RxTail:
   432                           	callstack 0
   433  000050                     	ds	1
   434  000051                     _eusart1RxHead:
   435                           	callstack 0
   436  000051                     	ds	1
   437  000052                     _eusart1TxTail:
   438                           	callstack 0
   439  000052                     	ds	1
   440  000053                     _eusart1TxHead:
   441                           	callstack 0
   442  000053                     	ds	1
   443                           
   444                           	psect	dataCOMRAM
   445  000040                     __pdataCOMRAM:
   446                           	callstack 0
   447  000040                     main@F10654:
   448                           	callstack 0
   449  000040                     	ds	12
   450                           
   451                           	psect	bssBANK0
   452  000060                     __pbssBANK0:
   453                           	callstack 0
   454  000060                     _eusart1RxStatusBuffer:
   455                           	callstack 0
   456  000060                     	ds	32
   457  000080                     _eusart1TxBuffer:
   458                           	callstack 0
   459  000080                     	ds	32
   460  0000A0                     	ds	12
   461  0000AC                     	ds	12
   462  0000B8                     _x:
   463                           	callstack 0
   464  0000B8                     	ds	24
   465                           
   466                           	psect	dataBANK0
   467  0000D0                     __pdataBANK0:
   468                           	callstack 0
   469  0000D0                     main@F10660:
   470                           	callstack 0
   471  0000D0                     	ds	12
   472  0000DC                     main@F10656:
   473                           	callstack 0
   474  0000DC                     	ds	12
   475                           
   476                           	psect	bssBANK1
   477  0001EF                     __pbssBANK1:
   478                           	callstack 0
   479  0001EF                     _ADC_Tx_Vect:
   480                           	callstack 0
   481  0001EF                     	ds	4
   482  0001F3                     _Result_ADC:
   483                           	callstack 0
   484  0001F3                     	ds	2
   485  0001F5                     _Lectura_Rx:
   486                           	callstack 0
   487  0001F5                     	ds	1
   488  0001F6                     _Serial_Rx_flag:
   489                           	callstack 0
   490  0001F6                     	ds	1
   491  0001F7                     _ADC_flag:
   492                           	callstack 0
   493  0001F7                     	ds	1
   494                           
   495                           	psect	dataBANK1
   496  0001D7                     __pdataBANK1:
   497                           	callstack 0
   498  0001D7                     main@F10650:
   499                           	callstack 0
   500  0001D7                     	ds	12
   501  0001E3                     main@F10648:
   502                           	callstack 0
   503  0001E3                     	ds	12
   504                           
   505                           	psect	bssBANK2
   506  000200                     __pbssBANK2:
   507                           	callstack 0
   508  000200                     _eusart1RxBuffer:
   509                           	callstack 0
   510  000200                     	ds	32
   511                           
   512                           	psect	cstackBANK1
   513  000100                     __pcstackBANK1:
   514                           	callstack 0
   515  000100                     main@num:
   516                           	callstack 0
   517                           
   518                           ; 12 bytes @ 0x0
   519  000100                     	ds	12
   520  00010C                     main@den:
   521                           	callstack 0
   522                           
   523                           ; 12 bytes @ 0xC
   524  00010C                     	ds	12
   525  000118                     main@w:
   526                           	callstack 0
   527                           
   528                           ; 12 bytes @ 0x18
   529  000118                     	ds	12
   530  000124                     main@num2:
   531                           	callstack 0
   532                           
   533                           ; 12 bytes @ 0x24
   534  000124                     	ds	12
   535  000130                     main@den2:
   536                           	callstack 0
   537                           
   538                           ; 12 bytes @ 0x30
   539  000130                     	ds	12
   540  00013C                     main@w2:
   541                           	callstack 0
   542                           
   543                           ; 12 bytes @ 0x3C
   544  00013C                     	ds	12
   545  000148                     main@gan:
   546                           	callstack 0
   547                           
   548                           ; 12 bytes @ 0x48
   549  000148                     	ds	12
   550  000154                     main@V_P:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x54
   554  000154                     	ds	2
   555  000156                     main@DAC_IN:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x56
   559  000156                     	ds	2
   560  000158                     main@Resta:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x58
   564  000158                     	ds	2
   565  00015A                     main@SALIDA:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x5A
   569  00015A                     	ds	2
   570  00015C                     main@Contador:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x5C
   574  00015C                     	ds	1
   575  00015D                     main@Iniciar:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x5D
   579  00015D                     	ds	1
   580  00015E                     main@AuxPost:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x5E
   584  00015E                     	ds	1
   585  00015F                     main@Auxcont:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x5F
   589  00015F                     	ds	1
   590  000160                     main@SalidaFIR_long:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x60
   594  000160                     	ds	4
   595  000164                     main@ADC_Vect:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x64
   599  000164                     	ds	4
   600  000168                     main@Vector_DAC:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x68
   604  000168                     	ds	2
   605  00016A                     main@a:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x6A
   609  00016A                     	ds	2
   610  00016C                     main@Palabra_DAC:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x6C
   614  00016C                     	ds	2
   615  00016E                     main@Postcaler:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x6E
   619  00016E                     	ds	1
   620  00016F                     main@DatoRe:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x6F
   624  00016F                     	ds	4
   625  000173                     main@i:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x73
   629  000173                     	ds	1
   630  000174                     main@ir:
   631                           	callstack 0
   632                           
   633                           ; 84 bytes @ 0x74
   634  000174                     	ds	84
   635  0001C8                     main@MiVector:
   636                           	callstack 0
   637                           
   638                           ; 13 bytes @ 0xC8
   639  0001C8                     	ds	13
   640  0001D5                     main@AuxReADC:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0xD5
   644  0001D5                     	ds	2
   645                           
   646                           	psect	cstackCOMRAM
   647  000001                     __pcstackCOMRAM:
   648                           	callstack 0
   649  000001                     ??_Interrupcion_ADC:
   650  000001                     EUSART1_Read@readValue:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x0
   654  000001                     	ds	1
   655  000002                     
   656                           ; 1 bytes @ 0x1
   657  000002                     	ds	1
   658  000003                     ??_INTERRUPT_InterruptManager:
   659                           
   660                           ; 1 bytes @ 0x2
   661  000003                     	ds	4
   662  000007                     ??_SPI1_Open:
   663  000007                     ?___wmul:
   664                           	callstack 0
   665  000007                     ?___awdiv:
   666                           	callstack 0
   667  000007                     ?___awmod:
   668                           	callstack 0
   669  000007                     ?___fldiv:
   670                           	callstack 0
   671  000007                     ?___almod:
   672                           	callstack 0
   673  000007                     EUSART1_Write@txData:
   674                           	callstack 0
   675  000007                     SPI1_ExchangeByte@data:
   676                           	callstack 0
   677  000007                     EUSART1_SetFramingErrorHandler@interruptHandler:
   678                           	callstack 0
   679  000007                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   680                           	callstack 0
   681  000007                     EUSART1_SetErrorHandler@interruptHandler:
   682                           	callstack 0
   683  000007                     EUSART1_SetTxInterruptHandler@interruptHandler:
   684                           	callstack 0
   685  000007                     EUSART1_SetRxInterruptHandler@interruptHandler:
   686                           	callstack 0
   687  000007                     ADCC_SetADIInterruptHandler@InterruptHandler:
   688                           	callstack 0
   689  000007                     Re_Vector@dsp:
   690                           	callstack 0
   691  000007                     inicializar_iir_2_ord@num:
   692                           	callstack 0
   693  000007                     ___wmul@multiplier:
   694                           	callstack 0
   695  000007                     ___awdiv@dividend:
   696                           	callstack 0
   697  000007                     ___awmod@dividend:
   698                           	callstack 0
   699  000007                     ___almod@dividend:
   700                           	callstack 0
   701  000007                     ___flge@ff1:
   702                           	callstack 0
   703  000007                     ___fldiv@b:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x6
   707  000007                     	ds	1
   708  000008                     SPI1_WriteBlock@block:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x7
   712  000008                     	ds	1
   713  000009                     ??_Re_Vector:
   714  000009                     inicializar_iir_2_ord@den:
   715                           	callstack 0
   716  000009                     ___wmul@multiplicand:
   717                           	callstack 0
   718  000009                     ___awdiv@divisor:
   719                           	callstack 0
   720  000009                     ___awmod@divisor:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x8
   724  000009                     	ds	1
   725  00000A                     SPI1_Open@spi1UniqueConfiguration:
   726                           	callstack 0
   727  00000A                     Re_Vector@BandDato:
   728                           	callstack 0
   729  00000A                     SPI1_WriteBlock@blockSize:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x9
   733  00000A                     	ds	1
   734  00000B                     ___awdiv@counter:
   735                           	callstack 0
   736  00000B                     ___awmod@counter:
   737                           	callstack 0
   738  00000B                     inicializar_iir_2_ord@w:
   739                           	callstack 0
   740  00000B                     ___wmul@product:
   741                           	callstack 0
   742  00000B                     ___almod@divisor:
   743                           	callstack 0
   744  00000B                     ___flge@ff2:
   745                           	callstack 0
   746  00000B                     ___fldiv@a:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0xA
   750  00000B                     	ds	1
   751  00000C                     ___awdiv@sign:
   752                           	callstack 0
   753  00000C                     ___awmod@sign:
   754                           	callstack 0
   755  00000C                     SPI1_WriteBlock@data:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0xB
   759  00000C                     	ds	1
   760  00000D                     ?___xxtofl:
   761                           	callstack 0
   762  00000D                     inicializar_iir_2_ord@num2:
   763                           	callstack 0
   764  00000D                     ___awdiv@quotient:
   765                           	callstack 0
   766  00000D                     ___xxtofl@val:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0xC
   770  00000D                     	ds	2
   771  00000F                     ??___fldiv:
   772  00000F                     ??___flge:
   773  00000F                     ___almod@counter:
   774                           	callstack 0
   775  00000F                     inicializar_iir_2_ord@den2:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0xE
   779  00000F                     	ds	1
   780  000010                     ___almod@sign:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0xF
   784  000010                     	ds	1
   785  000011                     ??___xxtofl:
   786  000011                     ?___lmul:
   787                           	callstack 0
   788  000011                     inicializar_iir_2_ord@w2:
   789                           	callstack 0
   790  000011                     ___lmul@multiplier:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x10
   794  000011                     	ds	2
   795  000013                     inicializar_iir_2_ord@gan:
   796                           	callstack 0
   797  000013                     ConfigPostcaler@n:
   798                           	callstack 0
   799  000013                     ___fldiv@rem:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x12
   803  000013                     	ds	2
   804  000015                     ___xxtofl@sign:
   805                           	callstack 0
   806  000015                     inicializar_iir_2_ord@ir:
   807                           	callstack 0
   808  000015                     ___lmul@multiplicand:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x14
   812  000015                     	ds	1
   813  000016                     ___xxtofl@exp:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x15
   817  000016                     	ds	1
   818  000017                     ??_inicializar_iir_2_ord:
   819  000017                     ConfigPostcaler@Post:
   820                           	callstack 0
   821  000017                     ___fldiv@sign:
   822                           	callstack 0
   823  000017                     ___xxtofl@arg:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x16
   827  000017                     	ds	1
   828  000018                     ___fldiv@new_exp:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x17
   832  000018                     	ds	1
   833  000019                     ___lmul@product:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x18
   837  000019                     	ds	1
   838  00001A                     ___fldiv@grs:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x19
   842  00001A                     	ds	1
   843  00001B                     ?___fladd:
   844                           	callstack 0
   845  00001B                     inicializar_iir_2_ord@i:
   846                           	callstack 0
   847  00001B                     ___fladd@b:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x1A
   851  00001B                     	ds	2
   852  00001D                     ?_filtrarFIR1:
   853                           	callstack 0
   854  00001D                     filtrarFIR1@in:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x1C
   858  00001D                     	ds	1
   859  00001E                     ___fldiv@bexp:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x1D
   863  00001E                     	ds	1
   864  00001F                     ___fldiv@aexp:
   865                           	callstack 0
   866  00001F                     ___fladd@a:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x1E
   870  00001F                     	ds	1
   871  000020                     ?___fltol:
   872                           	callstack 0
   873  000020                     ___fltol@f1:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x1F
   877  000020                     	ds	1
   878  000021                     ??_filtrarFIR1:
   879                           
   880                           ; 1 bytes @ 0x20
   881  000021                     	ds	2
   882  000023                     ??___fladd:
   883                           
   884                           ; 1 bytes @ 0x22
   885  000023                     	ds	1
   886  000024                     ??___fltol:
   887                           
   888                           ; 1 bytes @ 0x23
   889  000024                     	ds	3
   890  000027                     ___fladd@signs:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x26
   894  000027                     	ds	1
   895  000028                     ___fltol@sign1:
   896                           	callstack 0
   897  000028                     ___fladd@aexp:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x27
   901  000028                     	ds	1
   902  000029                     ___fltol@exp1:
   903                           	callstack 0
   904  000029                     ___fladd@bexp:
   905                           	callstack 0
   906  000029                     filtrarFIR1@y:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0x28
   910  000029                     	ds	1
   911  00002A                     ___fladd@grs:
   912                           	callstack 0
   913  00002A                     ConfigCont@Dato:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x29
   917  00002A                     	ds	3
   918  00002D                     filtrarFIR1@i:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x2C
   922  00002D                     	ds	1
   923  00002E                     ConfigCont@Post:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x2D
   927  00002E                     	ds	1
   928  00002F                     ConfigCont@contador:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x2E
   932  00002F                     	ds	2
   933  000031                     ??_main:
   934                           
   935                           ; 1 bytes @ 0x30
   936  000031                     	ds	2
   937                           
   938 ;;
   939 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   940 ;;
   941 ;; *************** function _main *****************
   942 ;; Defined at:
   943 ;;		line 35 in file "main.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  i               1  115[BANK1 ] unsigned char 
   948 ;;  ir             84  116[BANK1 ] struct coef_iir_2_ord
   949 ;;  MiVector       13  200[BANK1 ] struct Vect_RE
   950 ;;  gan            12   72[BANK1 ] float [3]
   951 ;;  w2             12   60[BANK1 ] float [3]
   952 ;;  den2           12   48[BANK1 ] float [3]
   953 ;;  num2           12   36[BANK1 ] float [3]
   954 ;;  w              12   24[BANK1 ] float [3]
   955 ;;  den            12   12[BANK1 ] float [3]
   956 ;;  num            12    0[BANK1 ] float [3]
   957 ;;  PrueVect        8    0        unsigned char [8]
   958 ;;  ADC_Vect        4  100[BANK1 ] unsigned char [4]
   959 ;;  DatoRe          4  111[BANK1 ] float 
   960 ;;  SalidaFIR_lo    4   96[BANK1 ] long 
   961 ;;  SalidaIIR       4    0        float 
   962 ;;  AuxReADC        2  213[BANK1 ] int 
   963 ;;  Vector_DAC      2  104[BANK1 ] unsigned char [2]
   964 ;;  Palabra_DAC     2  108[BANK1 ] unsigned short 
   965 ;;  a               2  106[BANK1 ] unsigned short 
   966 ;;  V_P             2   84[BANK1 ] unsigned char [2]
   967 ;;  SALIDA          2   90[BANK1 ] unsigned short 
   968 ;;  Resta           2   88[BANK1 ] unsigned short 
   969 ;;  DAC_IN          2   86[BANK1 ] unsigned short 
   970 ;;  Resta_IRR       2    0        unsigned short 
   971 ;;  AuxADC          2    0        unsigned short 
   972 ;;  Postcaler       1  110[BANK1 ] unsigned char 
   973 ;;  Auxcont         1   95[BANK1 ] unsigned char 
   974 ;;  AuxPost         1   94[BANK1 ] unsigned char 
   975 ;;  Iniciar         1   93[BANK1 ] unsigned char 
   976 ;;  Contador        1   92[BANK1 ] unsigned char 
   977 ;;  Listo_enviar    1    0        unsigned char 
   978 ;;  Inicont         1    0        unsigned char 
   979 ;;  Intx            1    0        unsigned char 
   980 ;;  Dato            1    0        unsigned char 
   981 ;;  Lect            1    0        unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 3F/E
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   992 ;;      Locals:         0       0     215       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   994 ;;      Totals:         2       0     215       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   995 ;;Total ram usage:      217 bytes
   996 ;; Hardware stack levels required when called: 8
   997 ;; This function calls:
   998 ;;		_ADCC_SetADIInterruptHandler
   999 ;;		_ConfigCont
  1000 ;;		_ConfigPostcaler
  1001 ;;		_EUSART1_SetRxInterruptHandler
  1002 ;;		_EUSART1_Write
  1003 ;;		_Re_Vector
  1004 ;;		_SPI1_Open
  1005 ;;		_SPI1_WriteBlock
  1006 ;;		_SYSTEM_Initialize
  1007 ;;		___awdiv
  1008 ;;		___awmod
  1009 ;;		___fladd
  1010 ;;		___wmul
  1011 ;;		___xxtofl
  1012 ;;		_filtrarFIR1
  1013 ;;		_inicializar_iir_2_ord
  1014 ;; This function is called by:
  1015 ;;		Startup code after reset
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text0
  1020  000F1E                     __ptext0:
  1021                           	callstack 0
  1022  000F1E                     _main:
  1023                           	callstack 23
  1024                           
  1025                           ;main.c: 37:     SYSTEM_Initialize();
  1026                           
  1027                           ;incstack = 0
  1028  000F1E  EC48  F017         	call	_SYSTEM_Initialize	;wreg free
  1029                           
  1030                           ; BSR set to: 14
  1031                           ;main.c: 39:     (INTCONbits.GIE = 1);
  1032  000F22  8EF2               	bsf	242,7,c	;volatile
  1033                           
  1034                           ; BSR set to: 14
  1035                           ;main.c: 43:     (INTCONbits.PEIE = 1);
  1036  000F24  8CF2               	bsf	242,6,c	;volatile
  1037                           
  1038                           ; BSR set to: 14
  1039                           ;main.c: 56:     char Postcaler;;main.c: 57:     char AuxPost = 0;
  1040                           
  1041                           ; BSR set to: 14
  1042                           
  1043                           ; BSR set to: 14
  1044                           
  1045                           ; BSR set to: 14
  1046  000F26  0E00               	movlw	0
  1047  000F28  0101               	movlb	1	; () banked
  1048  000F2A  6F5E               	movwf	main@AuxPost& (0+255),b
  1049                           
  1050                           ; BSR set to: 1
  1051                           ;main.c: 58:     char Auxcont = 0;
  1052  000F2C  0E00               	movlw	0
  1053  000F2E  6F5F               	movwf	main@Auxcont& (0+255),b
  1054                           
  1055                           ; BSR set to: 1
  1056                           ;main.c: 60:     char Contador;;main.c: 61:     float DatoRe;;main.c: 62:     int AuxReA
      +                          DC;;main.c: 63:     uint16_t DAC_IN = 0b0011000000000000;
  1057                           
  1058                           ; BSR set to: 1
  1059  000F30  0E30               	movlw	48
  1060  000F32  6F57               	movwf	(main@DAC_IN+1)& (0+255),b
  1061  000F34  0E00               	movlw	0
  1062  000F36  6F56               	movwf	main@DAC_IN& (0+255),b
  1063                           
  1064                           ; BSR set to: 1
  1065                           ;main.c: 64:     uint16_t Resta = 0b0000111111111111;
  1066  000F38  0E0F               	movlw	15
  1067  000F3A  6F59               	movwf	(main@Resta+1)& (0+255),b
  1068  000F3C  6958               	setf	main@Resta& (0+255),b
  1069                           
  1070                           ; BSR set to: 1
  1071                           ;main.c: 66:     uint16_t Palabra_DAC;;main.c: 67:     uint16_t SALIDA;;main.c: 68:     
      +                          uint8_t Vector_DAC[2];;main.c: 69:     Vector_DAC[0] = 0;
  1072                           
  1073                           ; BSR set to: 1
  1074  000F3E  0E00               	movlw	0
  1075  000F40  6F68               	movwf	main@Vector_DAC& (0+255),b
  1076                           
  1077                           ; BSR set to: 1
  1078                           ;main.c: 70:     Vector_DAC[1] = 0;
  1079  000F42  0E00               	movlw	0
  1080  000F44  6F69               	movwf	(main@Vector_DAC+1)& (0+255),b
  1081                           
  1082                           ; BSR set to: 1
  1083                           ;main.c: 72:     char ADC_Vect[4];;main.c: 74:     ADC_Tx_Vect[0] = 0;
  1084  000F46  0E00               	movlw	0
  1085  000F48  6FEF               	movwf	_ADC_Tx_Vect& (0+255),b	;volatile
  1086                           
  1087                           ; BSR set to: 1
  1088                           ;main.c: 75:     ADC_Tx_Vect[1] = 0;
  1089  000F4A  0E00               	movlw	0
  1090  000F4C  6FF0               	movwf	(_ADC_Tx_Vect+1)& (0+255),b	;volatile
  1091                           
  1092                           ; BSR set to: 1
  1093                           ;main.c: 76:     ADC_Tx_Vect[2] = 0;
  1094  000F4E  0E00               	movlw	0
  1095  000F50  6FF1               	movwf	(_ADC_Tx_Vect+2)& (0+255),b	;volatile
  1096                           
  1097                           ; BSR set to: 1
  1098                           ;main.c: 77:     ADC_Tx_Vect[3] = 0;
  1099  000F52  0E00               	movlw	0
  1100  000F54  6FF2               	movwf	(_ADC_Tx_Vect+3)& (0+255),b	;volatile
  1101                           
  1102                           ; BSR set to: 1
  1103                           ;main.c: 79:     uint8_t V_P[2];;main.c: 80:     V_P[0] = 0b00110000;
  1104  000F56  0E30               	movlw	48
  1105  000F58  6F54               	movwf	main@V_P& (0+255),b
  1106                           
  1107                           ; BSR set to: 1
  1108                           ;main.c: 81:     V_P[1] = 0b01010110;
  1109  000F5A  0E56               	movlw	86
  1110  000F5C  6F55               	movwf	(main@V_P+1)& (0+255),b
  1111                           
  1112                           ; BSR set to: 1
  1113  000F5E  8084               	bsf	132,0,c	;volatile
  1114                           
  1115                           ; BSR set to: 1
  1116  000F60  8087               	bsf	135,0,c	;volatile
  1117                           
  1118                           ; BSR set to: 1
  1119  000F62  8884               	bsf	132,4,c	;volatile
  1120                           
  1121                           ; BSR set to: 1
  1122                           ;main.c: 93:     Vect_RE MiVector;;main.c: 94:     coef_iir_2_ord ir;;main.c: 96:     AD
      +                          CC_SetADIInterruptHandler(Interrupcion_ADC);
  1123  000F64  0E4C               	movlw	low _Interrupcion_ADC
  1124  000F66  6E07               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  1125  000F68  0E2F               	movlw	high _Interrupcion_ADC
  1126  000F6A  6E08               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  1127  000F6C  EC07  F018         	call	_ADCC_SetADIInterruptHandler	;wreg free
  1128                           
  1129                           ;main.c: 98:     EUSART1_SetRxInterruptHandler(Interrupcion_Rx_Serial);
  1130  000F70  0EBE               	movlw	low _Interrupcion_Rx_Serial
  1131  000F72  6E07               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1132  000F74  0E2F               	movlw	high _Interrupcion_Rx_Serial
  1133  000F76  6E08               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1134  000F78  ECF3  F017         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1135                           
  1136                           ;main.c: 100:     SPI1_Open(SPI1_DEFAULT);
  1137  000F7C  0E00               	movlw	0
  1138  000F7E  EC9E  F014         	call	_SPI1_Open
  1139                           
  1140                           ;main.c: 101:     _delay((unsigned long)((50000)*(32000000/4000000.0)));
  1141  000F82  0E03               	movlw	3
  1142  000F84  6E32               	movwf	(??_main+1)^0,c
  1143  000F86  0E08               	movlw	8
  1144  000F88  6E31               	movwf	??_main^0,c
  1145  000F8A  0E77               	movlw	119
  1146  000F8C                     u3817:
  1147  000F8C  2EE8               	decfsz	wreg,f,c
  1148  000F8E  D7FE               	bra	u3817
  1149  000F90  2E31               	decfsz	??_main^0,f,c
  1150  000F92  D7FC               	bra	u3817
  1151  000F94  2E32               	decfsz	(??_main+1)^0,f,c
  1152  000F96  D7FA               	bra	u3817
  1153  000F98  F000               	nop	
  1154                           
  1155                           ;main.c: 114:     float num[3] = {1, 2, 1};
  1156  000F9A  EE21  F0E3         	lfsr	2,main@F10648
  1157  000F9E  EE11  F000         	lfsr	1,main@num
  1158  000FA2  0E0B               	movlw	11
  1159  000FA4                     u3671:
  1160  000FA4  CFDB FFE3          	movff	plusw2,plusw1
  1161  000FA8  06E8               	decf	wreg,f,c
  1162  000FAA  E2FC               	bc	u3671
  1163                           
  1164                           ;main.c: 115:     float den[3] = {1, -0.4531195164, 0.4663255811};
  1165  000FAC  EE21  F0D7         	lfsr	2,main@F10650
  1166  000FB0  EE11  F00C         	lfsr	1,main@den
  1167  000FB4  0E0B               	movlw	11
  1168  000FB6                     u3681:
  1169  000FB6  CFDB FFE3          	movff	plusw2,plusw1
  1170  000FBA  06E8               	decf	wreg,f,c
  1171  000FBC  E2FC               	bc	u3681
  1172                           
  1173                           ;main.c: 116:     float w[3] = {0, 0, 0};
  1174  000FBE  EE21  F018         	lfsr	2,main@w
  1175  000FC2  0E0B               	movlw	11
  1176  000FC4                     u3691:
  1177  000FC4  6ADE               	clrf	postinc2,c
  1178  000FC6  06E8               	decf	wreg,f,c
  1179  000FC8  E2FD               	bc	u3691
  1180                           
  1181                           ;main.c: 117:     float num2[3] = {1, 2, 1};
  1182  000FCA  EE20  F040         	lfsr	2,main@F10654
  1183  000FCE  EE11  F024         	lfsr	1,main@num2
  1184  000FD2  0E0B               	movlw	11
  1185  000FD4                     u3701:
  1186  000FD4  CFDB FFE3          	movff	plusw2,plusw1
  1187  000FD8  06E8               	decf	wreg,f,c
  1188  000FDA  E2FC               	bc	u3701
  1189                           
  1190                           ;main.c: 118:     float den2[3] = {1, -0.3289756775, 0.06458765268};
  1191  000FDC  EE20  F0DC         	lfsr	2,main@F10656
  1192  000FE0  EE11  F030         	lfsr	1,main@den2
  1193  000FE4  0E0B               	movlw	11
  1194  000FE6                     u3711:
  1195  000FE6  CFDB FFE3          	movff	plusw2,plusw1
  1196  000FEA  06E8               	decf	wreg,f,c
  1197  000FEC  E2FC               	bc	u3711
  1198                           
  1199                           ;main.c: 119:     float w2[3] = {0, 0, 0};
  1200  000FEE  EE21  F03C         	lfsr	2,main@w2
  1201  000FF2  0E0B               	movlw	11
  1202  000FF4                     u3721:
  1203  000FF4  6ADE               	clrf	postinc2,c
  1204  000FF6  06E8               	decf	wreg,f,c
  1205  000FF8  E2FD               	bc	u3721
  1206                           
  1207                           ;main.c: 120:     float gan[3] = {0.2533015013, 0.1839029938, 0};
  1208  000FFA  EE20  F0D0         	lfsr	2,main@F10660
  1209  000FFE  EE11  F048         	lfsr	1,main@gan
  1210  001002  0E0B               	movlw	11
  1211  001004                     u3731:
  1212  001004  CFDB FFE3          	movff	plusw2,plusw1
  1213  001008  06E8               	decf	wreg,f,c
  1214  00100A  E2FC               	bc	u3731
  1215                           
  1216                           ;main.c: 121:     inicializar_iir_2_ord(num, den, w, num2, den2, w2, gan, &ir);
  1217  00100C  0E00               	movlw	low main@num
  1218  00100E  6E07               	movwf	inicializar_iir_2_ord@num^0,c
  1219  001010  0E01               	movlw	high main@num
  1220  001012  6E08               	movwf	(inicializar_iir_2_ord@num+1)^0,c
  1221  001014  0E0C               	movlw	low main@den
  1222  001016  6E09               	movwf	inicializar_iir_2_ord@den^0,c
  1223  001018  0E01               	movlw	high main@den
  1224  00101A  6E0A               	movwf	(inicializar_iir_2_ord@den+1)^0,c
  1225  00101C  0E18               	movlw	low main@w
  1226  00101E  6E0B               	movwf	inicializar_iir_2_ord@w^0,c
  1227  001020  0E01               	movlw	high main@w
  1228  001022  6E0C               	movwf	(inicializar_iir_2_ord@w+1)^0,c
  1229  001024  0E24               	movlw	low main@num2
  1230  001026  6E0D               	movwf	inicializar_iir_2_ord@num2^0,c
  1231  001028  0E01               	movlw	high main@num2
  1232  00102A  6E0E               	movwf	(inicializar_iir_2_ord@num2+1)^0,c
  1233  00102C  0E30               	movlw	low main@den2
  1234  00102E  6E0F               	movwf	inicializar_iir_2_ord@den2^0,c
  1235  001030  0E01               	movlw	high main@den2
  1236  001032  6E10               	movwf	(inicializar_iir_2_ord@den2+1)^0,c
  1237  001034  0E3C               	movlw	low main@w2
  1238  001036  6E11               	movwf	inicializar_iir_2_ord@w2^0,c
  1239  001038  0E01               	movlw	high main@w2
  1240  00103A  6E12               	movwf	(inicializar_iir_2_ord@w2+1)^0,c
  1241  00103C  0E48               	movlw	low main@gan
  1242  00103E  6E13               	movwf	inicializar_iir_2_ord@gan^0,c
  1243  001040  0E01               	movlw	high main@gan
  1244  001042  6E14               	movwf	(inicializar_iir_2_ord@gan+1)^0,c
  1245  001044  0E74               	movlw	low main@ir
  1246  001046  6E15               	movwf	inicializar_iir_2_ord@ir^0,c
  1247  001048  0E01               	movlw	high main@ir
  1248  00104A  6E16               	movwf	(inicializar_iir_2_ord@ir+1)^0,c
  1249  00104C  ECB1  F010         	call	_inicializar_iir_2_ord	;wreg free
  1250                           
  1251                           ;main.c: 124:     T2CON = 0xF1;
  1252  001050  0EF1               	movlw	241
  1253  001052  6EBD               	movwf	189,c	;volatile
  1254                           
  1255                           ;main.c: 125:     T2PR = 0xC2;
  1256  001054  0EC2               	movlw	194
  1257  001056  6EBC               	movwf	188,c	;volatile
  1258  001058                     l3838:
  1259                           
  1260                           ;main.c: 128:     {;main.c: 129:         if(Serial_Rx_flag){
  1261  001058  0101               	movlb	1	; () banked
  1262  00105A  51F6               	movf	_Serial_Rx_flag& (0+255),w,b	;volatile
  1263  00105C  B4D8               	btfsc	status,2,c
  1264  00105E  D00B               	goto	l3846
  1265                           
  1266                           ; BSR set to: 1
  1267                           ;main.c: 130:             Serial_Rx_flag = 0;
  1268  001060  0E00               	movlw	0
  1269  001062  6FF6               	movwf	_Serial_Rx_flag& (0+255),b	;volatile
  1270                           
  1271                           ; BSR set to: 1
  1272                           ;main.c: 131:             MiVector.Lectura = Lectura_Rx;
  1273  001064  C1F5  F1D4         	movff	_Lectura_Rx,main@MiVector+12	;volatile
  1274                           
  1275                           ; BSR set to: 1
  1276                           ;main.c: 132:             Iniciar = Re_Vector(&MiVector);
  1277  001068  0EC8               	movlw	low main@MiVector
  1278  00106A  6E07               	movwf	Re_Vector@dsp^0,c
  1279  00106C  0E01               	movlw	high main@MiVector
  1280  00106E  6E08               	movwf	(Re_Vector@dsp+1)^0,c
  1281  001070  ECEF  F013         	call	_Re_Vector	;wreg free
  1282  001074  6F5D               	movwf	main@Iniciar& (0+255),b
  1283  001076                     l3846:
  1284                           
  1285                           ; BSR set to: 1
  1286                           ;main.c: 135:         if(Iniciar){
  1287  001076  515D               	movf	main@Iniciar& (0+255),w,b
  1288  001078  B4D8               	btfsc	status,2,c
  1289  00107A  D05B               	goto	l704
  1290                           
  1291                           ; BSR set to: 1
  1292                           ;main.c: 136:             Iniciar = 0;
  1293  00107C  0E00               	movlw	0
  1294  00107E  6F5D               	movwf	main@Iniciar& (0+255),b
  1295                           
  1296                           ;main.c: 137:             DatoRe = 0;
  1297  001080  0E00               	movlw	0
  1298  001082  6F6F               	movwf	main@DatoRe& (0+255),b
  1299  001084  0E00               	movlw	0
  1300  001086  6F70               	movwf	(main@DatoRe+1)& (0+255),b
  1301  001088  0E00               	movlw	0
  1302  00108A  6F71               	movwf	(main@DatoRe+2)& (0+255),b
  1303  00108C  0E00               	movlw	0
  1304  00108E  6F72               	movwf	(main@DatoRe+3)& (0+255),b
  1305                           
  1306                           ;main.c: 138:             a = 1;
  1307  001090  0E00               	movlw	0
  1308  001092  6F6B               	movwf	(main@a+1)& (0+255),b
  1309  001094  0E01               	movlw	1
  1310  001096  6F6A               	movwf	main@a& (0+255),b
  1311                           
  1312                           ; BSR set to: 1
  1313                           ;main.c: 139:             for(char i=MiVector.Pos-2;i>0;i--){
  1314  001098  51D2               	movf	(main@MiVector+10)& (0+255),w,b
  1315  00109A  0FFE               	addlw	254
  1316  00109C  6F73               	movwf	main@i& (0+255),b
  1317  00109E                     l3852:
  1318                           
  1319                           ; BSR set to: 1
  1320  00109E  5173               	movf	main@i& (0+255),w,b
  1321  0010A0  B4D8               	btfsc	status,2,c
  1322  0010A2  D045               	goto	l3864
  1323                           
  1324                           ; BSR set to: 1
  1325                           ;main.c: 140:                 DatoRe = DatoRe + ((uint16_t) MiVector.Dato[i]) * a;
  1326  0010A4  0EC8               	movlw	low main@MiVector
  1327  0010A6  2573               	addwf	main@i& (0+255),w,b
  1328  0010A8  6ED9               	movwf	fsr2l,c
  1329  0010AA  6ADA               	clrf	fsr2h,c
  1330  0010AC  0E01               	movlw	high main@MiVector
  1331  0010AE  22DA               	addwfc	fsr2h,f,c
  1332  0010B0  50DF               	movf	indf2,w,c
  1333  0010B2  6E31               	movwf	??_main^0,c
  1334  0010B4  5031               	movf	??_main^0,w,c
  1335  0010B6  6E07               	movwf	___wmul@multiplier^0,c
  1336  0010B8  6A08               	clrf	(___wmul@multiplier+1)^0,c
  1337  0010BA  C16A  F009         	movff	main@a,___wmul@multiplicand
  1338  0010BE  C16B  F00A         	movff	main@a+1,___wmul@multiplicand+1
  1339  0010C2  EC22  F017         	call	___wmul	;wreg free
  1340  0010C6  C007  F00D         	movff	?___wmul,___xxtofl@val
  1341  0010CA  C008  F00E         	movff	?___wmul+1,___xxtofl@val+1
  1342  0010CE  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1343  0010D0  6A10               	clrf	(___xxtofl@val+3)^0,c
  1344  0010D2  0E00               	movlw	0
  1345  0010D4  EC8A  F012         	call	___xxtofl
  1346  0010D8  C00D  F01B         	movff	?___xxtofl,___fladd@b
  1347  0010DC  C00E  F01C         	movff	?___xxtofl+1,___fladd@b+1
  1348  0010E0  C00F  F01D         	movff	?___xxtofl+2,___fladd@b+2
  1349  0010E4  C010  F01E         	movff	?___xxtofl+3,___fladd@b+3
  1350  0010E8  C16F  F01F         	movff	main@DatoRe,___fladd@a
  1351  0010EC  C170  F020         	movff	main@DatoRe+1,___fladd@a+1
  1352  0010F0  C171  F021         	movff	main@DatoRe+2,___fladd@a+2
  1353  0010F4  C172  F022         	movff	main@DatoRe+3,___fladd@a+3
  1354  0010F8  ECE7  F00D         	call	___fladd	;wreg free
  1355  0010FC  C01B  F16F         	movff	?___fladd,main@DatoRe
  1356  001100  C01C  F170         	movff	?___fladd+1,main@DatoRe+1
  1357  001104  C01D  F171         	movff	?___fladd+2,main@DatoRe+2
  1358  001108  C01E  F172         	movff	?___fladd+3,main@DatoRe+3
  1359                           
  1360                           ;main.c: 141:                 a=a*10;
  1361  00110C  C16A  F007         	movff	main@a,___wmul@multiplier
  1362  001110  C16B  F008         	movff	main@a+1,___wmul@multiplier+1
  1363  001114  0E00               	movlw	0
  1364  001116  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  1365  001118  0E0A               	movlw	10
  1366  00111A  6E09               	movwf	___wmul@multiplicand^0,c
  1367  00111C  EC22  F017         	call	___wmul	;wreg free
  1368  001120  C007  F16A         	movff	?___wmul,main@a
  1369  001124  C008  F16B         	movff	?___wmul+1,main@a+1
  1370                           
  1371                           ;main.c: 142:             }
  1372  001128  0101               	movlb	1	; () banked
  1373  00112A  0773               	decf	main@i& (0+255),f,b
  1374  00112C  D7B8               	goto	l3852
  1375  00112E                     l3864:
  1376                           
  1377                           ; BSR set to: 1
  1378                           ;main.c: 143:             AuxPost = 1;
  1379  00112E  0E01               	movlw	1
  1380  001130  6F5E               	movwf	main@AuxPost& (0+255),b
  1381  001132                     l704:
  1382                           
  1383                           ; BSR set to: 1
  1384                           ;main.c: 146:         if(AuxPost){
  1385  001132  515E               	movf	main@AuxPost& (0+255),w,b
  1386  001134  B4D8               	btfsc	status,2,c
  1387  001136  D012               	goto	l3874
  1388                           
  1389                           ; BSR set to: 1
  1390                           ;main.c: 147:             Postcaler = ConfigPostcaler(DatoRe);
  1391  001138  C16F  F013         	movff	main@DatoRe,ConfigPostcaler@n
  1392  00113C  C170  F014         	movff	main@DatoRe+1,ConfigPostcaler@n+1
  1393  001140  C171  F015         	movff	main@DatoRe+2,ConfigPostcaler@n+2
  1394  001144  C172  F016         	movff	main@DatoRe+3,ConfigPostcaler@n+3
  1395  001148  EC03  F00A         	call	_ConfigPostcaler	;wreg free
  1396  00114C  0101               	movlb	1	; () banked
  1397  00114E  6F6E               	movwf	main@Postcaler& (0+255),b
  1398                           
  1399                           ; BSR set to: 1
  1400                           ;main.c: 148:             T2CON = Postcaler;
  1401  001150  C16E  FFBD         	movff	main@Postcaler,4029	;volatile
  1402                           
  1403                           ; BSR set to: 1
  1404                           ;main.c: 149:             AuxPost = 0;
  1405  001154  0E00               	movlw	0
  1406  001156  6F5E               	movwf	main@AuxPost& (0+255),b
  1407                           
  1408                           ; BSR set to: 1
  1409                           ;main.c: 150:             Auxcont = 1;
  1410  001158  0E01               	movlw	1
  1411  00115A  6F5F               	movwf	main@Auxcont& (0+255),b
  1412  00115C                     l3874:
  1413                           
  1414                           ; BSR set to: 1
  1415                           ;main.c: 153:         if(Auxcont){
  1416  00115C  515F               	movf	main@Auxcont& (0+255),w,b
  1417  00115E  B4D8               	btfsc	status,2,c
  1418  001160  D012               	goto	l3882
  1419                           
  1420                           ; BSR set to: 1
  1421                           ;main.c: 154:             Contador = ConfigCont(DatoRe, Postcaler);
  1422  001162  C16F  F02A         	movff	main@DatoRe,ConfigCont@Dato
  1423  001166  C170  F02B         	movff	main@DatoRe+1,ConfigCont@Dato+1
  1424  00116A  C171  F02C         	movff	main@DatoRe+2,ConfigCont@Dato+2
  1425  00116E  C172  F02D         	movff	main@DatoRe+3,ConfigCont@Dato+3
  1426  001172  C16E  F02E         	movff	main@Postcaler,ConfigCont@Post
  1427  001176  EC29  F00C         	call	_ConfigCont	;wreg free
  1428  00117A  0101               	movlb	1	; () banked
  1429  00117C  6F5C               	movwf	main@Contador& (0+255),b
  1430                           
  1431                           ; BSR set to: 1
  1432                           ;main.c: 155:             T2PR = Contador;
  1433  00117E  C15C  FFBC         	movff	main@Contador,4028	;volatile
  1434                           
  1435                           ; BSR set to: 1
  1436                           ;main.c: 156:             Auxcont = 0;
  1437  001182  0E00               	movlw	0
  1438  001184  6F5F               	movwf	main@Auxcont& (0+255),b
  1439  001186                     l3882:
  1440                           
  1441                           ; BSR set to: 1
  1442                           ;main.c: 159:         if(ADC_flag){
  1443  001186  51F7               	movf	_ADC_flag& (0+255),w,b	;volatile
  1444  001188  B4D8               	btfsc	status,2,c
  1445  00118A  D766               	goto	l3838
  1446                           
  1447                           ; BSR set to: 1
  1448                           ;main.c: 160:             ADC_flag = 0;
  1449  00118C  0E00               	movlw	0
  1450  00118E  6FF7               	movwf	_ADC_flag& (0+255),b	;volatile
  1451                           
  1452                           ; BSR set to: 1
  1453  001190  A084               	btfss	132,0,c	;volatile
  1454  001192  D002               	goto	u3800
  1455  001194  0E01               	movlw	1
  1456  001196  D001               	goto	u3806
  1457  001198                     u3800:
  1458  001198  0E00               	movlw	0
  1459  00119A                     u3806:
  1460  00119A  0AFF               	xorlw	255
  1461  00119C  6E31               	movwf	??_main^0,c
  1462  00119E  5084               	movf	132,w,c	;volatile
  1463  0011A0  1831               	xorwf	??_main^0,w,c
  1464  0011A2  0BFE               	andlw	-2
  1465  0011A4  1831               	xorwf	??_main^0,w,c
  1466  0011A6  6E84               	movwf	132,c	;volatile
  1467                           
  1468                           ; BSR set to: 1
  1469                           ;main.c: 163:             SalidaFIR_long = filtrarFIR1(Result_ADC);
  1470  0011A8  C1F3  F01D         	movff	_Result_ADC,filtrarFIR1@in	;volatile
  1471  0011AC  C1F4  F01E         	movff	_Result_ADC+1,filtrarFIR1@in+1	;volatile
  1472  0011B0  ECE9  F011         	call	_filtrarFIR1	;wreg free
  1473  0011B4  C01D  F160         	movff	?_filtrarFIR1,main@SalidaFIR_long
  1474  0011B8  C01E  F161         	movff	?_filtrarFIR1+1,main@SalidaFIR_long+1
  1475  0011BC  C01F  F162         	movff	?_filtrarFIR1+2,main@SalidaFIR_long+2
  1476  0011C0  C020  F163         	movff	?_filtrarFIR1+3,main@SalidaFIR_long+3
  1477                           
  1478                           ;main.c: 176:             SALIDA = (Resta & (int16_t)SalidaFIR_long);
  1479  0011C4  0101               	movlb	1	; () banked
  1480  0011C6  5158               	movf	main@Resta& (0+255),w,b
  1481  0011C8  1560               	andwf	main@SalidaFIR_long& (0+255),w,b
  1482  0011CA  6F5A               	movwf	main@SALIDA& (0+255),b
  1483  0011CC  5159               	movf	(main@Resta+1)& (0+255),w,b
  1484  0011CE  1561               	andwf	(main@SalidaFIR_long+1)& (0+255),w,b
  1485  0011D0  6F5B               	movwf	(main@SALIDA+1)& (0+255),b
  1486                           
  1487                           ; BSR set to: 1
  1488                           ;main.c: 178:             Palabra_DAC = (DAC_IN) + ((uint16_t)SALIDA);
  1489  0011D2  515A               	movf	main@SALIDA& (0+255),w,b
  1490  0011D4  2556               	addwf	main@DAC_IN& (0+255),w,b
  1491  0011D6  6F6C               	movwf	main@Palabra_DAC& (0+255),b
  1492  0011D8  515B               	movf	(main@SALIDA+1)& (0+255),w,b
  1493  0011DA  2157               	addwfc	(main@DAC_IN+1)& (0+255),w,b
  1494  0011DC  6F6D               	movwf	(main@Palabra_DAC+1)& (0+255),b
  1495                           
  1496                           ; BSR set to: 1
  1497                           ;main.c: 179:             Vector_DAC[1] = Palabra_DAC;
  1498  0011DE  C16C  F169         	movff	main@Palabra_DAC,main@Vector_DAC+1
  1499                           
  1500                           ; BSR set to: 1
  1501                           ;main.c: 180:             Vector_DAC[0] = Palabra_DAC >> 8;
  1502  0011E2  C16D  F168         	movff	main@Palabra_DAC+1,main@Vector_DAC
  1503                           
  1504                           ; BSR set to: 1
  1505  0011E6  9087               	bcf	135,0,c	;volatile
  1506                           
  1507                           ; BSR set to: 1
  1508                           ;main.c: 182:             SPI1_WriteBlock(&Vector_DAC, 2);
  1509  0011E8  0E68               	movlw	low main@Vector_DAC
  1510  0011EA  6E08               	movwf	SPI1_WriteBlock@block^0,c
  1511  0011EC  0E01               	movlw	high main@Vector_DAC
  1512  0011EE  6E09               	movwf	(SPI1_WriteBlock@block+1)^0,c
  1513  0011F0  0E00               	movlw	0
  1514  0011F2  6E0B               	movwf	(SPI1_WriteBlock@blockSize+1)^0,c
  1515  0011F4  0E02               	movlw	2
  1516  0011F6  6E0A               	movwf	SPI1_WriteBlock@blockSize^0,c
  1517  0011F8  EC0B  F017         	call	_SPI1_WriteBlock	;wreg free
  1518                           
  1519                           ;main.c: 183:             _delay((unsigned long)((50)*(32000000/4000000.0)));
  1520  0011FC  0E85               	movlw	133
  1521  0011FE                     u3827:
  1522  0011FE  2EE8               	decfsz	wreg,f,c
  1523  001200  D7FE               	bra	u3827
  1524  001202  F000               	nop	
  1525  001204  8087               	bsf	135,0,c	;volatile
  1526                           
  1527                           ;main.c: 185:             _delay((unsigned long)((1)*(32000000/4000000.0)));
  1528  001206  D000               	nop2		;2 cycle nop
  1529  001208  D000               	nop2		;2 cycle nop
  1530  00120A  D000               	nop2		;2 cycle nop
  1531  00120C  D000               	nop2		;2 cycle nop
  1532  00120E  9884               	bcf	132,4,c	;volatile
  1533                           
  1534                           ;main.c: 187:             _delay((unsigned long)((1)*(32000000/4000000.0)));
  1535  001210  D000               	nop2		;2 cycle nop
  1536  001212  D000               	nop2		;2 cycle nop
  1537  001214  D000               	nop2		;2 cycle nop
  1538  001216  D000               	nop2		;2 cycle nop
  1539  001218  8884               	bsf	132,4,c	;volatile
  1540                           
  1541                           ;main.c: 190:             AuxReADC = Result_ADC;
  1542  00121A  C1F3  F1D5         	movff	_Result_ADC,main@AuxReADC	;volatile
  1543  00121E  C1F4  F1D6         	movff	_Result_ADC+1,main@AuxReADC+1	;volatile
  1544                           
  1545                           ;main.c: 191:             ADC_Vect[3] = AuxReADC%10;
  1546  001222  C1D5  F007         	movff	main@AuxReADC,___awmod@dividend
  1547  001226  C1D6  F008         	movff	main@AuxReADC+1,___awmod@dividend+1
  1548  00122A  0E00               	movlw	0
  1549  00122C  6E0A               	movwf	(___awmod@divisor+1)^0,c
  1550  00122E  0E0A               	movlw	10
  1551  001230  6E09               	movwf	___awmod@divisor^0,c
  1552  001232  EC40  F016         	call	___awmod	;wreg free
  1553  001236  5007               	movf	?___awmod^0,w,c
  1554  001238  0101               	movlb	1	; () banked
  1555  00123A  6F67               	movwf	(main@ADC_Vect+3)& (0+255),b
  1556                           
  1557                           ; BSR set to: 1
  1558                           ;main.c: 192:             AuxReADC = AuxReADC/10;
  1559  00123C  C1D5  F007         	movff	main@AuxReADC,___awdiv@dividend
  1560  001240  C1D6  F008         	movff	main@AuxReADC+1,___awdiv@dividend+1
  1561  001244  0E00               	movlw	0
  1562  001246  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1563  001248  0E0A               	movlw	10
  1564  00124A  6E09               	movwf	___awdiv@divisor^0,c
  1565  00124C  EC82  F015         	call	___awdiv	;wreg free
  1566  001250  C007  F1D5         	movff	?___awdiv,main@AuxReADC
  1567  001254  C008  F1D6         	movff	?___awdiv+1,main@AuxReADC+1
  1568                           
  1569                           ; BSR set to: 1
  1570                           ;main.c: 193:             ADC_Vect[2] = AuxReADC%10;
  1571  001258  C1D5  F007         	movff	main@AuxReADC,___awmod@dividend
  1572  00125C  C1D6  F008         	movff	main@AuxReADC+1,___awmod@dividend+1
  1573  001260  0E00               	movlw	0
  1574  001262  6E0A               	movwf	(___awmod@divisor+1)^0,c
  1575  001264  0E0A               	movlw	10
  1576  001266  6E09               	movwf	___awmod@divisor^0,c
  1577  001268  EC40  F016         	call	___awmod	;wreg free
  1578  00126C  5007               	movf	?___awmod^0,w,c
  1579  00126E  0101               	movlb	1	; () banked
  1580  001270  6F66               	movwf	(main@ADC_Vect+2)& (0+255),b
  1581                           
  1582                           ; BSR set to: 1
  1583                           ;main.c: 194:             AuxReADC = AuxReADC/10;
  1584  001272  C1D5  F007         	movff	main@AuxReADC,___awdiv@dividend
  1585  001276  C1D6  F008         	movff	main@AuxReADC+1,___awdiv@dividend+1
  1586  00127A  0E00               	movlw	0
  1587  00127C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1588  00127E  0E0A               	movlw	10
  1589  001280  6E09               	movwf	___awdiv@divisor^0,c
  1590  001282  EC82  F015         	call	___awdiv	;wreg free
  1591  001286  C007  F1D5         	movff	?___awdiv,main@AuxReADC
  1592  00128A  C008  F1D6         	movff	?___awdiv+1,main@AuxReADC+1
  1593                           
  1594                           ; BSR set to: 1
  1595                           ;main.c: 195:             ADC_Vect[1] = AuxReADC%10;
  1596  00128E  C1D5  F007         	movff	main@AuxReADC,___awmod@dividend
  1597  001292  C1D6  F008         	movff	main@AuxReADC+1,___awmod@dividend+1
  1598  001296  0E00               	movlw	0
  1599  001298  6E0A               	movwf	(___awmod@divisor+1)^0,c
  1600  00129A  0E0A               	movlw	10
  1601  00129C  6E09               	movwf	___awmod@divisor^0,c
  1602  00129E  EC40  F016         	call	___awmod	;wreg free
  1603  0012A2  5007               	movf	?___awmod^0,w,c
  1604  0012A4  0101               	movlb	1	; () banked
  1605  0012A6  6F65               	movwf	(main@ADC_Vect+1)& (0+255),b
  1606                           
  1607                           ; BSR set to: 1
  1608                           ;main.c: 196:             AuxReADC = AuxReADC/10;
  1609  0012A8  C1D5  F007         	movff	main@AuxReADC,___awdiv@dividend
  1610  0012AC  C1D6  F008         	movff	main@AuxReADC+1,___awdiv@dividend+1
  1611  0012B0  0E00               	movlw	0
  1612  0012B2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1613  0012B4  0E0A               	movlw	10
  1614  0012B6  6E09               	movwf	___awdiv@divisor^0,c
  1615  0012B8  EC82  F015         	call	___awdiv	;wreg free
  1616  0012BC  C007  F1D5         	movff	?___awdiv,main@AuxReADC
  1617  0012C0  C008  F1D6         	movff	?___awdiv+1,main@AuxReADC+1
  1618                           
  1619                           ; BSR set to: 1
  1620                           ;main.c: 197:             ADC_Vect[0] = AuxReADC%10;
  1621  0012C4  C1D5  F007         	movff	main@AuxReADC,___awmod@dividend
  1622  0012C8  C1D6  F008         	movff	main@AuxReADC+1,___awmod@dividend+1
  1623  0012CC  0E00               	movlw	0
  1624  0012CE  6E0A               	movwf	(___awmod@divisor+1)^0,c
  1625  0012D0  0E0A               	movlw	10
  1626  0012D2  6E09               	movwf	___awmod@divisor^0,c
  1627  0012D4  EC40  F016         	call	___awmod	;wreg free
  1628  0012D8  5007               	movf	?___awmod^0,w,c
  1629  0012DA  0101               	movlb	1	; () banked
  1630  0012DC  6F64               	movwf	main@ADC_Vect& (0+255),b
  1631                           
  1632                           ; BSR set to: 1
  1633                           ;main.c: 199:             AuxReADC = SalidaFIR_long;
  1634  0012DE  C160  F1D5         	movff	main@SalidaFIR_long,main@AuxReADC
  1635  0012E2  C161  F1D6         	movff	main@SalidaFIR_long+1,main@AuxReADC+1
  1636                           
  1637                           ; BSR set to: 1
  1638                           ;main.c: 200:             ADC_Tx_Vect[3] = AuxReADC%10;
  1639  0012E6  C1D5  F007         	movff	main@AuxReADC,___awmod@dividend
  1640  0012EA  C1D6  F008         	movff	main@AuxReADC+1,___awmod@dividend+1
  1641  0012EE  0E00               	movlw	0
  1642  0012F0  6E0A               	movwf	(___awmod@divisor+1)^0,c
  1643  0012F2  0E0A               	movlw	10
  1644  0012F4  6E09               	movwf	___awmod@divisor^0,c
  1645  0012F6  EC40  F016         	call	___awmod	;wreg free
  1646  0012FA  5007               	movf	?___awmod^0,w,c
  1647  0012FC  0101               	movlb	1	; () banked
  1648  0012FE  6FF2               	movwf	(_ADC_Tx_Vect+3)& (0+255),b	;volatile
  1649                           
  1650                           ; BSR set to: 1
  1651                           ;main.c: 201:             AuxReADC = AuxReADC/10;
  1652  001300  C1D5  F007         	movff	main@AuxReADC,___awdiv@dividend
  1653  001304  C1D6  F008         	movff	main@AuxReADC+1,___awdiv@dividend+1
  1654  001308  0E00               	movlw	0
  1655  00130A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1656  00130C  0E0A               	movlw	10
  1657  00130E  6E09               	movwf	___awdiv@divisor^0,c
  1658  001310  EC82  F015         	call	___awdiv	;wreg free
  1659  001314  C007  F1D5         	movff	?___awdiv,main@AuxReADC
  1660  001318  C008  F1D6         	movff	?___awdiv+1,main@AuxReADC+1
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;main.c: 202:             ADC_Tx_Vect[2] = AuxReADC%10;
  1664  00131C  C1D5  F007         	movff	main@AuxReADC,___awmod@dividend
  1665  001320  C1D6  F008         	movff	main@AuxReADC+1,___awmod@dividend+1
  1666  001324  0E00               	movlw	0
  1667  001326  6E0A               	movwf	(___awmod@divisor+1)^0,c
  1668  001328  0E0A               	movlw	10
  1669  00132A  6E09               	movwf	___awmod@divisor^0,c
  1670  00132C  EC40  F016         	call	___awmod	;wreg free
  1671  001330  5007               	movf	?___awmod^0,w,c
  1672  001332  0101               	movlb	1	; () banked
  1673  001334  6FF1               	movwf	(_ADC_Tx_Vect+2)& (0+255),b	;volatile
  1674                           
  1675                           ; BSR set to: 1
  1676                           ;main.c: 203:             AuxReADC = AuxReADC/10;
  1677  001336  C1D5  F007         	movff	main@AuxReADC,___awdiv@dividend
  1678  00133A  C1D6  F008         	movff	main@AuxReADC+1,___awdiv@dividend+1
  1679  00133E  0E00               	movlw	0
  1680  001340  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1681  001342  0E0A               	movlw	10
  1682  001344  6E09               	movwf	___awdiv@divisor^0,c
  1683  001346  EC82  F015         	call	___awdiv	;wreg free
  1684  00134A  C007  F1D5         	movff	?___awdiv,main@AuxReADC
  1685  00134E  C008  F1D6         	movff	?___awdiv+1,main@AuxReADC+1
  1686                           
  1687                           ; BSR set to: 1
  1688                           ;main.c: 204:             ADC_Tx_Vect[1] = AuxReADC%10;
  1689  001352  C1D5  F007         	movff	main@AuxReADC,___awmod@dividend
  1690  001356  C1D6  F008         	movff	main@AuxReADC+1,___awmod@dividend+1
  1691  00135A  0E00               	movlw	0
  1692  00135C  6E0A               	movwf	(___awmod@divisor+1)^0,c
  1693  00135E  0E0A               	movlw	10
  1694  001360  6E09               	movwf	___awmod@divisor^0,c
  1695  001362  EC40  F016         	call	___awmod	;wreg free
  1696  001366  5007               	movf	?___awmod^0,w,c
  1697  001368  0101               	movlb	1	; () banked
  1698  00136A  6FF0               	movwf	(_ADC_Tx_Vect+1)& (0+255),b	;volatile
  1699                           
  1700                           ; BSR set to: 1
  1701                           ;main.c: 205:             AuxReADC = AuxReADC/10;
  1702  00136C  C1D5  F007         	movff	main@AuxReADC,___awdiv@dividend
  1703  001370  C1D6  F008         	movff	main@AuxReADC+1,___awdiv@dividend+1
  1704  001374  0E00               	movlw	0
  1705  001376  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1706  001378  0E0A               	movlw	10
  1707  00137A  6E09               	movwf	___awdiv@divisor^0,c
  1708  00137C  EC82  F015         	call	___awdiv	;wreg free
  1709  001380  C007  F1D5         	movff	?___awdiv,main@AuxReADC
  1710  001384  C008  F1D6         	movff	?___awdiv+1,main@AuxReADC+1
  1711                           
  1712                           ; BSR set to: 1
  1713                           ;main.c: 206:             ADC_Tx_Vect[0] = AuxReADC%10;
  1714  001388  C1D5  F007         	movff	main@AuxReADC,___awmod@dividend
  1715  00138C  C1D6  F008         	movff	main@AuxReADC+1,___awmod@dividend+1
  1716  001390  0E00               	movlw	0
  1717  001392  6E0A               	movwf	(___awmod@divisor+1)^0,c
  1718  001394  0E0A               	movlw	10
  1719  001396  6E09               	movwf	___awmod@divisor^0,c
  1720  001398  EC40  F016         	call	___awmod	;wreg free
  1721  00139C  5007               	movf	?___awmod^0,w,c
  1722  00139E  0101               	movlb	1	; () banked
  1723  0013A0  6FEF               	movwf	_ADC_Tx_Vect& (0+255),b	;volatile
  1724                           
  1725                           ; BSR set to: 1
  1726                           ;main.c: 207:             EUSART1_Write('-');
  1727  0013A2  0E2D               	movlw	45
  1728  0013A4  ECF1  F016         	call	_EUSART1_Write
  1729                           
  1730                           ; BSR set to: 14
  1731                           ;main.c: 208:             EUSART1_Write(ADC_Vect[0] + '0');
  1732  0013A8  0101               	movlb	1	; () banked
  1733  0013AA  5164               	movf	main@ADC_Vect& (0+255),w,b
  1734  0013AC  0F30               	addlw	48
  1735  0013AE  ECF1  F016         	call	_EUSART1_Write
  1736                           
  1737                           ; BSR set to: 14
  1738                           ;main.c: 209:             EUSART1_Write(ADC_Vect[1] + '0');
  1739  0013B2  0101               	movlb	1	; () banked
  1740  0013B4  5165               	movf	(main@ADC_Vect+1)& (0+255),w,b
  1741  0013B6  0F30               	addlw	48
  1742  0013B8  ECF1  F016         	call	_EUSART1_Write
  1743                           
  1744                           ; BSR set to: 14
  1745                           ;main.c: 210:             EUSART1_Write(ADC_Vect[2] + '0');
  1746  0013BC  0101               	movlb	1	; () banked
  1747  0013BE  5166               	movf	(main@ADC_Vect+2)& (0+255),w,b
  1748  0013C0  0F30               	addlw	48
  1749  0013C2  ECF1  F016         	call	_EUSART1_Write
  1750                           
  1751                           ; BSR set to: 14
  1752                           ;main.c: 211:             EUSART1_Write(ADC_Vect[3] + '0');
  1753  0013C6  0101               	movlb	1	; () banked
  1754  0013C8  5167               	movf	(main@ADC_Vect+3)& (0+255),w,b
  1755  0013CA  0F30               	addlw	48
  1756  0013CC  ECF1  F016         	call	_EUSART1_Write
  1757                           
  1758                           ; BSR set to: 14
  1759                           ;main.c: 212:             EUSART1_Write(',');
  1760  0013D0  0E2C               	movlw	44
  1761  0013D2  ECF1  F016         	call	_EUSART1_Write
  1762                           
  1763                           ; BSR set to: 14
  1764                           ;main.c: 213:             EUSART1_Write(ADC_Tx_Vect[0] + '0');
  1765  0013D6  0101               	movlb	1	; () banked
  1766  0013D8  51EF               	movf	_ADC_Tx_Vect& (0+255),w,b
  1767  0013DA  0F30               	addlw	48
  1768  0013DC  ECF1  F016         	call	_EUSART1_Write
  1769                           
  1770                           ; BSR set to: 14
  1771                           ;main.c: 214:             EUSART1_Write(ADC_Tx_Vect[1] + '0');
  1772  0013E0  0101               	movlb	1	; () banked
  1773  0013E2  51F0               	movf	(_ADC_Tx_Vect+1)& (0+255),w,b	;volatile
  1774  0013E4  0F30               	addlw	48
  1775  0013E6  ECF1  F016         	call	_EUSART1_Write
  1776                           
  1777                           ; BSR set to: 14
  1778                           ;main.c: 215:             EUSART1_Write(ADC_Tx_Vect[2] + '0');
  1779  0013EA  0101               	movlb	1	; () banked
  1780  0013EC  51F1               	movf	(_ADC_Tx_Vect+2)& (0+255),w,b	;volatile
  1781  0013EE  0F30               	addlw	48
  1782  0013F0  ECF1  F016         	call	_EUSART1_Write
  1783                           
  1784                           ; BSR set to: 14
  1785                           ;main.c: 216:             EUSART1_Write(ADC_Tx_Vect[3] + '0');
  1786  0013F4  0101               	movlb	1	; () banked
  1787  0013F6  51F2               	movf	(_ADC_Tx_Vect+3)& (0+255),w,b	;volatile
  1788  0013F8  0F30               	addlw	48
  1789  0013FA  ECF1  F016         	call	_EUSART1_Write
  1790                           
  1791                           ; BSR set to: 14
  1792                           ;main.c: 217:             EUSART1_Write(0x0D);
  1793  0013FE  0E0D               	movlw	13
  1794  001400  ECF1  F016         	call	_EUSART1_Write
  1795  001404  D629               	goto	l3838
  1796  001406                     __end_of_main:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _inicializar_iir_2_ord *****************
  1800 ;; Defined at:
  1801 ;;		line 121 in file "funciones.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  num             2    6[COMRAM] PTR float 
  1804 ;;		 -> main@num(12), 
  1805 ;;  den             2    8[COMRAM] PTR float 
  1806 ;;		 -> main@den(12), 
  1807 ;;  w               2   10[COMRAM] PTR float 
  1808 ;;		 -> main@w(12), 
  1809 ;;  num2            2   12[COMRAM] PTR float 
  1810 ;;		 -> main@num2(12), 
  1811 ;;  den2            2   14[COMRAM] PTR float 
  1812 ;;		 -> main@den2(12), 
  1813 ;;  w2              2   16[COMRAM] PTR float 
  1814 ;;		 -> main@w2(12), 
  1815 ;;  gan             2   18[COMRAM] PTR float 
  1816 ;;		 -> main@gan(12), 
  1817 ;;  ir              2   20[COMRAM] PTR struct coef_iir_2_or
  1818 ;;		 -> main@ir(84), 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  i               2   26[COMRAM] int 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/1
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1830 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1833 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1834 ;;Total ram usage:       22 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 5
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text1
  1845  002162                     __ptext1:
  1846                           	callstack 0
  1847  002162                     _inicializar_iir_2_ord:
  1848                           	callstack 25
  1849                           
  1850                           ;funciones.c: 121: void inicializar_iir_2_ord(float*num, float*den, float*w, float *num2
      +                          , float *den2, float *w2, float *gan, coef_iir_2_ord* ir);funciones.c: 122: {;funciones.
      +                          c: 123:   for (int i = 0; i < 3; i++) {
  1851                           
  1852                           ; BSR set to: 14
  1853                           ;incstack = 0
  1854  002162  0E00               	movlw	0
  1855  002164  6E1C               	movwf	(inicializar_iir_2_ord@i+1)^0,c
  1856  002166  0E00               	movlw	0
  1857  002168  6E1B               	movwf	inicializar_iir_2_ord@i^0,c
  1858  00216A                     l3258:
  1859                           
  1860                           ;funciones.c: 124:     ir->num[i] = num[i];
  1861  00216A  90D8               	bcf	status,0,c
  1862  00216C  341B               	rlcf	inicializar_iir_2_ord@i^0,w,c
  1863  00216E  6ED9               	movwf	fsr2l,c
  1864  002170  341C               	rlcf	(inicializar_iir_2_ord@i+1)^0,w,c
  1865  002172  6EDA               	movwf	fsr2h,c
  1866  002174  90D8               	bcf	status,0,c
  1867  002176  36D9               	rlcf	fsr2l,f,c
  1868  002178  36DA               	rlcf	fsr2h,f,c
  1869  00217A  5007               	movf	inicializar_iir_2_ord@num^0,w,c
  1870  00217C  26D9               	addwf	fsr2l,f,c
  1871  00217E  5008               	movf	(inicializar_iir_2_ord@num+1)^0,w,c
  1872  002180  22DA               	addwfc	fsr2h,f,c
  1873  002182  90D8               	bcf	status,0,c
  1874  002184  341B               	rlcf	inicializar_iir_2_ord@i^0,w,c
  1875  002186  6EE1               	movwf	fsr1l,c
  1876  002188  341C               	rlcf	(inicializar_iir_2_ord@i+1)^0,w,c
  1877  00218A  6EE2               	movwf	fsr1h,c
  1878  00218C  90D8               	bcf	status,0,c
  1879  00218E  36E1               	rlcf	fsr1l,f,c
  1880  002190  36E2               	rlcf	fsr1h,f,c
  1881  002192  5015               	movf	inicializar_iir_2_ord@ir^0,w,c
  1882  002194  26E1               	addwf	fsr1l,f,c
  1883  002196  5016               	movf	(inicializar_iir_2_ord@ir+1)^0,w,c
  1884  002198  22E2               	addwfc	fsr1h,f,c
  1885  00219A  CFDE FFE6          	movff	postinc2,postinc1
  1886  00219E  CFDE FFE6          	movff	postinc2,postinc1
  1887  0021A2  CFDE FFE6          	movff	postinc2,postinc1
  1888  0021A6  CFDE FFE6          	movff	postinc2,postinc1
  1889                           
  1890                           ;funciones.c: 125:     ir->den[i] = den[i];
  1891  0021AA  90D8               	bcf	status,0,c
  1892  0021AC  341B               	rlcf	inicializar_iir_2_ord@i^0,w,c
  1893  0021AE  6ED9               	movwf	fsr2l,c
  1894  0021B0  341C               	rlcf	(inicializar_iir_2_ord@i+1)^0,w,c
  1895  0021B2  6EDA               	movwf	fsr2h,c
  1896  0021B4  90D8               	bcf	status,0,c
  1897  0021B6  36D9               	rlcf	fsr2l,f,c
  1898  0021B8  36DA               	rlcf	fsr2h,f,c
  1899  0021BA  5009               	movf	inicializar_iir_2_ord@den^0,w,c
  1900  0021BC  26D9               	addwf	fsr2l,f,c
  1901  0021BE  500A               	movf	(inicializar_iir_2_ord@den+1)^0,w,c
  1902  0021C0  22DA               	addwfc	fsr2h,f,c
  1903  0021C2  C01B  F017         	movff	inicializar_iir_2_ord@i,??_inicializar_iir_2_ord
  1904  0021C6  C01C  F018         	movff	inicializar_iir_2_ord@i+1,??_inicializar_iir_2_ord+1
  1905  0021CA  90D8               	bcf	status,0,c
  1906  0021CC  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  1907  0021CE  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  1908  0021D0  90D8               	bcf	status,0,c
  1909  0021D2  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  1910  0021D4  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  1911  0021D6  C015  F019         	movff	inicializar_iir_2_ord@ir,??_inicializar_iir_2_ord+2
  1912  0021DA  C016  F01A         	movff	inicializar_iir_2_ord@ir+1,??_inicializar_iir_2_ord+3
  1913  0021DE  5017               	movf	??_inicializar_iir_2_ord^0,w,c
  1914  0021E0  2619               	addwf	(??_inicializar_iir_2_ord+2)^0,f,c
  1915  0021E2  5018               	movf	(??_inicializar_iir_2_ord+1)^0,w,c
  1916  0021E4  221A               	addwfc	(??_inicializar_iir_2_ord+3)^0,f,c
  1917  0021E6  0E0C               	movlw	12
  1918  0021E8  2419               	addwf	(??_inicializar_iir_2_ord+2)^0,w,c
  1919  0021EA  6EE1               	movwf	fsr1l,c
  1920  0021EC  0E00               	movlw	0
  1921  0021EE  201A               	addwfc	(??_inicializar_iir_2_ord+3)^0,w,c
  1922  0021F0  6EE2               	movwf	fsr1h,c
  1923  0021F2  CFDE FFE6          	movff	postinc2,postinc1
  1924  0021F6  CFDE FFE6          	movff	postinc2,postinc1
  1925  0021FA  CFDE FFE6          	movff	postinc2,postinc1
  1926  0021FE  CFDE FFE6          	movff	postinc2,postinc1
  1927                           
  1928                           ;funciones.c: 126:     ir->w[i] = w[i];
  1929  002202  90D8               	bcf	status,0,c
  1930  002204  341B               	rlcf	inicializar_iir_2_ord@i^0,w,c
  1931  002206  6ED9               	movwf	fsr2l,c
  1932  002208  341C               	rlcf	(inicializar_iir_2_ord@i+1)^0,w,c
  1933  00220A  6EDA               	movwf	fsr2h,c
  1934  00220C  90D8               	bcf	status,0,c
  1935  00220E  36D9               	rlcf	fsr2l,f,c
  1936  002210  36DA               	rlcf	fsr2h,f,c
  1937  002212  500B               	movf	inicializar_iir_2_ord@w^0,w,c
  1938  002214  26D9               	addwf	fsr2l,f,c
  1939  002216  500C               	movf	(inicializar_iir_2_ord@w+1)^0,w,c
  1940  002218  22DA               	addwfc	fsr2h,f,c
  1941  00221A  C01B  F017         	movff	inicializar_iir_2_ord@i,??_inicializar_iir_2_ord
  1942  00221E  C01C  F018         	movff	inicializar_iir_2_ord@i+1,??_inicializar_iir_2_ord+1
  1943  002222  90D8               	bcf	status,0,c
  1944  002224  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  1945  002226  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  1946  002228  90D8               	bcf	status,0,c
  1947  00222A  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  1948  00222C  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  1949  00222E  C015  F019         	movff	inicializar_iir_2_ord@ir,??_inicializar_iir_2_ord+2
  1950  002232  C016  F01A         	movff	inicializar_iir_2_ord@ir+1,??_inicializar_iir_2_ord+3
  1951  002236  5017               	movf	??_inicializar_iir_2_ord^0,w,c
  1952  002238  2619               	addwf	(??_inicializar_iir_2_ord+2)^0,f,c
  1953  00223A  5018               	movf	(??_inicializar_iir_2_ord+1)^0,w,c
  1954  00223C  221A               	addwfc	(??_inicializar_iir_2_ord+3)^0,f,c
  1955  00223E  0E18               	movlw	24
  1956  002240  2419               	addwf	(??_inicializar_iir_2_ord+2)^0,w,c
  1957  002242  6EE1               	movwf	fsr1l,c
  1958  002244  0E00               	movlw	0
  1959  002246  201A               	addwfc	(??_inicializar_iir_2_ord+3)^0,w,c
  1960  002248  6EE2               	movwf	fsr1h,c
  1961  00224A  CFDE FFE6          	movff	postinc2,postinc1
  1962  00224E  CFDE FFE6          	movff	postinc2,postinc1
  1963  002252  CFDE FFE6          	movff	postinc2,postinc1
  1964  002256  CFDE FFE6          	movff	postinc2,postinc1
  1965                           
  1966                           ;funciones.c: 127:     ir->num2[i] = num2[i];
  1967  00225A  90D8               	bcf	status,0,c
  1968  00225C  341B               	rlcf	inicializar_iir_2_ord@i^0,w,c
  1969  00225E  6ED9               	movwf	fsr2l,c
  1970  002260  341C               	rlcf	(inicializar_iir_2_ord@i+1)^0,w,c
  1971  002262  6EDA               	movwf	fsr2h,c
  1972  002264  90D8               	bcf	status,0,c
  1973  002266  36D9               	rlcf	fsr2l,f,c
  1974  002268  36DA               	rlcf	fsr2h,f,c
  1975  00226A  500D               	movf	inicializar_iir_2_ord@num2^0,w,c
  1976  00226C  26D9               	addwf	fsr2l,f,c
  1977  00226E  500E               	movf	(inicializar_iir_2_ord@num2+1)^0,w,c
  1978  002270  22DA               	addwfc	fsr2h,f,c
  1979  002272  C01B  F017         	movff	inicializar_iir_2_ord@i,??_inicializar_iir_2_ord
  1980  002276  C01C  F018         	movff	inicializar_iir_2_ord@i+1,??_inicializar_iir_2_ord+1
  1981  00227A  90D8               	bcf	status,0,c
  1982  00227C  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  1983  00227E  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  1984  002280  90D8               	bcf	status,0,c
  1985  002282  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  1986  002284  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  1987  002286  C015  F019         	movff	inicializar_iir_2_ord@ir,??_inicializar_iir_2_ord+2
  1988  00228A  C016  F01A         	movff	inicializar_iir_2_ord@ir+1,??_inicializar_iir_2_ord+3
  1989  00228E  5017               	movf	??_inicializar_iir_2_ord^0,w,c
  1990  002290  2619               	addwf	(??_inicializar_iir_2_ord+2)^0,f,c
  1991  002292  5018               	movf	(??_inicializar_iir_2_ord+1)^0,w,c
  1992  002294  221A               	addwfc	(??_inicializar_iir_2_ord+3)^0,f,c
  1993  002296  0E30               	movlw	48
  1994  002298  2419               	addwf	(??_inicializar_iir_2_ord+2)^0,w,c
  1995  00229A  6EE1               	movwf	fsr1l,c
  1996  00229C  0E00               	movlw	0
  1997  00229E  201A               	addwfc	(??_inicializar_iir_2_ord+3)^0,w,c
  1998  0022A0  6EE2               	movwf	fsr1h,c
  1999  0022A2  CFDE FFE6          	movff	postinc2,postinc1
  2000  0022A6  CFDE FFE6          	movff	postinc2,postinc1
  2001  0022AA  CFDE FFE6          	movff	postinc2,postinc1
  2002  0022AE  CFDE FFE6          	movff	postinc2,postinc1
  2003                           
  2004                           ;funciones.c: 128:     ir->den2[i] = den2[i];
  2005  0022B2  90D8               	bcf	status,0,c
  2006  0022B4  341B               	rlcf	inicializar_iir_2_ord@i^0,w,c
  2007  0022B6  6ED9               	movwf	fsr2l,c
  2008  0022B8  341C               	rlcf	(inicializar_iir_2_ord@i+1)^0,w,c
  2009  0022BA  6EDA               	movwf	fsr2h,c
  2010  0022BC  90D8               	bcf	status,0,c
  2011  0022BE  36D9               	rlcf	fsr2l,f,c
  2012  0022C0  36DA               	rlcf	fsr2h,f,c
  2013  0022C2  500F               	movf	inicializar_iir_2_ord@den2^0,w,c
  2014  0022C4  26D9               	addwf	fsr2l,f,c
  2015  0022C6  5010               	movf	(inicializar_iir_2_ord@den2+1)^0,w,c
  2016  0022C8  22DA               	addwfc	fsr2h,f,c
  2017  0022CA  C01B  F017         	movff	inicializar_iir_2_ord@i,??_inicializar_iir_2_ord
  2018  0022CE  C01C  F018         	movff	inicializar_iir_2_ord@i+1,??_inicializar_iir_2_ord+1
  2019  0022D2  90D8               	bcf	status,0,c
  2020  0022D4  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  2021  0022D6  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  2022  0022D8  90D8               	bcf	status,0,c
  2023  0022DA  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  2024  0022DC  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  2025  0022DE  C015  F019         	movff	inicializar_iir_2_ord@ir,??_inicializar_iir_2_ord+2
  2026  0022E2  C016  F01A         	movff	inicializar_iir_2_ord@ir+1,??_inicializar_iir_2_ord+3
  2027  0022E6  5017               	movf	??_inicializar_iir_2_ord^0,w,c
  2028  0022E8  2619               	addwf	(??_inicializar_iir_2_ord+2)^0,f,c
  2029  0022EA  5018               	movf	(??_inicializar_iir_2_ord+1)^0,w,c
  2030  0022EC  221A               	addwfc	(??_inicializar_iir_2_ord+3)^0,f,c
  2031  0022EE  0E3C               	movlw	60
  2032  0022F0  2419               	addwf	(??_inicializar_iir_2_ord+2)^0,w,c
  2033  0022F2  6EE1               	movwf	fsr1l,c
  2034  0022F4  0E00               	movlw	0
  2035  0022F6  201A               	addwfc	(??_inicializar_iir_2_ord+3)^0,w,c
  2036  0022F8  6EE2               	movwf	fsr1h,c
  2037  0022FA  CFDE FFE6          	movff	postinc2,postinc1
  2038  0022FE  CFDE FFE6          	movff	postinc2,postinc1
  2039  002302  CFDE FFE6          	movff	postinc2,postinc1
  2040  002306  CFDE FFE6          	movff	postinc2,postinc1
  2041                           
  2042                           ;funciones.c: 129:     ir->w2[i] = w2[i];
  2043  00230A  90D8               	bcf	status,0,c
  2044  00230C  341B               	rlcf	inicializar_iir_2_ord@i^0,w,c
  2045  00230E  6ED9               	movwf	fsr2l,c
  2046  002310  341C               	rlcf	(inicializar_iir_2_ord@i+1)^0,w,c
  2047  002312  6EDA               	movwf	fsr2h,c
  2048  002314  90D8               	bcf	status,0,c
  2049  002316  36D9               	rlcf	fsr2l,f,c
  2050  002318  36DA               	rlcf	fsr2h,f,c
  2051  00231A  5011               	movf	inicializar_iir_2_ord@w2^0,w,c
  2052  00231C  26D9               	addwf	fsr2l,f,c
  2053  00231E  5012               	movf	(inicializar_iir_2_ord@w2+1)^0,w,c
  2054  002320  22DA               	addwfc	fsr2h,f,c
  2055  002322  C01B  F017         	movff	inicializar_iir_2_ord@i,??_inicializar_iir_2_ord
  2056  002326  C01C  F018         	movff	inicializar_iir_2_ord@i+1,??_inicializar_iir_2_ord+1
  2057  00232A  90D8               	bcf	status,0,c
  2058  00232C  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  2059  00232E  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  2060  002330  90D8               	bcf	status,0,c
  2061  002332  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  2062  002334  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  2063  002336  C015  F019         	movff	inicializar_iir_2_ord@ir,??_inicializar_iir_2_ord+2
  2064  00233A  C016  F01A         	movff	inicializar_iir_2_ord@ir+1,??_inicializar_iir_2_ord+3
  2065  00233E  5017               	movf	??_inicializar_iir_2_ord^0,w,c
  2066  002340  2619               	addwf	(??_inicializar_iir_2_ord+2)^0,f,c
  2067  002342  5018               	movf	(??_inicializar_iir_2_ord+1)^0,w,c
  2068  002344  221A               	addwfc	(??_inicializar_iir_2_ord+3)^0,f,c
  2069  002346  0E48               	movlw	72
  2070  002348  2419               	addwf	(??_inicializar_iir_2_ord+2)^0,w,c
  2071  00234A  6EE1               	movwf	fsr1l,c
  2072  00234C  0E00               	movlw	0
  2073  00234E  201A               	addwfc	(??_inicializar_iir_2_ord+3)^0,w,c
  2074  002350  6EE2               	movwf	fsr1h,c
  2075  002352  CFDE FFE6          	movff	postinc2,postinc1
  2076  002356  CFDE FFE6          	movff	postinc2,postinc1
  2077  00235A  CFDE FFE6          	movff	postinc2,postinc1
  2078  00235E  CFDE FFE6          	movff	postinc2,postinc1
  2079                           
  2080                           ;funciones.c: 130:     ir->gan[i] = gan[i];
  2081  002362  90D8               	bcf	status,0,c
  2082  002364  341B               	rlcf	inicializar_iir_2_ord@i^0,w,c
  2083  002366  6ED9               	movwf	fsr2l,c
  2084  002368  341C               	rlcf	(inicializar_iir_2_ord@i+1)^0,w,c
  2085  00236A  6EDA               	movwf	fsr2h,c
  2086  00236C  90D8               	bcf	status,0,c
  2087  00236E  36D9               	rlcf	fsr2l,f,c
  2088  002370  36DA               	rlcf	fsr2h,f,c
  2089  002372  5013               	movf	inicializar_iir_2_ord@gan^0,w,c
  2090  002374  26D9               	addwf	fsr2l,f,c
  2091  002376  5014               	movf	(inicializar_iir_2_ord@gan+1)^0,w,c
  2092  002378  22DA               	addwfc	fsr2h,f,c
  2093  00237A  C01B  F017         	movff	inicializar_iir_2_ord@i,??_inicializar_iir_2_ord
  2094  00237E  C01C  F018         	movff	inicializar_iir_2_ord@i+1,??_inicializar_iir_2_ord+1
  2095  002382  90D8               	bcf	status,0,c
  2096  002384  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  2097  002386  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  2098  002388  90D8               	bcf	status,0,c
  2099  00238A  3617               	rlcf	??_inicializar_iir_2_ord^0,f,c
  2100  00238C  3618               	rlcf	(??_inicializar_iir_2_ord+1)^0,f,c
  2101  00238E  C015  F019         	movff	inicializar_iir_2_ord@ir,??_inicializar_iir_2_ord+2
  2102  002392  C016  F01A         	movff	inicializar_iir_2_ord@ir+1,??_inicializar_iir_2_ord+3
  2103  002396  5017               	movf	??_inicializar_iir_2_ord^0,w,c
  2104  002398  2619               	addwf	(??_inicializar_iir_2_ord+2)^0,f,c
  2105  00239A  5018               	movf	(??_inicializar_iir_2_ord+1)^0,w,c
  2106  00239C  221A               	addwfc	(??_inicializar_iir_2_ord+3)^0,f,c
  2107  00239E  0E24               	movlw	36
  2108  0023A0  2419               	addwf	(??_inicializar_iir_2_ord+2)^0,w,c
  2109  0023A2  6EE1               	movwf	fsr1l,c
  2110  0023A4  0E00               	movlw	0
  2111  0023A6  201A               	addwfc	(??_inicializar_iir_2_ord+3)^0,w,c
  2112  0023A8  6EE2               	movwf	fsr1h,c
  2113  0023AA  CFDE FFE6          	movff	postinc2,postinc1
  2114  0023AE  CFDE FFE6          	movff	postinc2,postinc1
  2115  0023B2  CFDE FFE6          	movff	postinc2,postinc1
  2116  0023B6  CFDE FFE6          	movff	postinc2,postinc1
  2117                           
  2118                           ;funciones.c: 131:   }
  2119  0023BA  4A1B               	infsnz	inicializar_iir_2_ord@i^0,f,c
  2120  0023BC  2A1C               	incf	(inicializar_iir_2_ord@i+1)^0,f,c
  2121  0023BE  BE1C               	btfsc	(inicializar_iir_2_ord@i+1)^0,7,c
  2122  0023C0  D6D4               	goto	l3258
  2123  0023C2  501C               	movf	(inicializar_iir_2_ord@i+1)^0,w,c
  2124  0023C4  E105               	bnz	u2590
  2125  0023C6  0E03               	movlw	3
  2126  0023C8  5C1B               	subwf	inicializar_iir_2_ord@i^0,w,c
  2127  0023CA  B0D8               	btfsc	status,0,c
  2128  0023CC  0012               	return	
  2129  0023CE  D6CD               	goto	l3258
  2130  0023D0                     u2590:
  2131  0023D0  0012               	return		;funcret
  2132  0023D2                     __end_of_inicializar_iir_2_ord:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function _filtrarFIR1 *****************
  2136 ;; Defined at:
  2137 ;;		line 61 in file "funciones.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  in              2   28[COMRAM] int 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  i               4   44[COMRAM] long 
  2142 ;;  y               4   40[COMRAM] long 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  4   28[COMRAM] long 
  2145 ;; Registers used:
  2146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 3F/1
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2153 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2154 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2155 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2156 ;;Total ram usage:       20 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 6
  2159 ;; This function calls:
  2160 ;;		___almod
  2161 ;;		___awmod
  2162 ;;		___lmul
  2163 ;; This function is called by:
  2164 ;;		_main
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text2
  2169  0023D2                     __ptext2:
  2170                           	callstack 0
  2171  0023D2                     _filtrarFIR1:
  2172                           	callstack 24
  2173                           
  2174                           ; BSR set to: 1
  2175                           ;funciones.c: 64:   x[k] = (long)in;
  2176                           
  2177                           ; BSR set to: 1
  2178                           
  2179                           ;incstack = 0
  2180  0023D2  504C               	movf	_k^0,w,c	;volatile
  2181  0023D4  0D02               	mullw	2
  2182  0023D6  50F3               	movf	243,w,c
  2183  0023D8  0FB8               	addlw	low _x
  2184  0023DA  6ED9               	movwf	fsr2l,c
  2185  0023DC  6ADA               	clrf	fsr2h,c
  2186  0023DE  C01D  FFDE         	movff	filtrarFIR1@in,postinc2
  2187  0023E2  C01E  FFDD         	movff	filtrarFIR1@in+1,postdec2
  2188                           
  2189                           ; BSR set to: 1
  2190                           ;funciones.c: 65:   long y = 0;
  2191  0023E6  0E00               	movlw	0
  2192  0023E8  6E29               	movwf	filtrarFIR1@y^0,c
  2193  0023EA  0E00               	movlw	0
  2194  0023EC  6E2A               	movwf	(filtrarFIR1@y+1)^0,c
  2195  0023EE  0E00               	movlw	0
  2196  0023F0  6E2B               	movwf	(filtrarFIR1@y+2)^0,c
  2197  0023F2  0E00               	movlw	0
  2198  0023F4  6E2C               	movwf	(filtrarFIR1@y+3)^0,c
  2199                           
  2200                           ; BSR set to: 1
  2201                           ;funciones.c: 66:   for (i = 1; i <= 12; i++)
  2202  0023F6  0E01               	movlw	1
  2203  0023F8  6E2D               	movwf	filtrarFIR1@i^0,c
  2204  0023FA  0E00               	movlw	0
  2205  0023FC  6E2E               	movwf	(filtrarFIR1@i+1)^0,c
  2206  0023FE  0E00               	movlw	0
  2207  002400  6E2F               	movwf	(filtrarFIR1@i+2)^0,c
  2208  002402  0E00               	movlw	0
  2209  002404  6E30               	movwf	(filtrarFIR1@i+3)^0,c
  2210  002406                     l3438:
  2211                           
  2212                           ;funciones.c: 67:   {;funciones.c: 68:     y += (long)B[i - 1] * (long)x[(i + k) % 12];
  2213  002406  502D               	movf	filtrarFIR1@i^0,w,c
  2214  002408  0D02               	mullw	2
  2215  00240A  CFF3 F021          	movff	prodl,??_filtrarFIR1
  2216  00240E  0EFE               	movlw	254
  2217  002410  2621               	addwf	??_filtrarFIR1^0,f,c
  2218  002412  5021               	movf	??_filtrarFIR1^0,w,c
  2219  002414  0F05               	addlw	low _B
  2220  002416  6E22               	movwf	(??_filtrarFIR1+1)^0,c
  2221  002418  C022  FFF6         	movff	??_filtrarFIR1+1,tblptrl
  2222  00241C                     	if	1	;There is more than 1 active tblptr byte
  2223  00241C  0E0F               	movlw	high __smallconst
  2224  00241E  6EF7               	movwf	tblptrh,c
  2225  002420                     	endif
  2226  002420                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2227  002420  6AF8               	clrf	tblptru,c
  2228  002422                     	endif
  2229  002422                     	if	0	;tblptru may be non-zero
  2230  002422                     	endif
  2231  002422  0009               	tblrd		*+
  2232  002424  CFF5 F023          	movff	tablat,??_filtrarFIR1+2
  2233  002428  0009               	tblrd		*+
  2234  00242A  CFF5 F024          	movff	tablat,??_filtrarFIR1+3
  2235  00242E  C023  F011         	movff	??_filtrarFIR1+2,___lmul@multiplier
  2236  002432  C024  F012         	movff	??_filtrarFIR1+3,___lmul@multiplier+1
  2237  002436  0E00               	movlw	0
  2238  002438  BE12               	btfsc	(___lmul@multiplier+1)^0,7,c
  2239  00243A  0EFF               	movlw	-1
  2240  00243C  6E13               	movwf	(___lmul@multiplier+2)^0,c
  2241  00243E  6E14               	movwf	(___lmul@multiplier+3)^0,c
  2242  002440  0E0C               	movlw	12
  2243  002442  6E0B               	movwf	___almod@divisor^0,c
  2244  002444  0E00               	movlw	0
  2245  002446  6E0C               	movwf	(___almod@divisor+1)^0,c
  2246  002448  0E00               	movlw	0
  2247  00244A  6E0D               	movwf	(___almod@divisor+2)^0,c
  2248  00244C  0E00               	movlw	0
  2249  00244E  6E0E               	movwf	(___almod@divisor+3)^0,c
  2250  002450  C04C  F025         	movff	_k,??_filtrarFIR1+4	;volatile
  2251  002454  C04D  F026         	movff	_k+1,??_filtrarFIR1+5	;volatile
  2252  002458  0E00               	movlw	0
  2253  00245A  BE26               	btfsc	(??_filtrarFIR1+5)^0,7,c
  2254  00245C  0EFF               	movlw	255
  2255  00245E  6E27               	movwf	(??_filtrarFIR1+6)^0,c
  2256  002460  6E28               	movwf	(??_filtrarFIR1+7)^0,c
  2257  002462  502D               	movf	filtrarFIR1@i^0,w,c
  2258  002464  2425               	addwf	(??_filtrarFIR1+4)^0,w,c
  2259  002466  6E07               	movwf	___almod@dividend^0,c
  2260  002468  502E               	movf	(filtrarFIR1@i+1)^0,w,c
  2261  00246A  2026               	addwfc	(??_filtrarFIR1+5)^0,w,c
  2262  00246C  6E08               	movwf	(___almod@dividend+1)^0,c
  2263  00246E  502F               	movf	(filtrarFIR1@i+2)^0,w,c
  2264  002470  2027               	addwfc	(??_filtrarFIR1+6)^0,w,c
  2265  002472  6E09               	movwf	(___almod@dividend+2)^0,c
  2266  002474  5030               	movf	(filtrarFIR1@i+3)^0,w,c
  2267  002476  2028               	addwfc	(??_filtrarFIR1+7)^0,w,c
  2268  002478  6E0A               	movwf	(___almod@dividend+3)^0,c
  2269  00247A  EC48  F014         	call	___almod	;wreg free
  2270  00247E  5007               	movf	?___almod^0,w,c
  2271  002480  0D02               	mullw	2
  2272  002482  50F3               	movf	243,w,c
  2273  002484  0FB8               	addlw	low _x
  2274  002486  6ED9               	movwf	fsr2l,c
  2275  002488  6ADA               	clrf	fsr2h,c
  2276  00248A  CFDE F015          	movff	postinc2,___lmul@multiplicand
  2277  00248E  CFDD F016          	movff	postdec2,___lmul@multiplicand+1
  2278  002492  0E00               	movlw	0
  2279  002494  BE16               	btfsc	(___lmul@multiplicand+1)^0,7,c
  2280  002496  0EFF               	movlw	-1
  2281  002498  6E17               	movwf	(___lmul@multiplicand+2)^0,c
  2282  00249A  6E18               	movwf	(___lmul@multiplicand+3)^0,c
  2283  00249C  ECA9  F016         	call	___lmul	;wreg free
  2284  0024A0  5011               	movf	?___lmul^0,w,c
  2285  0024A2  2629               	addwf	filtrarFIR1@y^0,f,c
  2286  0024A4  5012               	movf	(?___lmul+1)^0,w,c
  2287  0024A6  222A               	addwfc	(filtrarFIR1@y+1)^0,f,c
  2288  0024A8  5013               	movf	(?___lmul+2)^0,w,c
  2289  0024AA  222B               	addwfc	(filtrarFIR1@y+2)^0,f,c
  2290  0024AC  5014               	movf	(?___lmul+3)^0,w,c
  2291  0024AE  222C               	addwfc	(filtrarFIR1@y+3)^0,f,c
  2292                           
  2293                           ;funciones.c: 69:   }
  2294  0024B0  0E01               	movlw	1
  2295  0024B2  262D               	addwf	filtrarFIR1@i^0,f,c
  2296  0024B4  0E00               	movlw	0
  2297  0024B6  222E               	addwfc	(filtrarFIR1@i+1)^0,f,c
  2298  0024B8  222F               	addwfc	(filtrarFIR1@i+2)^0,f,c
  2299  0024BA  2230               	addwfc	(filtrarFIR1@i+3)^0,f,c
  2300  0024BC  BE30               	btfsc	(filtrarFIR1@i+3)^0,7,c
  2301  0024BE  D7A3               	goto	l3438
  2302  0024C0  5030               	movf	(filtrarFIR1@i+3)^0,w,c
  2303  0024C2  102F               	iorwf	(filtrarFIR1@i+2)^0,w,c
  2304  0024C4  102E               	iorwf	(filtrarFIR1@i+1)^0,w,c
  2305  0024C6  E104               	bnz	u3020
  2306  0024C8  0E0D               	movlw	13
  2307  0024CA  5C2D               	subwf	filtrarFIR1@i^0,w,c
  2308  0024CC  A0D8               	btfss	status,0,c
  2309  0024CE  D79B               	goto	l3438
  2310  0024D0                     u3020:
  2311                           
  2312                           ;funciones.c: 71:   k = (k + 1) % 12;
  2313  0024D0  0E01               	movlw	1
  2314  0024D2  244C               	addwf	_k^0,w,c	;volatile
  2315  0024D4  6E07               	movwf	___awmod@dividend^0,c
  2316  0024D6  0E00               	movlw	0
  2317  0024D8  204D               	addwfc	(_k+1)^0,w,c	;volatile
  2318  0024DA  6E08               	movwf	(___awmod@dividend+1)^0,c
  2319  0024DC  0E00               	movlw	0
  2320  0024DE  6E0A               	movwf	(___awmod@divisor+1)^0,c
  2321  0024E0  0E0C               	movlw	12
  2322  0024E2  6E09               	movwf	___awmod@divisor^0,c
  2323  0024E4  EC40  F016         	call	___awmod	;wreg free
  2324  0024E8  C007  F04C         	movff	?___awmod,_k	;volatile
  2325  0024EC  C008  F04D         	movff	?___awmod+1,_k+1	;volatile
  2326                           
  2327                           ;funciones.c: 72:   return y >> 8;
  2328  0024F0  C02A  F021         	movff	filtrarFIR1@y+1,??_filtrarFIR1
  2329  0024F4  C02B  F022         	movff	filtrarFIR1@y+2,??_filtrarFIR1+1
  2330  0024F8  C02C  F023         	movff	filtrarFIR1@y+3,??_filtrarFIR1+2
  2331  0024FC  6A24               	clrf	(??_filtrarFIR1+3)^0,c
  2332  0024FE  BE23               	btfsc	(??_filtrarFIR1+2)^0,7,c
  2333  002500  6824               	setf	(??_filtrarFIR1+3)^0,c
  2334  002502  C021  F01D         	movff	??_filtrarFIR1,?_filtrarFIR1
  2335  002506  C022  F01E         	movff	??_filtrarFIR1+1,?_filtrarFIR1+1
  2336  00250A  C023  F01F         	movff	??_filtrarFIR1+2,?_filtrarFIR1+2
  2337  00250E  C024  F020         	movff	??_filtrarFIR1+3,?_filtrarFIR1+3
  2338  002512  0012               	return		;funcret
  2339  002514                     __end_of_filtrarFIR1:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function ___lmul *****************
  2343 ;; Defined at:
  2344 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  multiplier      4   16[COMRAM] unsigned long 
  2347 ;;  multiplicand    4   20[COMRAM] unsigned long 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  product         4   24[COMRAM] unsigned long 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  4   16[COMRAM] unsigned long 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/1
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2359 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2360 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2362 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2363 ;;Total ram usage:       12 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; Hardware stack levels required when called: 5
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_filtrarFIR1
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text3
  2374  002D52                     __ptext3:
  2375                           	callstack 0
  2376  002D52                     ___lmul:
  2377                           	callstack 24
  2378                           
  2379                           ;incstack = 0
  2380  002D52  0E00               	movlw	0
  2381  002D54  6E19               	movwf	___lmul@product^0,c
  2382  002D56  0E00               	movlw	0
  2383  002D58  6E1A               	movwf	(___lmul@product+1)^0,c
  2384  002D5A  0E00               	movlw	0
  2385  002D5C  6E1B               	movwf	(___lmul@product+2)^0,c
  2386  002D5E  0E00               	movlw	0
  2387  002D60  6E1C               	movwf	(___lmul@product+3)^0,c
  2388  002D62                     l2888:
  2389  002D62  A011               	btfss	___lmul@multiplier^0,0,c
  2390  002D64  D008               	goto	l2892
  2391  002D66  5015               	movf	___lmul@multiplicand^0,w,c
  2392  002D68  2619               	addwf	___lmul@product^0,f,c
  2393  002D6A  5016               	movf	(___lmul@multiplicand+1)^0,w,c
  2394  002D6C  221A               	addwfc	(___lmul@product+1)^0,f,c
  2395  002D6E  5017               	movf	(___lmul@multiplicand+2)^0,w,c
  2396  002D70  221B               	addwfc	(___lmul@product+2)^0,f,c
  2397  002D72  5018               	movf	(___lmul@multiplicand+3)^0,w,c
  2398  002D74  221C               	addwfc	(___lmul@product+3)^0,f,c
  2399  002D76                     l2892:
  2400  002D76  90D8               	bcf	status,0,c
  2401  002D78  3615               	rlcf	___lmul@multiplicand^0,f,c
  2402  002D7A  3616               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2403  002D7C  3617               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2404  002D7E  3618               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2405  002D80  90D8               	bcf	status,0,c
  2406  002D82  3214               	rrcf	(___lmul@multiplier+3)^0,f,c
  2407  002D84  3213               	rrcf	(___lmul@multiplier+2)^0,f,c
  2408  002D86  3212               	rrcf	(___lmul@multiplier+1)^0,f,c
  2409  002D88  3211               	rrcf	___lmul@multiplier^0,f,c
  2410  002D8A  5011               	movf	___lmul@multiplier^0,w,c
  2411  002D8C  1012               	iorwf	(___lmul@multiplier+1)^0,w,c
  2412  002D8E  1013               	iorwf	(___lmul@multiplier+2)^0,w,c
  2413  002D90  1014               	iorwf	(___lmul@multiplier+3)^0,w,c
  2414  002D92  A4D8               	btfss	status,2,c
  2415  002D94  D7E6               	goto	l2888
  2416  002D96  C019  F011         	movff	___lmul@product,?___lmul
  2417  002D9A  C01A  F012         	movff	___lmul@product+1,?___lmul+1
  2418  002D9E  C01B  F013         	movff	___lmul@product+2,?___lmul+2
  2419  002DA2  C01C  F014         	movff	___lmul@product+3,?___lmul+3
  2420  002DA6  0012               	return		;funcret
  2421  002DA8                     __end_of___lmul:
  2422                           	callstack 0
  2423                           
  2424 ;; *************** function ___awmod *****************
  2425 ;; Defined at:
  2426 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  dividend        2    6[COMRAM] int 
  2429 ;;  divisor         2    8[COMRAM] int 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  sign            1   11[COMRAM] unsigned char 
  2432 ;;  counter         1   10[COMRAM] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  2    6[COMRAM] int 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/1
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2445 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2446 ;;Total ram usage:        6 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 5
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;;		_filtrarFIR1
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text4
  2458  002C80                     __ptext4:
  2459                           	callstack 0
  2460  002C80                     ___awmod:
  2461                           	callstack 24
  2462                           
  2463                           ;incstack = 0
  2464  002C80  0E00               	movlw	0
  2465  002C82  6E0C               	movwf	___awmod@sign^0,c
  2466  002C84  AE08               	btfss	(___awmod@dividend+1)^0,7,c
  2467  002C86  D006               	goto	l3078
  2468  002C88  6C07               	negf	___awmod@dividend^0,c
  2469  002C8A  1E08               	comf	(___awmod@dividend+1)^0,f,c
  2470  002C8C  B0D8               	btfsc	status,0,c
  2471  002C8E  2A08               	incf	(___awmod@dividend+1)^0,f,c
  2472  002C90  0E01               	movlw	1
  2473  002C92  6E0C               	movwf	___awmod@sign^0,c
  2474  002C94                     l3078:
  2475  002C94  AE0A               	btfss	(___awmod@divisor+1)^0,7,c
  2476  002C96  D004               	goto	l3082
  2477  002C98  6C09               	negf	___awmod@divisor^0,c
  2478  002C9A  1E0A               	comf	(___awmod@divisor+1)^0,f,c
  2479  002C9C  B0D8               	btfsc	status,0,c
  2480  002C9E  2A0A               	incf	(___awmod@divisor+1)^0,f,c
  2481  002CA0                     l3082:
  2482  002CA0  5009               	movf	___awmod@divisor^0,w,c
  2483  002CA2  100A               	iorwf	(___awmod@divisor+1)^0,w,c
  2484  002CA4  B4D8               	btfsc	status,2,c
  2485  002CA6  D018               	goto	l3098
  2486  002CA8  0E01               	movlw	1
  2487  002CAA  6E0B               	movwf	___awmod@counter^0,c
  2488  002CAC  D004               	goto	l3088
  2489  002CAE                     l3086:
  2490  002CAE  90D8               	bcf	status,0,c
  2491  002CB0  3609               	rlcf	___awmod@divisor^0,f,c
  2492  002CB2  360A               	rlcf	(___awmod@divisor+1)^0,f,c
  2493  002CB4  2A0B               	incf	___awmod@counter^0,f,c
  2494  002CB6                     l3088:
  2495  002CB6  AE0A               	btfss	(___awmod@divisor+1)^0,7,c
  2496  002CB8  D7FA               	goto	l3086
  2497  002CBA                     u2350:
  2498  002CBA  5009               	movf	___awmod@divisor^0,w,c
  2499  002CBC  5C07               	subwf	___awmod@dividend^0,w,c
  2500  002CBE  500A               	movf	(___awmod@divisor+1)^0,w,c
  2501  002CC0  5808               	subwfb	(___awmod@dividend+1)^0,w,c
  2502  002CC2  A0D8               	btfss	status,0,c
  2503  002CC4  D004               	goto	l3094
  2504  002CC6  5009               	movf	___awmod@divisor^0,w,c
  2505  002CC8  5E07               	subwf	___awmod@dividend^0,f,c
  2506  002CCA  500A               	movf	(___awmod@divisor+1)^0,w,c
  2507  002CCC  5A08               	subwfb	(___awmod@dividend+1)^0,f,c
  2508  002CCE                     l3094:
  2509  002CCE  90D8               	bcf	status,0,c
  2510  002CD0  320A               	rrcf	(___awmod@divisor+1)^0,f,c
  2511  002CD2  3209               	rrcf	___awmod@divisor^0,f,c
  2512  002CD4  2E0B               	decfsz	___awmod@counter^0,f,c
  2513  002CD6  D7F1               	goto	u2350
  2514  002CD8                     l3098:
  2515  002CD8  500C               	movf	___awmod@sign^0,w,c
  2516  002CDA  B4D8               	btfsc	status,2,c
  2517  002CDC  D004               	goto	l3102
  2518  002CDE  6C07               	negf	___awmod@dividend^0,c
  2519  002CE0  1E08               	comf	(___awmod@dividend+1)^0,f,c
  2520  002CE2  B0D8               	btfsc	status,0,c
  2521  002CE4  2A08               	incf	(___awmod@dividend+1)^0,f,c
  2522  002CE6                     l3102:
  2523  002CE6  C007  F007         	movff	___awmod@dividend,?___awmod
  2524  002CEA  C008  F008         	movff	___awmod@dividend+1,?___awmod+1
  2525  002CEE  0012               	return		;funcret
  2526  002CF0                     __end_of___awmod:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function ___almod *****************
  2530 ;; Defined at:
  2531 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\almod.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  dividend        4    6[COMRAM] long 
  2534 ;;  divisor         4   10[COMRAM] long 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  sign            1   15[COMRAM] unsigned char 
  2537 ;;  counter         1   14[COMRAM] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  4    6[COMRAM] long 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/1
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2547 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2548 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2550 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;Total ram usage:       10 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 5
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_filtrarFIR1
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text5
  2562  002890                     __ptext5:
  2563                           	callstack 0
  2564  002890                     ___almod:
  2565                           	callstack 24
  2566                           
  2567                           ;incstack = 0
  2568  002890  0E00               	movlw	0
  2569  002892  6E10               	movwf	___almod@sign^0,c
  2570  002894  AE0A               	btfss	(___almod@dividend+3)^0,7,c
  2571  002896  D00A               	goto	l2904
  2572  002898  1E0A               	comf	(___almod@dividend+3)^0,f,c
  2573  00289A  1E09               	comf	(___almod@dividend+2)^0,f,c
  2574  00289C  1E08               	comf	(___almod@dividend+1)^0,f,c
  2575  00289E  6C07               	negf	___almod@dividend^0,c
  2576  0028A0  0E00               	movlw	0
  2577  0028A2  2208               	addwfc	(___almod@dividend+1)^0,f,c
  2578  0028A4  2209               	addwfc	(___almod@dividend+2)^0,f,c
  2579  0028A6  220A               	addwfc	(___almod@dividend+3)^0,f,c
  2580  0028A8  0E01               	movlw	1
  2581  0028AA  6E10               	movwf	___almod@sign^0,c
  2582  0028AC                     l2904:
  2583  0028AC  AE0E               	btfss	(___almod@divisor+3)^0,7,c
  2584  0028AE  D008               	goto	l2908
  2585  0028B0  1E0E               	comf	(___almod@divisor+3)^0,f,c
  2586  0028B2  1E0D               	comf	(___almod@divisor+2)^0,f,c
  2587  0028B4  1E0C               	comf	(___almod@divisor+1)^0,f,c
  2588  0028B6  6C0B               	negf	___almod@divisor^0,c
  2589  0028B8  0E00               	movlw	0
  2590  0028BA  220C               	addwfc	(___almod@divisor+1)^0,f,c
  2591  0028BC  220D               	addwfc	(___almod@divisor+2)^0,f,c
  2592  0028BE  220E               	addwfc	(___almod@divisor+3)^0,f,c
  2593  0028C0                     l2908:
  2594  0028C0  500B               	movf	___almod@divisor^0,w,c
  2595  0028C2  100C               	iorwf	(___almod@divisor+1)^0,w,c
  2596  0028C4  100D               	iorwf	(___almod@divisor+2)^0,w,c
  2597  0028C6  100E               	iorwf	(___almod@divisor+3)^0,w,c
  2598  0028C8  B4D8               	btfsc	status,2,c
  2599  0028CA  D024               	goto	l2924
  2600  0028CC  0E01               	movlw	1
  2601  0028CE  6E0F               	movwf	___almod@counter^0,c
  2602  0028D0  D006               	goto	l2914
  2603  0028D2                     l2912:
  2604  0028D2  90D8               	bcf	status,0,c
  2605  0028D4  360B               	rlcf	___almod@divisor^0,f,c
  2606  0028D6  360C               	rlcf	(___almod@divisor+1)^0,f,c
  2607  0028D8  360D               	rlcf	(___almod@divisor+2)^0,f,c
  2608  0028DA  360E               	rlcf	(___almod@divisor+3)^0,f,c
  2609  0028DC  2A0F               	incf	___almod@counter^0,f,c
  2610  0028DE                     l2914:
  2611  0028DE  AE0E               	btfss	(___almod@divisor+3)^0,7,c
  2612  0028E0  D7F8               	goto	l2912
  2613  0028E2                     u2060:
  2614  0028E2  500B               	movf	___almod@divisor^0,w,c
  2615  0028E4  5C07               	subwf	___almod@dividend^0,w,c
  2616  0028E6  500C               	movf	(___almod@divisor+1)^0,w,c
  2617  0028E8  5808               	subwfb	(___almod@dividend+1)^0,w,c
  2618  0028EA  500D               	movf	(___almod@divisor+2)^0,w,c
  2619  0028EC  5809               	subwfb	(___almod@dividend+2)^0,w,c
  2620  0028EE  500E               	movf	(___almod@divisor+3)^0,w,c
  2621  0028F0  580A               	subwfb	(___almod@dividend+3)^0,w,c
  2622  0028F2  A0D8               	btfss	status,0,c
  2623  0028F4  D008               	goto	l2920
  2624  0028F6  500B               	movf	___almod@divisor^0,w,c
  2625  0028F8  5E07               	subwf	___almod@dividend^0,f,c
  2626  0028FA  500C               	movf	(___almod@divisor+1)^0,w,c
  2627  0028FC  5A08               	subwfb	(___almod@dividend+1)^0,f,c
  2628  0028FE  500D               	movf	(___almod@divisor+2)^0,w,c
  2629  002900  5A09               	subwfb	(___almod@dividend+2)^0,f,c
  2630  002902  500E               	movf	(___almod@divisor+3)^0,w,c
  2631  002904  5A0A               	subwfb	(___almod@dividend+3)^0,f,c
  2632  002906                     l2920:
  2633  002906  90D8               	bcf	status,0,c
  2634  002908  320E               	rrcf	(___almod@divisor+3)^0,f,c
  2635  00290A  320D               	rrcf	(___almod@divisor+2)^0,f,c
  2636  00290C  320C               	rrcf	(___almod@divisor+1)^0,f,c
  2637  00290E  320B               	rrcf	___almod@divisor^0,f,c
  2638  002910  2E0F               	decfsz	___almod@counter^0,f,c
  2639  002912  D7E7               	goto	u2060
  2640  002914                     l2924:
  2641  002914  5010               	movf	___almod@sign^0,w,c
  2642  002916  B4D8               	btfsc	status,2,c
  2643  002918  D008               	goto	l2928
  2644  00291A  1E0A               	comf	(___almod@dividend+3)^0,f,c
  2645  00291C  1E09               	comf	(___almod@dividend+2)^0,f,c
  2646  00291E  1E08               	comf	(___almod@dividend+1)^0,f,c
  2647  002920  6C07               	negf	___almod@dividend^0,c
  2648  002922  0E00               	movlw	0
  2649  002924  2208               	addwfc	(___almod@dividend+1)^0,f,c
  2650  002926  2209               	addwfc	(___almod@dividend+2)^0,f,c
  2651  002928  220A               	addwfc	(___almod@dividend+3)^0,f,c
  2652  00292A                     l2928:
  2653  00292A  C007  F007         	movff	___almod@dividend,?___almod
  2654  00292E  C008  F008         	movff	___almod@dividend+1,?___almod+1
  2655  002932  C009  F009         	movff	___almod@dividend+2,?___almod+2
  2656  002936  C00A  F00A         	movff	___almod@dividend+3,?___almod+3
  2657  00293A  0012               	return		;funcret
  2658  00293C                     __end_of___almod:
  2659                           	callstack 0
  2660                           
  2661 ;; *************** function ___xxtofl *****************
  2662 ;; Defined at:
  2663 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  sign            1    wreg     unsigned char 
  2666 ;;  val             4   12[COMRAM] long 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  sign            1   20[COMRAM] unsigned char 
  2669 ;;  arg             4   22[COMRAM] unsigned long 
  2670 ;;  exp             1   21[COMRAM] unsigned char 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  4   12[COMRAM] unsigned char 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/1
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2681 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2683 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2684 ;;Total ram usage:       14 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; Hardware stack levels required when called: 5
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text6
  2695  002514                     __ptext6:
  2696                           	callstack 0
  2697  002514                     ___xxtofl:
  2698                           	callstack 25
  2699                           
  2700                           ;incstack = 0
  2701                           ;___xxtofl@sign stored from wreg
  2702  002514  6E15               	movwf	___xxtofl@sign^0,c
  2703  002516  5015               	movf	___xxtofl@sign^0,w,c
  2704  002518  A4D8               	btfss	status,2,c
  2705  00251A  AE10               	btfss	(___xxtofl@val+3)^0,7,c
  2706  00251C  D01A               	goto	l1482
  2707  00251E  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  2708  002522  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  2709  002526  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  2710  00252A  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  2711  00252E  1E11               	comf	??___xxtofl^0,f,c
  2712  002530  1E12               	comf	(??___xxtofl+1)^0,f,c
  2713  002532  1E13               	comf	(??___xxtofl+2)^0,f,c
  2714  002534  1E14               	comf	(??___xxtofl+3)^0,f,c
  2715  002536  2A11               	incf	??___xxtofl^0,f,c
  2716  002538  0E00               	movlw	0
  2717  00253A  2212               	addwfc	(??___xxtofl+1)^0,f,c
  2718  00253C  2213               	addwfc	(??___xxtofl+2)^0,f,c
  2719  00253E  2214               	addwfc	(??___xxtofl+3)^0,f,c
  2720  002540  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  2721  002544  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  2722  002548  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  2723  00254C  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  2724  002550  D008               	goto	l3708
  2725  002552                     l1482:
  2726  002552  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  2727  002556  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2728  00255A  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2729  00255E  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2730  002562                     l3708:
  2731  002562  500D               	movf	___xxtofl@val^0,w,c
  2732  002564  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  2733  002566  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  2734  002568  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  2735  00256A  A4D8               	btfss	status,2,c
  2736  00256C  D009               	goto	l3714
  2737  00256E  0E00               	movlw	0
  2738  002570  6E0D               	movwf	?___xxtofl^0,c
  2739  002572  0E00               	movlw	0
  2740  002574  6E0E               	movwf	(?___xxtofl+1)^0,c
  2741  002576  0E00               	movlw	0
  2742  002578  6E0F               	movwf	(?___xxtofl+2)^0,c
  2743  00257A  0E00               	movlw	0
  2744  00257C  6E10               	movwf	(?___xxtofl+3)^0,c
  2745  00257E  0012               	return	
  2746  002580                     l3714:
  2747  002580  0E96               	movlw	150
  2748  002582  6E16               	movwf	___xxtofl@exp^0,c
  2749  002584  D006               	goto	l3718
  2750  002586                     l3716:
  2751  002586  2A16               	incf	___xxtofl@exp^0,f,c
  2752  002588  90D8               	bcf	status,0,c
  2753  00258A  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  2754  00258C  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  2755  00258E  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  2756  002590  3217               	rrcf	___xxtofl@arg^0,f,c
  2757  002592                     l3718:
  2758  002592  0E00               	movlw	0
  2759  002594  1417               	andwf	___xxtofl@arg^0,w,c
  2760  002596  6E11               	movwf	??___xxtofl^0,c
  2761  002598  0E00               	movlw	0
  2762  00259A  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  2763  00259C  6E12               	movwf	(??___xxtofl+1)^0,c
  2764  00259E  0E00               	movlw	0
  2765  0025A0  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  2766  0025A2  6E13               	movwf	(??___xxtofl+2)^0,c
  2767  0025A4  0EFE               	movlw	254
  2768  0025A6  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  2769  0025A8  6E14               	movwf	(??___xxtofl+3)^0,c
  2770  0025AA  5011               	movf	??___xxtofl^0,w,c
  2771  0025AC  1012               	iorwf	(??___xxtofl+1)^0,w,c
  2772  0025AE  1013               	iorwf	(??___xxtofl+2)^0,w,c
  2773  0025B0  1014               	iorwf	(??___xxtofl+3)^0,w,c
  2774  0025B2  B4D8               	btfsc	status,2,c
  2775  0025B4  D00D               	goto	l1489
  2776  0025B6  D7E7               	goto	l3716
  2777  0025B8                     l3720:
  2778  0025B8  2A16               	incf	___xxtofl@exp^0,f,c
  2779  0025BA  0E01               	movlw	1
  2780  0025BC  2617               	addwf	___xxtofl@arg^0,f,c
  2781  0025BE  0E00               	movlw	0
  2782  0025C0  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  2783  0025C2  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  2784  0025C4  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  2785  0025C6  90D8               	bcf	status,0,c
  2786  0025C8  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  2787  0025CA  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  2788  0025CC  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  2789  0025CE  3217               	rrcf	___xxtofl@arg^0,f,c
  2790  0025D0                     l1489:
  2791  0025D0  0E00               	movlw	0
  2792  0025D2  1417               	andwf	___xxtofl@arg^0,w,c
  2793  0025D4  6E11               	movwf	??___xxtofl^0,c
  2794  0025D6  0E00               	movlw	0
  2795  0025D8  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  2796  0025DA  6E12               	movwf	(??___xxtofl+1)^0,c
  2797  0025DC  0E00               	movlw	0
  2798  0025DE  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  2799  0025E0  6E13               	movwf	(??___xxtofl+2)^0,c
  2800  0025E2  0EFF               	movlw	255
  2801  0025E4  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  2802  0025E6  6E14               	movwf	(??___xxtofl+3)^0,c
  2803  0025E8  5011               	movf	??___xxtofl^0,w,c
  2804  0025EA  1012               	iorwf	(??___xxtofl+1)^0,w,c
  2805  0025EC  1013               	iorwf	(??___xxtofl+2)^0,w,c
  2806  0025EE  1014               	iorwf	(??___xxtofl+3)^0,w,c
  2807  0025F0  B4D8               	btfsc	status,2,c
  2808  0025F2  D007               	goto	l3728
  2809  0025F4  D7E1               	goto	l3720
  2810  0025F6                     l3726:
  2811  0025F6  0616               	decf	___xxtofl@exp^0,f,c
  2812  0025F8  90D8               	bcf	status,0,c
  2813  0025FA  3617               	rlcf	___xxtofl@arg^0,f,c
  2814  0025FC  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  2815  0025FE  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  2816  002600  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  2817  002602                     l3728:
  2818  002602  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  2819  002604  D003               	goto	u3540
  2820  002606  0E02               	movlw	2
  2821  002608  6016               	cpfslt	___xxtofl@exp^0,c
  2822  00260A  D7F5               	goto	l3726
  2823  00260C                     u3540:
  2824  00260C  A016               	btfss	___xxtofl@exp^0,0,c
  2825  00260E  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  2826  002610  90D8               	bcf	status,0,c
  2827  002612  3216               	rrcf	___xxtofl@exp^0,f,c
  2828  002614  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  2829  002618  6A12               	clrf	(??___xxtofl+1)^0,c
  2830  00261A  6A13               	clrf	(??___xxtofl+2)^0,c
  2831  00261C  6A14               	clrf	(??___xxtofl+3)^0,c
  2832  00261E  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  2833  002622  6A13               	clrf	(??___xxtofl+2)^0,c
  2834  002624  6A12               	clrf	(??___xxtofl+1)^0,c
  2835  002626  6A11               	clrf	??___xxtofl^0,c
  2836  002628  5011               	movf	??___xxtofl^0,w,c
  2837  00262A  1217               	iorwf	___xxtofl@arg^0,f,c
  2838  00262C  5012               	movf	(??___xxtofl+1)^0,w,c
  2839  00262E  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  2840  002630  5013               	movf	(??___xxtofl+2)^0,w,c
  2841  002632  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  2842  002634  5014               	movf	(??___xxtofl+3)^0,w,c
  2843  002636  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  2844  002638  5015               	movf	___xxtofl@sign^0,w,c
  2845  00263A  A4D8               	btfss	status,2,c
  2846  00263C  AE10               	btfss	(___xxtofl@val+3)^0,7,c
  2847  00263E  D001               	goto	l3744
  2848  002640  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  2849  002642                     l3744:
  2850  002642  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  2851  002646  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  2852  00264A  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  2853  00264E  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  2854  002652  0012               	return		;funcret
  2855  002654                     __end_of___xxtofl:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function ___wmul *****************
  2859 ;; Defined at:
  2860 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  multiplier      2    6[COMRAM] unsigned int 
  2863 ;;  multiplicand    2    8[COMRAM] unsigned int 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  product         2   10[COMRAM] unsigned int 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  2    6[COMRAM] unsigned int 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, prodl, prodh
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/1
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2878 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;Total ram usage:        6 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 5
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text7
  2890  002E44                     __ptext7:
  2891                           	callstack 0
  2892  002E44                     ___wmul:
  2893                           	callstack 25
  2894                           
  2895                           ;incstack = 0
  2896  002E44  5007               	movf	___wmul@multiplier^0,w,c
  2897  002E46  0209               	mulwf	___wmul@multiplicand^0,c
  2898  002E48  CFF3 F00B          	movff	prodl,___wmul@product
  2899  002E4C  CFF4 F00C          	movff	prodh,___wmul@product+1
  2900  002E50  5007               	movf	___wmul@multiplier^0,w,c
  2901  002E52  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  2902  002E54  50F3               	movf	243,w,c
  2903  002E56  260C               	addwf	(___wmul@product+1)^0,f,c
  2904  002E58  5008               	movf	(___wmul@multiplier+1)^0,w,c
  2905  002E5A  0209               	mulwf	___wmul@multiplicand^0,c
  2906  002E5C  50F3               	movf	243,w,c
  2907  002E5E  260C               	addwf	(___wmul@product+1)^0,f,c
  2908  002E60  C00B  F007         	movff	___wmul@product,?___wmul
  2909  002E64  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  2910  002E68  0012               	return		;funcret
  2911  002E6A                     __end_of___wmul:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function ___fladd *****************
  2915 ;; Defined at:
  2916 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  b               4   26[COMRAM] unsigned int 
  2919 ;;  a               4   30[COMRAM] unsigned int 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  grs             1   41[COMRAM] unsigned char 
  2922 ;;  bexp            1   40[COMRAM] unsigned char 
  2923 ;;  aexp            1   39[COMRAM] unsigned char 
  2924 ;;  signs           1   38[COMRAM] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  4   26[COMRAM] unsigned char 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/1
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2934 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2935 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2936 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2937 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2938 ;;Total ram usage:       16 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 5
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_main
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text8
  2949  001BCE                     __ptext8:
  2950                           	callstack 0
  2951  001BCE                     ___fladd:
  2952                           	callstack 25
  2953                           
  2954                           ;incstack = 0
  2955  001BCE  501E               	movf	(___fladd@b+3)^0,w,c
  2956  001BD0  0B80               	andlw	128
  2957  001BD2  6E27               	movwf	___fladd@signs^0,c
  2958  001BD4  501E               	movf	(___fladd@b+3)^0,w,c
  2959  001BD6  241E               	addwf	(___fladd@b+3)^0,w,c
  2960  001BD8  6E29               	movwf	___fladd@bexp^0,c
  2961  001BDA  BE1D               	btfsc	(___fladd@b+2)^0,7,c
  2962  001BDC  8029               	bsf	___fladd@bexp^0,0,c
  2963  001BDE  5029               	movf	___fladd@bexp^0,w,c
  2964  001BE0  B4D8               	btfsc	status,2,c
  2965  001BE2  D00D               	goto	l3472
  2966  001BE4  2829               	incf	___fladd@bexp^0,w,c
  2967  001BE6  A4D8               	btfss	status,2,c
  2968  001BE8  D008               	goto	l3468
  2969  001BEA  0E00               	movlw	0
  2970  001BEC  6E1B               	movwf	___fladd@b^0,c
  2971  001BEE  0E00               	movlw	0
  2972  001BF0  6E1C               	movwf	(___fladd@b+1)^0,c
  2973  001BF2  0E00               	movlw	0
  2974  001BF4  6E1D               	movwf	(___fladd@b+2)^0,c
  2975  001BF6  0E00               	movlw	0
  2976  001BF8  6E1E               	movwf	(___fladd@b+3)^0,c
  2977  001BFA                     l3468:
  2978  001BFA  8E1D               	bsf	(___fladd@b+2)^0,7,c
  2979  001BFC  D006               	goto	L1
  2980  001BFE                     l3472:
  2981  001BFE  0E00               	movlw	0
  2982  001C00  6E1B               	movwf	___fladd@b^0,c
  2983  001C02  0E00               	movlw	0
  2984  001C04  6E1C               	movwf	(___fladd@b+1)^0,c
  2985  001C06  0E00               	movlw	0
  2986  001C08  6E1D               	movwf	(___fladd@b+2)^0,c
  2987  001C0A                     L1:
  2988  001C0A  0E00               	movlw	0
  2989  001C0C  6E1E               	movwf	(___fladd@b+3)^0,c
  2990  001C0E  5022               	movf	(___fladd@a+3)^0,w,c
  2991  001C10  0B80               	andlw	128
  2992  001C12  6E28               	movwf	___fladd@aexp^0,c
  2993  001C14  5027               	movf	___fladd@signs^0,w,c
  2994  001C16  1828               	xorwf	___fladd@aexp^0,w,c
  2995  001C18  A4D8               	btfss	status,2,c
  2996  001C1A  8C27               	bsf	___fladd@signs^0,6,c
  2997  001C1C  5022               	movf	(___fladd@a+3)^0,w,c
  2998  001C1E  2422               	addwf	(___fladd@a+3)^0,w,c
  2999  001C20  6E28               	movwf	___fladd@aexp^0,c
  3000  001C22  BE21               	btfsc	(___fladd@a+2)^0,7,c
  3001  001C24  8028               	bsf	___fladd@aexp^0,0,c
  3002  001C26  5028               	movf	___fladd@aexp^0,w,c
  3003  001C28  B4D8               	btfsc	status,2,c
  3004  001C2A  D00D               	goto	l3496
  3005  001C2C  2828               	incf	___fladd@aexp^0,w,c
  3006  001C2E  A4D8               	btfss	status,2,c
  3007  001C30  D008               	goto	l3492
  3008  001C32  0E00               	movlw	0
  3009  001C34  6E1F               	movwf	___fladd@a^0,c
  3010  001C36  0E00               	movlw	0
  3011  001C38  6E20               	movwf	(___fladd@a+1)^0,c
  3012  001C3A  0E00               	movlw	0
  3013  001C3C  6E21               	movwf	(___fladd@a+2)^0,c
  3014  001C3E  0E00               	movlw	0
  3015  001C40  6E22               	movwf	(___fladd@a+3)^0,c
  3016  001C42                     l3492:
  3017  001C42  8E21               	bsf	(___fladd@a+2)^0,7,c
  3018  001C44  D006               	goto	L2
  3019  001C46                     l3496:
  3020  001C46  0E00               	movlw	0
  3021  001C48  6E1F               	movwf	___fladd@a^0,c
  3022  001C4A  0E00               	movlw	0
  3023  001C4C  6E20               	movwf	(___fladd@a+1)^0,c
  3024  001C4E  0E00               	movlw	0
  3025  001C50  6E21               	movwf	(___fladd@a+2)^0,c
  3026  001C52                     L2:
  3027  001C52  0E00               	movlw	0
  3028  001C54  6E22               	movwf	(___fladd@a+3)^0,c
  3029  001C56  5029               	movf	___fladd@bexp^0,w,c
  3030  001C58  5C28               	subwf	___fladd@aexp^0,w,c
  3031  001C5A  B0D8               	btfsc	status,0,c
  3032  001C5C  D022               	goto	l3534
  3033  001C5E  AC27               	btfss	___fladd@signs^0,6,c
  3034  001C60  D002               	goto	l3504
  3035  001C62  0E80               	movlw	128
  3036  001C64  1A27               	xorwf	___fladd@signs^0,f,c
  3037  001C66                     l3504:
  3038  001C66  C029  F02A         	movff	___fladd@bexp,___fladd@grs
  3039  001C6A  C028  F029         	movff	___fladd@aexp,___fladd@bexp
  3040  001C6E  C02A  F028         	movff	___fladd@grs,___fladd@aexp
  3041  001C72  C01B  F02A         	movff	___fladd@b,___fladd@grs
  3042  001C76  C01F  F01B         	movff	___fladd@a,___fladd@b
  3043  001C7A  C02A  F01F         	movff	___fladd@grs,___fladd@a
  3044  001C7E  C01C  F02A         	movff	___fladd@b+1,___fladd@grs
  3045  001C82  C020  F01C         	movff	___fladd@a+1,___fladd@b+1
  3046  001C86  C02A  F020         	movff	___fladd@grs,___fladd@a+1
  3047  001C8A  C01D  F02A         	movff	___fladd@b+2,___fladd@grs
  3048  001C8E  C021  F01D         	movff	___fladd@a+2,___fladd@b+2
  3049  001C92  C02A  F021         	movff	___fladd@grs,___fladd@a+2
  3050  001C96  C01E  F02A         	movff	___fladd@b+3,___fladd@grs
  3051  001C9A  C022  F01E         	movff	___fladd@a+3,___fladd@b+3
  3052  001C9E  C02A  F022         	movff	___fladd@grs,___fladd@a+3
  3053  001CA2                     l3534:
  3054  001CA2  0E00               	movlw	0
  3055  001CA4  6E2A               	movwf	___fladd@grs^0,c
  3056  001CA6  5029               	movf	___fladd@bexp^0,w,c
  3057  001CA8  C028  F023         	movff	___fladd@aexp,??___fladd
  3058  001CAC  6A24               	clrf	(??___fladd+1)^0,c
  3059  001CAE  5E23               	subwf	??___fladd^0,f,c
  3060  001CB0  0E00               	movlw	0
  3061  001CB2  5A24               	subwfb	(??___fladd+1)^0,f,c
  3062  001CB4  BE24               	btfsc	(??___fladd+1)^0,7,c
  3063  001CB6  D02C               	goto	l1356
  3064  001CB8  5024               	movf	(??___fladd+1)^0,w,c
  3065  001CBA  E104               	bnz	u3120
  3066  001CBC  0E1A               	movlw	26
  3067  001CBE  5C23               	subwf	??___fladd^0,w,c
  3068  001CC0  A0D8               	btfss	status,0,c
  3069  001CC2  D026               	goto	l1356
  3070  001CC4                     u3120:
  3071  001CC4  501B               	movf	___fladd@b^0,w,c
  3072  001CC6  101C               	iorwf	(___fladd@b+1)^0,w,c
  3073  001CC8  101D               	iorwf	(___fladd@b+2)^0,w,c
  3074  001CCA  101E               	iorwf	(___fladd@b+3)^0,w,c
  3075  001CCC  B4D8               	btfsc	status,2,c
  3076  001CCE  D002               	goto	u3130
  3077  001CD0  0E01               	movlw	1
  3078  001CD2  D001               	goto	u3140
  3079  001CD4                     u3130:
  3080  001CD4  0E00               	movlw	0
  3081  001CD6                     u3140:
  3082  001CD6  6E2A               	movwf	___fladd@grs^0,c
  3083  001CD8  0E00               	movlw	0
  3084  001CDA  6E1B               	movwf	___fladd@b^0,c
  3085  001CDC  0E00               	movlw	0
  3086  001CDE  6E1C               	movwf	(___fladd@b+1)^0,c
  3087  001CE0  0E00               	movlw	0
  3088  001CE2  6E1D               	movwf	(___fladd@b+2)^0,c
  3089  001CE4  0E00               	movlw	0
  3090  001CE6  6E1E               	movwf	(___fladd@b+3)^0,c
  3091  001CE8  C028  F029         	movff	___fladd@aexp,___fladd@bexp
  3092  001CEC  D015               	goto	u3170
  3093  001CEE                     l1357:
  3094  001CEE  A02A               	btfss	___fladd@grs^0,0,c
  3095  001CF0  D005               	goto	l3546
  3096  001CF2  90D8               	bcf	status,0,c
  3097  001CF4  302A               	rrcf	___fladd@grs^0,w,c
  3098  001CF6  0901               	iorlw	1
  3099  001CF8  6E2A               	movwf	___fladd@grs^0,c
  3100  001CFA  D002               	goto	l3548
  3101  001CFC                     l3546:
  3102  001CFC  90D8               	bcf	status,0,c
  3103  001CFE  322A               	rrcf	___fladd@grs^0,f,c
  3104  001D00                     l3548:
  3105  001D00  B01B               	btfsc	___fladd@b^0,0,c
  3106  001D02  8E2A               	bsf	___fladd@grs^0,7,c
  3107  001D04  341E               	rlcf	(___fladd@b+3)^0,w,c
  3108  001D06  321E               	rrcf	(___fladd@b+3)^0,f,c
  3109  001D08  321D               	rrcf	(___fladd@b+2)^0,f,c
  3110  001D0A  321C               	rrcf	(___fladd@b+1)^0,f,c
  3111  001D0C  321B               	rrcf	___fladd@b^0,f,c
  3112  001D0E  2A29               	incf	___fladd@bexp^0,f,c
  3113  001D10                     l1356:
  3114  001D10  5028               	movf	___fladd@aexp^0,w,c
  3115  001D12  5C29               	subwf	___fladd@bexp^0,w,c
  3116  001D14  A0D8               	btfss	status,0,c
  3117  001D16  D7EB               	goto	l1357
  3118  001D18                     u3170:
  3119  001D18  BC27               	btfsc	___fladd@signs^0,6,c
  3120  001D1A  D028               	goto	l3580
  3121  001D1C  5029               	movf	___fladd@bexp^0,w,c
  3122  001D1E  A4D8               	btfss	status,2,c
  3123  001D20  D009               	goto	l3562
  3124  001D22  0E00               	movlw	0
  3125  001D24  6E1B               	movwf	?___fladd^0,c
  3126  001D26  0E00               	movlw	0
  3127  001D28  6E1C               	movwf	(?___fladd+1)^0,c
  3128  001D2A  0E00               	movlw	0
  3129  001D2C  6E1D               	movwf	(?___fladd+2)^0,c
  3130  001D2E  0E00               	movlw	0
  3131  001D30  6E1E               	movwf	(?___fladd+3)^0,c
  3132  001D32  0012               	return	
  3133  001D34                     l3562:
  3134  001D34  501F               	movf	___fladd@a^0,w,c
  3135  001D36  261B               	addwf	___fladd@b^0,f,c
  3136  001D38  5020               	movf	(___fladd@a+1)^0,w,c
  3137  001D3A  221C               	addwfc	(___fladd@b+1)^0,f,c
  3138  001D3C  5021               	movf	(___fladd@a+2)^0,w,c
  3139  001D3E  221D               	addwfc	(___fladd@b+2)^0,f,c
  3140  001D40  5022               	movf	(___fladd@a+3)^0,w,c
  3141  001D42  221E               	addwfc	(___fladd@b+3)^0,f,c
  3142  001D44  A01E               	btfss	(___fladd@b+3)^0,0,c
  3143  001D46  D071               	goto	u3300
  3144  001D48  A02A               	btfss	___fladd@grs^0,0,c
  3145  001D4A  D005               	goto	l3570
  3146  001D4C  90D8               	bcf	status,0,c
  3147  001D4E  302A               	rrcf	___fladd@grs^0,w,c
  3148  001D50  0901               	iorlw	1
  3149  001D52  6E2A               	movwf	___fladd@grs^0,c
  3150  001D54  D002               	goto	l3572
  3151  001D56                     l3570:
  3152  001D56  90D8               	bcf	status,0,c
  3153  001D58  322A               	rrcf	___fladd@grs^0,f,c
  3154  001D5A                     l3572:
  3155  001D5A  B01B               	btfsc	___fladd@b^0,0,c
  3156  001D5C  8E2A               	bsf	___fladd@grs^0,7,c
  3157  001D5E  341E               	rlcf	(___fladd@b+3)^0,w,c
  3158  001D60  321E               	rrcf	(___fladd@b+3)^0,f,c
  3159  001D62  321D               	rrcf	(___fladd@b+2)^0,f,c
  3160  001D64  321C               	rrcf	(___fladd@b+1)^0,f,c
  3161  001D66  321B               	rrcf	___fladd@b^0,f,c
  3162  001D68  2A29               	incf	___fladd@bexp^0,f,c
  3163  001D6A  D05F               	goto	u3300
  3164  001D6C                     l3580:
  3165  001D6C  501F               	movf	___fladd@a^0,w,c
  3166  001D6E  5C1B               	subwf	___fladd@b^0,w,c
  3167  001D70  5020               	movf	(___fladd@a+1)^0,w,c
  3168  001D72  581C               	subwfb	(___fladd@b+1)^0,w,c
  3169  001D74  5021               	movf	(___fladd@a+2)^0,w,c
  3170  001D76  581D               	subwfb	(___fladd@b+2)^0,w,c
  3171  001D78  501E               	movf	(___fladd@b+3)^0,w,c
  3172  001D7A  0A80               	xorlw	128
  3173  001D7C  6E23               	movwf	??___fladd^0,c
  3174  001D7E  5022               	movf	(___fladd@a+3)^0,w,c
  3175  001D80  0A80               	xorlw	128
  3176  001D82  5823               	subwfb	??___fladd^0,w,c
  3177  001D84  B0D8               	btfsc	status,0,c
  3178  001D86  D025               	goto	l3590
  3179  001D88  501B               	movf	___fladd@b^0,w,c
  3180  001D8A  5C1F               	subwf	___fladd@a^0,w,c
  3181  001D8C  6E23               	movwf	??___fladd^0,c
  3182  001D8E  501C               	movf	(___fladd@b+1)^0,w,c
  3183  001D90  5820               	subwfb	(___fladd@a+1)^0,w,c
  3184  001D92  6E24               	movwf	(??___fladd+1)^0,c
  3185  001D94  501D               	movf	(___fladd@b+2)^0,w,c
  3186  001D96  5821               	subwfb	(___fladd@a+2)^0,w,c
  3187  001D98  6E25               	movwf	(??___fladd+2)^0,c
  3188  001D9A  501E               	movf	(___fladd@b+3)^0,w,c
  3189  001D9C  5822               	subwfb	(___fladd@a+3)^0,w,c
  3190  001D9E  6E26               	movwf	(??___fladd+3)^0,c
  3191  001DA0  0EFF               	movlw	255
  3192  001DA2  2423               	addwf	??___fladd^0,w,c
  3193  001DA4  6E1B               	movwf	___fladd@b^0,c
  3194  001DA6  0EFF               	movlw	255
  3195  001DA8  2024               	addwfc	(??___fladd+1)^0,w,c
  3196  001DAA  6E1C               	movwf	(___fladd@b+1)^0,c
  3197  001DAC  0EFF               	movlw	255
  3198  001DAE  2025               	addwfc	(??___fladd+2)^0,w,c
  3199  001DB0  6E1D               	movwf	(___fladd@b+2)^0,c
  3200  001DB2  0EFF               	movlw	255
  3201  001DB4  2026               	addwfc	(??___fladd+3)^0,w,c
  3202  001DB6  6E1E               	movwf	(___fladd@b+3)^0,c
  3203  001DB8  0E80               	movlw	128
  3204  001DBA  1A27               	xorwf	___fladd@signs^0,f,c
  3205  001DBC  6C2A               	negf	___fladd@grs^0,c
  3206  001DBE  502A               	movf	___fladd@grs^0,w,c
  3207  001DC0  A4D8               	btfss	status,2,c
  3208  001DC2  D00F               	goto	l1372
  3209  001DC4  0E01               	movlw	1
  3210  001DC6  261B               	addwf	___fladd@b^0,f,c
  3211  001DC8  0E00               	movlw	0
  3212  001DCA  221C               	addwfc	(___fladd@b+1)^0,f,c
  3213  001DCC  221D               	addwfc	(___fladd@b+2)^0,f,c
  3214  001DCE  221E               	addwfc	(___fladd@b+3)^0,f,c
  3215  001DD0  D008               	goto	l1372
  3216  001DD2                     l3590:
  3217  001DD2  501F               	movf	___fladd@a^0,w,c
  3218  001DD4  5E1B               	subwf	___fladd@b^0,f,c
  3219  001DD6  5020               	movf	(___fladd@a+1)^0,w,c
  3220  001DD8  5A1C               	subwfb	(___fladd@b+1)^0,f,c
  3221  001DDA  5021               	movf	(___fladd@a+2)^0,w,c
  3222  001DDC  5A1D               	subwfb	(___fladd@b+2)^0,f,c
  3223  001DDE  5022               	movf	(___fladd@a+3)^0,w,c
  3224  001DE0  5A1E               	subwfb	(___fladd@b+3)^0,f,c
  3225  001DE2                     l1372:
  3226  001DE2  501B               	movf	___fladd@b^0,w,c
  3227  001DE4  101C               	iorwf	(___fladd@b+1)^0,w,c
  3228  001DE6  101D               	iorwf	(___fladd@b+2)^0,w,c
  3229  001DE8  101E               	iorwf	(___fladd@b+3)^0,w,c
  3230  001DEA  A4D8               	btfss	status,2,c
  3231  001DEC  D01C               	goto	l3614
  3232  001DEE  502A               	movf	___fladd@grs^0,w,c
  3233  001DF0  A4D8               	btfss	status,2,c
  3234  001DF2  D019               	goto	l3614
  3235  001DF4  0E00               	movlw	0
  3236  001DF6  6E1B               	movwf	?___fladd^0,c
  3237  001DF8  0E00               	movlw	0
  3238  001DFA  6E1C               	movwf	(?___fladd+1)^0,c
  3239  001DFC  0E00               	movlw	0
  3240  001DFE  6E1D               	movwf	(?___fladd+2)^0,c
  3241  001E00  0E00               	movlw	0
  3242  001E02  6E1E               	movwf	(?___fladd+3)^0,c
  3243  001E04  0012               	return	
  3244  001E06                     l3598:
  3245  001E06  90D8               	bcf	status,0,c
  3246  001E08  361B               	rlcf	___fladd@b^0,f,c
  3247  001E0A  361C               	rlcf	(___fladd@b+1)^0,f,c
  3248  001E0C  361D               	rlcf	(___fladd@b+2)^0,f,c
  3249  001E0E  361E               	rlcf	(___fladd@b+3)^0,f,c
  3250  001E10  BE2A               	btfsc	___fladd@grs^0,7,c
  3251  001E12  801B               	bsf	___fladd@b^0,0,c
  3252  001E14  A02A               	btfss	___fladd@grs^0,0,c
  3253  001E16  D002               	goto	l3608
  3254  001E18  80D8               	bsf	status,0,c
  3255  001E1A  D001               	goto	L3
  3256  001E1C                     l3608:
  3257  001E1C  90D8               	bcf	status,0,c
  3258  001E1E                     L3:
  3259  001E1E  362A               	rlcf	___fladd@grs^0,f,c
  3260  001E20  5029               	movf	___fladd@bexp^0,w,c
  3261  001E22  A4D8               	btfss	status,2,c
  3262  001E24  0629               	decf	___fladd@bexp^0,f,c
  3263  001E26                     l3614:
  3264  001E26  AE1D               	btfss	(___fladd@b+2)^0,7,c
  3265  001E28  D7EE               	goto	l3598
  3266  001E2A                     u3300:
  3267  001E2A  0E00               	movlw	0
  3268  001E2C  6E28               	movwf	___fladd@aexp^0,c
  3269  001E2E  AE2A               	btfss	___fladd@grs^0,7,c
  3270  001E30  D00B               	goto	l1381
  3271  001E32  C02A  F023         	movff	___fladd@grs,??___fladd
  3272  001E36  0E7F               	movlw	127
  3273  001E38  1623               	andwf	??___fladd^0,f,c
  3274  001E3A  B4D8               	btfsc	status,2,c
  3275  001E3C  D003               	goto	l1382
  3276  001E3E                     u3320:
  3277  001E3E  0E01               	movlw	1
  3278  001E40  6E28               	movwf	___fladd@aexp^0,c
  3279  001E42  D002               	goto	l1381
  3280  001E44                     l1382:
  3281  001E44  B01B               	btfsc	___fladd@b^0,0,c
  3282  001E46  D7FB               	goto	u3320
  3283  001E48                     l1381:
  3284  001E48  5028               	movf	___fladd@aexp^0,w,c
  3285  001E4A  B4D8               	btfsc	status,2,c
  3286  001E4C  D020               	goto	l3634
  3287  001E4E  0E01               	movlw	1
  3288  001E50  261B               	addwf	___fladd@b^0,f,c
  3289  001E52  0E00               	movlw	0
  3290  001E54  221C               	addwfc	(___fladd@b+1)^0,f,c
  3291  001E56  221D               	addwfc	(___fladd@b+2)^0,f,c
  3292  001E58  221E               	addwfc	(___fladd@b+3)^0,f,c
  3293  001E5A  A01E               	btfss	(___fladd@b+3)^0,0,c
  3294  001E5C  D018               	goto	l3634
  3295  001E5E  C01B  F023         	movff	___fladd@b,??___fladd
  3296  001E62  C01C  F024         	movff	___fladd@b+1,??___fladd+1
  3297  001E66  C01D  F025         	movff	___fladd@b+2,??___fladd+2
  3298  001E6A  C01E  F026         	movff	___fladd@b+3,??___fladd+3
  3299  001E6E  3426               	rlcf	(??___fladd+3)^0,w,c
  3300  001E70  3226               	rrcf	(??___fladd+3)^0,f,c
  3301  001E72  3225               	rrcf	(??___fladd+2)^0,f,c
  3302  001E74  3224               	rrcf	(??___fladd+1)^0,f,c
  3303  001E76  3223               	rrcf	??___fladd^0,f,c
  3304  001E78  C023  F01B         	movff	??___fladd,___fladd@b
  3305  001E7C  C024  F01C         	movff	??___fladd+1,___fladd@b+1
  3306  001E80  C025  F01D         	movff	??___fladd+2,___fladd@b+2
  3307  001E84  C026  F01E         	movff	??___fladd+3,___fladd@b+3
  3308  001E88  2829               	incf	___fladd@bexp^0,w,c
  3309  001E8A  A4D8               	btfss	status,2,c
  3310  001E8C  2A29               	incf	___fladd@bexp^0,f,c
  3311  001E8E                     l3634:
  3312  001E8E  2829               	incf	___fladd@bexp^0,w,c
  3313  001E90  B4D8               	btfsc	status,2,c
  3314  001E92  D003               	goto	u3380
  3315  001E94  5029               	movf	___fladd@bexp^0,w,c
  3316  001E96  A4D8               	btfss	status,2,c
  3317  001E98  D00D               	goto	l3642
  3318  001E9A                     u3380:
  3319  001E9A  0E00               	movlw	0
  3320  001E9C  6E1B               	movwf	___fladd@b^0,c
  3321  001E9E  0E00               	movlw	0
  3322  001EA0  6E1C               	movwf	(___fladd@b+1)^0,c
  3323  001EA2  0E00               	movlw	0
  3324  001EA4  6E1D               	movwf	(___fladd@b+2)^0,c
  3325  001EA6  0E00               	movlw	0
  3326  001EA8  6E1E               	movwf	(___fladd@b+3)^0,c
  3327  001EAA  5029               	movf	___fladd@bexp^0,w,c
  3328  001EAC  A4D8               	btfss	status,2,c
  3329  001EAE  D002               	goto	l3642
  3330  001EB0  0E00               	movlw	0
  3331  001EB2  6E27               	movwf	___fladd@signs^0,c
  3332  001EB4                     l3642:
  3333  001EB4  A029               	btfss	___fladd@bexp^0,0,c
  3334  001EB6  D002               	goto	l3646
  3335  001EB8  8E1D               	bsf	(___fladd@b+2)^0,7,c
  3336  001EBA  D001               	goto	l3648
  3337  001EBC                     l3646:
  3338  001EBC  9E1D               	bcf	(___fladd@b+2)^0,7,c
  3339  001EBE                     l3648:
  3340  001EBE  90D8               	bcf	status,0,c
  3341  001EC0  3029               	rrcf	___fladd@bexp^0,w,c
  3342  001EC2  6E1E               	movwf	(___fladd@b+3)^0,c
  3343  001EC4  BE27               	btfsc	___fladd@signs^0,7,c
  3344  001EC6  8E1E               	bsf	(___fladd@b+3)^0,7,c
  3345  001EC8  C01B  F01B         	movff	___fladd@b,?___fladd
  3346  001ECC  C01C  F01C         	movff	___fladd@b+1,?___fladd+1
  3347  001ED0  C01D  F01D         	movff	___fladd@b+2,?___fladd+2
  3348  001ED4  C01E  F01E         	movff	___fladd@b+3,?___fladd+3
  3349  001ED8  0012               	return		;funcret
  3350  001EDA                     __end_of___fladd:
  3351                           	callstack 0
  3352                           
  3353 ;; *************** function ___awdiv *****************
  3354 ;; Defined at:
  3355 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  dividend        2    6[COMRAM] int 
  3358 ;;  divisor         2    8[COMRAM] int 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  quotient        2   12[COMRAM] int 
  3361 ;;  sign            1   11[COMRAM] unsigned char 
  3362 ;;  counter         1   10[COMRAM] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2    6[COMRAM] int 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 3F/1
  3369 ;;		On exit  : 3F/1
  3370 ;;		Unchanged: 3F/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3373 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3375 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;Total ram usage:        8 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 5
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_main
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text9
  3387  002B04                     __ptext9:
  3388                           	callstack 0
  3389  002B04                     ___awdiv:
  3390                           	callstack 25
  3391                           
  3392                           ; BSR set to: 1
  3393                           
  3394                           ;incstack = 0
  3395  002B04  0E00               	movlw	0
  3396  002B06  6E0C               	movwf	___awdiv@sign^0,c
  3397                           
  3398                           ; BSR set to: 1
  3399  002B08  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  3400  002B0A  D006               	goto	l3666
  3401                           
  3402                           ; BSR set to: 1
  3403  002B0C  6C09               	negf	___awdiv@divisor^0,c
  3404  002B0E  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  3405  002B10  B0D8               	btfsc	status,0,c
  3406  002B12  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  3407                           
  3408                           ; BSR set to: 1
  3409  002B14  0E01               	movlw	1
  3410  002B16  6E0C               	movwf	___awdiv@sign^0,c
  3411  002B18                     l3666:
  3412                           
  3413                           ; BSR set to: 1
  3414  002B18  AE08               	btfss	(___awdiv@dividend+1)^0,7,c
  3415  002B1A  D006               	goto	l3672
  3416                           
  3417                           ; BSR set to: 1
  3418  002B1C  6C07               	negf	___awdiv@dividend^0,c
  3419  002B1E  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  3420  002B20  B0D8               	btfsc	status,0,c
  3421  002B22  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  3422                           
  3423                           ; BSR set to: 1
  3424  002B24  0E01               	movlw	1
  3425  002B26  1A0C               	xorwf	___awdiv@sign^0,f,c
  3426  002B28                     l3672:
  3427                           
  3428                           ; BSR set to: 1
  3429  002B28  0E00               	movlw	0
  3430  002B2A  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  3431  002B2C  0E00               	movlw	0
  3432  002B2E  6E0D               	movwf	___awdiv@quotient^0,c
  3433                           
  3434                           ; BSR set to: 1
  3435  002B30  5009               	movf	___awdiv@divisor^0,w,c
  3436  002B32  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  3437  002B34  B4D8               	btfsc	status,2,c
  3438  002B36  D01C               	goto	l3694
  3439                           
  3440                           ; BSR set to: 1
  3441  002B38  0E01               	movlw	1
  3442  002B3A  6E0B               	movwf	___awdiv@counter^0,c
  3443  002B3C  D004               	goto	l3680
  3444  002B3E                     l3678:
  3445                           
  3446                           ; BSR set to: 1
  3447  002B3E  90D8               	bcf	status,0,c
  3448  002B40  3609               	rlcf	___awdiv@divisor^0,f,c
  3449  002B42  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  3450  002B44  2A0B               	incf	___awdiv@counter^0,f,c
  3451  002B46                     l3680:
  3452                           
  3453                           ; BSR set to: 1
  3454  002B46  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  3455  002B48  D7FA               	goto	l3678
  3456  002B4A                     u3450:
  3457                           
  3458                           ; BSR set to: 1
  3459  002B4A  90D8               	bcf	status,0,c
  3460  002B4C  360D               	rlcf	___awdiv@quotient^0,f,c
  3461  002B4E  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  3462                           
  3463                           ; BSR set to: 1
  3464  002B50  5009               	movf	___awdiv@divisor^0,w,c
  3465  002B52  5C07               	subwf	___awdiv@dividend^0,w,c
  3466  002B54  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3467  002B56  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  3468  002B58  A0D8               	btfss	status,0,c
  3469  002B5A  D005               	goto	l3690
  3470                           
  3471                           ; BSR set to: 1
  3472  002B5C  5009               	movf	___awdiv@divisor^0,w,c
  3473  002B5E  5E07               	subwf	___awdiv@dividend^0,f,c
  3474  002B60  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3475  002B62  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  3476                           
  3477                           ; BSR set to: 1
  3478  002B64  800D               	bsf	___awdiv@quotient^0,0,c
  3479  002B66                     l3690:
  3480                           
  3481                           ; BSR set to: 1
  3482  002B66  90D8               	bcf	status,0,c
  3483  002B68  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  3484  002B6A  3209               	rrcf	___awdiv@divisor^0,f,c
  3485                           
  3486                           ; BSR set to: 1
  3487  002B6C  2E0B               	decfsz	___awdiv@counter^0,f,c
  3488  002B6E  D7ED               	goto	u3450
  3489  002B70                     l3694:
  3490                           
  3491                           ; BSR set to: 1
  3492  002B70  500C               	movf	___awdiv@sign^0,w,c
  3493  002B72  B4D8               	btfsc	status,2,c
  3494  002B74  D004               	goto	l3698
  3495                           
  3496                           ; BSR set to: 1
  3497  002B76  6C0D               	negf	___awdiv@quotient^0,c
  3498  002B78  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  3499  002B7A  B0D8               	btfsc	status,0,c
  3500  002B7C  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  3501  002B7E                     l3698:
  3502                           
  3503                           ; BSR set to: 1
  3504  002B7E  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3505  002B82  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3506                           
  3507                           ; BSR set to: 1
  3508  002B86  0012               	return		;funcret
  3509  002B88                     __end_of___awdiv:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _SYSTEM_Initialize *****************
  3513 ;; Defined at:
  3514 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 3F/E
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3532 ;;Total ram usage:        0 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 7
  3535 ;; This function calls:
  3536 ;;		_ADCC_Initialize
  3537 ;;		_EUSART1_Initialize
  3538 ;;		_INTERRUPT_Initialize
  3539 ;;		_OSCILLATOR_Initialize
  3540 ;;		_PIN_MANAGER_Initialize
  3541 ;;		_PMD_Initialize
  3542 ;;		_SPI1_Initialize
  3543 ;;		_TMR2_Initialize
  3544 ;; This function is called by:
  3545 ;;		_main
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text10
  3550  002E90                     __ptext10:
  3551                           	callstack 0
  3552  002E90                     _SYSTEM_Initialize:
  3553                           	callstack 23
  3554                           
  3555                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  3556                           
  3557                           ; BSR set to: 1
  3558                           ;incstack = 0
  3559  002E90  EC12  F018         	call	_INTERRUPT_Initialize	;wreg free
  3560                           
  3561                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3562  002E94  EC98  F017         	call	_PMD_Initialize	;wreg free
  3563                           
  3564                           ; BSR set to: 14
  3565                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
  3566  002E98  EC59  F017         	call	_SPI1_Initialize	;wreg free
  3567                           
  3568                           ; BSR set to: 14
  3569                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  3570  002E9C  EC3A  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  3571                           
  3572                           ; BSR set to: 14
  3573                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  3574  002EA0  ECCB  F017         	call	_OSCILLATOR_Initialize	;wreg free
  3575                           
  3576                           ; BSR set to: 14
  3577                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  3578  002EA4  EC78  F016         	call	_ADCC_Initialize	;wreg free
  3579                           
  3580                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3581  002EA8  EC89  F017         	call	_TMR2_Initialize	;wreg free
  3582                           
  3583                           ; BSR set to: 14
  3584                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  3585  002EAC  EC05  F016         	call	_EUSART1_Initialize	;wreg free
  3586                           
  3587                           ; BSR set to: 14
  3588  002EB0  0012               	return		;funcret
  3589  002EB2                     __end_of_SYSTEM_Initialize:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _TMR2_Initialize *****************
  3593 ;; Defined at:
  3594 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2
  3603 ;; Tracked objects:
  3604 ;;		On entry : 30/E
  3605 ;;		On exit  : 3F/E
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3612 ;;Total ram usage:        0 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; Hardware stack levels required when called: 5
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_SYSTEM_Initialize
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text11
  3623  002F12                     __ptext11:
  3624                           	callstack 0
  3625  002F12                     _TMR2_Initialize:
  3626                           	callstack 24
  3627                           
  3628                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  3629                           
  3630                           ; BSR set to: 14
  3631                           ;incstack = 0
  3632  002F12  0E01               	movlw	1
  3633  002F14  6EBF               	movwf	191,c	;volatile
  3634                           
  3635                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  3636  002F16  0E00               	movlw	0
  3637  002F18  6EBE               	movwf	190,c	;volatile
  3638                           
  3639                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  3640  002F1A  0E00               	movlw	0
  3641  002F1C  6EC0               	movwf	192,c	;volatile
  3642                           
  3643                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x7C;
  3644  002F1E  0E7C               	movlw	124
  3645  002F20  6EBC               	movwf	188,c	;volatile
  3646                           
  3647                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  3648  002F22  0E00               	movlw	0
  3649  002F24  6EBB               	movwf	187,c	;volatile
  3650                           
  3651                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  3652  002F26  010E               	movlb	14	; () banked
  3653  002F28  93CE               	bcf	206,1,b	;volatile
  3654                           
  3655                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
  3656  002F2A  0EF0               	movlw	240
  3657  002F2C  6EBD               	movwf	189,c	;volatile
  3658                           
  3659                           ; BSR set to: 14
  3660  002F2E  0012               	return		;funcret
  3661  002F30                     __end_of_TMR2_Initialize:
  3662                           	callstack 0
  3663                           
  3664 ;; *************** function _SPI1_Initialize *****************
  3665 ;; Defined at:
  3666 ;;		line 62 in file "mcc_generated_files/spi1.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2
  3675 ;; Tracked objects:
  3676 ;;		On entry : 3F/E
  3677 ;;		On exit  : 3F/E
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3684 ;;Total ram usage:        0 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 5
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_SYSTEM_Initialize
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text12
  3695  002EB2                     __ptext12:
  3696                           	callstack 0
  3697  002EB2                     _SPI1_Initialize:
  3698                           	callstack 24
  3699                           
  3700                           ; BSR set to: 14
  3701                           ;mcc_generated_files/spi1.c: 65:     SSP1CLKPPS = 19;
  3702                           
  3703                           ; BSR set to: 14
  3704                           ;incstack = 0
  3705  002EB2  0E13               	movlw	19
  3706  002EB4  6FB7               	movwf	183,b	;volatile
  3707                           
  3708                           ;mcc_generated_files/spi1.c: 66:     SSP1DATPPS = 20;
  3709  002EB6  0E14               	movlw	20
  3710  002EB8  6FB8               	movwf	184,b	;volatile
  3711                           
  3712                           ;mcc_generated_files/spi1.c: 68:     RC5PPS = 16;
  3713  002EBA  0E10               	movlw	16
  3714  002EBC  6FFC               	movwf	252,b	;volatile
  3715                           
  3716                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0x40;
  3717  002EBE  0E40               	movlw	64
  3718  002EC0  6E95               	movwf	149,c	;volatile
  3719                           
  3720                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1 = 0b00100010;
  3721  002EC2  0E22               	movlw	34
  3722  002EC4  6E96               	movwf	150,c	;volatile
  3723                           
  3724                           ;mcc_generated_files/spi1.c: 72:     SSP1ADD = 0x01;
  3725  002EC6  0E01               	movlw	1
  3726  002EC8  6E93               	movwf	147,c	;volatile
  3727                           
  3728                           ; BSR set to: 14
  3729                           ;mcc_generated_files/spi1.c: 73:     TRISCbits.TRISC3 = 0;
  3730  002ECA  968A               	bcf	138,3,c	;volatile
  3731                           
  3732                           ; BSR set to: 14
  3733                           ;mcc_generated_files/spi1.c: 74:     TRISCbits.TRISC5 = 0;
  3734  002ECC  9A8A               	bcf	138,5,c	;volatile
  3735                           
  3736                           ; BSR set to: 14
  3737                           ;mcc_generated_files/spi1.c: 75:     SSP1CON1bits.SSPEN = 0;
  3738  002ECE  9A96               	bcf	150,5,c	;volatile
  3739                           
  3740                           ; BSR set to: 14
  3741  002ED0  0012               	return		;funcret
  3742  002ED2                     __end_of_SPI1_Initialize:
  3743                           	callstack 0
  3744                           
  3745 ;; *************** function _PMD_Initialize *****************
  3746 ;; Defined at:
  3747 ;;		line 76 in file "mcc_generated_files/mcc.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 3F/E
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 5
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_SYSTEM_Initialize
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text13
  3776  002F30                     __ptext13:
  3777                           	callstack 0
  3778  002F30                     _PMD_Initialize:
  3779                           	callstack 24
  3780                           
  3781                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  3782                           
  3783                           ; BSR set to: 14
  3784                           ;incstack = 0
  3785  002F30  0E00               	movlw	0
  3786  002F32  010E               	movlb	14	; () banked
  3787  002F34  6FE1               	movwf	225,b	;volatile
  3788                           
  3789                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  3790  002F36  0E00               	movlw	0
  3791  002F38  6FE2               	movwf	226,b	;volatile
  3792                           
  3793                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  3794  002F3A  0E00               	movlw	0
  3795  002F3C  6FE3               	movwf	227,b	;volatile
  3796                           
  3797                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  3798  002F3E  0E00               	movlw	0
  3799  002F40  6FE4               	movwf	228,b	;volatile
  3800                           
  3801                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  3802  002F42  0E00               	movlw	0
  3803  002F44  6FE5               	movwf	229,b	;volatile
  3804                           
  3805                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  3806  002F46  0E00               	movlw	0
  3807  002F48  6FE6               	movwf	230,b	;volatile
  3808                           
  3809                           ; BSR set to: 14
  3810  002F4A  0012               	return		;funcret
  3811  002F4C                     __end_of_PMD_Initialize:
  3812                           	callstack 0
  3813                           
  3814 ;; *************** function _PIN_MANAGER_Initialize *****************
  3815 ;; Defined at:
  3816 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2
  3825 ;; Tracked objects:
  3826 ;;		On entry : 3F/E
  3827 ;;		On exit  : 3F/E
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3834 ;;Total ram usage:        0 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 5
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_SYSTEM_Initialize
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text14
  3845  002A74                     __ptext14:
  3846                           	callstack 0
  3847  002A74                     _PIN_MANAGER_Initialize:
  3848                           	callstack 24
  3849                           
  3850                           ; BSR set to: 14
  3851                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3852                           
  3853                           ; BSR set to: 14
  3854                           ;incstack = 0
  3855  002A74  0E00               	movlw	0
  3856  002A76  6E87               	movwf	135,c	;volatile
  3857                           
  3858                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3859  002A78  0E00               	movlw	0
  3860  002A7A  6E86               	movwf	134,c	;volatile
  3861                           
  3862                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3863  002A7C  0E00               	movlw	0
  3864  002A7E  6E83               	movwf	131,c	;volatile
  3865                           
  3866                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3867  002A80  0E00               	movlw	0
  3868  002A82  6E84               	movwf	132,c	;volatile
  3869                           
  3870                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3871  002A84  0E00               	movlw	0
  3872  002A86  6E85               	movwf	133,c	;volatile
  3873                           
  3874                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  3875  002A88  0E06               	movlw	6
  3876  002A8A  6E8C               	movwf	140,c	;volatile
  3877                           
  3878                           ; BSR set to: 14
  3879                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  3880  002A8C  6888               	setf	136,c	;volatile
  3881                           
  3882                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xE8;
  3883  002A8E  0EE8               	movlw	232
  3884  002A90  6E89               	movwf	137,c	;volatile
  3885                           
  3886                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x97;
  3887  002A92  0E97               	movlw	151
  3888  002A94  6E8A               	movwf	138,c	;volatile
  3889                           
  3890                           ; BSR set to: 14
  3891                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  3892  002A96  688B               	setf	139,c	;volatile
  3893                           
  3894                           ; BSR set to: 14
  3895                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  3896  002A98  010F               	movlb	15	; () banked
  3897  002A9A  6926               	setf	38,b	;volatile
  3898                           
  3899                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x67;
  3900  002A9C  0E67               	movlw	103
  3901  002A9E  6F21               	movwf	33,b	;volatile
  3902                           
  3903                           ; BSR set to: 15
  3904                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  3905  002AA0  6919               	setf	25,b	;volatile
  3906                           
  3907                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  3908  002AA2  0E07               	movlw	7
  3909  002AA4  6F2E               	movwf	46,b	;volatile
  3910                           
  3911                           ; BSR set to: 15
  3912                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  3913  002AA6  6911               	setf	17,b	;volatile
  3914                           
  3915                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  3916  002AA8  0E00               	movlw	0
  3917  002AAA  6F25               	movwf	37,b	;volatile
  3918                           
  3919                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  3920  002AAC  0E00               	movlw	0
  3921  002AAE  6F2D               	movwf	45,b	;volatile
  3922                           
  3923                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  3924  002AB0  0E00               	movlw	0
  3925  002AB2  6F18               	movwf	24,b	;volatile
  3926                           
  3927                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  3928  002AB4  0E00               	movlw	0
  3929  002AB6  6F10               	movwf	16,b	;volatile
  3930                           
  3931                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  3932  002AB8  0E00               	movlw	0
  3933  002ABA  6F20               	movwf	32,b	;volatile
  3934                           
  3935                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  3936  002ABC  0E00               	movlw	0
  3937  002ABE  6F2C               	movwf	44,b	;volatile
  3938                           
  3939                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  3940  002AC0  0E00               	movlw	0
  3941  002AC2  6F0F               	movwf	15,b	;volatile
  3942                           
  3943                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  3944  002AC4  0E00               	movlw	0
  3945  002AC6  6F17               	movwf	23,b	;volatile
  3946                           
  3947                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  3948  002AC8  0E00               	movlw	0
  3949  002ACA  6F1F               	movwf	31,b	;volatile
  3950                           
  3951                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  3952  002ACC  0E00               	movlw	0
  3953  002ACE  6F24               	movwf	36,b	;volatile
  3954                           
  3955                           ; BSR set to: 15
  3956                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  3957  002AD0  690E               	setf	14,b	;volatile
  3958                           
  3959                           ; BSR set to: 15
  3960                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  3961  002AD2  6916               	setf	22,b	;volatile
  3962                           
  3963                           ; BSR set to: 15
  3964                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  3965  002AD4  691E               	setf	30,b	;volatile
  3966                           
  3967                           ; BSR set to: 15
  3968                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  3969  002AD6  6923               	setf	35,b	;volatile
  3970                           
  3971                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  3972  002AD8  0E07               	movlw	7
  3973  002ADA  6F2B               	movwf	43,b	;volatile
  3974                           
  3975                           ; BSR set to: 15
  3976                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  3977  002ADC  690D               	setf	13,b	;volatile
  3978                           
  3979                           ; BSR set to: 15
  3980                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  3981  002ADE  6915               	setf	21,b	;volatile
  3982                           
  3983                           ; BSR set to: 15
  3984                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  3985  002AE0  691D               	setf	29,b	;volatile
  3986                           
  3987                           ; BSR set to: 15
  3988                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  3989  002AE2  6922               	setf	34,b	;volatile
  3990                           
  3991                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  3992  002AE4  0E0F               	movlw	15
  3993  002AE6  6F2A               	movwf	42,b	;volatile
  3994                           
  3995                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
  3996  002AE8  0E13               	movlw	19
  3997  002AEA  010E               	movlb	14	; () banked
  3998  002AEC  6FB7               	movwf	183,b	;volatile
  3999                           
  4000                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x17;
  4001  002AEE  0E17               	movlw	23
  4002  002AF0  6FB5               	movwf	181,b	;volatile
  4003                           
  4004                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
  4005  002AF2  0E0F               	movlw	15
  4006  002AF4  6FFA               	movwf	250,b	;volatile
  4007                           
  4008                           ;mcc_generated_files/pin_manager.c: 130:     RC5PPS = 0x10;
  4009  002AF6  0E10               	movlw	16
  4010  002AF8  6FFC               	movwf	252,b	;volatile
  4011                           
  4012                           ;mcc_generated_files/pin_manager.c: 131:     RC6PPS = 0x09;
  4013  002AFA  0E09               	movlw	9
  4014  002AFC  6FFD               	movwf	253,b	;volatile
  4015                           
  4016                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
  4017  002AFE  0E14               	movlw	20
  4018  002B00  6FB8               	movwf	184,b	;volatile
  4019                           
  4020                           ; BSR set to: 14
  4021  002B02  0012               	return		;funcret
  4022  002B04                     __end_of_PIN_MANAGER_Initialize:
  4023                           	callstack 0
  4024                           
  4025 ;; *************** function _OSCILLATOR_Initialize *****************
  4026 ;; Defined at:
  4027 ;;		line 62 in file "mcc_generated_files/mcc.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2
  4036 ;; Tracked objects:
  4037 ;;		On entry : 3F/E
  4038 ;;		On exit  : 3F/E
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4045 ;;Total ram usage:        0 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; Hardware stack levels required when called: 5
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_SYSTEM_Initialize
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text15
  4056  002F96                     __ptext15:
  4057                           	callstack 0
  4058  002F96                     _OSCILLATOR_Initialize:
  4059                           	callstack 24
  4060                           
  4061                           ; BSR set to: 14
  4062                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  4063                           
  4064                           ; BSR set to: 14
  4065                           ;incstack = 0
  4066  002F96  0E60               	movlw	96
  4067  002F98  6FD8               	movwf	216,b	;volatile
  4068                           
  4069                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  4070  002F9A  0E00               	movlw	0
  4071  002F9C  6FDA               	movwf	218,b	;volatile
  4072                           
  4073                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  4074  002F9E  0E00               	movlw	0
  4075  002FA0  6FDC               	movwf	220,b	;volatile
  4076                           
  4077                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x06;
  4078  002FA2  0E06               	movlw	6
  4079  002FA4  6FDE               	movwf	222,b	;volatile
  4080                           
  4081                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  4082  002FA6  0E00               	movlw	0
  4083  002FA8  6FDD               	movwf	221,b	;volatile
  4084                           
  4085                           ; BSR set to: 14
  4086  002FAA  0012               	return		;funcret
  4087  002FAC                     __end_of_OSCILLATOR_Initialize:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function _INTERRUPT_Initialize *****************
  4091 ;; Defined at:
  4092 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		None
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4110 ;;Total ram usage:        0 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; Hardware stack levels required when called: 5
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_SYSTEM_Initialize
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text16
  4121  003024                     __ptext16:
  4122                           	callstack 0
  4123  003024                     _INTERRUPT_Initialize:
  4124                           	callstack 24
  4125                           
  4126                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  4127                           
  4128                           ; BSR set to: 14
  4129                           ;incstack = 0
  4130  003024  9AF2               	bcf	242,5,c	;volatile
  4131  003026  0012               	return		;funcret
  4132  003028                     __end_of_INTERRUPT_Initialize:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _EUSART1_Initialize *****************
  4136 ;; Defined at:
  4137 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 3F/E
  4148 ;;		On exit  : 3F/E
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4155 ;;Total ram usage:        0 bytes
  4156 ;; Hardware stack levels used: 1
  4157 ;; Hardware stack levels required when called: 6
  4158 ;; This function calls:
  4159 ;;		_EUSART1_SetErrorHandler
  4160 ;;		_EUSART1_SetFramingErrorHandler
  4161 ;;		_EUSART1_SetOverrunErrorHandler
  4162 ;;		_EUSART1_SetRxInterruptHandler
  4163 ;;		_EUSART1_SetTxInterruptHandler
  4164 ;; This function is called by:
  4165 ;;		_SYSTEM_Initialize
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text17
  4170  002C0A                     __ptext17:
  4171                           	callstack 0
  4172  002C0A                     _EUSART1_Initialize:
  4173                           	callstack 23
  4174                           
  4175                           ; BSR set to: 14
  4176                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  4177                           
  4178                           ;incstack = 0
  4179  002C0A  9BC5               	bcf	197,5,b	;volatile
  4180                           
  4181                           ; BSR set to: 14
  4182                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  4183  002C0C  0E88               	movlw	low _EUSART1_Receive_ISR
  4184  002C0E  6E07               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  4185  002C10  0E2B               	movlw	high _EUSART1_Receive_ISR
  4186  002C12  6E08               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  4187  002C14  ECF3  F017         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  4188                           
  4189                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  4190  002C18  010E               	movlb	14	; () banked
  4191  002C1A  99C5               	bcf	197,4,b	;volatile
  4192                           
  4193                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  4194  002C1C  0E6A               	movlw	low _EUSART1_Transmit_ISR
  4195  002C1E  6E07               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  4196  002C20  0E2E               	movlw	high _EUSART1_Transmit_ISR
  4197  002C22  6E08               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  4198  002C24  ECEE  F017         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  4199                           
  4200                           ; BSR set to: 14
  4201                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  4202  002C28  0E08               	movlw	8
  4203  002C2A  6E9F               	movwf	159,c	;volatile
  4204                           
  4205                           ; BSR set to: 14
  4206                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  4207  002C2C  0E90               	movlw	144
  4208  002C2E  6E9D               	movwf	157,c	;volatile
  4209                           
  4210                           ; BSR set to: 14
  4211                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  4212  002C30  0E24               	movlw	36
  4213  002C32  6E9E               	movwf	158,c	;volatile
  4214                           
  4215                           ; BSR set to: 14
  4216                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x44;
  4217  002C34  0E44               	movlw	68
  4218  002C36  6E9B               	movwf	155,c	;volatile
  4219                           
  4220                           ; BSR set to: 14
  4221                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
  4222  002C38  0E00               	movlw	0
  4223  002C3A  6E9C               	movwf	156,c	;volatile
  4224                           
  4225                           ; BSR set to: 14
  4226                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  4227  002C3C  0E28               	movlw	low _EUSART1_DefaultFramingErrorHandler
  4228  002C3E  6E07               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4229  002C40  0E30               	movlw	high _EUSART1_DefaultFramingErrorHandler
  4230  002C42  6E08               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4231  002C44  ECFD  F017         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4232                           
  4233                           ; BSR set to: 14
  4234                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  4235  002C48  0E18               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  4236  002C4A  6E07               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4237  002C4C  0E30               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  4238  002C4E  6E08               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4239  002C50  ECF8  F017         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4240                           
  4241                           ; BSR set to: 14
  4242                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  4243  002C54  0E1E               	movlw	low _EUSART1_DefaultErrorHandler
  4244  002C56  6E07               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4245  002C58  0E30               	movlw	high _EUSART1_DefaultErrorHandler
  4246  002C5A  6E08               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4247  002C5C  EC02  F018         	call	_EUSART1_SetErrorHandler	;wreg free
  4248                           
  4249                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  4250  002C60  0E00               	movlw	0
  4251  002C62  6E4E               	movwf	_eusart1RxLastError^0,c	;volatile
  4252                           
  4253                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  4254  002C64  0E00               	movlw	0
  4255  002C66  6E53               	movwf	_eusart1TxHead^0,c	;volatile
  4256                           
  4257                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  4258  002C68  0E00               	movlw	0
  4259  002C6A  6E52               	movwf	_eusart1TxTail^0,c	;volatile
  4260                           
  4261                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  4262  002C6C  0E20               	movlw	32
  4263  002C6E  6E3F               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  4264                           
  4265                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  4266  002C70  0E00               	movlw	0
  4267  002C72  6E51               	movwf	_eusart1RxHead^0,c	;volatile
  4268                           
  4269                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  4270  002C74  0E00               	movlw	0
  4271  002C76  6E50               	movwf	_eusart1RxTail^0,c	;volatile
  4272                           
  4273                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  4274  002C78  0E00               	movlw	0
  4275  002C7A  6E4F               	movwf	_eusart1RxCount^0,c	;volatile
  4276                           
  4277                           ; BSR set to: 14
  4278                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  4279  002C7C  8BC5               	bsf	197,5,b	;volatile
  4280                           
  4281                           ; BSR set to: 14
  4282  002C7E  0012               	return		;funcret
  4283  002C80                     __end_of_EUSART1_Initialize:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  4287 ;; Defined at:
  4288 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  4291 ;;		 -> EUSART1_Transmit_ISR(1), 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 3F/E
  4300 ;;		On exit  : 3F/E
  4301 ;;		Unchanged: 3F/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4307 ;;Total ram usage:        2 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 5
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_EUSART1_Initialize
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text18
  4318  002FDC                     __ptext18:
  4319                           	callstack 0
  4320  002FDC                     _EUSART1_SetTxInterruptHandler:
  4321                           	callstack 23
  4322                           
  4323                           ; BSR set to: 14
  4324                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4325                           
  4326                           ; BSR set to: 14
  4327                           ;incstack = 0
  4328  002FDC  C007  F03D         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  4329  002FE0  C008  F03E         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  4330                           
  4331                           ; BSR set to: 14
  4332  002FE4  0012               	return		;funcret
  4333  002FE6                     __end_of_EUSART1_SetTxInterruptHandler:
  4334                           	callstack 0
  4335                           
  4336 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  4337 ;; Defined at:
  4338 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  4341 ;;		 -> Interrupcion_Rx_Serial(1), EUSART1_Receive_ISR(1), 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0
  4348 ;; Tracked objects:
  4349 ;;		On entry : 30/1
  4350 ;;		On exit  : 30/0
  4351 ;;		Unchanged: 30/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4357 ;;Total ram usage:        2 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 5
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_EUSART1_Initialize
  4364 ;;		_main
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text19
  4369  002FE6                     __ptext19:
  4370                           	callstack 0
  4371  002FE6                     _EUSART1_SetRxInterruptHandler:
  4372                           	callstack 23
  4373                           
  4374                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4375                           
  4376                           ; BSR set to: 14
  4377                           ;incstack = 0
  4378  002FE6  C007  F03B         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  4379  002FEA  C008  F03C         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  4380  002FEE  0012               	return		;funcret
  4381  002FF0                     __end_of_EUSART1_SetRxInterruptHandler:
  4382                           	callstack 0
  4383                           
  4384 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4385 ;; Defined at:
  4386 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  4389 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0
  4396 ;; Tracked objects:
  4397 ;;		On entry : 3F/E
  4398 ;;		On exit  : 3F/E
  4399 ;;		Unchanged: 3F/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4405 ;;Total ram usage:        2 bytes
  4406 ;; Hardware stack levels used: 1
  4407 ;; Hardware stack levels required when called: 5
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_EUSART1_Initialize
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text20
  4416  002FF0                     __ptext20:
  4417                           	callstack 0
  4418  002FF0                     _EUSART1_SetOverrunErrorHandler:
  4419                           	callstack 23
  4420                           
  4421                           ; BSR set to: 14
  4422                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  4423                           
  4424                           ;incstack = 0
  4425  002FF0  C007  F037         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4426  002FF4  C008  F038         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4427                           
  4428                           ; BSR set to: 14
  4429  002FF8  0012               	return		;funcret
  4430  002FFA                     __end_of_EUSART1_SetOverrunErrorHandler:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4434 ;; Defined at:
  4435 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  4438 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 3F/E
  4447 ;;		On exit  : 3F/E
  4448 ;;		Unchanged: 3F/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4454 ;;Total ram usage:        2 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 5
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_EUSART1_Initialize
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text21
  4465  002FFA                     __ptext21:
  4466                           	callstack 0
  4467  002FFA                     _EUSART1_SetFramingErrorHandler:
  4468                           	callstack 23
  4469                           
  4470                           ; BSR set to: 14
  4471                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  4472                           
  4473                           ; BSR set to: 14
  4474                           ;incstack = 0
  4475  002FFA  C007  F039         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4476  002FFE  C008  F03A         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4477                           
  4478                           ; BSR set to: 14
  4479  003002  0012               	return		;funcret
  4480  003004                     __end_of_EUSART1_SetFramingErrorHandler:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _EUSART1_SetErrorHandler *****************
  4484 ;; Defined at:
  4485 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  4488 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0
  4495 ;; Tracked objects:
  4496 ;;		On entry : 3F/E
  4497 ;;		On exit  : 3F/E
  4498 ;;		Unchanged: 3F/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4504 ;;Total ram usage:        2 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; Hardware stack levels required when called: 5
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_EUSART1_Initialize
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text22
  4515  003004                     __ptext22:
  4516                           	callstack 0
  4517  003004                     _EUSART1_SetErrorHandler:
  4518                           	callstack 23
  4519                           
  4520                           ; BSR set to: 14
  4521                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  4522                           
  4523                           ; BSR set to: 14
  4524                           ;incstack = 0
  4525  003004  C007  F035         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4526  003008  C008  F036         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4527                           
  4528                           ; BSR set to: 14
  4529  00300C  0012               	return		;funcret
  4530  00300E                     __end_of_EUSART1_SetErrorHandler:
  4531                           	callstack 0
  4532                           
  4533 ;; *************** function _ADCC_Initialize *****************
  4534 ;; Defined at:
  4535 ;;		line 63 in file "mcc_generated_files/adcc.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 3F/E
  4546 ;;		On exit  : 30/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4553 ;;Total ram usage:        0 bytes
  4554 ;; Hardware stack levels used: 1
  4555 ;; Hardware stack levels required when called: 6
  4556 ;; This function calls:
  4557 ;;		_ADCC_SetADIInterruptHandler
  4558 ;; This function is called by:
  4559 ;;		_SYSTEM_Initialize
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text23
  4564  002CF0                     __ptext23:
  4565                           	callstack 0
  4566  002CF0                     _ADCC_Initialize:
  4567                           	callstack 23
  4568                           
  4569                           ; BSR set to: 14
  4570                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  4571                           
  4572                           ; BSR set to: 14
  4573                           ;incstack = 0
  4574  002CF0  0E00               	movlw	0
  4575  002CF2  6E6A               	movwf	106,c	;volatile
  4576                           
  4577                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  4578  002CF4  0E00               	movlw	0
  4579  002CF6  6E6B               	movwf	107,c	;volatile
  4580                           
  4581                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  4582  002CF8  0E00               	movlw	0
  4583  002CFA  6E6C               	movwf	108,c	;volatile
  4584                           
  4585                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  4586  002CFC  0E00               	movlw	0
  4587  002CFE  6E6D               	movwf	109,c	;volatile
  4588                           
  4589                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  4590  002D00  0E00               	movlw	0
  4591  002D02  6E68               	movwf	104,c	;volatile
  4592                           
  4593                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  4594  002D04  0E00               	movlw	0
  4595  002D06  6E69               	movwf	105,c	;volatile
  4596                           
  4597                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  4598  002D08  0E00               	movlw	0
  4599  002D0A  6E66               	movwf	102,c	;volatile
  4600                           
  4601                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  4602  002D0C  0E00               	movlw	0
  4603  002D0E  010F               	movlb	15	; () banked
  4604  002D10  6F5F               	movwf	95,b	;volatile
  4605                           
  4606                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  4607  002D12  0E00               	movlw	0
  4608  002D14  6F5D               	movwf	93,b	;volatile
  4609                           
  4610                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  4611  002D16  0E00               	movlw	0
  4612  002D18  6F5E               	movwf	94,b	;volatile
  4613                           
  4614                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  4615  002D1A  0E00               	movlw	0
  4616  002D1C  6F59               	movwf	89,b	;volatile
  4617                           
  4618                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
  4619  002D1E  0E00               	movlw	0
  4620  002D20  6F5A               	movwf	90,b	;volatile
  4621                           
  4622                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  4623  002D22  0E00               	movlw	0
  4624  002D24  6F5B               	movwf	91,b	;volatile
  4625                           
  4626                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  4627  002D26  0E00               	movlw	0
  4628  002D28  6E65               	movwf	101,c	;volatile
  4629                           
  4630                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  4631  002D2A  0E00               	movlw	0
  4632  002D2C  6F58               	movwf	88,b	;volatile
  4633                           
  4634                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x04;
  4635  002D2E  0E04               	movlw	4
  4636  002D30  6F56               	movwf	86,b	;volatile
  4637                           
  4638                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x18;
  4639  002D32  0E18               	movlw	24
  4640  002D34  6F57               	movwf	87,b	;volatile
  4641                           
  4642                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
  4643  002D36  0E84               	movlw	132
  4644  002D38  6E60               	movwf	96,c	;volatile
  4645                           
  4646                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
  4647  002D3A  0E00               	movlw	0
  4648  002D3C  6F5C               	movwf	92,b	;volatile
  4649                           
  4650                           ; BSR set to: 15
  4651                           ;mcc_generated_files/adcc.c: 106:     PIR1bits.ADIF = 0;
  4652  002D3E  010E               	movlb	14	; () banked
  4653  002D40  91CB               	bcf	203,0,b	;volatile
  4654                           
  4655                           ; BSR set to: 14
  4656                           ;mcc_generated_files/adcc.c: 108:     PIE1bits.ADIE = 1;
  4657  002D42  81C3               	bsf	195,0,b	;volatile
  4658                           
  4659                           ; BSR set to: 14
  4660                           ;mcc_generated_files/adcc.c: 110:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
  4661  002D44  0E2A               	movlw	low _ADCC_DefaultInterruptHandler
  4662  002D46  6E07               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  4663  002D48  0E30               	movlw	high _ADCC_DefaultInterruptHandler
  4664  002D4A  6E08               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  4665  002D4C  EC07  F018         	call	_ADCC_SetADIInterruptHandler	;wreg free
  4666  002D50  0012               	return		;funcret
  4667  002D52                     __end_of_ADCC_Initialize:
  4668                           	callstack 0
  4669                           
  4670 ;; *************** function _ADCC_SetADIInterruptHandler *****************
  4671 ;; Defined at:
  4672 ;;		line 307 in file "mcc_generated_files/adcc.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  4675 ;;		 -> Interrupcion_ADC(1), ADCC_DefaultInterruptHandler(1), 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0
  4682 ;; Tracked objects:
  4683 ;;		On entry : 30/1
  4684 ;;		On exit  : 30/0
  4685 ;;		Unchanged: 30/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;Total ram usage:        2 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 5
  4694 ;; This function calls:
  4695 ;;		Nothing
  4696 ;; This function is called by:
  4697 ;;		_ADCC_Initialize
  4698 ;;		_main
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text24
  4703  00300E                     __ptext24:
  4704                           	callstack 0
  4705  00300E                     _ADCC_SetADIInterruptHandler:
  4706                           	callstack 23
  4707                           
  4708                           ;mcc_generated_files/adcc.c: 308:     ADCC_ADI_InterruptHandler = InterruptHandler;
  4709                           
  4710                           ;incstack = 0
  4711  00300E  C007  F033         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
  4712  003012  C008  F034         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
  4713  003016  0012               	return		;funcret
  4714  003018                     __end_of_ADCC_SetADIInterruptHandler:
  4715                           	callstack 0
  4716                           
  4717 ;; *************** function _SPI1_WriteBlock *****************
  4718 ;; Defined at:
  4719 ;;		line 120 in file "mcc_generated_files/spi1.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  block           2    7[COMRAM] PTR void 
  4722 ;;		 -> main@Vector_DAC(2), 
  4723 ;;  blockSize       2    9[COMRAM] unsigned int 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  data            2   11[COMRAM] PTR unsigned char 
  4726 ;;		 -> main@Vector_DAC(2), 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      void 
  4729 ;; Registers used:
  4730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 3F/1
  4733 ;;		On exit  : 30/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4737 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4739 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4740 ;;Total ram usage:        6 bytes
  4741 ;; Hardware stack levels used: 1
  4742 ;; Hardware stack levels required when called: 6
  4743 ;; This function calls:
  4744 ;;		_SPI1_ExchangeByte
  4745 ;; This function is called by:
  4746 ;;		_main
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text25
  4751  002E16                     __ptext25:
  4752                           	callstack 0
  4753  002E16                     _SPI1_WriteBlock:
  4754                           	callstack 24
  4755                           
  4756                           ; BSR set to: 1
  4757                           ;mcc_generated_files/spi1.c: 120: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 121: {;mcc_generated_files/spi1.c: 122:     uint8_t *data = bl
      +                          ock;
  4758                           
  4759                           ;incstack = 0
  4760  002E16  C008  F00C         	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
  4761  002E1A  C009  F00D         	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
  4762                           
  4763                           ;mcc_generated_files/spi1.c: 123:     while(blockSize--)
  4764  002E1E  D009               	goto	l3244
  4765  002E20                     l3240:
  4766                           
  4767                           ;mcc_generated_files/spi1.c: 124:     {;mcc_generated_files/spi1.c: 125:         SPI1_Ex
      +                          changeByte(*data++);
  4768  002E20  C00C  FFD9         	movff	SPI1_WriteBlock@data,fsr2l
  4769  002E24  C00D  FFDA         	movff	SPI1_WriteBlock@data+1,fsr2h
  4770  002E28  50DF               	movf	indf2,w,c
  4771  002E2A  ECD6  F017         	call	_SPI1_ExchangeByte
  4772                           
  4773                           ; BSR set to: 14
  4774  002E2E  4A0C               	infsnz	SPI1_WriteBlock@data^0,f,c
  4775  002E30  2A0D               	incf	(SPI1_WriteBlock@data+1)^0,f,c
  4776  002E32                     l3244:
  4777                           
  4778                           ;mcc_generated_files/spi1.c: 123:     while(blockSize--)
  4779  002E32  060A               	decf	SPI1_WriteBlock@blockSize^0,f,c
  4780  002E34  A0D8               	btfss	status,0,c
  4781  002E36  060B               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
  4782  002E38  280A               	incf	SPI1_WriteBlock@blockSize^0,w,c
  4783  002E3A  E1F2               	bnz	l3240
  4784  002E3C  280B               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
  4785  002E3E  B4D8               	btfsc	status,2,c
  4786  002E40  0012               	return	
  4787  002E42  D7EE               	goto	l3240
  4788  002E44                     __end_of_SPI1_WriteBlock:
  4789                           	callstack 0
  4790                           
  4791 ;; *************** function _SPI1_ExchangeByte *****************
  4792 ;; Defined at:
  4793 ;;		line 99 in file "mcc_generated_files/spi1.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  data            1    wreg     unsigned char 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  data            1    6[COMRAM] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      unsigned char 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2
  4802 ;; Tracked objects:
  4803 ;;		On entry : 30/1
  4804 ;;		On exit  : 3F/E
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4811 ;;Total ram usage:        1 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; Hardware stack levels required when called: 5
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_SPI1_WriteBlock
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text26
  4822  002FAC                     __ptext26:
  4823                           	callstack 0
  4824  002FAC                     _SPI1_ExchangeByte:
  4825                           	callstack 24
  4826                           
  4827                           ;incstack = 0
  4828                           ;SPI1_ExchangeByte@data stored from wreg
  4829  002FAC  6E07               	movwf	SPI1_ExchangeByte@data^0,c
  4830                           
  4831                           ;mcc_generated_files/spi1.c: 99: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 100: {;mcc_generated_files/spi1.c: 101:     SSP1BUF = data;
  4832  002FAE  C007  FF92         	movff	SPI1_ExchangeByte@data,3986	;volatile
  4833  002FB2                     l522:
  4834  002FB2  010E               	movlb	14	; () banked
  4835  002FB4  A1CD               	btfss	205,0,b	;volatile
  4836  002FB6  D7FD               	goto	l522
  4837                           
  4838                           ; BSR set to: 14
  4839                           ;mcc_generated_files/spi1.c: 103:     PIR3bits.SSP1IF = 0;
  4840  002FB8  91CD               	bcf	205,0,b	;volatile
  4841                           
  4842                           ;mcc_generated_files/spi1.c: 104:     return SSP1BUF;
  4843  002FBA  5092               	movf	146,w,c	;volatile
  4844                           
  4845                           ; BSR set to: 14
  4846  002FBC  0012               	return		;funcret
  4847  002FBE                     __end_of_SPI1_ExchangeByte:
  4848                           	callstack 0
  4849                           
  4850 ;; *************** function _SPI1_Open *****************
  4851 ;; Defined at:
  4852 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  spi1UniqueCo    1    wreg     enum E355
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  spi1UniqueCo    1    9[COMRAM] enum E355
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      _Bool 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4861 ;; Tracked objects:
  4862 ;;		On entry : 30/1
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4868 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4869 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4870 ;;Total ram usage:        4 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; Hardware stack levels required when called: 5
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_main
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text27
  4881  00293C                     __ptext27:
  4882                           	callstack 0
  4883  00293C                     _SPI1_Open:
  4884                           	callstack 25
  4885                           
  4886                           ; BSR set to: 14
  4887                           ;incstack = 0
  4888                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  4889  00293C  6E0A               	movwf	SPI1_Open@spi1UniqueConfiguration^0,c
  4890                           
  4891                           ;mcc_generated_files/spi1.c: 79: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 80: {;mcc_generated_files/spi1.c: 81:     if(!SSP1CON1bits.SS
      +                          PEN)
  4892  00293E  BA96               	btfsc	150,5,c	;volatile
  4893  002940  0012               	return	
  4894                           
  4895                           ;mcc_generated_files/spi1.c: 82:     {;mcc_generated_files/spi1.c: 83:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  4896  002942  500A               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  4897  002944  0D04               	mullw	4
  4898  002946  CFF3 F007          	movff	prodl,??_SPI1_Open
  4899  00294A  0E01               	movlw	1
  4900  00294C  2607               	addwf	??_SPI1_Open^0,f,c
  4901  00294E  5007               	movf	??_SPI1_Open^0,w,c
  4902  002950  0F01               	addlw	low _spi1_configuration
  4903  002952  6E08               	movwf	(??_SPI1_Open+1)^0,c
  4904  002954  C008  FFF6         	movff	??_SPI1_Open+1,tblptrl
  4905  002958                     	if	1	;There is more than 1 active tblptr byte
  4906  002958  0E0F               	movlw	high __smallconst
  4907  00295A  6EF7               	movwf	tblptrh,c
  4908  00295C                     	endif
  4909  00295C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4910  00295C  6AF8               	clrf	tblptru,c
  4911  00295E                     	endif
  4912  00295E                     	if	0	;tblptru may be non-zero
  4913  00295E                     	endif
  4914  00295E  0008               	tblrd		*
  4915  002960  CFF5 FF95          	movff	tablat,3989	;volatile
  4916                           
  4917                           ;mcc_generated_files/spi1.c: 84:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  4918  002964  500A               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  4919  002966  0D04               	mullw	4
  4920  002968  50F3               	movf	243,w,c
  4921  00296A  0F01               	addlw	low _spi1_configuration
  4922  00296C  6E07               	movwf	??_SPI1_Open^0,c
  4923  00296E  C007  FFF6         	movff	??_SPI1_Open,tblptrl
  4924  002972                     	if	1	;There is more than 1 active tblptr byte
  4925  002972  0E0F               	movlw	high __smallconst
  4926  002974  6EF7               	movwf	tblptrh,c
  4927  002976                     	endif
  4928  002976                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4929  002976  6AF8               	clrf	tblptru,c
  4930  002978                     	endif
  4931  002978                     	if	0	;tblptru may be non-zero
  4932  002978                     	endif
  4933  002978  0008               	tblrd		*
  4934  00297A  CFF5 FF96          	movff	tablat,3990	;volatile
  4935                           
  4936                           ;mcc_generated_files/spi1.c: 85:         SSP1CON2 = 0x00;
  4937  00297E  0E00               	movlw	0
  4938  002980  6E97               	movwf	151,c	;volatile
  4939                           
  4940                           ;mcc_generated_files/spi1.c: 86:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  4941  002982  500A               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  4942  002984  0D04               	mullw	4
  4943  002986  CFF3 F007          	movff	prodl,??_SPI1_Open
  4944  00298A  0E02               	movlw	2
  4945  00298C  2607               	addwf	??_SPI1_Open^0,f,c
  4946  00298E  5007               	movf	??_SPI1_Open^0,w,c
  4947  002990  0F01               	addlw	low _spi1_configuration
  4948  002992  6E08               	movwf	(??_SPI1_Open+1)^0,c
  4949  002994  C008  FFF6         	movff	??_SPI1_Open+1,tblptrl
  4950  002998                     	if	1	;There is more than 1 active tblptr byte
  4951  002998  0E0F               	movlw	high __smallconst
  4952  00299A  6EF7               	movwf	tblptrh,c
  4953  00299C                     	endif
  4954  00299C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4955  00299C  6AF8               	clrf	tblptru,c
  4956  00299E                     	endif
  4957  00299E                     	if	0	;tblptru may be non-zero
  4958  00299E                     	endif
  4959  00299E  0008               	tblrd		*
  4960  0029A0  CFF5 FF93          	movff	tablat,3987	;volatile
  4961                           
  4962                           ;mcc_generated_files/spi1.c: 87:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  4963  0029A4  500A               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  4964  0029A6  0D04               	mullw	4
  4965  0029A8  CFF3 F007          	movff	prodl,??_SPI1_Open
  4966  0029AC  0E03               	movlw	3
  4967  0029AE  2607               	addwf	??_SPI1_Open^0,f,c
  4968  0029B0  5007               	movf	??_SPI1_Open^0,w,c
  4969  0029B2  0F01               	addlw	low _spi1_configuration
  4970  0029B4  6E08               	movwf	(??_SPI1_Open+1)^0,c
  4971  0029B6  C008  FFF6         	movff	??_SPI1_Open+1,tblptrl
  4972  0029BA                     	if	1	;There is more than 1 active tblptr byte
  4973  0029BA  0E0F               	movlw	high __smallconst
  4974  0029BC  6EF7               	movwf	tblptrh,c
  4975  0029BE                     	endif
  4976  0029BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4977  0029BE  6AF8               	clrf	tblptru,c
  4978  0029C0                     	endif
  4979  0029C0                     	if	0	;tblptru may be non-zero
  4980  0029C0                     	endif
  4981  0029C0  0008               	tblrd		*
  4982  0029C2  CFF5 F009          	movff	tablat,??_SPI1_Open+2
  4983  0029C6  4609               	rlncf	(??_SPI1_Open+2)^0,f,c
  4984  0029C8  4609               	rlncf	(??_SPI1_Open+2)^0,f,c
  4985  0029CA  4609               	rlncf	(??_SPI1_Open+2)^0,f,c
  4986  0029CC  508A               	movf	138,w,c	;volatile
  4987  0029CE  1809               	xorwf	(??_SPI1_Open+2)^0,w,c
  4988  0029D0  0BF7               	andlw	-9
  4989  0029D2  1809               	xorwf	(??_SPI1_Open+2)^0,w,c
  4990  0029D4  6E8A               	movwf	138,c	;volatile
  4991                           
  4992                           ;mcc_generated_files/spi1.c: 88:         SSP1CON1bits.SSPEN = 1;
  4993  0029D6  8A96               	bsf	150,5,c	;volatile
  4994  0029D8  0012               	return		;funcret
  4995  0029DA                     __end_of_SPI1_Open:
  4996                           	callstack 0
  4997                           
  4998 ;; *************** function _Re_Vector *****************
  4999 ;; Defined at:
  5000 ;;		line 7 in file "Config_Usart.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  dsp             2    6[COMRAM] PTR struct Vect_RE
  5003 ;;		 -> main@MiVector(13), 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  BandDato        1    9[COMRAM] unsigned char 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      unsigned char 
  5008 ;; Registers used:
  5009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5010 ;; Tracked objects:
  5011 ;;		On entry : 3F/1
  5012 ;;		On exit  : 3F/1
  5013 ;;		Unchanged: 3F/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5018 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5019 ;;Total ram usage:        4 bytes
  5020 ;; Hardware stack levels used: 1
  5021 ;; Hardware stack levels required when called: 5
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_main
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text28
  5030  0027DE                     __ptext28:
  5031                           	callstack 0
  5032  0027DE                     _Re_Vector:
  5033                           	callstack 25
  5034                           
  5035                           ; BSR set to: 1
  5036                           ;Config_Usart.c: 8:     char BandDato;;Config_Usart.c: 9:     if(dsp->Lectura == '#'){
  5037                           
  5038                           ;incstack = 0
  5039  0027DE  EE20 F00C          	lfsr	2,12
  5040  0027E2  5007               	movf	Re_Vector@dsp^0,w,c
  5041  0027E4  26D9               	addwf	fsr2l,f,c
  5042  0027E6  5008               	movf	(Re_Vector@dsp+1)^0,w,c
  5043  0027E8  22DA               	addwfc	fsr2h,f,c
  5044  0027EA  0E23               	movlw	35
  5045  0027EC  18DE               	xorwf	postinc2,w,c
  5046  0027EE  A4D8               	btfss	status,2,c
  5047  0027F0  D012               	goto	l3270
  5048                           
  5049                           ; BSR set to: 1
  5050                           ;Config_Usart.c: 10:         dsp->Iniciar = 1;
  5051  0027F2  EE20 F00B          	lfsr	2,11
  5052  0027F6  5007               	movf	Re_Vector@dsp^0,w,c
  5053  0027F8  26D9               	addwf	fsr2l,f,c
  5054  0027FA  5008               	movf	(Re_Vector@dsp+1)^0,w,c
  5055  0027FC  22DA               	addwfc	fsr2h,f,c
  5056  0027FE  0E01               	movlw	1
  5057  002800  6EDF               	movwf	indf2,c
  5058                           
  5059                           ;Config_Usart.c: 11:         dsp->Pos = 0;
  5060  002802  EE20 F00A          	lfsr	2,10
  5061  002806  5007               	movf	Re_Vector@dsp^0,w,c
  5062  002808  26D9               	addwf	fsr2l,f,c
  5063  00280A  5008               	movf	(Re_Vector@dsp+1)^0,w,c
  5064  00280C  22DA               	addwfc	fsr2h,f,c
  5065  00280E  0E00               	movlw	0
  5066  002810  6EDF               	movwf	indf2,c
  5067                           
  5068                           ; BSR set to: 1
  5069                           ;Config_Usart.c: 12:         BandDato = 0;
  5070  002812  0E00               	movlw	0
  5071  002814  6E0A               	movwf	Re_Vector@BandDato^0,c
  5072  002816                     l3270:
  5073                           
  5074                           ; BSR set to: 1
  5075                           ;Config_Usart.c: 14:     if (dsp->Iniciar){
  5076  002816  EE20 F00B          	lfsr	2,11
  5077  00281A  5007               	movf	Re_Vector@dsp^0,w,c
  5078  00281C  26D9               	addwf	fsr2l,f,c
  5079  00281E  5008               	movf	(Re_Vector@dsp+1)^0,w,c
  5080  002820  22DA               	addwfc	fsr2h,f,c
  5081  002822  50DF               	movf	indf2,w,c
  5082  002824  B4D8               	btfsc	status,2,c
  5083  002826  D01E               	goto	l3276
  5084                           
  5085                           ; BSR set to: 1
  5086                           ;Config_Usart.c: 15:         dsp->Dato[dsp->Pos] = dsp->Lectura - '0';
  5087  002828  EE20 F00A          	lfsr	2,10
  5088  00282C  5007               	movf	Re_Vector@dsp^0,w,c
  5089  00282E  26D9               	addwf	fsr2l,f,c
  5090  002830  5008               	movf	(Re_Vector@dsp+1)^0,w,c
  5091  002832  22DA               	addwfc	fsr2h,f,c
  5092  002834  50DF               	movf	indf2,w,c
  5093  002836  6E09               	movwf	??_Re_Vector^0,c
  5094  002838  5009               	movf	??_Re_Vector^0,w,c
  5095  00283A  2407               	addwf	Re_Vector@dsp^0,w,c
  5096  00283C  6ED9               	movwf	fsr2l,c
  5097  00283E  0E00               	movlw	0
  5098  002840  2008               	addwfc	(Re_Vector@dsp+1)^0,w,c
  5099  002842  6EDA               	movwf	fsr2h,c
  5100  002844  EE10 F00C          	lfsr	1,12
  5101  002848  5007               	movf	Re_Vector@dsp^0,w,c
  5102  00284A  26E1               	addwf	fsr1l,f,c
  5103  00284C  5008               	movf	(Re_Vector@dsp+1)^0,w,c
  5104  00284E  22E2               	addwfc	fsr1h,f,c
  5105  002850  50E7               	movf	indf1,w,c
  5106  002852  0FD0               	addlw	208
  5107  002854  6EDF               	movwf	indf2,c
  5108                           
  5109                           ; BSR set to: 1
  5110                           ;Config_Usart.c: 16:         dsp->Pos++;
  5111  002856  EE20 F00A          	lfsr	2,10
  5112  00285A  5007               	movf	Re_Vector@dsp^0,w,c
  5113  00285C  26D9               	addwf	fsr2l,f,c
  5114  00285E  5008               	movf	(Re_Vector@dsp+1)^0,w,c
  5115  002860  22DA               	addwfc	fsr2h,f,c
  5116  002862  2ADF               	incf	indf2,f,c
  5117  002864                     l3276:
  5118                           
  5119                           ; BSR set to: 1
  5120                           ;Config_Usart.c: 18:     if(dsp->Lectura == '*'){
  5121  002864  EE20 F00C          	lfsr	2,12
  5122  002868  5007               	movf	Re_Vector@dsp^0,w,c
  5123  00286A  26D9               	addwf	fsr2l,f,c
  5124  00286C  5008               	movf	(Re_Vector@dsp+1)^0,w,c
  5125  00286E  22DA               	addwfc	fsr2h,f,c
  5126  002870  0E2A               	movlw	42
  5127  002872  18DE               	xorwf	postinc2,w,c
  5128  002874  A4D8               	btfss	status,2,c
  5129  002876  D00A               	goto	l3282
  5130                           
  5131                           ; BSR set to: 1
  5132                           ;Config_Usart.c: 19:         dsp->Iniciar = 0;
  5133  002878  EE20 F00B          	lfsr	2,11
  5134  00287C  5007               	movf	Re_Vector@dsp^0,w,c
  5135  00287E  26D9               	addwf	fsr2l,f,c
  5136  002880  5008               	movf	(Re_Vector@dsp+1)^0,w,c
  5137  002882  22DA               	addwfc	fsr2h,f,c
  5138  002884  0E00               	movlw	0
  5139  002886  6EDF               	movwf	indf2,c
  5140                           
  5141                           ; BSR set to: 1
  5142                           ;Config_Usart.c: 20:         BandDato = 1;
  5143  002888  0E01               	movlw	1
  5144  00288A  6E0A               	movwf	Re_Vector@BandDato^0,c
  5145  00288C                     l3282:
  5146                           
  5147                           ; BSR set to: 1
  5148                           ;Config_Usart.c: 22:     return BandDato;
  5149  00288C  500A               	movf	Re_Vector@BandDato^0,w,c
  5150                           
  5151                           ; BSR set to: 1
  5152  00288E  0012               	return		;funcret
  5153  002890                     __end_of_Re_Vector:
  5154                           	callstack 0
  5155                           
  5156 ;; *************** function _EUSART1_Write *****************
  5157 ;; Defined at:
  5158 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  txData          1    wreg     unsigned char 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  txData          1    6[COMRAM] unsigned char 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5167 ;; Tracked objects:
  5168 ;;		On entry : 30/1
  5169 ;;		On exit  : 3F/E
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5176 ;;Total ram usage:        1 bytes
  5177 ;; Hardware stack levels used: 1
  5178 ;; Hardware stack levels required when called: 5
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_main
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text29
  5187  002DE2                     __ptext29:
  5188                           	callstack 0
  5189  002DE2                     _EUSART1_Write:
  5190                           	callstack 25
  5191                           
  5192                           ; BSR set to: 1
  5193                           ;incstack = 0
  5194                           ;EUSART1_Write@txData stored from wreg
  5195  002DE2  6E07               	movwf	EUSART1_Write@txData^0,c
  5196  002DE4                     
  5197                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  5198                           
  5199                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  5200  002DE4  503F               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  5201  002DE6  B4D8               	btfsc	status,2,c
  5202  002DE8  D7FD               	goto	l3194
  5203                           
  5204                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  5205  002DEA  010E               	movlb	14	; () banked
  5206  002DEC  B9C5               	btfsc	197,4,b	;volatile
  5207  002DEE  D003               	goto	l179
  5208                           
  5209                           ; BSR set to: 14
  5210                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  5211  002DF0  C007  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  5212                           
  5213                           ;mcc_generated_files/eusart1.c: 182:     }
  5214  002DF4  D00E               	goto	l3210
  5215  002DF6                     l179:
  5216                           
  5217                           ; BSR set to: 14
  5218                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  5219  002DF6  99C5               	bcf	197,4,b	;volatile
  5220                           
  5221                           ; BSR set to: 14
  5222                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  5223  002DF8  5053               	movf	_eusart1TxHead^0,w,c
  5224  002DFA  0F80               	addlw	low _eusart1TxBuffer
  5225  002DFC  6ED9               	movwf	fsr2l,c
  5226  002DFE  6ADA               	clrf	fsr2h,c
  5227  002E00  C007  FFDF         	movff	EUSART1_Write@txData,indf2
  5228                           
  5229                           ; BSR set to: 14
  5230  002E04  2A53               	incf	_eusart1TxHead^0,f,c	;volatile
  5231                           
  5232                           ; BSR set to: 14
  5233                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  5234  002E06  0E1F               	movlw	31
  5235  002E08  6453               	cpfsgt	_eusart1TxHead^0,c
  5236  002E0A  D002               	goto	l3208
  5237                           
  5238                           ; BSR set to: 14
  5239                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  5240  002E0C  0E00               	movlw	0
  5241  002E0E  6E53               	movwf	_eusart1TxHead^0,c	;volatile
  5242  002E10                     l3208:
  5243                           
  5244                           ; BSR set to: 14
  5245                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  5246  002E10  063F               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5247  002E12                     l3210:
  5248                           
  5249                           ; BSR set to: 14
  5250                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  5251  002E12  89C5               	bsf	197,4,b	;volatile
  5252                           
  5253                           ; BSR set to: 14
  5254  002E14  0012               	return		;funcret
  5255  002E16                     __end_of_EUSART1_Write:
  5256                           	callstack 0
  5257                           
  5258 ;; *************** function _ConfigPostcaler *****************
  5259 ;; Defined at:
  5260 ;;		line 27 in file "Config_Usart.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  n               4   18[COMRAM] float 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  Post            1   22[COMRAM] unsigned char 
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      unsigned char 
  5267 ;; Registers used:
  5268 ;;		wreg, status,2, status,0, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 3F/1
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5278 ;;Total ram usage:        5 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; Hardware stack levels required when called: 6
  5281 ;; This function calls:
  5282 ;;		___flge
  5283 ;; This function is called by:
  5284 ;;		_main
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text30
  5289  001406                     __ptext30:
  5290                           	callstack 0
  5291  001406                     _ConfigPostcaler:
  5292                           	callstack 24
  5293                           
  5294                           ; BSR set to: 1
  5295                           ;Config_Usart.c: 28:     char Post = 0xF0;
  5296                           
  5297                           ; BSR set to: 14
  5298                           ;incstack = 0
  5299  001406  0EF0               	movlw	240
  5300  001408  6E17               	movwf	ConfigPostcaler@Post^0,c
  5301                           
  5302                           ; BSR set to: 1
  5303                           ;Config_Usart.c: 29:     if((n<=4096)&&(n>=500)){
  5304  00140A  0E00               	movlw	0
  5305  00140C  6E07               	movwf	___flge@ff1^0,c
  5306  00140E  0E00               	movlw	0
  5307  001410  6E08               	movwf	(___flge@ff1+1)^0,c
  5308  001412  0E80               	movlw	128
  5309  001414  6E09               	movwf	(___flge@ff1+2)^0,c
  5310  001416  0E45               	movlw	69
  5311  001418  6E0A               	movwf	(___flge@ff1+3)^0,c
  5312  00141A  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5313  00141E  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5314  001422  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5315  001426  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5316  00142A  EC2A  F013         	call	___flge	;wreg free
  5317  00142E  A0D8               	btfss	status,0,c
  5318  001430  D016               	goto	l3294
  5319  001432  C013  F007         	movff	ConfigPostcaler@n,___flge@ff1
  5320  001436  C014  F008         	movff	ConfigPostcaler@n+1,___flge@ff1+1
  5321  00143A  C015  F009         	movff	ConfigPostcaler@n+2,___flge@ff1+2
  5322  00143E  C016  F00A         	movff	ConfigPostcaler@n+3,___flge@ff1+3
  5323  001442  0E00               	movlw	0
  5324  001444  6E0B               	movwf	___flge@ff2^0,c
  5325  001446  0E00               	movlw	0
  5326  001448  6E0C               	movwf	(___flge@ff2+1)^0,c
  5327  00144A  0EFA               	movlw	250
  5328  00144C  6E0D               	movwf	(___flge@ff2+2)^0,c
  5329  00144E  0E43               	movlw	67
  5330  001450  6E0E               	movwf	(___flge@ff2+3)^0,c
  5331  001452  EC2A  F013         	call	___flge	;wreg free
  5332  001456  A0D8               	btfss	status,0,c
  5333  001458  D002               	goto	l3294
  5334                           
  5335                           ;Config_Usart.c: 30:         Post = 0xF0;
  5336  00145A  0EF0               	movlw	240
  5337  00145C  6E17               	movwf	ConfigPostcaler@Post^0,c
  5338  00145E                     l3294:
  5339                           
  5340                           ;Config_Usart.c: 32:     if((n<=8192)&&(n>4096)){
  5341  00145E  0E00               	movlw	0
  5342  001460  6E07               	movwf	___flge@ff1^0,c
  5343  001462  0E00               	movlw	0
  5344  001464  6E08               	movwf	(___flge@ff1+1)^0,c
  5345  001466  0E00               	movlw	0
  5346  001468  6E09               	movwf	(___flge@ff1+2)^0,c
  5347  00146A  0E46               	movlw	70
  5348  00146C  6E0A               	movwf	(___flge@ff1+3)^0,c
  5349  00146E  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5350  001472  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5351  001476  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5352  00147A  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5353  00147E  EC2A  F013         	call	___flge	;wreg free
  5354  001482  A0D8               	btfss	status,0,c
  5355  001484  D016               	goto	l3300
  5356  001486  0E00               	movlw	0
  5357  001488  6E07               	movwf	___flge@ff1^0,c
  5358  00148A  0E00               	movlw	0
  5359  00148C  6E08               	movwf	(___flge@ff1+1)^0,c
  5360  00148E  0E80               	movlw	128
  5361  001490  6E09               	movwf	(___flge@ff1+2)^0,c
  5362  001492  0E45               	movlw	69
  5363  001494  6E0A               	movwf	(___flge@ff1+3)^0,c
  5364  001496  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5365  00149A  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5366  00149E  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5367  0014A2  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5368  0014A6  EC2A  F013         	call	___flge	;wreg free
  5369  0014AA  B0D8               	btfsc	status,0,c
  5370  0014AC  D002               	goto	l3300
  5371                           
  5372                           ;Config_Usart.c: 33:         Post = 0xF1;
  5373  0014AE  0EF1               	movlw	241
  5374  0014B0  6E17               	movwf	ConfigPostcaler@Post^0,c
  5375  0014B2                     l3300:
  5376                           
  5377                           ;Config_Usart.c: 35:     if((n<=12288)&&(n>8192)){
  5378  0014B2  0E00               	movlw	0
  5379  0014B4  6E07               	movwf	___flge@ff1^0,c
  5380  0014B6  0E00               	movlw	0
  5381  0014B8  6E08               	movwf	(___flge@ff1+1)^0,c
  5382  0014BA  0E40               	movlw	64
  5383  0014BC  6E09               	movwf	(___flge@ff1+2)^0,c
  5384  0014BE  0E46               	movlw	70
  5385  0014C0  6E0A               	movwf	(___flge@ff1+3)^0,c
  5386  0014C2  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5387  0014C6  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5388  0014CA  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5389  0014CE  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5390  0014D2  EC2A  F013         	call	___flge	;wreg free
  5391  0014D6  A0D8               	btfss	status,0,c
  5392  0014D8  D016               	goto	l3306
  5393  0014DA  0E00               	movlw	0
  5394  0014DC  6E07               	movwf	___flge@ff1^0,c
  5395  0014DE  0E00               	movlw	0
  5396  0014E0  6E08               	movwf	(___flge@ff1+1)^0,c
  5397  0014E2  0E00               	movlw	0
  5398  0014E4  6E09               	movwf	(___flge@ff1+2)^0,c
  5399  0014E6  0E46               	movlw	70
  5400  0014E8  6E0A               	movwf	(___flge@ff1+3)^0,c
  5401  0014EA  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5402  0014EE  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5403  0014F2  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5404  0014F6  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5405  0014FA  EC2A  F013         	call	___flge	;wreg free
  5406  0014FE  B0D8               	btfsc	status,0,c
  5407  001500  D002               	goto	l3306
  5408                           
  5409                           ;Config_Usart.c: 36:         Post = 0xF2;
  5410  001502  0EF2               	movlw	242
  5411  001504  6E17               	movwf	ConfigPostcaler@Post^0,c
  5412  001506                     l3306:
  5413                           
  5414                           ;Config_Usart.c: 38:     if((n<=16384)&&(n>12288)){
  5415  001506  0E00               	movlw	0
  5416  001508  6E07               	movwf	___flge@ff1^0,c
  5417  00150A  0E00               	movlw	0
  5418  00150C  6E08               	movwf	(___flge@ff1+1)^0,c
  5419  00150E  0E80               	movlw	128
  5420  001510  6E09               	movwf	(___flge@ff1+2)^0,c
  5421  001512  0E46               	movlw	70
  5422  001514  6E0A               	movwf	(___flge@ff1+3)^0,c
  5423  001516  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5424  00151A  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5425  00151E  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5426  001522  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5427  001526  EC2A  F013         	call	___flge	;wreg free
  5428  00152A  A0D8               	btfss	status,0,c
  5429  00152C  D016               	goto	l3312
  5430  00152E  0E00               	movlw	0
  5431  001530  6E07               	movwf	___flge@ff1^0,c
  5432  001532  0E00               	movlw	0
  5433  001534  6E08               	movwf	(___flge@ff1+1)^0,c
  5434  001536  0E40               	movlw	64
  5435  001538  6E09               	movwf	(___flge@ff1+2)^0,c
  5436  00153A  0E46               	movlw	70
  5437  00153C  6E0A               	movwf	(___flge@ff1+3)^0,c
  5438  00153E  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5439  001542  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5440  001546  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5441  00154A  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5442  00154E  EC2A  F013         	call	___flge	;wreg free
  5443  001552  B0D8               	btfsc	status,0,c
  5444  001554  D002               	goto	l3312
  5445                           
  5446                           ;Config_Usart.c: 39:         Post = 0xF3;
  5447  001556  0EF3               	movlw	243
  5448  001558  6E17               	movwf	ConfigPostcaler@Post^0,c
  5449  00155A                     l3312:
  5450                           
  5451                           ;Config_Usart.c: 41:     if((n<=20480)&&(n>16384)){
  5452  00155A  0E00               	movlw	0
  5453  00155C  6E07               	movwf	___flge@ff1^0,c
  5454  00155E  0E00               	movlw	0
  5455  001560  6E08               	movwf	(___flge@ff1+1)^0,c
  5456  001562  0EA0               	movlw	160
  5457  001564  6E09               	movwf	(___flge@ff1+2)^0,c
  5458  001566  0E46               	movlw	70
  5459  001568  6E0A               	movwf	(___flge@ff1+3)^0,c
  5460  00156A  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5461  00156E  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5462  001572  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5463  001576  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5464  00157A  EC2A  F013         	call	___flge	;wreg free
  5465  00157E  A0D8               	btfss	status,0,c
  5466  001580  D016               	goto	l3318
  5467  001582  0E00               	movlw	0
  5468  001584  6E07               	movwf	___flge@ff1^0,c
  5469  001586  0E00               	movlw	0
  5470  001588  6E08               	movwf	(___flge@ff1+1)^0,c
  5471  00158A  0E80               	movlw	128
  5472  00158C  6E09               	movwf	(___flge@ff1+2)^0,c
  5473  00158E  0E46               	movlw	70
  5474  001590  6E0A               	movwf	(___flge@ff1+3)^0,c
  5475  001592  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5476  001596  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5477  00159A  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5478  00159E  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5479  0015A2  EC2A  F013         	call	___flge	;wreg free
  5480  0015A6  B0D8               	btfsc	status,0,c
  5481  0015A8  D002               	goto	l3318
  5482                           
  5483                           ;Config_Usart.c: 42:         Post = 0xF4;
  5484  0015AA  0EF4               	movlw	244
  5485  0015AC  6E17               	movwf	ConfigPostcaler@Post^0,c
  5486  0015AE                     l3318:
  5487                           
  5488                           ;Config_Usart.c: 44:     if((n<=24576)&&(n>20480)){
  5489  0015AE  0E00               	movlw	0
  5490  0015B0  6E07               	movwf	___flge@ff1^0,c
  5491  0015B2  0E00               	movlw	0
  5492  0015B4  6E08               	movwf	(___flge@ff1+1)^0,c
  5493  0015B6  0EC0               	movlw	192
  5494  0015B8  6E09               	movwf	(___flge@ff1+2)^0,c
  5495  0015BA  0E46               	movlw	70
  5496  0015BC  6E0A               	movwf	(___flge@ff1+3)^0,c
  5497  0015BE  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5498  0015C2  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5499  0015C6  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5500  0015CA  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5501  0015CE  EC2A  F013         	call	___flge	;wreg free
  5502  0015D2  A0D8               	btfss	status,0,c
  5503  0015D4  D016               	goto	l3324
  5504  0015D6  0E00               	movlw	0
  5505  0015D8  6E07               	movwf	___flge@ff1^0,c
  5506  0015DA  0E00               	movlw	0
  5507  0015DC  6E08               	movwf	(___flge@ff1+1)^0,c
  5508  0015DE  0EA0               	movlw	160
  5509  0015E0  6E09               	movwf	(___flge@ff1+2)^0,c
  5510  0015E2  0E46               	movlw	70
  5511  0015E4  6E0A               	movwf	(___flge@ff1+3)^0,c
  5512  0015E6  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5513  0015EA  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5514  0015EE  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5515  0015F2  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5516  0015F6  EC2A  F013         	call	___flge	;wreg free
  5517  0015FA  B0D8               	btfsc	status,0,c
  5518  0015FC  D002               	goto	l3324
  5519                           
  5520                           ;Config_Usart.c: 45:         Post = 0xF5;
  5521  0015FE  0EF5               	movlw	245
  5522  001600  6E17               	movwf	ConfigPostcaler@Post^0,c
  5523  001602                     l3324:
  5524                           
  5525                           ;Config_Usart.c: 47:     if((n<=28672)&&(n>24576)){
  5526  001602  0E00               	movlw	0
  5527  001604  6E07               	movwf	___flge@ff1^0,c
  5528  001606  0E00               	movlw	0
  5529  001608  6E08               	movwf	(___flge@ff1+1)^0,c
  5530  00160A  0EE0               	movlw	224
  5531  00160C  6E09               	movwf	(___flge@ff1+2)^0,c
  5532  00160E  0E46               	movlw	70
  5533  001610  6E0A               	movwf	(___flge@ff1+3)^0,c
  5534  001612  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5535  001616  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5536  00161A  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5537  00161E  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5538  001622  EC2A  F013         	call	___flge	;wreg free
  5539  001626  A0D8               	btfss	status,0,c
  5540  001628  D016               	goto	l3330
  5541  00162A  0E00               	movlw	0
  5542  00162C  6E07               	movwf	___flge@ff1^0,c
  5543  00162E  0E00               	movlw	0
  5544  001630  6E08               	movwf	(___flge@ff1+1)^0,c
  5545  001632  0EC0               	movlw	192
  5546  001634  6E09               	movwf	(___flge@ff1+2)^0,c
  5547  001636  0E46               	movlw	70
  5548  001638  6E0A               	movwf	(___flge@ff1+3)^0,c
  5549  00163A  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5550  00163E  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5551  001642  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5552  001646  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5553  00164A  EC2A  F013         	call	___flge	;wreg free
  5554  00164E  B0D8               	btfsc	status,0,c
  5555  001650  D002               	goto	l3330
  5556                           
  5557                           ;Config_Usart.c: 48:         Post = 0xF6;
  5558  001652  0EF6               	movlw	246
  5559  001654  6E17               	movwf	ConfigPostcaler@Post^0,c
  5560  001656                     l3330:
  5561                           
  5562                           ;Config_Usart.c: 50:     if((n<=32768)&&(n>28672)){
  5563  001656  0E00               	movlw	0
  5564  001658  6E07               	movwf	___flge@ff1^0,c
  5565  00165A  0E00               	movlw	0
  5566  00165C  6E08               	movwf	(___flge@ff1+1)^0,c
  5567  00165E  0E00               	movlw	0
  5568  001660  6E09               	movwf	(___flge@ff1+2)^0,c
  5569  001662  0E47               	movlw	71
  5570  001664  6E0A               	movwf	(___flge@ff1+3)^0,c
  5571  001666  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5572  00166A  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5573  00166E  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5574  001672  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5575  001676  EC2A  F013         	call	___flge	;wreg free
  5576  00167A  A0D8               	btfss	status,0,c
  5577  00167C  D016               	goto	l3336
  5578  00167E  0E00               	movlw	0
  5579  001680  6E07               	movwf	___flge@ff1^0,c
  5580  001682  0E00               	movlw	0
  5581  001684  6E08               	movwf	(___flge@ff1+1)^0,c
  5582  001686  0EE0               	movlw	224
  5583  001688  6E09               	movwf	(___flge@ff1+2)^0,c
  5584  00168A  0E46               	movlw	70
  5585  00168C  6E0A               	movwf	(___flge@ff1+3)^0,c
  5586  00168E  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5587  001692  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5588  001696  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5589  00169A  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5590  00169E  EC2A  F013         	call	___flge	;wreg free
  5591  0016A2  B0D8               	btfsc	status,0,c
  5592  0016A4  D002               	goto	l3336
  5593                           
  5594                           ;Config_Usart.c: 51:         Post = 0xF7;
  5595  0016A6  0EF7               	movlw	247
  5596  0016A8  6E17               	movwf	ConfigPostcaler@Post^0,c
  5597  0016AA                     l3336:
  5598                           
  5599                           ;Config_Usart.c: 53:     if((n<=36864)&&(n>32768)){
  5600  0016AA  0E00               	movlw	0
  5601  0016AC  6E07               	movwf	___flge@ff1^0,c
  5602  0016AE  0E00               	movlw	0
  5603  0016B0  6E08               	movwf	(___flge@ff1+1)^0,c
  5604  0016B2  0E10               	movlw	16
  5605  0016B4  6E09               	movwf	(___flge@ff1+2)^0,c
  5606  0016B6  0E47               	movlw	71
  5607  0016B8  6E0A               	movwf	(___flge@ff1+3)^0,c
  5608  0016BA  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5609  0016BE  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5610  0016C2  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5611  0016C6  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5612  0016CA  EC2A  F013         	call	___flge	;wreg free
  5613  0016CE  A0D8               	btfss	status,0,c
  5614  0016D0  D016               	goto	l3342
  5615  0016D2  0E00               	movlw	0
  5616  0016D4  6E07               	movwf	___flge@ff1^0,c
  5617  0016D6  0E00               	movlw	0
  5618  0016D8  6E08               	movwf	(___flge@ff1+1)^0,c
  5619  0016DA  0E00               	movlw	0
  5620  0016DC  6E09               	movwf	(___flge@ff1+2)^0,c
  5621  0016DE  0E47               	movlw	71
  5622  0016E0  6E0A               	movwf	(___flge@ff1+3)^0,c
  5623  0016E2  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5624  0016E6  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5625  0016EA  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5626  0016EE  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5627  0016F2  EC2A  F013         	call	___flge	;wreg free
  5628  0016F6  B0D8               	btfsc	status,0,c
  5629  0016F8  D002               	goto	l3342
  5630                           
  5631                           ;Config_Usart.c: 54:         Post = 0xF8;
  5632  0016FA  0EF8               	movlw	248
  5633  0016FC  6E17               	movwf	ConfigPostcaler@Post^0,c
  5634  0016FE                     l3342:
  5635                           
  5636                           ;Config_Usart.c: 56:     if((n<=40960)&&(n>36864)){
  5637  0016FE  0E00               	movlw	0
  5638  001700  6E07               	movwf	___flge@ff1^0,c
  5639  001702  0E00               	movlw	0
  5640  001704  6E08               	movwf	(___flge@ff1+1)^0,c
  5641  001706  0E20               	movlw	32
  5642  001708  6E09               	movwf	(___flge@ff1+2)^0,c
  5643  00170A  0E47               	movlw	71
  5644  00170C  6E0A               	movwf	(___flge@ff1+3)^0,c
  5645  00170E  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5646  001712  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5647  001716  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5648  00171A  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5649  00171E  EC2A  F013         	call	___flge	;wreg free
  5650  001722  A0D8               	btfss	status,0,c
  5651  001724  D016               	goto	l3348
  5652  001726  0E00               	movlw	0
  5653  001728  6E07               	movwf	___flge@ff1^0,c
  5654  00172A  0E00               	movlw	0
  5655  00172C  6E08               	movwf	(___flge@ff1+1)^0,c
  5656  00172E  0E10               	movlw	16
  5657  001730  6E09               	movwf	(___flge@ff1+2)^0,c
  5658  001732  0E47               	movlw	71
  5659  001734  6E0A               	movwf	(___flge@ff1+3)^0,c
  5660  001736  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5661  00173A  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5662  00173E  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5663  001742  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5664  001746  EC2A  F013         	call	___flge	;wreg free
  5665  00174A  B0D8               	btfsc	status,0,c
  5666  00174C  D002               	goto	l3348
  5667                           
  5668                           ;Config_Usart.c: 57:         Post = 0xF9;
  5669  00174E  0EF9               	movlw	249
  5670  001750  6E17               	movwf	ConfigPostcaler@Post^0,c
  5671  001752                     l3348:
  5672                           
  5673                           ;Config_Usart.c: 59:     if((n<=45056)&&(n>40960)){
  5674  001752  0E00               	movlw	0
  5675  001754  6E07               	movwf	___flge@ff1^0,c
  5676  001756  0E00               	movlw	0
  5677  001758  6E08               	movwf	(___flge@ff1+1)^0,c
  5678  00175A  0E30               	movlw	48
  5679  00175C  6E09               	movwf	(___flge@ff1+2)^0,c
  5680  00175E  0E47               	movlw	71
  5681  001760  6E0A               	movwf	(___flge@ff1+3)^0,c
  5682  001762  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5683  001766  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5684  00176A  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5685  00176E  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5686  001772  EC2A  F013         	call	___flge	;wreg free
  5687  001776  A0D8               	btfss	status,0,c
  5688  001778  D016               	goto	l3354
  5689  00177A  0E00               	movlw	0
  5690  00177C  6E07               	movwf	___flge@ff1^0,c
  5691  00177E  0E00               	movlw	0
  5692  001780  6E08               	movwf	(___flge@ff1+1)^0,c
  5693  001782  0E20               	movlw	32
  5694  001784  6E09               	movwf	(___flge@ff1+2)^0,c
  5695  001786  0E47               	movlw	71
  5696  001788  6E0A               	movwf	(___flge@ff1+3)^0,c
  5697  00178A  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5698  00178E  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5699  001792  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5700  001796  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5701  00179A  EC2A  F013         	call	___flge	;wreg free
  5702  00179E  B0D8               	btfsc	status,0,c
  5703  0017A0  D002               	goto	l3354
  5704                           
  5705                           ;Config_Usart.c: 60:         Post = 0xFA;
  5706  0017A2  0EFA               	movlw	250
  5707  0017A4  6E17               	movwf	ConfigPostcaler@Post^0,c
  5708  0017A6                     l3354:
  5709                           
  5710                           ;Config_Usart.c: 62:     if((n<=49152)&&(n>45056)){
  5711  0017A6  0E00               	movlw	0
  5712  0017A8  6E07               	movwf	___flge@ff1^0,c
  5713  0017AA  0E00               	movlw	0
  5714  0017AC  6E08               	movwf	(___flge@ff1+1)^0,c
  5715  0017AE  0E40               	movlw	64
  5716  0017B0  6E09               	movwf	(___flge@ff1+2)^0,c
  5717  0017B2  0E47               	movlw	71
  5718  0017B4  6E0A               	movwf	(___flge@ff1+3)^0,c
  5719  0017B6  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5720  0017BA  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5721  0017BE  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5722  0017C2  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5723  0017C6  EC2A  F013         	call	___flge	;wreg free
  5724  0017CA  A0D8               	btfss	status,0,c
  5725  0017CC  D016               	goto	l3360
  5726  0017CE  0E00               	movlw	0
  5727  0017D0  6E07               	movwf	___flge@ff1^0,c
  5728  0017D2  0E00               	movlw	0
  5729  0017D4  6E08               	movwf	(___flge@ff1+1)^0,c
  5730  0017D6  0E30               	movlw	48
  5731  0017D8  6E09               	movwf	(___flge@ff1+2)^0,c
  5732  0017DA  0E47               	movlw	71
  5733  0017DC  6E0A               	movwf	(___flge@ff1+3)^0,c
  5734  0017DE  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5735  0017E2  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5736  0017E6  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5737  0017EA  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5738  0017EE  EC2A  F013         	call	___flge	;wreg free
  5739  0017F2  B0D8               	btfsc	status,0,c
  5740  0017F4  D002               	goto	l3360
  5741                           
  5742                           ;Config_Usart.c: 63:         Post = 0xFB;
  5743  0017F6  0EFB               	movlw	251
  5744  0017F8  6E17               	movwf	ConfigPostcaler@Post^0,c
  5745  0017FA                     l3360:
  5746                           
  5747                           ;Config_Usart.c: 65:     if((n<=50000)&&(n>45056)){
  5748  0017FA  0E00               	movlw	0
  5749  0017FC  6E07               	movwf	___flge@ff1^0,c
  5750  0017FE  0E50               	movlw	80
  5751  001800  6E08               	movwf	(___flge@ff1+1)^0,c
  5752  001802  0E43               	movlw	67
  5753  001804  6E09               	movwf	(___flge@ff1+2)^0,c
  5754  001806  0E47               	movlw	71
  5755  001808  6E0A               	movwf	(___flge@ff1+3)^0,c
  5756  00180A  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5757  00180E  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5758  001812  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5759  001816  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5760  00181A  EC2A  F013         	call	___flge	;wreg free
  5761  00181E  A0D8               	btfss	status,0,c
  5762  001820  D016               	goto	l743
  5763  001822  0E00               	movlw	0
  5764  001824  6E07               	movwf	___flge@ff1^0,c
  5765  001826  0E00               	movlw	0
  5766  001828  6E08               	movwf	(___flge@ff1+1)^0,c
  5767  00182A  0E30               	movlw	48
  5768  00182C  6E09               	movwf	(___flge@ff1+2)^0,c
  5769  00182E  0E47               	movlw	71
  5770  001830  6E0A               	movwf	(___flge@ff1+3)^0,c
  5771  001832  C013  F00B         	movff	ConfigPostcaler@n,___flge@ff2
  5772  001836  C014  F00C         	movff	ConfigPostcaler@n+1,___flge@ff2+1
  5773  00183A  C015  F00D         	movff	ConfigPostcaler@n+2,___flge@ff2+2
  5774  00183E  C016  F00E         	movff	ConfigPostcaler@n+3,___flge@ff2+3
  5775  001842  EC2A  F013         	call	___flge	;wreg free
  5776  001846  B0D8               	btfsc	status,0,c
  5777  001848  D002               	goto	l743
  5778                           
  5779                           ;Config_Usart.c: 66:         Post = 0xFC;
  5780  00184A  0EFC               	movlw	252
  5781  00184C  6E17               	movwf	ConfigPostcaler@Post^0,c
  5782  00184E                     l743:
  5783                           
  5784                           ;Config_Usart.c: 68:     return Post;
  5785  00184E  5017               	movf	ConfigPostcaler@Post^0,w,c
  5786  001850  0012               	return		;funcret
  5787  001852                     __end_of_ConfigPostcaler:
  5788                           	callstack 0
  5789                           
  5790 ;; *************** function ___flge *****************
  5791 ;; Defined at:
  5792 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  ff1             4    6[COMRAM] unsigned char 
  5795 ;;  ff2             4   10[COMRAM] unsigned char 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;		None               void
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/1
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5807 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5809 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5810 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5811 ;;Total ram usage:       12 bytes
  5812 ;; Hardware stack levels used: 1
  5813 ;; Hardware stack levels required when called: 5
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_ConfigPostcaler
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           	psect	text31
  5822  002654                     __ptext31:
  5823                           	callstack 0
  5824  002654                     ___flge:
  5825                           	callstack 24
  5826                           
  5827                           ;incstack = 0
  5828  002654  0E00               	movlw	0
  5829  002656  1407               	andwf	___flge@ff1^0,w,c
  5830  002658  6E0F               	movwf	??___flge^0,c
  5831  00265A  0E00               	movlw	0
  5832  00265C  1408               	andwf	(___flge@ff1+1)^0,w,c
  5833  00265E  6E10               	movwf	(??___flge+1)^0,c
  5834  002660  0E80               	movlw	128
  5835  002662  1409               	andwf	(___flge@ff1+2)^0,w,c
  5836  002664  6E11               	movwf	(??___flge+2)^0,c
  5837  002666  0E7F               	movlw	127
  5838  002668  140A               	andwf	(___flge@ff1+3)^0,w,c
  5839  00266A  6E12               	movwf	(??___flge+3)^0,c
  5840  00266C  500F               	movf	??___flge^0,w,c
  5841  00266E  1010               	iorwf	(??___flge+1)^0,w,c
  5842  002670  1011               	iorwf	(??___flge+2)^0,w,c
  5843  002672  1012               	iorwf	(??___flge+3)^0,w,c
  5844  002674  A4D8               	btfss	status,2,c
  5845  002676  D008               	goto	l3110
  5846  002678  0E00               	movlw	0
  5847  00267A  6E07               	movwf	___flge@ff1^0,c
  5848  00267C  0E00               	movlw	0
  5849  00267E  6E08               	movwf	(___flge@ff1+1)^0,c
  5850  002680  0E00               	movlw	0
  5851  002682  6E09               	movwf	(___flge@ff1+2)^0,c
  5852  002684  0E00               	movlw	0
  5853  002686  6E0A               	movwf	(___flge@ff1+3)^0,c
  5854  002688                     l3110:
  5855  002688  0E00               	movlw	0
  5856  00268A  140B               	andwf	___flge@ff2^0,w,c
  5857  00268C  6E0F               	movwf	??___flge^0,c
  5858  00268E  0E00               	movlw	0
  5859  002690  140C               	andwf	(___flge@ff2+1)^0,w,c
  5860  002692  6E10               	movwf	(??___flge+1)^0,c
  5861  002694  0E80               	movlw	128
  5862  002696  140D               	andwf	(___flge@ff2+2)^0,w,c
  5863  002698  6E11               	movwf	(??___flge+2)^0,c
  5864  00269A  0E7F               	movlw	127
  5865  00269C  140E               	andwf	(___flge@ff2+3)^0,w,c
  5866  00269E  6E12               	movwf	(??___flge+3)^0,c
  5867  0026A0  500F               	movf	??___flge^0,w,c
  5868  0026A2  1010               	iorwf	(??___flge+1)^0,w,c
  5869  0026A4  1011               	iorwf	(??___flge+2)^0,w,c
  5870  0026A6  1012               	iorwf	(??___flge+3)^0,w,c
  5871  0026A8  A4D8               	btfss	status,2,c
  5872  0026AA  D008               	goto	l3114
  5873  0026AC  0E00               	movlw	0
  5874  0026AE  6E0B               	movwf	___flge@ff2^0,c
  5875  0026B0  0E00               	movlw	0
  5876  0026B2  6E0C               	movwf	(___flge@ff2+1)^0,c
  5877  0026B4  0E00               	movlw	0
  5878  0026B6  6E0D               	movwf	(___flge@ff2+2)^0,c
  5879  0026B8  0E00               	movlw	0
  5880  0026BA  6E0E               	movwf	(___flge@ff2+3)^0,c
  5881  0026BC                     l3114:
  5882  0026BC  AE0A               	btfss	(___flge@ff1+3)^0,7,c
  5883  0026BE  D009               	goto	l3118
  5884  0026C0  6C07               	negf	___flge@ff1^0,c
  5885  0026C2  1E08               	comf	(___flge@ff1+1)^0,f,c
  5886  0026C4  B0D8               	btfsc	status,0,c
  5887  0026C6  2A08               	incf	(___flge@ff1+1)^0,f,c
  5888  0026C8  1E09               	comf	(___flge@ff1+2)^0,f,c
  5889  0026CA  B0D8               	btfsc	status,0,c
  5890  0026CC  2A09               	incf	(___flge@ff1+2)^0,f,c
  5891  0026CE  0E80               	movlw	128
  5892  0026D0  560A               	subfwb	(___flge@ff1+3)^0,f,c
  5893  0026D2                     l3118:
  5894  0026D2  AE0E               	btfss	(___flge@ff2+3)^0,7,c
  5895  0026D4  D009               	goto	l1092
  5896  0026D6  6C0B               	negf	___flge@ff2^0,c
  5897  0026D8  1E0C               	comf	(___flge@ff2+1)^0,f,c
  5898  0026DA  B0D8               	btfsc	status,0,c
  5899  0026DC  2A0C               	incf	(___flge@ff2+1)^0,f,c
  5900  0026DE  1E0D               	comf	(___flge@ff2+2)^0,f,c
  5901  0026E0  B0D8               	btfsc	status,0,c
  5902  0026E2  2A0D               	incf	(___flge@ff2+2)^0,f,c
  5903  0026E4  0E80               	movlw	128
  5904  0026E6  560E               	subfwb	(___flge@ff2+3)^0,f,c
  5905  0026E8                     l1092:
  5906  0026E8  0E00               	movlw	0
  5907  0026EA  1A07               	xorwf	___flge@ff1^0,f,c
  5908  0026EC  0E00               	movlw	0
  5909  0026EE  1A08               	xorwf	(___flge@ff1+1)^0,f,c
  5910  0026F0  0E00               	movlw	0
  5911  0026F2  1A09               	xorwf	(___flge@ff1+2)^0,f,c
  5912  0026F4  0E80               	movlw	128
  5913  0026F6  1A0A               	xorwf	(___flge@ff1+3)^0,f,c
  5914  0026F8  0E00               	movlw	0
  5915  0026FA  1A0B               	xorwf	___flge@ff2^0,f,c
  5916  0026FC  0E00               	movlw	0
  5917  0026FE  1A0C               	xorwf	(___flge@ff2+1)^0,f,c
  5918  002700  0E00               	movlw	0
  5919  002702  1A0D               	xorwf	(___flge@ff2+2)^0,f,c
  5920  002704  0E80               	movlw	128
  5921  002706  1A0E               	xorwf	(___flge@ff2+3)^0,f,c
  5922  002708  500B               	movf	___flge@ff2^0,w,c
  5923  00270A  5C07               	subwf	___flge@ff1^0,w,c
  5924  00270C  500C               	movf	(___flge@ff2+1)^0,w,c
  5925  00270E  5808               	subwfb	(___flge@ff1+1)^0,w,c
  5926  002710  500D               	movf	(___flge@ff2+2)^0,w,c
  5927  002712  5809               	subwfb	(___flge@ff1+2)^0,w,c
  5928  002714  500E               	movf	(___flge@ff2+3)^0,w,c
  5929  002716  580A               	subwfb	(___flge@ff1+3)^0,w,c
  5930  002718  B0D8               	btfsc	status,0,c
  5931  00271A  D002               	goto	l3124
  5932  00271C  90D8               	bcf	status,0,c
  5933  00271E  0012               	return	
  5934  002720                     l3124:
  5935  002720  80D8               	bsf	status,0,c
  5936  002722  0012               	return		;funcret
  5937  002724                     __end_of___flge:
  5938                           	callstack 0
  5939                           
  5940 ;; *************** function _ConfigCont *****************
  5941 ;; Defined at:
  5942 ;;		line 72 in file "Config_Usart.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  Dato            4   41[COMRAM] float 
  5945 ;;  Post            1   45[COMRAM] unsigned char 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  contador        1   46[COMRAM] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      unsigned char 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 3F/1
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5957 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5960 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5961 ;;Total ram usage:        6 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; Hardware stack levels required when called: 6
  5964 ;; This function calls:
  5965 ;;		___fldiv
  5966 ;;		___fltol
  5967 ;; This function is called by:
  5968 ;;		_main
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text32
  5973  001852                     __ptext32:
  5974                           	callstack 0
  5975  001852                     _ConfigCont:
  5976                           	callstack 24
  5977                           
  5978                           ; BSR set to: 1
  5979                           ;Config_Usart.c: 73:     char contador = 0;
  5980                           
  5981                           ;incstack = 0
  5982  001852  0E00               	movlw	0
  5983  001854  6E2F               	movwf	ConfigCont@contador^0,c
  5984                           
  5985                           ; BSR set to: 1
  5986                           ;Config_Usart.c: 74:     if(Post == 0xF0){
  5987  001856  0EF0               	movlw	240
  5988  001858  182E               	xorwf	ConfigCont@Post^0,w,c
  5989  00185A  A4D8               	btfss	status,2,c
  5990  00185C  D01E               	goto	l3374
  5991                           
  5992                           ; BSR set to: 1
  5993                           ;Config_Usart.c: 75:         contador = Dato/16;
  5994  00185E  0E00               	movlw	0
  5995  001860  6E0B               	movwf	___fldiv@a^0,c
  5996  001862  0E00               	movlw	0
  5997  001864  6E0C               	movwf	(___fldiv@a+1)^0,c
  5998  001866  0E80               	movlw	128
  5999  001868  6E0D               	movwf	(___fldiv@a+2)^0,c
  6000  00186A  0E41               	movlw	65
  6001  00186C  6E0E               	movwf	(___fldiv@a+3)^0,c
  6002  00186E  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6003  001872  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6004  001876  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6005  00187A  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6006  00187E  EC6D  F00F         	call	___fldiv	;wreg free
  6007  001882  C007  F020         	movff	?___fldiv,___fltol@f1
  6008  001886  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6009  00188A  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6010  00188E  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6011  001892  EC92  F013         	call	___fltol	;wreg free
  6012  001896  5020               	movf	?___fltol^0,w,c
  6013  001898  6E2F               	movwf	ConfigCont@contador^0,c
  6014  00189A                     l3374:
  6015                           
  6016                           ;Config_Usart.c: 77:     if(Post == 0xF1){
  6017  00189A  0EF1               	movlw	241
  6018  00189C  182E               	xorwf	ConfigCont@Post^0,w,c
  6019  00189E  A4D8               	btfss	status,2,c
  6020  0018A0  D01E               	goto	l3378
  6021                           
  6022                           ;Config_Usart.c: 78:         contador = Dato/32;
  6023  0018A2  0E00               	movlw	0
  6024  0018A4  6E0B               	movwf	___fldiv@a^0,c
  6025  0018A6  0E00               	movlw	0
  6026  0018A8  6E0C               	movwf	(___fldiv@a+1)^0,c
  6027  0018AA  0E00               	movlw	0
  6028  0018AC  6E0D               	movwf	(___fldiv@a+2)^0,c
  6029  0018AE  0E42               	movlw	66
  6030  0018B0  6E0E               	movwf	(___fldiv@a+3)^0,c
  6031  0018B2  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6032  0018B6  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6033  0018BA  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6034  0018BE  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6035  0018C2  EC6D  F00F         	call	___fldiv	;wreg free
  6036  0018C6  C007  F020         	movff	?___fldiv,___fltol@f1
  6037  0018CA  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6038  0018CE  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6039  0018D2  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6040  0018D6  EC92  F013         	call	___fltol	;wreg free
  6041  0018DA  5020               	movf	?___fltol^0,w,c
  6042  0018DC  6E2F               	movwf	ConfigCont@contador^0,c
  6043  0018DE                     l3378:
  6044                           
  6045                           ;Config_Usart.c: 80:     if(Post == 0xF2){
  6046  0018DE  0EF2               	movlw	242
  6047  0018E0  182E               	xorwf	ConfigCont@Post^0,w,c
  6048  0018E2  A4D8               	btfss	status,2,c
  6049  0018E4  D01E               	goto	l3382
  6050                           
  6051                           ;Config_Usart.c: 81:         contador = Dato/48;
  6052  0018E6  0E00               	movlw	0
  6053  0018E8  6E0B               	movwf	___fldiv@a^0,c
  6054  0018EA  0E00               	movlw	0
  6055  0018EC  6E0C               	movwf	(___fldiv@a+1)^0,c
  6056  0018EE  0E40               	movlw	64
  6057  0018F0  6E0D               	movwf	(___fldiv@a+2)^0,c
  6058  0018F2  0E42               	movlw	66
  6059  0018F4  6E0E               	movwf	(___fldiv@a+3)^0,c
  6060  0018F6  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6061  0018FA  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6062  0018FE  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6063  001902  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6064  001906  EC6D  F00F         	call	___fldiv	;wreg free
  6065  00190A  C007  F020         	movff	?___fldiv,___fltol@f1
  6066  00190E  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6067  001912  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6068  001916  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6069  00191A  EC92  F013         	call	___fltol	;wreg free
  6070  00191E  5020               	movf	?___fltol^0,w,c
  6071  001920  6E2F               	movwf	ConfigCont@contador^0,c
  6072  001922                     l3382:
  6073                           
  6074                           ;Config_Usart.c: 83:     if(Post == 0xF3){
  6075  001922  0EF3               	movlw	243
  6076  001924  182E               	xorwf	ConfigCont@Post^0,w,c
  6077  001926  A4D8               	btfss	status,2,c
  6078  001928  D01E               	goto	l3386
  6079                           
  6080                           ;Config_Usart.c: 84:         contador = Dato/64;
  6081  00192A  0E00               	movlw	0
  6082  00192C  6E0B               	movwf	___fldiv@a^0,c
  6083  00192E  0E00               	movlw	0
  6084  001930  6E0C               	movwf	(___fldiv@a+1)^0,c
  6085  001932  0E80               	movlw	128
  6086  001934  6E0D               	movwf	(___fldiv@a+2)^0,c
  6087  001936  0E42               	movlw	66
  6088  001938  6E0E               	movwf	(___fldiv@a+3)^0,c
  6089  00193A  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6090  00193E  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6091  001942  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6092  001946  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6093  00194A  EC6D  F00F         	call	___fldiv	;wreg free
  6094  00194E  C007  F020         	movff	?___fldiv,___fltol@f1
  6095  001952  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6096  001956  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6097  00195A  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6098  00195E  EC92  F013         	call	___fltol	;wreg free
  6099  001962  5020               	movf	?___fltol^0,w,c
  6100  001964  6E2F               	movwf	ConfigCont@contador^0,c
  6101  001966                     l3386:
  6102                           
  6103                           ;Config_Usart.c: 86:     if(Post == 0xF4){
  6104  001966  0EF4               	movlw	244
  6105  001968  182E               	xorwf	ConfigCont@Post^0,w,c
  6106  00196A  A4D8               	btfss	status,2,c
  6107  00196C  D01E               	goto	l3390
  6108                           
  6109                           ;Config_Usart.c: 87:         contador = Dato/80;
  6110  00196E  0E00               	movlw	0
  6111  001970  6E0B               	movwf	___fldiv@a^0,c
  6112  001972  0E00               	movlw	0
  6113  001974  6E0C               	movwf	(___fldiv@a+1)^0,c
  6114  001976  0EA0               	movlw	160
  6115  001978  6E0D               	movwf	(___fldiv@a+2)^0,c
  6116  00197A  0E42               	movlw	66
  6117  00197C  6E0E               	movwf	(___fldiv@a+3)^0,c
  6118  00197E  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6119  001982  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6120  001986  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6121  00198A  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6122  00198E  EC6D  F00F         	call	___fldiv	;wreg free
  6123  001992  C007  F020         	movff	?___fldiv,___fltol@f1
  6124  001996  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6125  00199A  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6126  00199E  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6127  0019A2  EC92  F013         	call	___fltol	;wreg free
  6128  0019A6  5020               	movf	?___fltol^0,w,c
  6129  0019A8  6E2F               	movwf	ConfigCont@contador^0,c
  6130  0019AA                     l3390:
  6131                           
  6132                           ;Config_Usart.c: 89:     if(Post == 0xF5){
  6133  0019AA  0EF5               	movlw	245
  6134  0019AC  182E               	xorwf	ConfigCont@Post^0,w,c
  6135  0019AE  A4D8               	btfss	status,2,c
  6136  0019B0  D01E               	goto	l3394
  6137                           
  6138                           ;Config_Usart.c: 90:         contador = Dato/96;
  6139  0019B2  0E00               	movlw	0
  6140  0019B4  6E0B               	movwf	___fldiv@a^0,c
  6141  0019B6  0E00               	movlw	0
  6142  0019B8  6E0C               	movwf	(___fldiv@a+1)^0,c
  6143  0019BA  0EC0               	movlw	192
  6144  0019BC  6E0D               	movwf	(___fldiv@a+2)^0,c
  6145  0019BE  0E42               	movlw	66
  6146  0019C0  6E0E               	movwf	(___fldiv@a+3)^0,c
  6147  0019C2  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6148  0019C6  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6149  0019CA  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6150  0019CE  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6151  0019D2  EC6D  F00F         	call	___fldiv	;wreg free
  6152  0019D6  C007  F020         	movff	?___fldiv,___fltol@f1
  6153  0019DA  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6154  0019DE  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6155  0019E2  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6156  0019E6  EC92  F013         	call	___fltol	;wreg free
  6157  0019EA  5020               	movf	?___fltol^0,w,c
  6158  0019EC  6E2F               	movwf	ConfigCont@contador^0,c
  6159  0019EE                     l3394:
  6160                           
  6161                           ;Config_Usart.c: 92:     if(Post == 0xF6){
  6162  0019EE  0EF6               	movlw	246
  6163  0019F0  182E               	xorwf	ConfigCont@Post^0,w,c
  6164  0019F2  A4D8               	btfss	status,2,c
  6165  0019F4  D01E               	goto	l3398
  6166                           
  6167                           ;Config_Usart.c: 93:         contador = Dato/112;
  6168  0019F6  0E00               	movlw	0
  6169  0019F8  6E0B               	movwf	___fldiv@a^0,c
  6170  0019FA  0E00               	movlw	0
  6171  0019FC  6E0C               	movwf	(___fldiv@a+1)^0,c
  6172  0019FE  0EE0               	movlw	224
  6173  001A00  6E0D               	movwf	(___fldiv@a+2)^0,c
  6174  001A02  0E42               	movlw	66
  6175  001A04  6E0E               	movwf	(___fldiv@a+3)^0,c
  6176  001A06  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6177  001A0A  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6178  001A0E  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6179  001A12  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6180  001A16  EC6D  F00F         	call	___fldiv	;wreg free
  6181  001A1A  C007  F020         	movff	?___fldiv,___fltol@f1
  6182  001A1E  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6183  001A22  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6184  001A26  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6185  001A2A  EC92  F013         	call	___fltol	;wreg free
  6186  001A2E  5020               	movf	?___fltol^0,w,c
  6187  001A30  6E2F               	movwf	ConfigCont@contador^0,c
  6188  001A32                     l3398:
  6189                           
  6190                           ;Config_Usart.c: 95:     if(Post == 0xF7){
  6191  001A32  0EF7               	movlw	247
  6192  001A34  182E               	xorwf	ConfigCont@Post^0,w,c
  6193  001A36  A4D8               	btfss	status,2,c
  6194  001A38  D01E               	goto	l3402
  6195                           
  6196                           ;Config_Usart.c: 96:         contador = Dato/128;
  6197  001A3A  0E00               	movlw	0
  6198  001A3C  6E0B               	movwf	___fldiv@a^0,c
  6199  001A3E  0E00               	movlw	0
  6200  001A40  6E0C               	movwf	(___fldiv@a+1)^0,c
  6201  001A42  0E00               	movlw	0
  6202  001A44  6E0D               	movwf	(___fldiv@a+2)^0,c
  6203  001A46  0E43               	movlw	67
  6204  001A48  6E0E               	movwf	(___fldiv@a+3)^0,c
  6205  001A4A  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6206  001A4E  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6207  001A52  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6208  001A56  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6209  001A5A  EC6D  F00F         	call	___fldiv	;wreg free
  6210  001A5E  C007  F020         	movff	?___fldiv,___fltol@f1
  6211  001A62  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6212  001A66  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6213  001A6A  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6214  001A6E  EC92  F013         	call	___fltol	;wreg free
  6215  001A72  5020               	movf	?___fltol^0,w,c
  6216  001A74  6E2F               	movwf	ConfigCont@contador^0,c
  6217  001A76                     l3402:
  6218                           
  6219                           ;Config_Usart.c: 98:     if(Post == 0xF8){
  6220  001A76  0EF8               	movlw	248
  6221  001A78  182E               	xorwf	ConfigCont@Post^0,w,c
  6222  001A7A  A4D8               	btfss	status,2,c
  6223  001A7C  D01E               	goto	l3406
  6224                           
  6225                           ;Config_Usart.c: 99:         contador = Dato/144;
  6226  001A7E  0E00               	movlw	0
  6227  001A80  6E0B               	movwf	___fldiv@a^0,c
  6228  001A82  0E00               	movlw	0
  6229  001A84  6E0C               	movwf	(___fldiv@a+1)^0,c
  6230  001A86  0E10               	movlw	16
  6231  001A88  6E0D               	movwf	(___fldiv@a+2)^0,c
  6232  001A8A  0E43               	movlw	67
  6233  001A8C  6E0E               	movwf	(___fldiv@a+3)^0,c
  6234  001A8E  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6235  001A92  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6236  001A96  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6237  001A9A  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6238  001A9E  EC6D  F00F         	call	___fldiv	;wreg free
  6239  001AA2  C007  F020         	movff	?___fldiv,___fltol@f1
  6240  001AA6  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6241  001AAA  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6242  001AAE  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6243  001AB2  EC92  F013         	call	___fltol	;wreg free
  6244  001AB6  5020               	movf	?___fltol^0,w,c
  6245  001AB8  6E2F               	movwf	ConfigCont@contador^0,c
  6246  001ABA                     l3406:
  6247                           
  6248                           ;Config_Usart.c: 101:     if(Post == 0xF9){
  6249  001ABA  0EF9               	movlw	249
  6250  001ABC  182E               	xorwf	ConfigCont@Post^0,w,c
  6251  001ABE  A4D8               	btfss	status,2,c
  6252  001AC0  D01E               	goto	l3410
  6253                           
  6254                           ;Config_Usart.c: 102:         contador = Dato/160;
  6255  001AC2  0E00               	movlw	0
  6256  001AC4  6E0B               	movwf	___fldiv@a^0,c
  6257  001AC6  0E00               	movlw	0
  6258  001AC8  6E0C               	movwf	(___fldiv@a+1)^0,c
  6259  001ACA  0E20               	movlw	32
  6260  001ACC  6E0D               	movwf	(___fldiv@a+2)^0,c
  6261  001ACE  0E43               	movlw	67
  6262  001AD0  6E0E               	movwf	(___fldiv@a+3)^0,c
  6263  001AD2  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6264  001AD6  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6265  001ADA  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6266  001ADE  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6267  001AE2  EC6D  F00F         	call	___fldiv	;wreg free
  6268  001AE6  C007  F020         	movff	?___fldiv,___fltol@f1
  6269  001AEA  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6270  001AEE  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6271  001AF2  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6272  001AF6  EC92  F013         	call	___fltol	;wreg free
  6273  001AFA  5020               	movf	?___fltol^0,w,c
  6274  001AFC  6E2F               	movwf	ConfigCont@contador^0,c
  6275  001AFE                     l3410:
  6276                           
  6277                           ;Config_Usart.c: 104:     if(Post == 0xFA){
  6278  001AFE  0EFA               	movlw	250
  6279  001B00  182E               	xorwf	ConfigCont@Post^0,w,c
  6280  001B02  A4D8               	btfss	status,2,c
  6281  001B04  D01E               	goto	l3414
  6282                           
  6283                           ;Config_Usart.c: 105:         contador = Dato/176;
  6284  001B06  0E00               	movlw	0
  6285  001B08  6E0B               	movwf	___fldiv@a^0,c
  6286  001B0A  0E00               	movlw	0
  6287  001B0C  6E0C               	movwf	(___fldiv@a+1)^0,c
  6288  001B0E  0E30               	movlw	48
  6289  001B10  6E0D               	movwf	(___fldiv@a+2)^0,c
  6290  001B12  0E43               	movlw	67
  6291  001B14  6E0E               	movwf	(___fldiv@a+3)^0,c
  6292  001B16  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6293  001B1A  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6294  001B1E  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6295  001B22  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6296  001B26  EC6D  F00F         	call	___fldiv	;wreg free
  6297  001B2A  C007  F020         	movff	?___fldiv,___fltol@f1
  6298  001B2E  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6299  001B32  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6300  001B36  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6301  001B3A  EC92  F013         	call	___fltol	;wreg free
  6302  001B3E  5020               	movf	?___fltol^0,w,c
  6303  001B40  6E2F               	movwf	ConfigCont@contador^0,c
  6304  001B42                     l3414:
  6305                           
  6306                           ;Config_Usart.c: 107:     if(Post == 0xFB){
  6307  001B42  0EFB               	movlw	251
  6308  001B44  182E               	xorwf	ConfigCont@Post^0,w,c
  6309  001B46  A4D8               	btfss	status,2,c
  6310  001B48  D01E               	goto	l3418
  6311                           
  6312                           ;Config_Usart.c: 108:         contador = Dato/192;
  6313  001B4A  0E00               	movlw	0
  6314  001B4C  6E0B               	movwf	___fldiv@a^0,c
  6315  001B4E  0E00               	movlw	0
  6316  001B50  6E0C               	movwf	(___fldiv@a+1)^0,c
  6317  001B52  0E40               	movlw	64
  6318  001B54  6E0D               	movwf	(___fldiv@a+2)^0,c
  6319  001B56  0E43               	movlw	67
  6320  001B58  6E0E               	movwf	(___fldiv@a+3)^0,c
  6321  001B5A  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6322  001B5E  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6323  001B62  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6324  001B66  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6325  001B6A  EC6D  F00F         	call	___fldiv	;wreg free
  6326  001B6E  C007  F020         	movff	?___fldiv,___fltol@f1
  6327  001B72  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6328  001B76  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6329  001B7A  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6330  001B7E  EC92  F013         	call	___fltol	;wreg free
  6331  001B82  5020               	movf	?___fltol^0,w,c
  6332  001B84  6E2F               	movwf	ConfigCont@contador^0,c
  6333  001B86                     l3418:
  6334                           
  6335                           ;Config_Usart.c: 110:     if(Post == 0xFC){
  6336  001B86  0EFC               	movlw	252
  6337  001B88  182E               	xorwf	ConfigCont@Post^0,w,c
  6338  001B8A  A4D8               	btfss	status,2,c
  6339  001B8C  D01E               	goto	l3422
  6340                           
  6341                           ;Config_Usart.c: 111:         contador = Dato/208;
  6342  001B8E  0E00               	movlw	0
  6343  001B90  6E0B               	movwf	___fldiv@a^0,c
  6344  001B92  0E00               	movlw	0
  6345  001B94  6E0C               	movwf	(___fldiv@a+1)^0,c
  6346  001B96  0E50               	movlw	80
  6347  001B98  6E0D               	movwf	(___fldiv@a+2)^0,c
  6348  001B9A  0E43               	movlw	67
  6349  001B9C  6E0E               	movwf	(___fldiv@a+3)^0,c
  6350  001B9E  C02A  F007         	movff	ConfigCont@Dato,___fldiv@b
  6351  001BA2  C02B  F008         	movff	ConfigCont@Dato+1,___fldiv@b+1
  6352  001BA6  C02C  F009         	movff	ConfigCont@Dato+2,___fldiv@b+2
  6353  001BAA  C02D  F00A         	movff	ConfigCont@Dato+3,___fldiv@b+3
  6354  001BAE  EC6D  F00F         	call	___fldiv	;wreg free
  6355  001BB2  C007  F020         	movff	?___fldiv,___fltol@f1
  6356  001BB6  C008  F021         	movff	?___fldiv+1,___fltol@f1+1
  6357  001BBA  C009  F022         	movff	?___fldiv+2,___fltol@f1+2
  6358  001BBE  C00A  F023         	movff	?___fldiv+3,___fltol@f1+3
  6359  001BC2  EC92  F013         	call	___fltol	;wreg free
  6360  001BC6  5020               	movf	?___fltol^0,w,c
  6361  001BC8  6E2F               	movwf	ConfigCont@contador^0,c
  6362  001BCA                     l3422:
  6363                           
  6364                           ;Config_Usart.c: 113:     return contador;
  6365  001BCA  502F               	movf	ConfigCont@contador^0,w,c
  6366  001BCC  0012               	return		;funcret
  6367  001BCE                     __end_of_ConfigCont:
  6368                           	callstack 0
  6369                           
  6370 ;; *************** function ___fltol *****************
  6371 ;; Defined at:
  6372 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  f1              4   31[COMRAM] unsigned char 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  exp1            1   40[COMRAM] unsigned char 
  6377 ;;  sign1           1   39[COMRAM] unsigned char 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  4   31[COMRAM] long 
  6380 ;; Registers used:
  6381 ;;		wreg, status,2, status,0
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/1
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6389 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6390 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6391 ;;Total ram usage:       10 bytes
  6392 ;; Hardware stack levels used: 1
  6393 ;; Hardware stack levels required when called: 5
  6394 ;; This function calls:
  6395 ;;		Nothing
  6396 ;; This function is called by:
  6397 ;;		_ConfigCont
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text33
  6402  002724                     __ptext33:
  6403                           	callstack 0
  6404  002724                     ___fltol:
  6405                           	callstack 24
  6406                           
  6407                           ;incstack = 0
  6408  002724  3422               	rlcf	(___fltol@f1+2)^0,w,c
  6409  002726  3423               	rlcf	(___fltol@f1+3)^0,w,c
  6410  002728  6E29               	movwf	___fltol@exp1^0,c
  6411  00272A  5029               	movf	___fltol@exp1^0,w,c
  6412  00272C  A4D8               	btfss	status,2,c
  6413  00272E  D009               	goto	l3134
  6414  002730                     u2430:
  6415  002730  0E00               	movlw	0
  6416  002732  6E20               	movwf	?___fltol^0,c
  6417  002734  0E00               	movlw	0
  6418  002736  6E21               	movwf	(?___fltol+1)^0,c
  6419  002738  0E00               	movlw	0
  6420  00273A  6E22               	movwf	(?___fltol+2)^0,c
  6421  00273C  0E00               	movlw	0
  6422  00273E  6E23               	movwf	(?___fltol+3)^0,c
  6423  002740  0012               	return	
  6424  002742                     l3134:
  6425  002742  C020  F024         	movff	___fltol@f1,??___fltol
  6426  002746  C021  F025         	movff	___fltol@f1+1,??___fltol+1
  6427  00274A  C022  F026         	movff	___fltol@f1+2,??___fltol+2
  6428  00274E  C023  F027         	movff	___fltol@f1+3,??___fltol+3
  6429  002752  0E20               	movlw	32
  6430  002754  D005               	goto	u2440
  6431  002756                     u2445:
  6432  002756  90D8               	bcf	status,0,c
  6433  002758  3227               	rrcf	(??___fltol+3)^0,f,c
  6434  00275A  3226               	rrcf	(??___fltol+2)^0,f,c
  6435  00275C  3225               	rrcf	(??___fltol+1)^0,f,c
  6436  00275E  3224               	rrcf	??___fltol^0,f,c
  6437  002760                     u2440:
  6438  002760  2EE8               	decfsz	wreg,f,c
  6439  002762  D7F9               	goto	u2445
  6440  002764  5024               	movf	??___fltol^0,w,c
  6441  002766  6E28               	movwf	___fltol@sign1^0,c
  6442  002768  8E22               	bsf	(___fltol@f1+2)^0,7,c
  6443  00276A  0EFF               	movlw	255
  6444  00276C  1620               	andwf	___fltol@f1^0,f,c
  6445  00276E  0EFF               	movlw	255
  6446  002770  1621               	andwf	(___fltol@f1+1)^0,f,c
  6447  002772  0EFF               	movlw	255
  6448  002774  1622               	andwf	(___fltol@f1+2)^0,f,c
  6449  002776  0E00               	movlw	0
  6450  002778  1623               	andwf	(___fltol@f1+3)^0,f,c
  6451  00277A  0E96               	movlw	150
  6452  00277C  5E29               	subwf	___fltol@exp1^0,f,c
  6453  00277E  AE29               	btfss	___fltol@exp1^0,7,c
  6454  002780  D00D               	goto	l3154
  6455  002782  5029               	movf	___fltol@exp1^0,w,c
  6456  002784  0A80               	xorlw	128
  6457  002786  0F97               	addlw	151
  6458  002788  A0D8               	btfss	status,0,c
  6459  00278A  D7D2               	goto	u2430
  6460  00278C                     l3150:
  6461  00278C  90D8               	bcf	status,0,c
  6462  00278E  3223               	rrcf	(___fltol@f1+3)^0,f,c
  6463  002790  3222               	rrcf	(___fltol@f1+2)^0,f,c
  6464  002792  3221               	rrcf	(___fltol@f1+1)^0,f,c
  6465  002794  3220               	rrcf	___fltol@f1^0,f,c
  6466  002796  3E29               	incfsz	___fltol@exp1^0,f,c
  6467  002798  D7F9               	goto	l3150
  6468  00279A  D00D               	goto	u2480
  6469  00279C                     l3154:
  6470  00279C  0E1F               	movlw	31
  6471  00279E  6429               	cpfsgt	___fltol@exp1^0,c
  6472  0027A0  D007               	goto	l3162
  6473  0027A2  D7C6               	goto	u2430
  6474  0027A4                     l3160:
  6475  0027A4  90D8               	bcf	status,0,c
  6476  0027A6  3620               	rlcf	___fltol@f1^0,f,c
  6477  0027A8  3621               	rlcf	(___fltol@f1+1)^0,f,c
  6478  0027AA  3622               	rlcf	(___fltol@f1+2)^0,f,c
  6479  0027AC  3623               	rlcf	(___fltol@f1+3)^0,f,c
  6480  0027AE  0629               	decf	___fltol@exp1^0,f,c
  6481  0027B0                     l3162:
  6482  0027B0  5029               	movf	___fltol@exp1^0,w,c
  6483  0027B2  A4D8               	btfss	status,2,c
  6484  0027B4  D7F7               	goto	l3160
  6485  0027B6                     u2480:
  6486  0027B6  5028               	movf	___fltol@sign1^0,w,c
  6487  0027B8  B4D8               	btfsc	status,2,c
  6488  0027BA  D008               	goto	l3168
  6489  0027BC  1E23               	comf	(___fltol@f1+3)^0,f,c
  6490  0027BE  1E22               	comf	(___fltol@f1+2)^0,f,c
  6491  0027C0  1E21               	comf	(___fltol@f1+1)^0,f,c
  6492  0027C2  6C20               	negf	___fltol@f1^0,c
  6493  0027C4  0E00               	movlw	0
  6494  0027C6  2221               	addwfc	(___fltol@f1+1)^0,f,c
  6495  0027C8  2222               	addwfc	(___fltol@f1+2)^0,f,c
  6496  0027CA  2223               	addwfc	(___fltol@f1+3)^0,f,c
  6497  0027CC                     l3168:
  6498  0027CC  C020  F020         	movff	___fltol@f1,?___fltol
  6499  0027D0  C021  F021         	movff	___fltol@f1+1,?___fltol+1
  6500  0027D4  C022  F022         	movff	___fltol@f1+2,?___fltol+2
  6501  0027D8  C023  F023         	movff	___fltol@f1+3,?___fltol+3
  6502  0027DC  0012               	return		;funcret
  6503  0027DE                     __end_of___fltol:
  6504                           	callstack 0
  6505                           
  6506 ;; *************** function ___fldiv *****************
  6507 ;; Defined at:
  6508 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  b               4    6[COMRAM] long 
  6511 ;;  a               4   10[COMRAM] long 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;  grs             4   25[COMRAM] unsigned long 
  6514 ;;  rem             4   18[COMRAM] unsigned long 
  6515 ;;  new_exp         2   23[COMRAM] short 
  6516 ;;  aexp            1   30[COMRAM] unsigned char 
  6517 ;;  bexp            1   29[COMRAM] unsigned char 
  6518 ;;  sign            1   22[COMRAM] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  4    6[COMRAM] unsigned char 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/1
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6528 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6529 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6530 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6531 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6532 ;;Total ram usage:       25 bytes
  6533 ;; Hardware stack levels used: 1
  6534 ;; Hardware stack levels required when called: 5
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_ConfigCont
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text34
  6543  001EDA                     __ptext34:
  6544                           	callstack 0
  6545  001EDA                     ___fldiv:
  6546                           	callstack 24
  6547                           
  6548                           ;incstack = 0
  6549  001EDA  500A               	movf	(___fldiv@b+3)^0,w,c
  6550  001EDC  0B80               	andlw	128
  6551  001EDE  6E17               	movwf	___fldiv@sign^0,c
  6552  001EE0  500A               	movf	(___fldiv@b+3)^0,w,c
  6553  001EE2  240A               	addwf	(___fldiv@b+3)^0,w,c
  6554  001EE4  6E1E               	movwf	___fldiv@bexp^0,c
  6555  001EE6  BE09               	btfsc	(___fldiv@b+2)^0,7,c
  6556  001EE8  801E               	bsf	___fldiv@bexp^0,0,c
  6557  001EEA  501E               	movf	___fldiv@bexp^0,w,c
  6558  001EEC  B4D8               	btfsc	status,2,c
  6559  001EEE  D00D               	goto	l2948
  6560  001EF0  281E               	incf	___fldiv@bexp^0,w,c
  6561  001EF2  A4D8               	btfss	status,2,c
  6562  001EF4  D008               	goto	l2944
  6563  001EF6  0E00               	movlw	0
  6564  001EF8  6E07               	movwf	___fldiv@b^0,c
  6565  001EFA  0E00               	movlw	0
  6566  001EFC  6E08               	movwf	(___fldiv@b+1)^0,c
  6567  001EFE  0E00               	movlw	0
  6568  001F00  6E09               	movwf	(___fldiv@b+2)^0,c
  6569  001F02  0E00               	movlw	0
  6570  001F04  6E0A               	movwf	(___fldiv@b+3)^0,c
  6571  001F06                     l2944:
  6572  001F06  8E09               	bsf	(___fldiv@b+2)^0,7,c
  6573  001F08  D006               	goto	L4
  6574  001F0A                     l2948:
  6575  001F0A  0E00               	movlw	0
  6576  001F0C  6E07               	movwf	___fldiv@b^0,c
  6577  001F0E  0E00               	movlw	0
  6578  001F10  6E08               	movwf	(___fldiv@b+1)^0,c
  6579  001F12  0E00               	movlw	0
  6580  001F14  6E09               	movwf	(___fldiv@b+2)^0,c
  6581  001F16                     L4:
  6582  001F16  0E00               	movlw	0
  6583  001F18  6E0A               	movwf	(___fldiv@b+3)^0,c
  6584  001F1A  500E               	movf	(___fldiv@a+3)^0,w,c
  6585  001F1C  0B80               	andlw	128
  6586  001F1E  1A17               	xorwf	___fldiv@sign^0,f,c
  6587  001F20  500E               	movf	(___fldiv@a+3)^0,w,c
  6588  001F22  240E               	addwf	(___fldiv@a+3)^0,w,c
  6589  001F24  6E1F               	movwf	___fldiv@aexp^0,c
  6590  001F26  BE0D               	btfsc	(___fldiv@a+2)^0,7,c
  6591  001F28  801F               	bsf	___fldiv@aexp^0,0,c
  6592  001F2A  501F               	movf	___fldiv@aexp^0,w,c
  6593  001F2C  B4D8               	btfsc	status,2,c
  6594  001F2E  D00D               	goto	l2968
  6595  001F30  281F               	incf	___fldiv@aexp^0,w,c
  6596  001F32  A4D8               	btfss	status,2,c
  6597  001F34  D008               	goto	l2964
  6598  001F36  0E00               	movlw	0
  6599  001F38  6E0B               	movwf	___fldiv@a^0,c
  6600  001F3A  0E00               	movlw	0
  6601  001F3C  6E0C               	movwf	(___fldiv@a+1)^0,c
  6602  001F3E  0E00               	movlw	0
  6603  001F40  6E0D               	movwf	(___fldiv@a+2)^0,c
  6604  001F42  0E00               	movlw	0
  6605  001F44  6E0E               	movwf	(___fldiv@a+3)^0,c
  6606  001F46                     l2964:
  6607  001F46  8E0D               	bsf	(___fldiv@a+2)^0,7,c
  6608  001F48  D006               	goto	L5
  6609  001F4A                     l2968:
  6610  001F4A  0E00               	movlw	0
  6611  001F4C  6E0B               	movwf	___fldiv@a^0,c
  6612  001F4E  0E00               	movlw	0
  6613  001F50  6E0C               	movwf	(___fldiv@a+1)^0,c
  6614  001F52  0E00               	movlw	0
  6615  001F54  6E0D               	movwf	(___fldiv@a+2)^0,c
  6616  001F56                     L5:
  6617  001F56  0E00               	movlw	0
  6618  001F58  6E0E               	movwf	(___fldiv@a+3)^0,c
  6619  001F5A  500B               	movf	___fldiv@a^0,w,c
  6620  001F5C  100C               	iorwf	(___fldiv@a+1)^0,w,c
  6621  001F5E  100D               	iorwf	(___fldiv@a+2)^0,w,c
  6622  001F60  100E               	iorwf	(___fldiv@a+3)^0,w,c
  6623  001F62  A4D8               	btfss	status,2,c
  6624  001F64  D017               	goto	l2982
  6625  001F66  0E00               	movlw	0
  6626  001F68  6E07               	movwf	___fldiv@b^0,c
  6627  001F6A  0E00               	movlw	0
  6628  001F6C  6E08               	movwf	(___fldiv@b+1)^0,c
  6629  001F6E  0E00               	movlw	0
  6630  001F70  6E09               	movwf	(___fldiv@b+2)^0,c
  6631  001F72  0E00               	movlw	0
  6632  001F74  6E0A               	movwf	(___fldiv@b+3)^0,c
  6633  001F76  0E80               	movlw	128
  6634  001F78  1209               	iorwf	(___fldiv@b+2)^0,f,c
  6635  001F7A  0E7F               	movlw	127
  6636  001F7C  120A               	iorwf	(___fldiv@b+3)^0,f,c
  6637  001F7E                     l2976:
  6638  001F7E  5017               	movf	___fldiv@sign^0,w,c
  6639  001F80  120A               	iorwf	(___fldiv@b+3)^0,f,c
  6640  001F82  C007  F007         	movff	___fldiv@b,?___fldiv
  6641  001F86  C008  F008         	movff	___fldiv@b+1,?___fldiv+1
  6642  001F8A  C009  F009         	movff	___fldiv@b+2,?___fldiv+2
  6643  001F8E  C00A  F00A         	movff	___fldiv@b+3,?___fldiv+3
  6644  001F92  0012               	return	
  6645  001F94                     l2982:
  6646  001F94  501E               	movf	___fldiv@bexp^0,w,c
  6647  001F96  A4D8               	btfss	status,2,c
  6648  001F98  D009               	goto	l2990
  6649  001F9A  0E00               	movlw	0
  6650  001F9C  6E07               	movwf	?___fldiv^0,c
  6651  001F9E  0E00               	movlw	0
  6652  001FA0  6E08               	movwf	(?___fldiv+1)^0,c
  6653  001FA2  0E00               	movlw	0
  6654  001FA4  6E09               	movwf	(?___fldiv+2)^0,c
  6655  001FA6  0E00               	movlw	0
  6656  001FA8  6E0A               	movwf	(?___fldiv+3)^0,c
  6657  001FAA  0012               	return	
  6658  001FAC                     l2990:
  6659  001FAC  501F               	movf	___fldiv@aexp^0,w,c
  6660  001FAE  C01E  F00F         	movff	___fldiv@bexp,??___fldiv
  6661  001FB2  6A10               	clrf	(??___fldiv+1)^0,c
  6662  001FB4  5E0F               	subwf	??___fldiv^0,f,c
  6663  001FB6  0E00               	movlw	0
  6664  001FB8  5A10               	subwfb	(??___fldiv+1)^0,f,c
  6665  001FBA  0E7F               	movlw	127
  6666  001FBC  240F               	addwf	??___fldiv^0,w,c
  6667  001FBE  6E18               	movwf	___fldiv@new_exp^0,c
  6668  001FC0  0E00               	movlw	0
  6669  001FC2  2010               	addwfc	(??___fldiv+1)^0,w,c
  6670  001FC4  6E19               	movwf	(___fldiv@new_exp+1)^0,c
  6671  001FC6  C007  F013         	movff	___fldiv@b,___fldiv@rem
  6672  001FCA  C008  F014         	movff	___fldiv@b+1,___fldiv@rem+1
  6673  001FCE  C009  F015         	movff	___fldiv@b+2,___fldiv@rem+2
  6674  001FD2  C00A  F016         	movff	___fldiv@b+3,___fldiv@rem+3
  6675  001FD6  0E00               	movlw	0
  6676  001FD8  6E07               	movwf	___fldiv@b^0,c
  6677  001FDA  0E00               	movlw	0
  6678  001FDC  6E08               	movwf	(___fldiv@b+1)^0,c
  6679  001FDE  0E00               	movlw	0
  6680  001FE0  6E09               	movwf	(___fldiv@b+2)^0,c
  6681  001FE2  0E00               	movlw	0
  6682  001FE4  6E0A               	movwf	(___fldiv@b+3)^0,c
  6683  001FE6  0E00               	movlw	0
  6684  001FE8  6E1A               	movwf	___fldiv@grs^0,c
  6685  001FEA  0E00               	movlw	0
  6686  001FEC  6E1B               	movwf	(___fldiv@grs+1)^0,c
  6687  001FEE  0E00               	movlw	0
  6688  001FF0  6E1C               	movwf	(___fldiv@grs+2)^0,c
  6689  001FF2  0E00               	movlw	0
  6690  001FF4  6E1D               	movwf	(___fldiv@grs+3)^0,c
  6691  001FF6  0E00               	movlw	0
  6692  001FF8  6E1F               	movwf	___fldiv@aexp^0,c
  6693  001FFA  D028               	goto	l1411
  6694  001FFC                     l3000:
  6695  001FFC  501F               	movf	___fldiv@aexp^0,w,c
  6696  001FFE  B4D8               	btfsc	status,2,c
  6697  002000  D011               	goto	l3008
  6698  002002  90D8               	bcf	status,0,c
  6699  002004  3613               	rlcf	___fldiv@rem^0,f,c
  6700  002006  3614               	rlcf	(___fldiv@rem+1)^0,f,c
  6701  002008  3615               	rlcf	(___fldiv@rem+2)^0,f,c
  6702  00200A  3616               	rlcf	(___fldiv@rem+3)^0,f,c
  6703  00200C  90D8               	bcf	status,0,c
  6704  00200E  3607               	rlcf	___fldiv@b^0,f,c
  6705  002010  3608               	rlcf	(___fldiv@b+1)^0,f,c
  6706  002012  3609               	rlcf	(___fldiv@b+2)^0,f,c
  6707  002014  360A               	rlcf	(___fldiv@b+3)^0,f,c
  6708  002016  BE1D               	btfsc	(___fldiv@grs+3)^0,7,c
  6709  002018  8007               	bsf	___fldiv@b^0,0,c
  6710  00201A  90D8               	bcf	status,0,c
  6711  00201C  361A               	rlcf	___fldiv@grs^0,f,c
  6712  00201E  361B               	rlcf	(___fldiv@grs+1)^0,f,c
  6713  002020  361C               	rlcf	(___fldiv@grs+2)^0,f,c
  6714  002022  361D               	rlcf	(___fldiv@grs+3)^0,f,c
  6715  002024                     l3008:
  6716  002024  500B               	movf	___fldiv@a^0,w,c
  6717  002026  5C13               	subwf	___fldiv@rem^0,w,c
  6718  002028  500C               	movf	(___fldiv@a+1)^0,w,c
  6719  00202A  5814               	subwfb	(___fldiv@rem+1)^0,w,c
  6720  00202C  500D               	movf	(___fldiv@a+2)^0,w,c
  6721  00202E  5815               	subwfb	(___fldiv@rem+2)^0,w,c
  6722  002030  500E               	movf	(___fldiv@a+3)^0,w,c
  6723  002032  5816               	subwfb	(___fldiv@rem+3)^0,w,c
  6724  002034  A0D8               	btfss	status,0,c
  6725  002036  D009               	goto	l3014
  6726  002038  8C1D               	bsf	(___fldiv@grs+3)^0,6,c
  6727  00203A  500B               	movf	___fldiv@a^0,w,c
  6728  00203C  5E13               	subwf	___fldiv@rem^0,f,c
  6729  00203E  500C               	movf	(___fldiv@a+1)^0,w,c
  6730  002040  5A14               	subwfb	(___fldiv@rem+1)^0,f,c
  6731  002042  500D               	movf	(___fldiv@a+2)^0,w,c
  6732  002044  5A15               	subwfb	(___fldiv@rem+2)^0,f,c
  6733  002046  500E               	movf	(___fldiv@a+3)^0,w,c
  6734  002048  5A16               	subwfb	(___fldiv@rem+3)^0,f,c
  6735  00204A                     l3014:
  6736  00204A  2A1F               	incf	___fldiv@aexp^0,f,c
  6737  00204C                     l1411:
  6738  00204C  0E19               	movlw	25
  6739  00204E  641F               	cpfsgt	___fldiv@aexp^0,c
  6740  002050  D7D5               	goto	l3000
  6741  002052  5013               	movf	___fldiv@rem^0,w,c
  6742  002054  1014               	iorwf	(___fldiv@rem+1)^0,w,c
  6743  002056  1015               	iorwf	(___fldiv@rem+2)^0,w,c
  6744  002058  1016               	iorwf	(___fldiv@rem+3)^0,w,c
  6745  00205A  B4D8               	btfsc	status,2,c
  6746  00205C  D011               	goto	l3026
  6747  00205E  801A               	bsf	___fldiv@grs^0,0,c
  6748  002060  D00F               	goto	l3026
  6749  002062                     l3020:
  6750  002062  90D8               	bcf	status,0,c
  6751  002064  3607               	rlcf	___fldiv@b^0,f,c
  6752  002066  3608               	rlcf	(___fldiv@b+1)^0,f,c
  6753  002068  3609               	rlcf	(___fldiv@b+2)^0,f,c
  6754  00206A  360A               	rlcf	(___fldiv@b+3)^0,f,c
  6755  00206C  BE1D               	btfsc	(___fldiv@grs+3)^0,7,c
  6756  00206E  8007               	bsf	___fldiv@b^0,0,c
  6757  002070  90D8               	bcf	status,0,c
  6758  002072  361A               	rlcf	___fldiv@grs^0,f,c
  6759  002074  361B               	rlcf	(___fldiv@grs+1)^0,f,c
  6760  002076  361C               	rlcf	(___fldiv@grs+2)^0,f,c
  6761  002078  361D               	rlcf	(___fldiv@grs+3)^0,f,c
  6762  00207A  0618               	decf	___fldiv@new_exp^0,f,c
  6763  00207C  A0D8               	btfss	status,0,c
  6764  00207E  0619               	decf	(___fldiv@new_exp+1)^0,f,c
  6765  002080                     l3026:
  6766  002080  AE09               	btfss	(___fldiv@b+2)^0,7,c
  6767  002082  D7EF               	goto	l3020
  6768  002084  0E00               	movlw	0
  6769  002086  6E1F               	movwf	___fldiv@aexp^0,c
  6770  002088  AE1D               	btfss	(___fldiv@grs+3)^0,7,c
  6771  00208A  D017               	goto	l1422
  6772  00208C  0EFF               	movlw	255
  6773  00208E  141A               	andwf	___fldiv@grs^0,w,c
  6774  002090  6E0F               	movwf	??___fldiv^0,c
  6775  002092  0EFF               	movlw	255
  6776  002094  141B               	andwf	(___fldiv@grs+1)^0,w,c
  6777  002096  6E10               	movwf	(??___fldiv+1)^0,c
  6778  002098  0EFF               	movlw	255
  6779  00209A  141C               	andwf	(___fldiv@grs+2)^0,w,c
  6780  00209C  6E11               	movwf	(??___fldiv+2)^0,c
  6781  00209E  0E7F               	movlw	127
  6782  0020A0  141D               	andwf	(___fldiv@grs+3)^0,w,c
  6783  0020A2  6E12               	movwf	(??___fldiv+3)^0,c
  6784  0020A4  500F               	movf	??___fldiv^0,w,c
  6785  0020A6  1010               	iorwf	(??___fldiv+1)^0,w,c
  6786  0020A8  1011               	iorwf	(??___fldiv+2)^0,w,c
  6787  0020AA  1012               	iorwf	(??___fldiv+3)^0,w,c
  6788  0020AC  B4D8               	btfsc	status,2,c
  6789  0020AE  D003               	goto	l1423
  6790  0020B0                     u2250:
  6791  0020B0  0E01               	movlw	1
  6792  0020B2  6E1F               	movwf	___fldiv@aexp^0,c
  6793  0020B4  D002               	goto	l1422
  6794  0020B6                     l1423:
  6795  0020B6  B007               	btfsc	___fldiv@b^0,0,c
  6796  0020B8  D7FB               	goto	u2250
  6797  0020BA                     l1422:
  6798  0020BA  501F               	movf	___fldiv@aexp^0,w,c
  6799  0020BC  B4D8               	btfsc	status,2,c
  6800  0020BE  D01F               	goto	l3046
  6801  0020C0  0E01               	movlw	1
  6802  0020C2  2607               	addwf	___fldiv@b^0,f,c
  6803  0020C4  0E00               	movlw	0
  6804  0020C6  2208               	addwfc	(___fldiv@b+1)^0,f,c
  6805  0020C8  2209               	addwfc	(___fldiv@b+2)^0,f,c
  6806  0020CA  220A               	addwfc	(___fldiv@b+3)^0,f,c
  6807  0020CC  A00A               	btfss	(___fldiv@b+3)^0,0,c
  6808  0020CE  D017               	goto	l3046
  6809  0020D0  C007  F00F         	movff	___fldiv@b,??___fldiv
  6810  0020D4  C008  F010         	movff	___fldiv@b+1,??___fldiv+1
  6811  0020D8  C009  F011         	movff	___fldiv@b+2,??___fldiv+2
  6812  0020DC  C00A  F012         	movff	___fldiv@b+3,??___fldiv+3
  6813  0020E0  3412               	rlcf	(??___fldiv+3)^0,w,c
  6814  0020E2  3212               	rrcf	(??___fldiv+3)^0,f,c
  6815  0020E4  3211               	rrcf	(??___fldiv+2)^0,f,c
  6816  0020E6  3210               	rrcf	(??___fldiv+1)^0,f,c
  6817  0020E8  320F               	rrcf	??___fldiv^0,f,c
  6818  0020EA  C00F  F007         	movff	??___fldiv,___fldiv@b
  6819  0020EE  C010  F008         	movff	??___fldiv+1,___fldiv@b+1
  6820  0020F2  C011  F009         	movff	??___fldiv+2,___fldiv@b+2
  6821  0020F6  C012  F00A         	movff	??___fldiv+3,___fldiv@b+3
  6822  0020FA  4A18               	infsnz	___fldiv@new_exp^0,f,c
  6823  0020FC  2A19               	incf	(___fldiv@new_exp+1)^0,f,c
  6824  0020FE                     l3046:
  6825  0020FE  BE19               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6826  002100  D010               	goto	l3050
  6827  002102  5019               	movf	(___fldiv@new_exp+1)^0,w,c
  6828  002104  E103               	bnz	u2290
  6829  002106  2818               	incf	___fldiv@new_exp^0,w,c
  6830  002108  A0D8               	btfss	status,0,c
  6831  00210A  D00B               	goto	l3050
  6832  00210C                     u2290:
  6833  00210C  0E00               	movlw	0
  6834  00210E  6E19               	movwf	(___fldiv@new_exp+1)^0,c
  6835  002110  6818               	setf	___fldiv@new_exp^0,c
  6836  002112  0E00               	movlw	0
  6837  002114  6E07               	movwf	___fldiv@b^0,c
  6838  002116  0E00               	movlw	0
  6839  002118  6E08               	movwf	(___fldiv@b+1)^0,c
  6840  00211A  0E00               	movlw	0
  6841  00211C  6E09               	movwf	(___fldiv@b+2)^0,c
  6842  00211E  0E00               	movlw	0
  6843  002120  6E0A               	movwf	(___fldiv@b+3)^0,c
  6844  002122                     l3050:
  6845  002122  BE19               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6846  002124  D005               	goto	u2300
  6847  002126  5019               	movf	(___fldiv@new_exp+1)^0,w,c
  6848  002128  E111               	bnz	l3054
  6849  00212A  0418               	decf	___fldiv@new_exp^0,w,c
  6850  00212C  B0D8               	btfsc	status,0,c
  6851  00212E  D00E               	goto	l3054
  6852  002130                     u2300:
  6853  002130  0E00               	movlw	0
  6854  002132  6E19               	movwf	(___fldiv@new_exp+1)^0,c
  6855  002134  0E00               	movlw	0
  6856  002136  6E18               	movwf	___fldiv@new_exp^0,c
  6857  002138  0E00               	movlw	0
  6858  00213A  6E07               	movwf	___fldiv@b^0,c
  6859  00213C  0E00               	movlw	0
  6860  00213E  6E08               	movwf	(___fldiv@b+1)^0,c
  6861  002140  0E00               	movlw	0
  6862  002142  6E09               	movwf	(___fldiv@b+2)^0,c
  6863  002144  0E00               	movlw	0
  6864  002146  6E0A               	movwf	(___fldiv@b+3)^0,c
  6865  002148  0E00               	movlw	0
  6866  00214A  6E17               	movwf	___fldiv@sign^0,c
  6867  00214C                     l3054:
  6868  00214C  C018  F01E         	movff	___fldiv@new_exp,___fldiv@bexp
  6869  002150  A01E               	btfss	___fldiv@bexp^0,0,c
  6870  002152  D002               	goto	l3060
  6871  002154  8E09               	bsf	(___fldiv@b+2)^0,7,c
  6872  002156  D001               	goto	l3062
  6873  002158                     l3060:
  6874  002158  9E09               	bcf	(___fldiv@b+2)^0,7,c
  6875  00215A                     l3062:
  6876  00215A  90D8               	bcf	status,0,c
  6877  00215C  301E               	rrcf	___fldiv@bexp^0,w,c
  6878  00215E  6E0A               	movwf	(___fldiv@b+3)^0,c
  6879  002160  D70E               	goto	l2976
  6880  002162                     __end_of___fldiv:
  6881                           	callstack 0
  6882                           
  6883 ;; *************** function _INTERRUPT_InterruptManager *****************
  6884 ;; Defined at:
  6885 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      void 
  6892 ;; Registers used:
  6893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6901 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6903 ;;Total ram usage:        4 bytes
  6904 ;; Hardware stack levels used: 1
  6905 ;; Hardware stack levels required when called: 4
  6906 ;; This function calls:
  6907 ;;		Absolute function
  6908 ;;		_ADCC_ISR
  6909 ;;		_EUSART1_Receive_ISR
  6910 ;;		_EUSART1_Transmit_ISR
  6911 ;;		_Interrupcion_Rx_Serial
  6912 ;; This function is called by:
  6913 ;;		Interrupt level 2
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           	psect	intcode
  6918  000008                     __pintcode:
  6919                           	callstack 0
  6920  000008                     _INTERRUPT_InterruptManager:
  6921                           	callstack 23
  6922                           
  6923                           ;incstack = 0
  6924  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6925  00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  6926  00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6927  000012  CFD9 F005          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6928  000016  CFDA F006          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6929                           
  6930                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6931  00001A  ACF2               	btfss	242,6,c	;volatile
  6932  00001C  D01F               	goto	i2l26
  6933                           
  6934                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  6935  00001E  010E               	movlb	14	; () banked
  6936  000020  B9C5               	btfsc	197,4,b	;volatile
  6937                           
  6938                           ; BSR set to: 14
  6939  000022  A9CD               	btfss	205,4,b	;volatile
  6940  000024  D008               	goto	i2l25
  6941                           
  6942                           ; BSR set to: 14
  6943                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  6944  000026  D801               	call	i2u361_48
  6945  000028  D019               	goto	i2l26
  6946  00002A                     i2u361_48:
  6947  00002A  0005               	push	
  6948  00002C  6EFA               	movwf	pclath,c
  6949  00002E  503D               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  6950  000030  6EFD               	movwf	tosl,c
  6951  000032  503E               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  6952  000034  D00A               	goto	L6
  6953  000036                     i2l25:
  6954                           
  6955                           ; BSR set to: 14
  6956  000036  BBC5               	btfsc	197,5,b	;volatile
  6957                           
  6958                           ; BSR set to: 14
  6959  000038  ABCD               	btfss	205,5,b	;volatile
  6960  00003A  D00B               	goto	i2l27
  6961                           
  6962                           ; BSR set to: 14
  6963                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  6964  00003C  D801               	call	i2u364_48
  6965  00003E  D00E               	goto	i2l26
  6966  000040                     i2u364_48:
  6967  000040  0005               	push	
  6968  000042  6EFA               	movwf	pclath,c
  6969  000044  503B               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  6970  000046  6EFD               	movwf	tosl,c
  6971  000048  503C               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  6972  00004A                     L6:
  6973  00004A  6EFE               	movwf	tosh,c
  6974  00004C  6AFF               	clrf	tosu,c
  6975  00004E  50FA               	movf	pclath,w,c
  6976  000050  0012               	return		;indir
  6977  000052                     i2l27:
  6978                           
  6979                           ; BSR set to: 14
  6980  000052  B1C3               	btfsc	195,0,b	;volatile
  6981                           
  6982                           ; BSR set to: 14
  6983  000054  A1CB               	btfss	203,0,b	;volatile
  6984  000056  D002               	goto	i2l26
  6985                           
  6986                           ; BSR set to: 14
  6987                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             ADCC_ISR();
  6988  000058  EC79  F017         	call	_ADCC_ISR	;wreg free
  6989  00005C                     i2l26:
  6990                           
  6991                           ; BSR set to: 14
  6992                           ;mcc_generated_files/interrupt_manager.c: 79:     }
  6993  00005C  C006  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6994  000060  C005  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6995  000064  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6996  000068  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6997  00006C  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6998  00006E  0011               	retfie		f
  6999  000070                     __end_of_INTERRUPT_InterruptManager:
  7000                           	callstack 0
  7001                           
  7002 ;; *************** function _EUSART1_Receive_ISR *****************
  7003 ;; Defined at:
  7004 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;		None
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;		None
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  1    wreg      void 
  7011 ;; Registers used:
  7012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 3F/E
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7022 ;;Total ram usage:        0 bytes
  7023 ;; Hardware stack levels used: 1
  7024 ;; Hardware stack levels required when called: 2
  7025 ;; This function calls:
  7026 ;;		Absolute function
  7027 ;;		_EUSART1_DefaultErrorHandler
  7028 ;;		_EUSART1_DefaultFramingErrorHandler
  7029 ;;		_EUSART1_DefaultOverrunErrorHandler
  7030 ;;		_EUSART1_RxDataHandler
  7031 ;; This function is called by:
  7032 ;;		_EUSART1_Initialize
  7033 ;;		_Interrupcion_Rx_Serial
  7034 ;;		_INTERRUPT_InterruptManager
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text36
  7039  002B88                     __ptext36:
  7040                           	callstack 0
  7041  002B88                     _EUSART1_Receive_ISR:
  7042                           	callstack 23
  7043                           
  7044                           ; BSR set to: 14
  7045                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  7046                           
  7047                           ;incstack = 0
  7048  002B88  5051               	movf	_eusart1RxHead^0,w,c
  7049  002B8A  0F60               	addlw	low _eusart1RxStatusBuffer
  7050  002B8C  6ED9               	movwf	fsr2l,c
  7051  002B8E  6ADA               	clrf	fsr2h,c
  7052  002B90  0E00               	movlw	0
  7053  002B92  6EDF               	movwf	indf2,c
  7054                           
  7055                           ; BSR set to: 14
  7056                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
  7057  002B94  A49D               	btfss	157,2,c	;volatile
  7058  002B96  D011               	goto	i2u195_49
  7059                           
  7060                           ; BSR set to: 14
  7061                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  7062  002B98  5051               	movf	_eusart1RxHead^0,w,c
  7063  002B9A  0F60               	addlw	low _eusart1RxStatusBuffer
  7064  002B9C  6ED9               	movwf	fsr2l,c
  7065  002B9E  6ADA               	clrf	fsr2h,c
  7066  002BA0  0100               	movlb	0	; () banked
  7067  002BA2  82DF               	bsf	indf2,1,c
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  7071  002BA4  D801               	call	i2u195_48
  7072  002BA6  D009               	goto	i2u195_49
  7073  002BA8                     i2u195_48:
  7074  002BA8  0005               	push	
  7075  002BAA  6EFA               	movwf	pclath,c
  7076  002BAC  5039               	movf	_EUSART1_FramingErrorHandler^0,w,c
  7077  002BAE  6EFD               	movwf	tosl,c
  7078  002BB0  503A               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  7079  002BB2  6EFE               	movwf	tosh,c
  7080  002BB4  6AFF               	clrf	tosu,c
  7081  002BB6  50FA               	movf	pclath,w,c
  7082  002BB8  0012               	return		;indir
  7083  002BBA                     i2u195_49:
  7084                           
  7085                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
  7086  002BBA  A29D               	btfss	157,1,c	;volatile
  7087  002BBC  D011               	goto	i2u197_49
  7088                           
  7089                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  7090  002BBE  5051               	movf	_eusart1RxHead^0,w,c
  7091  002BC0  0F60               	addlw	low _eusart1RxStatusBuffer
  7092  002BC2  6ED9               	movwf	fsr2l,c
  7093  002BC4  6ADA               	clrf	fsr2h,c
  7094  002BC6  0100               	movlb	0	; () banked
  7095  002BC8  84DF               	bsf	indf2,2,c
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  7099  002BCA  D801               	call	i2u197_48
  7100  002BCC  D009               	goto	i2u197_49
  7101  002BCE                     i2u197_48:
  7102  002BCE  0005               	push	
  7103  002BD0  6EFA               	movwf	pclath,c
  7104  002BD2  5037               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  7105  002BD4  6EFD               	movwf	tosl,c
  7106  002BD6  5038               	movf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  7107  002BD8  6EFE               	movwf	tosh,c
  7108  002BDA  6AFF               	clrf	tosu,c
  7109  002BDC  50FA               	movf	pclath,w,c
  7110  002BDE  0012               	return		;indir
  7111  002BE0                     i2u197_49:
  7112                           
  7113                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  7114  002BE0  5051               	movf	_eusart1RxHead^0,w,c
  7115  002BE2  0F60               	addlw	low _eusart1RxStatusBuffer
  7116  002BE4  6ED9               	movwf	fsr2l,c
  7117  002BE6  6ADA               	clrf	fsr2h,c
  7118  002BE8  50DF               	movf	indf2,w,c
  7119  002BEA  B4D8               	btfsc	status,2,c
  7120  002BEC  D00B               	goto	i2l2878
  7121                           
  7122                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  7123  002BEE  D801               	call	i2u199_48
  7124  002BF0  0012               	return	
  7125  002BF2                     i2u199_48:
  7126  002BF2  0005               	push	
  7127  002BF4  6EFA               	movwf	pclath,c
  7128  002BF6  5035               	movf	_EUSART1_ErrorHandler^0,w,c
  7129  002BF8  6EFD               	movwf	tosl,c
  7130  002BFA  5036               	movf	(_EUSART1_ErrorHandler+1)^0,w,c
  7131  002BFC  6EFE               	movwf	tosh,c
  7132  002BFE  6AFF               	clrf	tosu,c
  7133  002C00  50FA               	movf	pclath,w,c
  7134  002C02  0012               	return		;indir
  7135  002C04                     i2l2878:
  7136                           
  7137                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  7138  002C04  EC69  F017         	call	_EUSART1_RxDataHandler	;wreg free
  7139  002C08  0012               	return		;funcret
  7140  002C0A                     __end_of_EUSART1_Receive_ISR:
  7141                           	callstack 0
  7142                           
  7143 ;; *************** function _Interrupcion_Rx_Serial *****************
  7144 ;; Defined at:
  7145 ;;		line 19 in file "main.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;		None
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  1    wreg      void 
  7152 ;; Registers used:
  7153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7154 ;; Tracked objects:
  7155 ;;		On entry : 3F/E
  7156 ;;		On exit  : 3F/1
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7163 ;;Total ram usage:        0 bytes
  7164 ;; Hardware stack levels used: 1
  7165 ;; Hardware stack levels required when called: 3
  7166 ;; This function calls:
  7167 ;;		_EUSART1_Read
  7168 ;;		_EUSART1_Receive_ISR
  7169 ;; This function is called by:
  7170 ;;		_main
  7171 ;;		_INTERRUPT_InterruptManager
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text37
  7176  002FBE                     __ptext37:
  7177                           	callstack 0
  7178  002FBE                     _Interrupcion_Rx_Serial:
  7179                           	callstack 23
  7180                           
  7181                           ; BSR set to: 14
  7182                           ;main.c: 20:     EUSART1_Receive_ISR();
  7183                           
  7184                           ;incstack = 0
  7185  002FBE  ECC4  F015         	call	_EUSART1_Receive_ISR	;wreg free
  7186                           
  7187                           ;main.c: 21:     Lectura_Rx = EUSART1_Read();
  7188  002FC2  ECD4  F016         	call	_EUSART1_Read	;wreg free
  7189  002FC6  0101               	movlb	1	; () banked
  7190  002FC8  6FF5               	movwf	_Lectura_Rx& (0+255),b	;volatile
  7191                           
  7192                           ; BSR set to: 1
  7193                           ;main.c: 22:     Serial_Rx_flag = 1;
  7194  002FCA  0E01               	movlw	1
  7195  002FCC  6FF6               	movwf	_Serial_Rx_flag& (0+255),b	;volatile
  7196                           
  7197                           ; BSR set to: 1
  7198  002FCE  0012               	return		;funcret
  7199  002FD0                     __end_of_Interrupcion_Rx_Serial:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7203 ;; Defined at:
  7204 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		None
  7213 ;; Tracked objects:
  7214 ;;		On entry : 3F/0
  7215 ;;		On exit  : 3F/0
  7216 ;;		Unchanged: 3F/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;Total ram usage:        0 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; This function calls:
  7225 ;;		Nothing
  7226 ;; This function is called by:
  7227 ;;		_EUSART1_Initialize
  7228 ;;		_EUSART1_Receive_ISR
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text38
  7233  003018                     __ptext38:
  7234                           	callstack 0
  7235  003018                     _EUSART1_DefaultOverrunErrorHandler:
  7236                           	callstack 24
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
  7240                           
  7241                           ; BSR set to: 1
  7242                           ;incstack = 0
  7243  003018  989D               	bcf	157,4,c	;volatile
  7244                           
  7245                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
  7246  00301A  889D               	bsf	157,4,c	;volatile
  7247                           
  7248                           ; BSR set to: 0
  7249  00301C  0012               	return		;funcret
  7250  00301E                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7251                           	callstack 0
  7252                           
  7253 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7254 ;; Defined at:
  7255 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;		None
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;		None
  7260 ;; Return value:  Size  Location     Type
  7261 ;;                  1    wreg      void 
  7262 ;; Registers used:
  7263 ;;		None
  7264 ;; Tracked objects:
  7265 ;;		On entry : 3F/0
  7266 ;;		On exit  : 3F/0
  7267 ;;		Unchanged: 3F/0
  7268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7273 ;;Total ram usage:        0 bytes
  7274 ;; Hardware stack levels used: 1
  7275 ;; This function calls:
  7276 ;;		Nothing
  7277 ;; This function is called by:
  7278 ;;		_EUSART1_Initialize
  7279 ;;		_EUSART1_Receive_ISR
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text39
  7284  003028                     __ptext39:
  7285                           	callstack 0
  7286  003028                     _EUSART1_DefaultFramingErrorHandler:
  7287                           	callstack 24
  7288                           
  7289                           ; BSR set to: 0
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;incstack = 0
  7293  003028  0012               	return		;funcret
  7294  00302A                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7295                           	callstack 0
  7296                           
  7297 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7298 ;; Defined at:
  7299 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;		None
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;		None
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/E
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7317 ;;Total ram usage:        0 bytes
  7318 ;; Hardware stack levels used: 1
  7319 ;; Hardware stack levels required when called: 1
  7320 ;; This function calls:
  7321 ;;		_EUSART1_RxDataHandler
  7322 ;; This function is called by:
  7323 ;;		_EUSART1_Initialize
  7324 ;;		_EUSART1_Receive_ISR
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text40
  7329  00301E                     __ptext40:
  7330                           	callstack 0
  7331  00301E                     _EUSART1_DefaultErrorHandler:
  7332                           	callstack 23
  7333                           
  7334                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;incstack = 0
  7338  00301E  EC69  F017         	call	_EUSART1_RxDataHandler	;wreg free
  7339  003022  0012               	return		;funcret
  7340  003024                     __end_of_EUSART1_DefaultErrorHandler:
  7341                           	callstack 0
  7342                           
  7343 ;; *************** function _EUSART1_RxDataHandler *****************
  7344 ;; Defined at:
  7345 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;		None
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1    wreg      void 
  7352 ;; Registers used:
  7353 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/E
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7363 ;;Total ram usage:        0 bytes
  7364 ;; Hardware stack levels used: 1
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_EUSART1_Receive_ISR
  7369 ;;		_EUSART1_DefaultErrorHandler
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text41
  7374  002ED2                     __ptext41:
  7375                           	callstack 0
  7376  002ED2                     _EUSART1_RxDataHandler:
  7377                           	callstack 24
  7378                           
  7379                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  7380                           
  7381                           ;incstack = 0
  7382  002ED2  0E00               	movlw	low _eusart1RxBuffer
  7383  002ED4  2451               	addwf	_eusart1RxHead^0,w,c	;volatile
  7384  002ED6  6ED9               	movwf	fsr2l,c
  7385  002ED8  6ADA               	clrf	fsr2h,c
  7386  002EDA  0E02               	movlw	high _eusart1RxBuffer
  7387  002EDC  22DA               	addwfc	fsr2h,f,c
  7388  002EDE  CF99 FFDF          	movff	3993,indf2	;volatile
  7389  002EE2  2A51               	incf	_eusart1RxHead^0,f,c	;volatile
  7390                           
  7391                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7392  002EE4  0E1F               	movlw	31
  7393  002EE6  6451               	cpfsgt	_eusart1RxHead^0,c
  7394  002EE8  D002               	goto	i2l2742
  7395                           
  7396                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  7397  002EEA  0E00               	movlw	0
  7398  002EEC  6E51               	movwf	_eusart1RxHead^0,c	;volatile
  7399  002EEE                     i2l2742:
  7400                           
  7401                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  7402  002EEE  2A4F               	incf	_eusart1RxCount^0,f,c	;volatile
  7403  002EF0  0012               	return		;funcret
  7404  002EF2                     __end_of_EUSART1_RxDataHandler:
  7405                           	callstack 0
  7406                           
  7407 ;; *************** function _EUSART1_Read *****************
  7408 ;; Defined at:
  7409 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;		None
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  readValue       1    0[COMRAM] unsigned char 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      unsigned char 
  7416 ;; Registers used:
  7417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/E
  7420 ;;		On exit  : 3F/E
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7427 ;;Total ram usage:        1 bytes
  7428 ;; Hardware stack levels used: 1
  7429 ;; This function calls:
  7430 ;;		Nothing
  7431 ;; This function is called by:
  7432 ;;		_Interrupcion_Rx_Serial
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           	psect	text42
  7437  002DA8                     __ptext42:
  7438                           	callstack 0
  7439  002DA8                     _EUSART1_Read:
  7440                           	callstack 25
  7441                           
  7442                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  7443                           
  7444                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  7445                           
  7446                           ;incstack = 0
  7447  002DA8  504F               	movf	_eusart1RxCount^0,w,c	;volatile
  7448  002DAA  B4D8               	btfsc	status,2,c
  7449  002DAC  D7FD               	goto	_EUSART1_Read
  7450                           
  7451                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  7452  002DAE  5050               	movf	_eusart1RxTail^0,w,c
  7453  002DB0  0F60               	addlw	low _eusart1RxStatusBuffer
  7454  002DB2  6ED9               	movwf	fsr2l,c
  7455  002DB4  6ADA               	clrf	fsr2h,c
  7456  002DB6  50DF               	movf	indf2,w,c
  7457  002DB8  6E4E               	movwf	_eusart1RxLastError^0,c	;volatile
  7458                           
  7459                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  7460  002DBA  0E00               	movlw	low _eusart1RxBuffer
  7461  002DBC  2450               	addwf	_eusart1RxTail^0,w,c	;volatile
  7462  002DBE  6ED9               	movwf	fsr2l,c
  7463  002DC0  6ADA               	clrf	fsr2h,c
  7464  002DC2  0E02               	movlw	high _eusart1RxBuffer
  7465  002DC4  22DA               	addwfc	fsr2h,f,c
  7466  002DC6  50DF               	movf	indf2,w,c
  7467  002DC8  6E01               	movwf	EUSART1_Read@readValue^0,c
  7468  002DCA  2A50               	incf	_eusart1RxTail^0,f,c	;volatile
  7469                           
  7470                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  7471  002DCC  0E1F               	movlw	31
  7472  002DCE  6450               	cpfsgt	_eusart1RxTail^0,c
  7473  002DD0  D002               	goto	i2l2850
  7474                           
  7475                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  7476  002DD2  0E00               	movlw	0
  7477  002DD4  6E50               	movwf	_eusart1RxTail^0,c	;volatile
  7478  002DD6                     i2l2850:
  7479                           
  7480                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  7481  002DD6  010E               	movlb	14	; () banked
  7482  002DD8  9BC5               	bcf	197,5,b	;volatile
  7483                           
  7484                           ; BSR set to: 14
  7485                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  7486  002DDA  064F               	decf	_eusart1RxCount^0,f,c	;volatile
  7487                           
  7488                           ; BSR set to: 14
  7489                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  7490  002DDC  8BC5               	bsf	197,5,b	;volatile
  7491                           
  7492                           ; BSR set to: 14
  7493                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  7494  002DDE  5001               	movf	EUSART1_Read@readValue^0,w,c
  7495                           
  7496                           ; BSR set to: 14
  7497  002DE0  0012               	return		;funcret
  7498  002DE2                     __end_of_EUSART1_Read:
  7499                           	callstack 0
  7500                           
  7501 ;; *************** function _EUSART1_Transmit_ISR *****************
  7502 ;; Defined at:
  7503 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;		None
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;		None
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1    wreg      void 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7512 ;; Tracked objects:
  7513 ;;		On entry : 3F/E
  7514 ;;		On exit  : 3F/E
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7521 ;;Total ram usage:        0 bytes
  7522 ;; Hardware stack levels used: 1
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_EUSART1_Initialize
  7527 ;;		_INTERRUPT_InterruptManager
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text43
  7532  002E6A                     __ptext43:
  7533                           	callstack 0
  7534  002E6A                     _EUSART1_Transmit_ISR:
  7535                           	callstack 26
  7536                           
  7537                           ; BSR set to: 14
  7538                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  7539                           
  7540                           ; BSR set to: 14
  7541                           ;incstack = 0
  7542  002E6A  0E20               	movlw	32
  7543  002E6C  603F               	cpfslt	_eusart1TxBufferRemaining^0,c
  7544  002E6E  D00E               	goto	i2l185
  7545                           
  7546                           ; BSR set to: 14
  7547                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  7548  002E70  5052               	movf	_eusart1TxTail^0,w,c
  7549  002E72  0F80               	addlw	low _eusart1TxBuffer
  7550  002E74  6ED9               	movwf	fsr2l,c
  7551  002E76  6ADA               	clrf	fsr2h,c
  7552  002E78  50DF               	movf	indf2,w,c
  7553  002E7A  6E9A               	movwf	154,c	;volatile
  7554                           
  7555                           ; BSR set to: 14
  7556  002E7C  2A52               	incf	_eusart1TxTail^0,f,c	;volatile
  7557                           
  7558                           ; BSR set to: 14
  7559                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  7560  002E7E  0E1F               	movlw	31
  7561  002E80  6452               	cpfsgt	_eusart1TxTail^0,c
  7562  002E82  D002               	goto	i2l3222
  7563                           
  7564                           ; BSR set to: 14
  7565                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  7566  002E84  0E00               	movlw	0
  7567  002E86  6E52               	movwf	_eusart1TxTail^0,c	;volatile
  7568  002E88                     i2l3222:
  7569                           
  7570                           ; BSR set to: 14
  7571                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  7572  002E88  2A3F               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  7573                           
  7574                           ;mcc_generated_files/eusart1.c: 209:     }
  7575  002E8A  0012               	return	
  7576  002E8C                     i2l185:
  7577                           
  7578                           ; BSR set to: 14
  7579                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
  7580  002E8C  99C5               	bcf	197,4,b	;volatile
  7581                           
  7582                           ; BSR set to: 14
  7583  002E8E  0012               	return		;funcret
  7584  002E90                     __end_of_EUSART1_Transmit_ISR:
  7585                           	callstack 0
  7586                           
  7587 ;; *************** function _ADCC_ISR *****************
  7588 ;; Defined at:
  7589 ;;		line 298 in file "mcc_generated_files/adcc.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;		None
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;		None
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      void 
  7596 ;; Registers used:
  7597 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 3F/E
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7607 ;;Total ram usage:        0 bytes
  7608 ;; Hardware stack levels used: 1
  7609 ;; Hardware stack levels required when called: 1
  7610 ;; This function calls:
  7611 ;;		Absolute function
  7612 ;;		_ADCC_DefaultInterruptHandler
  7613 ;;		_Interrupcion_ADC
  7614 ;; This function is called by:
  7615 ;;		_INTERRUPT_InterruptManager
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           	psect	text44
  7620  002EF2                     __ptext44:
  7621                           	callstack 0
  7622  002EF2                     _ADCC_ISR:
  7623                           	callstack 25
  7624                           
  7625                           ; BSR set to: 14
  7626                           ;mcc_generated_files/adcc.c: 301:     PIR1bits.ADIF = 0;
  7627                           
  7628                           ; BSR set to: 14
  7629                           ;incstack = 0
  7630  002EF2  91CB               	bcf	203,0,b	;volatile
  7631                           
  7632                           ; BSR set to: 14
  7633                           ;mcc_generated_files/adcc.c: 303:     if (ADCC_ADI_InterruptHandler)
  7634  002EF4  5033               	movf	_ADCC_ADI_InterruptHandler^0,w,c
  7635  002EF6  1034               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
  7636  002EF8  B4D8               	btfsc	status,2,c
  7637  002EFA  0012               	return	
  7638                           
  7639                           ; BSR set to: 14
  7640                           ;mcc_generated_files/adcc.c: 304:             ADCC_ADI_InterruptHandler();
  7641  002EFC  D801               	call	i2u251_48
  7642  002EFE  0012               	return	
  7643  002F00                     i2u251_48:
  7644  002F00  0005               	push	
  7645  002F02  6EFA               	movwf	pclath,c
  7646  002F04  5033               	movf	_ADCC_ADI_InterruptHandler^0,w,c
  7647  002F06  6EFD               	movwf	tosl,c
  7648  002F08  5034               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
  7649  002F0A  6EFE               	movwf	tosh,c
  7650  002F0C  6AFF               	clrf	tosu,c
  7651  002F0E  50FA               	movf	pclath,w,c
  7652  002F10  0012               	return		;indir
  7653  002F12                     __end_of_ADCC_ISR:
  7654                           	callstack 0
  7655                           
  7656 ;; *************** function _ADCC_DefaultInterruptHandler *****************
  7657 ;; Defined at:
  7658 ;;		line 311 in file "mcc_generated_files/adcc.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;		None
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;		None
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      void 
  7665 ;; Registers used:
  7666 ;;		None
  7667 ;; Tracked objects:
  7668 ;;		On entry : 3F/E
  7669 ;;		On exit  : 3F/E
  7670 ;;		Unchanged: 3F/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7676 ;;Total ram usage:        0 bytes
  7677 ;; Hardware stack levels used: 1
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_ADCC_Initialize
  7682 ;;		_ADCC_ISR
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text45
  7687  00302A                     __ptext45:
  7688                           	callstack 0
  7689  00302A                     _ADCC_DefaultInterruptHandler:
  7690                           	callstack 25
  7691                           
  7692                           ; BSR set to: 14
  7693                           
  7694                           ;incstack = 0
  7695  00302A  0012               	return		;funcret
  7696  00302C                     __end_of_ADCC_DefaultInterruptHandler:
  7697                           	callstack 0
  7698                           
  7699 ;; *************** function _Interrupcion_ADC *****************
  7700 ;; Defined at:
  7701 ;;		line 25 in file "main.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;		None
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;		None
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      void 
  7708 ;; Registers used:
  7709 ;;		wreg, status,2, status,0
  7710 ;; Tracked objects:
  7711 ;;		On entry : 3F/E
  7712 ;;		On exit  : 3F/1
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7719 ;;Total ram usage:        2 bytes
  7720 ;; Hardware stack levels used: 1
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_main
  7725 ;;		_ADCC_ISR
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text46
  7730  002F4C                     __ptext46:
  7731                           	callstack 0
  7732  002F4C                     _Interrupcion_ADC:
  7733                           	callstack 25
  7734                           
  7735                           ; BSR set to: 14
  7736                           ;main.c: 26:     Result_ADC = ((adc_result_t)((ADRESH << 8) + ADRESL));
  7737                           
  7738                           ; BSR set to: 14
  7739                           ;incstack = 0
  7740  002F4C  5064               	movf	100,w,c	;volatile
  7741  002F4E  6E02               	movwf	(??_Interrupcion_ADC+1)^0,c
  7742  002F50  6A01               	clrf	??_Interrupcion_ADC^0,c
  7743  002F52  5063               	movf	99,w,c	;volatile
  7744  002F54  2401               	addwf	??_Interrupcion_ADC^0,w,c
  7745  002F56  0101               	movlb	1	; () banked
  7746  002F58  6FF3               	movwf	_Result_ADC& (0+255),b	;volatile
  7747  002F5A  0E00               	movlw	0
  7748  002F5C  2002               	addwfc	(??_Interrupcion_ADC+1)^0,w,c
  7749  002F5E  6FF4               	movwf	(_Result_ADC+1)& (0+255),b	;volatile
  7750                           
  7751                           ; BSR set to: 1
  7752                           ;main.c: 27:     ADC_flag = 1;
  7753  002F60  0E01               	movlw	1
  7754  002F62  6FF7               	movwf	_ADC_flag& (0+255),b	;volatile
  7755                           
  7756                           ; BSR set to: 1
  7757  002F64  0012               	return		;funcret
  7758  002F66                     __end_of_Interrupcion_ADC:
  7759                           	callstack 0
  7760                           
  7761                           	psect	text47
  7762  000000                     __ptext47:
  7763                           	callstack 0
  7764                           
  7765                           	psect	rparam
  7766  0000                     
  7767                           	psect	temp
  7768  000054                     btemp:
  7769                           	callstack 0
  7770  000054                     	ds	1
  7771  0000                     int$flags	set	btemp
  7772  0000                     wtemp8	set	btemp+1
  7773  0000                     ttemp5	set	btemp+1
  7774  0000                     ttemp6	set	btemp+4
  7775  0000                     ttemp7	set	btemp+8
  7776                           
  7777                           	psect	idloc
  7778                           
  7779                           ;Config register IDLOC0 @ 0x200000
  7780                           ;	unspecified, using default values
  7781  200000                     	org	2097152
  7782  200000  0FFF               	dw	4095
  7783                           
  7784                           ;Config register IDLOC1 @ 0x200002
  7785                           ;	unspecified, using default values
  7786  200002                     	org	2097154
  7787  200002  0FFF               	dw	4095
  7788                           
  7789                           ;Config register IDLOC2 @ 0x200004
  7790                           ;	unspecified, using default values
  7791  200004                     	org	2097156
  7792  200004  0FFF               	dw	4095
  7793                           
  7794                           ;Config register IDLOC3 @ 0x200006
  7795                           ;	unspecified, using default values
  7796  200006                     	org	2097158
  7797  200006  0FFF               	dw	4095
  7798                           
  7799                           ;Config register IDLOC4 @ 0x200008
  7800                           ;	unspecified, using default values
  7801  200008                     	org	2097160
  7802  200008  0FFF               	dw	4095
  7803                           
  7804                           ;Config register IDLOC5 @ 0x20000A
  7805                           ;	unspecified, using default values
  7806  20000A                     	org	2097162
  7807  20000A  0FFF               	dw	4095
  7808                           
  7809                           ;Config register IDLOC6 @ 0x20000C
  7810                           ;	unspecified, using default values
  7811  20000C                     	org	2097164
  7812  20000C  0FFF               	dw	4095
  7813                           
  7814                           ;Config register IDLOC7 @ 0x20000E
  7815                           ;	unspecified, using default values
  7816  20000E                     	org	2097166
  7817  20000E  0FFF               	dw	4095
  7818                           
  7819                           	psect	config
  7820                           
  7821                           ;Config register CONFIG1L @ 0x300000
  7822                           ;	External Oscillator mode Selection bits
  7823                           ;	FEXTOSC = OFF, Oscillator not enabled
  7824                           ;	Power-up default value for COSC bits
  7825                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  7826  300000                     	org	3145728
  7827  300000  EC                 	db	236
  7828                           
  7829                           ;Config register CONFIG1H @ 0x300001
  7830                           ;	Clock Out Enable bit
  7831                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7832                           ;	Clock Switch Enable bit
  7833                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7834                           ;	Fail-Safe Clock Monitor Enable bit
  7835                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7836  300001                     	org	3145729
  7837  300001  FF                 	db	255
  7838                           
  7839                           ;Config register CONFIG2L @ 0x300002
  7840                           ;	Master Clear Enable bit
  7841                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  7842                           ;	Power-up Timer Enable bit
  7843                           ;	PWRTE = OFF, Power up timer disabled
  7844                           ;	Low-power BOR enable bit
  7845                           ;	LPBOREN = OFF, ULPBOR disabled
  7846                           ;	Brown-out Reset Enable bits
  7847                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  7848  300002                     	org	3145730
  7849  300002  FF                 	db	255
  7850                           
  7851                           ;Config register CONFIG2H @ 0x300003
  7852                           ;	Brown Out Reset Voltage selection bits
  7853                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  7854                           ;	ZCD Disable bit
  7855                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7856                           ;	PPSLOCK bit One-Way Set Enable bit
  7857                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  7858                           ;	Stack Full/Underflow Reset Enable bit
  7859                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7860                           ;	Debugger Enable bit
  7861                           ;	DEBUG = OFF, Background debugger disabled
  7862                           ;	Extended Instruction Set Enable bit
  7863                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7864  300003                     	org	3145731
  7865  300003  FF                 	db	255
  7866                           
  7867                           ;Config register CONFIG3L @ 0x300004
  7868                           ;	WDT Period Select bits
  7869                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7870                           ;	WDT operating mode
  7871                           ;	WDTE = OFF, WDT Disabled
  7872  300004                     	org	3145732
  7873  300004  9F                 	db	159
  7874                           
  7875                           ;Config register CONFIG3H @ 0x300005
  7876                           ;	WDT Window Select bits
  7877                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7878                           ;	WDT input clock selector
  7879                           ;	WDTCCS = SC, Software Control
  7880  300005                     	org	3145733
  7881  300005  FF                 	db	255
  7882                           
  7883                           ;Config register CONFIG4L @ 0x300006
  7884                           ;	Write Protection Block 0
  7885                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7886                           ;	Write Protection Block 1
  7887                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7888                           ;	Write Protection Block 2
  7889                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7890                           ;	Write Protection Block 3
  7891                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7892  300006                     	org	3145734
  7893  300006  FF                 	db	255
  7894                           
  7895                           ;Config register CONFIG4H @ 0x300007
  7896                           ;	Configuration Register Write Protection bit
  7897                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  7898                           ;	Boot Block Write Protection bit
  7899                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7900                           ;	Data EEPROM Write Protection bit
  7901                           ;	WRTD = OFF, Data EEPROM not write-protected
  7902                           ;	Scanner Enable bit
  7903                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  7904                           ;	Low Voltage Programming Enable bit
  7905                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7906  300007                     	org	3145735
  7907  300007  FF                 	db	255
  7908                           
  7909                           ;Config register CONFIG5L @ 0x300008
  7910                           ;	UserNVM Program Memory Code Protection bit
  7911                           ;	CP = OFF, UserNVM code protection disabled
  7912                           ;	DataNVM Memory Code Protection bit
  7913                           ;	CPD = OFF, DataNVM code protection disabled
  7914  300008                     	org	3145736
  7915  300008  FF                 	db	255
  7916                           
  7917                           ;Config register CONFIG5H @ 0x300009
  7918                           ;	unspecified, using default values
  7919  300009                     	org	3145737
  7920  300009  FF                 	db	255
  7921                           
  7922                           ;Config register CONFIG6L @ 0x30000A
  7923                           ;	Table Read Protection Block 0
  7924                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7925                           ;	Table Read Protection Block 1
  7926                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7927                           ;	Table Read Protection Block 2
  7928                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7929                           ;	Table Read Protection Block 3
  7930                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7931  30000A                     	org	3145738
  7932  30000A  FF                 	db	255
  7933                           
  7934                           ;Config register CONFIG6H @ 0x30000B
  7935                           ;	Boot Block Table Read Protection bit
  7936                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7937  30000B                     	org	3145739
  7938  30000B  FF                 	db	255
  7939                           tosu	equ	0xFFF
  7940                           tosh	equ	0xFFE
  7941                           tosl	equ	0xFFD
  7942                           stkptr	equ	0xFFC
  7943                           pclatu	equ	0xFFB
  7944                           pclath	equ	0xFFA
  7945                           pcl	equ	0xFF9
  7946                           tblptru	equ	0xFF8
  7947                           tblptrh	equ	0xFF7
  7948                           tblptrl	equ	0xFF6
  7949                           tablat	equ	0xFF5
  7950                           prodh	equ	0xFF4
  7951                           prodl	equ	0xFF3
  7952                           indf0	equ	0xFEF
  7953                           postinc0	equ	0xFEE
  7954                           postdec0	equ	0xFED
  7955                           preinc0	equ	0xFEC
  7956                           plusw0	equ	0xFEB
  7957                           fsr0h	equ	0xFEA
  7958                           fsr0l	equ	0xFE9
  7959                           wreg	equ	0xFE8
  7960                           indf1	equ	0xFE7
  7961                           postinc1	equ	0xFE6
  7962                           postdec1	equ	0xFE5
  7963                           preinc1	equ	0xFE4
  7964                           plusw1	equ	0xFE3
  7965                           fsr1h	equ	0xFE2
  7966                           fsr1l	equ	0xFE1
  7967                           bsr	equ	0xFE0
  7968                           indf2	equ	0xFDF
  7969                           postinc2	equ	0xFDE
  7970                           postdec2	equ	0xFDD
  7971                           preinc2	equ	0xFDC
  7972                           plusw2	equ	0xFDB
  7973                           fsr2h	equ	0xFDA
  7974                           fsr2l	equ	0xFD9
  7975                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    28
    Data        60
    BSS         161
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      83
    BANK0           160      0     136
    BANK1           256    215     248
    BANK2           256      0      32
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    inicializar_iir_2_ord@gan	PTR float  size(2) Largest target is 12
		 -> main@gan(BANK1[12]), 

    inicializar_iir_2_ord@w2	PTR float  size(2) Largest target is 12
		 -> main@w2(BANK1[12]), 

    inicializar_iir_2_ord@den2	PTR float  size(2) Largest target is 12
		 -> main@den2(BANK1[12]), 

    inicializar_iir_2_ord@num2	PTR float  size(2) Largest target is 12
		 -> main@num2(BANK1[12]), 

    inicializar_iir_2_ord@w	PTR float  size(2) Largest target is 12
		 -> main@w(BANK1[12]), 

    inicializar_iir_2_ord@den	PTR float  size(2) Largest target is 12
		 -> main@den(BANK1[12]), 

    inicializar_iir_2_ord@num	PTR float  size(2) Largest target is 12
		 -> main@num(BANK1[12]), 

    inicializar_iir_2_ord@ir	PTR struct coef_iir_2_ord size(2) Largest target is 84
		 -> main@ir(BANK1[84]), 

    Re_Vector@dsp	PTR struct Vect_RE size(2) Largest target is 13
		 -> main@MiVector(BANK1[13]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 2
		 -> main@Vector_DAC(BANK1[2]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 2
		 -> main@Vector_DAC(BANK1[2]), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_ADC(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_ADC(), Absolute function(), ADCC_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_Rx_Serial(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Interrupcion_Rx_Serial(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_filtrarFIR1
    _filtrarFIR1->___lmul
    ___lmul->___almod
    ___xxtofl->___wmul
    ___fladd->___xxtofl
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _ConfigPostcaler->___flge
    _ConfigCont->___fltol
    ___fltol->___fldiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _Interrupcion_Rx_Serial->_EUSART1_Read
    _ADCC_ISR->_Interrupcion_ADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               238   238      0   25032
                                             48 COMRAM     2     2      0
                                              0 BANK1    215   215      0
        _ADCC_SetADIInterruptHandler
                         _ConfigCont
                    _ConfigPostcaler
      _EUSART1_SetRxInterruptHandler
                      _EUSART1_Write
                          _Re_Vector
                          _SPI1_Open
                    _SPI1_WriteBlock
                  _SYSTEM_Initialize
                            ___awdiv
                            ___awmod
                            ___fladd
                             ___wmul
                           ___xxtofl
                        _filtrarFIR1
              _inicializar_iir_2_ord
 ---------------------------------------------------------------------------------
 (1) _inicializar_iir_2_ord                               22     6     16    1270
                                              6 COMRAM    22     6     16
 ---------------------------------------------------------------------------------
 (1) _filtrarFIR1                                         20    16      4    3199
                                             28 COMRAM    20    16      4
                            ___almod
                            ___awmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     874
                                             16 COMRAM    12     4      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1664
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     448
                                              6 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             12 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     463
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    3144
                                             26 COMRAM    16     8      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1212
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     740
                    _ADCC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     566
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI1_WriteBlock                                      6     2      4     242
                                              7 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _SPI1_ExchangeByte                                    1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            4     4      0      88
                                              6 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Re_Vector                                            4     2      2     320
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      44
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigPostcaler                                      5     1      4    4818
                                             18 COMRAM     5     1      4
                             ___flge
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    4134
                                              6 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ConfigCont                                           6     1      5    5704
                                             41 COMRAM     6     1      5
                            ___fldiv
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1217
                                             31 COMRAM    10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3727
                                              6 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0      24
                                              2 COMRAM     4     4      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
             _Interrupcion_Rx_Serial *
 ---------------------------------------------------------------------------------
 (5) _Interrupcion_Rx_Serial                               0     0      0      24
                       _EUSART1_Read
                _EUSART1_Receive_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADCC_ISR                                             0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                   _Interrupcion_ADC *
 ---------------------------------------------------------------------------------
 (6) _Interrupcion_ADC                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _ADCC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _ConfigCont
     ___fldiv
     ___fltol
       ___fldiv (ARG)
   _ConfigPostcaler
     ___flge
   _EUSART1_SetRxInterruptHandler
   _EUSART1_Write
   _Re_Vector
   _SPI1_Open
   _SPI1_WriteBlock
     _SPI1_ExchangeByte
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
   ___awdiv
   ___awmod
   ___fladd
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___wmul
   ___xxtofl
   _filtrarFIR1
     ___almod
     ___awmod
     ___lmul
       ___almod (ARG)
   _inicializar_iir_2_ord

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _Interrupcion_ADC *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _Interrupcion_Rx_Serial *
     _EUSART1_Read
     _EUSART1_Receive_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      20      10       12.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100     D7      F8       8       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      88       5       85.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      53       1       88.3%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F3       6        0.0%
DATA                 0      0     1F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 11 15:29:09 2021

                             _SPI1_ExchangeByte 2FAC                        _eusart1TxBufferRemaining 003F  
                                             _B 0F05                                    ___fldiv@aexp 001F  
                                  ___fldiv@bexp 001E                                               _k 004C  
                                             _x 00B8                                    ___fldiv@sign 0017  
                                   main@AuxPost 015E                                     main@Iniciar 015D  
                                   main@Auxcont 015F                                    ___awdiv@sign 000C  
                                  main@AuxReADC 01D5                              ?_SPI1_ExchangeByte 0001  
                            main@SalidaFIR_long 0160                             ___wmul@multiplicand 0009  
                                  main@MiVector 01C8                                    main@Contador 015C  
                                  ?_filtrarFIR1 001D                                             l522 2FB2  
                                           l179 2DF6                                             l704 1132  
                                           l743 184E                         __size_of_PMD_Initialize 001C  
                                  ___awmod@sign 000C                             ??_SPI1_ExchangeByte 0007  
                               _TMR2_Initialize 2F12                                             tosl 000FFD  
                                           wreg 000FE8                    ?_ADCC_SetADIInterruptHandler 0007  
                                  ___fltol@exp1 0029                                            l3000 1FFC  
                                          l1411 204C                                            l3020 2062  
                                          l1092 26E8                                            l1422 20BA  
                                          l3014 204A                                            l3110 2688  
                                          l3102 2CE6                                            l1423 20B6  
                                          l3008 2024                                            l3050 2122  
                                          l3026 2080                                            l3114 26BC  
                                          l3210 2E12                                            l3060 2158  
                                          l3124 2720                                            l3300 14B2  
                                          l1372 1DE2                                            l1356 1D10  
                                          l1381 1E48                                            l1357 1CEE  
                                          l3062 215A                                            l3054 214C  
                                          l3046 20FE                                            l3150 278C  
                                          l3134 2742                                            l3118 26D2  
                                          l1382 1E44                                            l3160 27A4  
                                          l3312 155A                                            l3208 2E10  
                                          l3240 2E20                                            l3162 27B0  
                                          l3154 279C                                            l3410 1AFE  
                                          l3402 1A76                                            l3330 1656  
                                          l3306 1506                                            l1482 2552  
                                          l3082 2CA0                                            l3324 1602  
                                          l3244 2E32                                            l3422 1BCA  
                                          l3414 1B42                                            l3406 1ABA  
                                          l3342 16FE                                            l3318 15AE  
                                          l3270 2816                                            l3094 2CCE  
                                          l3086 2CAE                                            l3078 2C94  
                                          l3168 27CC                                            l3360 17FA  
                                          l3336 16AA                                            l3504 1C66  
                                          l3088 2CB6                                            l1489 25D0  
                                          l3418 1B86                                            l3354 17A6  
                                          l3194 2DE4                                            l3282 288C  
                                          l3098 2CD8                                            l3258 216A  
                                          l3348 1752                                            l3276 2864  
                                          l3390 19AA                                            l3382 1922  
                                          l3374 189A                                            l3294 145E  
                                          l3614 1E26                                            l3534 1CA2  
                                          l3438 2406                                            l3608 1E1C  
                                          l3472 1BFE                                            l3720 25B8  
                                          l2920 2906                                            l2912 28D2  
                                          l2904 28AC                                            l3394 19EE  
                                          l3386 1966                                            l3378 18DE  
                                          l3642 1EB4                                            l3634 1E8E  
                                          l3570 1D56                                            l3562 1D34  
                                          l3546 1CFC                                            l3714 2580  
                                          l2914 28DE                                            l3572 1D5A  
                                          l3580 1D6C                                            l3548 1D00  
                                          l3492 1C42                                            l3468 1BFA  
                                          l3716 2586                                            l3708 2562  
                                          l2924 2914                                            l2908 28C0  
                                          l3398 1A32                                            l3646 1EBC  
                                          l3590 1DD2                                            l3726 25F6  
                                          l3718 2592                                            l2944 1F06  
                                          l3680 2B46                                            l3672 2B28  
                                          l3648 1EBE                                            l3496 1C46  
                                          l3744 2642                                            l3728 2602  
                                          l2928 292A                                            l3690 2B66  
                                          l3666 2B18                                            l2964 1F46  
                                          l2948 1F0A                                            l2892 2D76  
                                          l3852 109E                                            l2990 1FAC  
                                          l2982 1F94                                            l3678 2B3E  
                                          l3694 2B70                                            l3598 1E06  
                                          l3846 1076                                            l3838 1058  
                                          l2976 1F7E                                            l2968 1F4A  
                                          l2888 2D62                                            l3864 112E  
                                          l3698 2B7E                                            l3882 1186  
                                          l3874 115C                                            u2300 2130  
                                          u2060 28E2                                            u3020 24D0  
                                          _LATA 000F83                                            _LATB 000F84  
                                          _LATC 000F85                                            u3120 1CC4  
                                          _LATD 000F86                                            _LATE 000F87  
                                          u2250 20B0                                            u3130 1CD4  
                                          u3300 1E2A                                            u3140 1CD6  
                                          u2430 2730                                            u2350 2CBA  
                                          u2440 2760                                            u3320 1E3E  
                                          u2290 210C                                            u3170 1D18  
                                          _T2PR 000FBC                                            u2445 2756  
                                          u2480 27B6                                            u3450 2B4A  
                                          u3380 1E9A                                            u3540 260C  
                                          u3701 0FD4                                            u2590 23D0  
                                          u3711 0FE6                                            u3800 1198  
                                          u3721 0FF4                                            u3731 1004  
                                          _PMD0 000EE1                                            _PMD1 000EE2  
                                          u3806 119A                                            _PMD2 000EE3  
                                          u3671 0FA4                                            _PMD3 000EE4  
                                          _PMD4 000EE5                                            u3681 0FB6  
                                          u3817 0F8C                                            _PMD5 000EE6  
                                          u3827 11FE                                            u3691 0FC4  
                                          i2l25 0036                                            i2l26 005C  
                                          i2l27 0052                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                              __end_of_ADCC_ISR 2F12                                   _EUSART1_Write 2DE2  
                                          _main 0F1E                                   ?_EUSART1_Read 0001  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          btemp 0054                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0070  
                               ___fldiv@new_exp 0018                       __end_of_SPI1_ExchangeByte 2FBE  
                                  ___param_bank 000000                  __size_of_OSCILLATOR_Initialize 0016  
                 __end_of_OSCILLATOR_Initialize 2FAC                           _eusart1RxStatusBuffer 0060  
                                 ___fltol@sign1 0028                                           _ADACQ 000F5C  
                                         _ADCAP 000F5D                                           _ADACT 000F56  
                               __end_of___almod 293C                                 __end_of___fladd 1EDA  
                                         ?_main 0001                                           _ADCLK 000F57  
                                         _ADPCH 000F5F                                 __end_of___fldiv 2162  
                                         _ADREF 000F58                                 __end_of___awdiv 2B88  
                                         _ADPRE 000F5E                                 __end_of___awmod 2CF0  
                                         _ADRPT 000F66                SPI1_Open@spi1UniqueConfiguration 000A  
                               __end_of___fltol 27DE                                 ___awdiv@divisor 0009  
                                         _T2CON 000FBD                                           _T2HLT 000FBE  
                                         _T2TMR 000FBB                                           _T2RST 000FC0  
                                         i2l185 2E8C                                 ___awdiv@counter 000B  
                                         _OSCEN 000EDC                                      _ConfigCont 1852  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                        ??_Interrupcion_Rx_Serial 0002  
                            __size_of_SPI1_Open 009E                                   main@Postcaler 016E  
                           ___lmul@multiplicand 0015                            _EUSART1_Transmit_ISR 2E6A  
                                         main@a 016A                                           main@i 0173  
                                         main@w 0118                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                       __end_of_ConfigPostcaler 1852                                  ??_EUSART1_Read 0001  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         ttemp5 0055                                           ttemp6 0058  
                                         ttemp7 005C                                           status 000FD8  
                                         wtemp8 0055      __end_of_EUSART1_DefaultFramingErrorHandler 302A  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 3028  
                      __size_of_SPI1_Initialize 0020                                  _Serial_Rx_flag 01F6  
                                    _Lectura_Rx 01F5                                 __initialization 29DA  
                    __end_of_EUSART1_Initialize 2C80                                    __end_of_main 1406  
                       __end_of_TMR2_Initialize 2F30                     ?_INTERRUPT_InterruptManager 0001  
                              ConfigPostcaler@n 0013                                          ??_main 0031  
                                  filtrarFIR1@i 002D                                    filtrarFIR1@y 0029  
                                 __activetblptr 000003                           ?_EUSART1_Transmit_ISR 0001  
                                        _ADCON0 000F60                                          _ADCON1 000F59  
                                        _ADCON2 000F5A                                          _ADCON3 000F5B  
                                main@Vector_DAC 0168                                          _ADLTHH 000F6B  
                                        _ADLTHL 000F6A                                          _ADRESH 000F64  
                                        _ADRESL 000F63                                          _ADSTAT 000F65  
                                        _ADUTHH 000F6D                                ___awdiv@dividend 0007  
                                        _ADUTHL 000F6C                                          _ANSELA 000F11  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                  Re_Vector@dsp 0007                                          _RC1REG 000F99  
                                        _RC1STA 000F9D                                          _RC3PPS 000EFA  
                                        _RC5PPS 000EFC                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                                          i2l3222 2E88  
                                        i2l2742 2EEE                                          i2l2850 2DD6  
                                        _INLVLA 000F0D                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          i2l2878 2C04  
                                        _OSCFRQ 000EDE                              __size_of_Re_Vector 00B2  
                                        _RX1PPS 000EB5                                          _TX1REG 000F9A  
                                        _TX1STA 000F9E                                __end_of___xxtofl 2654  
                    __size_of_SPI1_ExchangeByte 0012                               __end_of_SPI1_Open 29DA  
                               main@Palabra_DAC 016C            __size_of_ADCC_SetADIInterruptHandler 000A  
                                        ___flge 2654                                          ___lmul 2D52  
                                     ??___almod 000F                                       ??___fladd 0023  
                                        ___wmul 2E44                                      _Result_ADC 01F3  
                                     ??___fldiv 000F                                       ??___awdiv 000B  
                                     ??___awmod 000B                             ConfigPostcaler@Post 0017  
                                     ??___fltol 0024                        ?_EUSART1_SetErrorHandler 0007  
                                        clear_0 2A40                                          clear_1 2A4C  
                                        clear_2 2A58                                          clear_3 2A64  
                              ___awdiv@quotient 000D                                 ___awmod@divisor 0009  
                                        isa$std 000001                                 ___awmod@counter 000B  
              ??_EUSART1_SetOverrunErrorHandler 0009                 ?_EUSART1_SetOverrunErrorHandler 0007  
                                        main@w2 013C                                          main@ir 0174  
                                     ?_ADCC_ISR 0001                                 _ADCC_Initialize 2CF0  
                                   ?_ConfigCont 002A                                  _PMD_Initialize 2F30  
                                  __pdataCOMRAM 0040                 __size_of_Interrupcion_Rx_Serial 0012  
                          __size_of_filtrarFIR1 0142                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 ??_EUSART1_Write 0007  
   ADCC_SetADIInterruptHandler@InterruptHandler 0007                                 _eusart1RxBuffer 0200  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 0080  
                                    ___flge@ff1 0007                                      ___flge@ff2 000B  
                                  ___xxtofl@arg 0017                                    ___xxtofl@exp 0016  
                             _SYSTEM_Initialize 2E90                                    ___xxtofl@val 000D  
                              ?_ConfigPostcaler 0013                                      __accesstop 0060  
                       __end_of__initialization 2A6A                        __size_of_SPI1_WriteBlock 002E  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                    ___fltol@f1 0020                  __size_of_EUSART1_RxDataHandler 0020  
                 __end_of_EUSART1_RxDataHandler 2EF2                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 2F66                                    __pidataBANK1 2F7E  
                           ??_SYSTEM_Initialize 0009                               ??_SPI1_Initialize 0007  
                              ?_TMR2_Initialize 0001                          __end_of_PMD_Initialize 2F4C  
                         SPI1_ExchangeByte@data 0007                               __end_of_Re_Vector 2890  
                         _inicializar_iir_2_ord 2162                       __size_of_Interrupcion_ADC 001A  
                          __end_of_EUSART1_Read 2DE2                                      ??_ADCC_ISR 0003  
                        ??_EUSART1_Transmit_ISR 0001                              _spi1_configuration 0F01  
                   __end_of_EUSART1_Receive_ISR 2C0A                       __end_of_SYSTEM_Initialize 2EB2  
                                 _eusart1RxHead 0051                                   _eusart1TxHead 0053  
                                 filtrarFIR1@in 001D                                   _eusart1RxTail 0050  
                                    __pbssBANK0 0060                                      __pbssBANK1 01EF  
                                    __pbssBANK2 0200                                   _eusart1TxTail 0052  
             _EUSART1_TxDefaultInterruptHandler 003D                 ??_EUSART1_SetRxInterruptHandler 0009  
                                    __pnvCOMRAM 0033                          _Interrupcion_Rx_Serial 2FBE  
                           __size_of_ConfigCont 037C                 __end_of_EUSART1_SetErrorHandler 300E  
                                       ?___flge 0007                                         ?___lmul 0011  
                                       ?___wmul 0007                         __end_of_ADCC_Initialize 2D52  
                                ___lmul@product 0019                                         _ADSTPTH 000F69  
                                       _ADSTPTL 000F68                                 ?_PMD_Initialize 0001  
        __end_of_EUSART1_SetFramingErrorHandler 3004         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 2FFA                                       ?___xxtofl 000D  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                                         _OSCTUNE 000EDD  
                                       _SSP1ADD 000F93                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                                       _SSP1BUF 000F92                                         __Hparam 0000  
                                       __Lparam 0000                               ??_SPI1_WriteBlock 000C  
                               __size_of___flge 00D0                                         ___almod 2890  
                                       ___fladd 1BCE                                         ___fldiv 1EDA  
                                       ___awdiv 2B04                                 __size_of___lmul 0056  
                                       ___awmod 2C80                                         ___fltol 2724  
                               __size_of___wmul 0026                                    __psmallconst 0F00  
                        ?_inicializar_iir_2_ord 0007                                         __pcinit 29DA  
                                       __ramtop 0F00                                         __ptext0 0F1E  
                                       __ptext1 2162                                         __ptext2 23D2  
                                       __ptext3 2D52                                         __ptext4 2C80  
                                       __ptext5 2890                                         __ptext6 2514  
                                       __ptext7 2E44                                         __ptext8 1BCE  
                                       __ptext9 2B04                        SPI1_WriteBlock@blockSize 000A  
                        inicializar_iir_2_ord@i 001B                          inicializar_iir_2_ord@w 000B  
                         _OSCILLATOR_Initialize 2F96                                      ??___xxtofl 0011  
                              ___awmod@dividend 0007                              _EUSART1_Initialize 2C0A  
                      ??_PIN_MANAGER_Initialize 0007                   ??_EUSART1_DefaultErrorHandler 0001  
                                       main@V_P 0154                                         main@den 010C  
                                       main@gan 0148                      __size_of_SYSTEM_Initialize 0022  
                                       main@num 0100                            end_of_initialization 2A6A  
                           ?_EUSART1_Initialize 0001                     _EUSART1_OverrunErrorHandler 0037  
         __end_of_EUSART1_SetRxInterruptHandler 2FF0          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 2FE6                                  ConfigCont@Dato 002A  
                                ConfigCont@Post 002E                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 003A                                      main@F10650 01D7  
                                    main@F10652 00AC                                      main@F10660 00D0  
                                    main@F10654 0040                                      main@F10648 01E3  
                                    main@F10656 00DC                                      main@F10658 00A0  
                              ?_ADCC_Initialize 0001                                       _SPI1_Open 293C  
                          ??_EUSART1_Initialize 0009                                      main@DAC_IN 0156  
                              _Interrupcion_ADC 2F4C                                    ??_ConfigCont 002F  
                                    main@SALIDA 015A                                     ___fladd@grs 002A  
                             __size_of_ADCC_ISR 0020             __end_of_ADCC_SetADIInterruptHandler 3018  
                   _ADCC_SetADIInterruptHandler 300E                                   ___xxtofl@sign 0015  
                                     _TRISCbits 000F8A                                      main@DatoRe 016F  
                                   ___fldiv@grs 001A                                     ___fldiv@rem 0013  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0007  
                            ConfigCont@contador 002F                   ??_ADCC_SetADIInterruptHandler 0009  
                               _SPI1_Initialize 2EB2                                    _EUSART1_Read 2DA8  
          __size_of_EUSART1_DefaultErrorHandler 0006                              __end_of_ConfigCont 1BCE  
                  __end_of_INTERRUPT_Initialize 3028                  ??_ADCC_DefaultInterruptHandler 0001  
                                __end_of___flge 2724                                      ?_SPI1_Open 0001  
                                __end_of___lmul 2DA8                                  __end_of___wmul 2E6A  
                                 __pidataCOMRAM 2FD0                                   ??_filtrarFIR1 0021  
                        ?_OSCILLATOR_Initialize 0001                             start_initialization 29DA  
                                     _Re_Vector 27DE                 __size_of_PIN_MANAGER_Initialize 0090  
 EUSART1_SetRxInterruptHandler@interruptHandler 0007   EUSART1_SetTxInterruptHandler@interruptHandler 0007  
                         __end_of_EUSART1_Write 2E16                                     _ADC_Tx_Vect 01EF  
                       ?_Interrupcion_Rx_Serial 0001                        __size_of_ConfigPostcaler 044C  
                                      ??___flge 000F                                ??_PMD_Initialize 0007  
                                      ??___lmul 0019                                        ??___wmul 000B  
                         _EUSART1_RxDataHandler 2ED2                  ?_EUSART1_SetRxInterruptHandler 0007  
                                   __pdataBANK0 00D0                                     __pdataBANK1 01D7  
                             Re_Vector@BandDato 000A                                  _eusart1RxCount 004F  
                                     ___fladd@a 001F                                       ___fladd@b 001B  
                                     ___fldiv@a 000B                                       ___fldiv@b 0007  
                                   __pbssCOMRAM 004C               _EUSART1_RxDefaultInterruptHandler 003B  
                 __size_of_EUSART1_Transmit_ISR 0026                                      ?_Re_Vector 0007  
                                 __pcstackBANK1 0100                        __size_of_TMR2_Initialize 001E  
                             __size_of___xxtofl 0140                             __end_of_filtrarFIR1 2514  
                       __end_of_SPI1_Initialize 2ED2                                       __end_of_B 0F1D  
                __end_of_Interrupcion_Rx_Serial 2FD0                                 _SPI1_WriteBlock 2E16  
               ??_EUSART1_SetTxInterruptHandler 0009                ??_EUSART1_SetFramingErrorHandler 0009  
               ?_EUSART1_SetFramingErrorHandler 0007                    __size_of_EUSART1_Receive_ISR 0082  
                        _PIN_MANAGER_Initialize 2A74                         ??_inicializar_iir_2_ord 0017  
                                     __pintcode 0008                                        ?___almod 0007  
                                      ?___fladd 001B                                        ?___fldiv 0007  
                                      ?___awdiv 0007                                        ?___awmod 0007  
                                      ?___fltol 0020                                     ??_SPI1_Open 0007  
                  ??_INTERRUPT_InterruptManager 0003                                ___almod@dividend 0007  
                                      _ADCC_ISR 2EF2                                        _BAUD1CON 000F9F  
                                   __smallconst 0F00      __end_of_EUSART1_DefaultOverrunErrorHandler 301E  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 3018  
                          _EUSART1_ErrorHandler 0035                                        _ADC_flag 01F7  
                      inicializar_iir_2_ord@den 0009                        inicializar_iir_2_ord@gan 0013  
                       _EUSART1_SetErrorHandler 3004                        inicializar_iir_2_ord@num 0007  
                                      _T2CLKCON 000FBF                            _INTERRUPT_Initialize 3024  
                                ___wmul@product 000B                        __end_of_Interrupcion_ADC 2F66  
       EUSART1_SetErrorHandler@interruptHandler 0007                                        _LATBbits 000F84  
                                      _LATEbits 000F87                                        _PIE1bits 000EC3  
                                      _PIE3bits 000EC5             __size_of_INTERRUPT_InterruptManager 0068  
                                      i2u251_48 2F00                                        _PIR1bits 000ECB  
                                      i2u361_48 002A                                        i2u195_48 2BA8  
                                      i2u195_49 2BBA                                        i2u364_48 0040  
                                      _PIR3bits 000ECD                                        i2u197_48 2BCE  
                                      i2u197_49 2BE0                                        _PIR4bits 000ECE  
                                      i2u199_48 2BF2                          ?_EUSART1_RxDataHandler 0001  
                                      _SSP1CON1 000F96                                        _SSP1CON2 000F97  
                                      _SSP1STAT 000F95                               ___wmul@multiplier 0007  
                             ??_ConfigPostcaler 0017                                       main@Resta 0158  
                                   _filtrarFIR1 23D2                         __end_of_SPI1_WriteBlock 2E44  
                                   ??_Re_Vector 0009                                ?_SPI1_Initialize 0001  
                             ___lmul@multiplier 0011                                       copy_data0 29EE  
                                     copy_data1 2A0E                                       copy_data2 2A2E  
                         ?_INTERRUPT_Initialize 0001                               ??_TMR2_Initialize 0007  
                         EUSART1_Read@readValue 0001           __end_of_EUSART1_SetTxInterruptHandler 2FE6  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 2FDC  
                                      __Hrparam 0000                                        __Lrparam 0000  
                       ??_OSCILLATOR_Initialize 0007                                __size_of___almod 00AC  
                              __size_of___fladd 030C                                __size_of___fldiv 0288  
                              __size_of___awdiv 0084                                __size_of___awmod 0070  
                              __size_of___fltol 00BA                     __size_of_EUSART1_Initialize 0076  
                     ??_EUSART1_SetErrorHandler 0009             __end_of_EUSART1_DefaultErrorHandler 3024  
                   _EUSART1_DefaultErrorHandler 301E                                        ___xxtofl 2514  
                      __size_of_ADCC_Initialize 0062                                        __ptext10 2E90  
                                      __ptext11 2F12                                        __ptext20 2FF0  
                                      __ptext12 2EB2                                        __ptext21 2FFA  
                                      __ptext13 2F30                                        __ptext30 1406  
                                      __ptext22 3004                                        __ptext14 2A74  
                                      __ptext31 2654                                        __ptext23 2CF0  
                                      __ptext15 2F96                                        __ptext40 301E  
                                      __ptext32 1852                                        __ptext24 300E  
                                      __ptext16 3024                                        __ptext41 2ED2  
                                      __ptext33 2724                                        __ptext25 2E16  
                                      __ptext17 2C0A                                        __ptext42 2DA8  
                                      __ptext34 1EDA                                        __ptext26 2FAC  
                                      __ptext18 2FDC                                        __ptext43 2E6A  
                                      __ptext27 293C                                        __ptext19 2FE6  
                                      __ptext44 2EF2                                        __ptext36 2B88  
                                      __ptext28 27DE                                        __ptext45 302A  
                                      __ptext37 2FBE                                        __ptext29 2DE2  
                                      __ptext46 2F4C                                        __ptext38 3018  
                                      __ptext47 0000                                        __ptext39 3028  
                                  _SSP1CON1bits 000F96                                 ___almod@divisor 000B  
                               ___almod@counter 000F                         inicializar_iir_2_ord@w2 0011  
                       inicializar_iir_2_ord@ir 0015                                   __size_of_main 04E8  
                                    _RC1STAbits 000F9D                       _ADCC_ADI_InterruptHandler 0033  
EUSART1_SetOverrunErrorHandler@interruptHandler 0007                                        isa$xinst 000000  
                                      int$flags 0054              __end_of_INTERRUPT_InterruptManager 0070  
                    _INTERRUPT_InterruptManager 0008                                        main@den2 0130  
                                      main@num2 0124                     _EUSART1_FramingErrorHandler 0039  
                           _EUSART1_Receive_ISR 2B88                                      _INTCONbits 000FF2  
                              ?_SPI1_WriteBlock 0008                            SPI1_WriteBlock@block 0008  
                        ??_INTERRUPT_Initialize 0007            __end_of_ADCC_DefaultInterruptHandler 302C  
         __size_of_ADCC_DefaultInterruptHandler 0002                    _ADCC_DefaultInterruptHandler 302A  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 2FFA  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 2FF0  
                  __end_of_EUSART1_Transmit_ISR 2E90                                    main@ADC_Vect 0164  
EUSART1_SetFramingErrorHandler@interruptHandler 0007                  __size_of_inicializar_iir_2_ord 0270  
                ?_EUSART1_SetTxInterruptHandler 0007                   __end_of_inicializar_iir_2_ord 23D2  
                        __size_of_EUSART1_Write 0034                              _eusart1RxLastError 004E  
                           SPI1_WriteBlock@data 000C                                      _SSP1DATPPS 000EB8  
                                    _SSP1CLKPPS 000EB7                                   ___fladd@signs 0027  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 2B04  
                             ??_ADCC_Initialize 0009                                    ___almod@sign 0010  
                                  ___fladd@aexp 0028                                    ___fladd@bexp 0029  
                 ?_ADCC_DefaultInterruptHandler 0001                               ?_Interrupcion_ADC 0001  
                     inicializar_iir_2_ord@den2 000F                         ??_EUSART1_RxDataHandler 0001  
                     inicializar_iir_2_ord@num2 000D                      __end_of_spi1_configuration 0F05  
                               _ConfigPostcaler 1406                              ??_Interrupcion_ADC 0001  
